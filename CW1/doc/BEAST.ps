%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: refman.dvi
%%Pages: 331
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips refman.dvi -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.02.04:0041
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (refman.dvi)
@start
%DVIPSBitmapFont: Fa cmti10 10 21
/Fa 21 120 df<0107B712FEA3903A000FF000074B1300187C021F153CA25DA2143FA25D
1838147FA292C8FCEE03804A130718004A91C7FCA201015CA24A131E163E010314FE91B5
FC5EA2903807F800167C4A1378A2130FA24A1370A2011F14F0A24A90C8FCA2133FA25CA2
137FA291CAFCA25BA25B487EB6FCA337397BB836>70 D<0103B5D8F80FB512E0A3902600
07F8C7381FE0004B5DA2020F153F615DA2021F157F96C7FC5DA2023F5D605DA2027F1401
6092C7FCA24A1403605CA249B7FC60A202FCC712070103150F605CA20107151F605CA201
0F153F605CA2011F157F95C8FC5CA2013F5D5F5CA2017F14015F91C7FC491403007FD9FE
01B512F8B55BA243397CB83E>72 D<92383FC00E913901FFF01C020713FC91391FC07E3C
91393F001F7C027CEB0FF84A130749481303495A4948EB01F0A2495AA2011F15E091C7FC
A34915C0A36E90C7FCA2806D7E14FCECFF806D13F015FE6D6D7E6D14E0010080023F7F14
079138007FFC150F15031501A21500A2167C120EA3001E15FC5EA3003E4A5AA24B5AA200
7F4A5A4B5A6D49C7FC6D133ED8F9F013FC39F8FC03F839F07FFFE0D8E01F138026C003FC
C8FC2F3D7ABA2F>83 D<B500F8903803FFFEA218FCD803FEC8EA7FC049ED3F000001163E
173C17385FA25F16015F6D4A5AA200004BC7FC5E160E5EA25EA25E5EA26D495A7F4B5A15
0793C8FC150EA25D153C15385D1480013F5B14815DEC8380A20287C9FCA2148E149E149C
14F8A26D5AA25C5CA25CA291CAFC131EA2373B6FB83E>86 D<B5D8F80FB590381FFFF061
02F018E0D807FEC7D87FE0903803FE00D803F8DA3F806D5AF100F0A24F5A621903621907
047F92C7FC190E16FF4B5DA2DB03BF5C7F0001DA073F5CA2030E5D83DB1C1F495A180303
385D4EC8FC157003F0140E15E0DA01C05CA2DA03805CA2DA07005CA2020E5D17C14A5DEF
C3805C027802C7C9FC14704A14CE13FE6C6C4814DCA24A14F8A291C75B160F495D5F5B5F
5B4992CAFCA249140E4C3B6FB853>I<14F8EB07FE90381F871C90383E03FE137CEBF801
120148486C5A485A120FEBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2140F
5D48ECC1C0A2141F15831680143F1587007C017F1300ECFF076C485B9038038F8E391F0F
079E3907FE03FC3901F000F0222677A42A>97 D<ED01F815FFA3150316F0A21507A216E0
A2150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF017C5B
EBF80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA214075A485C
A2140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B9038038F
8E391F0F079E3907FE03FC3901F000F0253B77B92A>100 D<147F903803FFC090380FC1
E090383F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F80
397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0
EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<EC07C0EC3FF0
9138FC38E0903901F01FF0EB03E0903807C00FEB0F80011F1307D93F0013E05B017E130F
13FE4914C01201151F1203491480A2153F1207491400A25DA249137EA215FEA25D000313
01140314076C6C485A0000131FEB787BEB3FF390380FC3F0EB00031407A25DA2140F5D12
1C007E131F5D00FE49C7FC147E5C387801F8387C07E0381FFF80D803FEC8FC24367CA426
>103 D<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B90387E07F0
EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16C05B49EB1F8012035BA2153F00
0715005BA25D000F147E5B15FE5D121FD98001131C15F8163C003F01031338010013F0A2
16704814E0007E15F016E0EDE1C000FE903801E38048903800FF000038143C263B7BB92A
>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03FCEA071EEA0E1F121C
A212385B1270A25BEAF07E12E013FEC65AA212015B1203A25B12075BA2000F13E013C013
C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0143879B619>I<EB0F
C0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25B
A21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131EEAFC1C
A2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915>108
D<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F261C1F
78D9F3C013803C383FF001F7800F02E01400007801C013FE007018C002805B4A4848EB1F
80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F5C0001177E495C18FE031F5C
120349DA8001131C18F8033F153C00070403133849020013F0A24B1570000F17E049017E
15F019E003FEECE1C0001FEE01E34949903800FF000007C70038143C3E2679A444>I<D8
01E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E00078
13C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F5E12
034990383F8380160316070007027F130049137EA2160E000F147C49141E161C5E001FEC
3C7849EB1FE00007C7EA0780292679A42F>I<147F903803FFC090380FC1F090381F00F8
017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA215FF5A
4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00147E
6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C090391FE03FF09039
3CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113C15C
A2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F495A
6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25BA212
03A25B1207B512C0A3293580A42A>I<3903C003F0390FF01FFC391E783C0F381C7C703A
3C3EE03F8038383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA2120012
015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>114
D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313F0A2
15E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F141F14
0F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC
1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC
3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078
147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13F8D8
03FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F131F
00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC0EA2
0201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78E090
393FF03FC090390FC00F00272679A42D>I<01F01507D803FC903903801F80D8071E9039
07C03FC0D80E1F130F121C123C0038021F131F49EC800F00701607A249133FD8F07E1680
00E0ED000313FEC64849130718000001147E5B03FE5B0003160E495BA2171E0007010114
1C01E05B173C1738A217781770020314F05F0003010713016D486C485A000190391E7C07
802800FC3C3E0FC7FC90393FF81FFE90390FE003F0322679A437>119
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi12 14.4 2
/Fb 2 63 df<1A381AFC1903190FF13FF8953801FFE00607138095381FFE00F07FF89438
01FFE0050790C7FCEF1FFCEF7FF0933801FFC0040790C8FCEE3FFCEEFFF0030313C0030F
90C9FCED3FFCEDFFE002031380DA0FFECAFCEC3FF8ECFFE001031380D91FFECBFCEB7FF8
3801FFE000071380D81FFECCFCEA7FF0EAFFC090CDFC13C0EA7FF0EA1FFE3807FF800001
13E038007FF8EB1FFE903803FF80010013E0EC3FF8EC0FFE913803FF80020013E0ED3FFC
ED0FFF030313C0030013F0EE3FFCEE07FF040113C09338007FF0EF1FFCEF07FF050113E0
9438007FF8F01FFE953807FF80060113E09538003FF8F10FFC190319001A38464376BE5B
>60 D<127012FCB4FC13C0EA7FF0EA1FFE3807FF80000113E038007FF8EB1FFE903803FF
80010013E0EC3FF8EC0FFE913803FF80020013F0ED3FFCED0FFF030313C0030013F0EE1F
FCEE07FF040113C09338007FF0EF1FFCEF07FF050113E09438007FF8F01FFE953807FF80
060113E09538003FF8F10FFC1903190FF13FF8953801FFE00607138095381FFE00F07FF8
943801FFE0050790C7FCEF1FFCEF7FF0933801FFC0040790C8FCEE1FFCEEFFF0030313C0
030F90C9FCED3FFCEDFFF002031380DA0FFECAFCEC3FF8ECFFE001031380D91FFECBFCEB
7FF83801FFE000071380D81FFECCFCEA7FF0EAFFC090CDFC12FC1270464376BE5B>62
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi9 9 2
/Fc 2 63 df<171C177EEE01FEEE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED7FC0
4A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1FF0
EA7FC048CAFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE
01FEEE007E171C2F2E7AA93C>60 D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007F
C0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED
01FF9238007FC0EE1FF0EE07FCEE01FEA2EE07FCEE1FF0EE7FC0923801FF00ED07FCED1F
F0ED7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07
FCEA1FF0EA7FC048CAFC12FC12702F2E7AA93C>62 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmtt8 8 88
/Fd 88 127 df<123812FEB3A8127C1200A7123812FEA51238072A72A923>33
D<387801E038FC03F0EAFE07A4EAFC03AB007C13E0A2383000C0141479A923>I<EB3C0F
90387E1F80A6EBFE3F01FC1300A2007FB512F8B612FCA4003F14F83901F87E00AA003FB5
12F8B612FCA46C14F83903F0FC00EA07F1EBE1F8A63803C0F01E297EA823>I<137CEA01
FE487E487FA2EBCFC0EA0F87A21303A31307A290380FCFF8EC9FFC139F13BF3907FF0FF8
01FE138013FCA29038F81F00EA0FF0381FE01E383FF03E13F8007F5BEA7E7C00FC1378EB
3EF812F86D5AA290380FE03C1307EAFC0F90381FF07C387E3FFC007FB512FC393FFE7FF8
EBFC3F390FF01FE03907E007C01E2B7EA923>38 D<120FEA3F8013C0A213E0A2120F1203
A31207A213C0120F121FEA3F80EA7F005A5A12F812700B1574A823>I<EB0380EB0FC013
1FEB3F80EBFF005BEA01F81203485A485A5B485AA248C7FCA2123E127EA2127CA212FCA2
5AA87EA2127CA2127EA2123E123FA26C7EA26C7E7F6C7E6C7E1201EA00FE7FEB3F80EB1F
C0130FEB0380123476AD23>I<127012FC7E127FEA3FC0121FEA07E07F6C7E6C7E120013
7EA27FA27F1480A2130FA214C0A21307A8130FA21480A2131FA214005BA2137EA25B1201
485A485A5BEA1FC0123F48C7FC12FE5A127012347AAD23>I<131EA2131F131EA30070EB
0380007C130F00FEEB1FC0397F9E7F8090B5FC001FEBFE00000713F8000113E038007F80
3801FFE0000713F8001F13FE007FEBFF80EB9E7F39FE1E1FC0007CEB0F80007013030000
90C7FCA3131F131EA21A1D7CA223>I<EB0780497EAB007FB512F8B612FCA46C14F83900
0FC000AB6D5A1E1E7EA223>I<121FEA3F80EA7FC013E0A4123F121F1207A2EA0FC0121F
EA7F80EAFF005A5A12700B12748823>I<007FB51280B612C0A46C14801A067C9623>I<12
3E127FEAFF80A5EA7F00123E0909738823>I<EC0380EC07C0140FA2141F1580143F1500
5C147EA214FE5C13015C13035C13075CA2130F5C131F5C133F91C7FCA25B137E13FE5B12
015BA212035B12075B120F5B121F5BA2123F90C8FC5A127E12FE5AA25A12781A347CAD23
>I<EB1F80EB7FE03801FFF8487F487F13F0380FC03F391F801F80EB000F4814C0003E13
07A248EB03E0A30078130100F814F0AB007CEB03E0A3007E1307003E14C0A2003F130F39
1F801F80A2390FC03F003807F0FE13FF6C5B6C5B38007FE0EB1F801C2B7DA923>I<1318
133C137CA213FC120112031207127F12FFA2137C127C1200B3A6387FFFFC14FEA314FC17
2A7AA923>I<EB7FC03803FFF04813FC001F7F48EBFF80EA7F80397E003FC000FEEB0FE0
4813076CEB03F0A31401127C1238C7FC1403A2EC07E0A2EC0FC0141FEC3F80150014FE13
01EB03F8495A495AEB3FC0495A01FEC7FC485A485AD80FF013E0391FE001F0EA3F8048B5
FCB6FCA36C14E01C2A7DA923>I<EB7FC03801FFF0000713FC487F487F393FE07F809038
801FC0140F1407A3EA0E00C7120FA2EC1F80143F903801FF00EB7FFE495A5C806DB4FC90
38007F80EC1FC0EC0FE01407EC03F0A21401A2127C12FE1403A2EC07E048130F6CEB1FC0
387FC07F6CB512806C14006C13FC00035B38007FC01C2B7DA923>I<14FC497E1303A2EB
07DE130F149EEB1F1E133F133E137E137C13F8120113F0EA03E0120713C0120FEA1F8013
005A123E5A12FCB612F815FCA36C14F8C7EA1E00A7903807FFF84913FCA36D13F81E2A7E
A923>I<001FB5FC481480A31500003EC8FCAAEB1FE0EBFFF8003F13FE8015809038E03F
C0EB800F90380007E0121EC7EA03F0A21401A2123812FEA21403A2EC07E048130F007EEB
1FC0397FC0FF806CB512006C5B00075B6C13F038007F801C2A7DA823>I<EB03F8EB1FFE
497E90B512804814C03803FE0F3807F01FEA0FE0EA1FC01380003FEB0F8090C8FC127EA2
EA7C01EB3FF038FCFFFCB57E8015809038C03FC09038000FE014075A48EB03F0A21401A3
127CA2007E1303A27EEC07E0EB800F391FC01FC0390FF07F8090B512006C5B00015B6C13
F0EB3FC01C2B7DA923>I<1270B612E015F0A439F8000FE0EC1FC000701480C7EA3F0014
7E14FE5C495AA2495A5C13075C130F5C131FA291C7FC5BA2133E137EA2137CA313FCA25B
A813701C2B7DA923>I<EB3FC03801FFF8487F487F487F391FE07F80393F801FC0EB000F
007EEB07E0007C1303A4007E1307003E14C06CEB0F80EBC03F3907FFFE006C5BC613F0A2
000313FC380FF0FF391F801F80393F000FC0007EEB07E0007C130300FC14F0481301A56C
1303007EEB07E0A2393F801FC0391FE07F8090B5FC6C1400000313FC6C5B38003FC01C2B
7DA923>I<EB3FC0EBFFF000037F4813FE487F391FE07F80383F803F397F001FC0007E13
0F00FEEB07E05AA248130315F0A47EA2007E1307140F127F383FC03F6CB5FC7E6C13FD6C
13F3C613C390380803E0EB0007A2EC0FC0121F393F801F80143FEC7F0014FE1383EBFFFC
6C13F06C5B000313806C48C7FC1C2B7DA923>I<123E127FEAFF80A5EA7F00123EC7FCAB
123E127FEAFF80A5EA7F00123E091D739C23>I<121FEA3F80EA7FC0A5EA3F80EA1F00C7
FCAB121EEA3F80127F13C0A4123F121F120FA2EA1F80123FEA7F005A5A12F812700A2674
9C23>I<EC0380EC0FC0141F143F14FF491380903807FE00495A495AEB7FE0495A4890C7
FCEA07FE485AEA1FF0EA7FE0485A90C8FCA213C06C7EEA1FF0EA0FFC6C7EEA01FF6C13C0
6D7EEB1FF86D7E6D7E903801FF806D13C0143F141F140FEC03801A247CA523>I<007FB5
12F8B612FCA4003F14F8C9FCA6003FB512F8B612FCA46C14F81E127E9C23>I<127012FC
7E7E13C06C7EEA1FF86C7E6C7E3801FF806C7FEB3FE0EB1FF86D7EEB03FE903801FF806D
13C0143FA214FF491380903803FE00EB0FFC495AEB3FE0EBFFC0485BD807FEC7FC485A48
5AEA7FE0485A90C8FC5A5A12701A247CA523>I<3801FFC0000713F8001F13FE487F4814
8039FF007FC048130F1407A2140F007C131F0038EB7F80C712FF01031300EB07FCEB0FF0
495A5C495AA291C7FCA6133E90C8FCA7131C137FA5131C1A297CA823>I<EB0FC0A2497E
A4EB3CF0A5EB7CF8A3EB7878EBF87CA548487EA40003133F497EA290B5FCA2481480A3EB
C00F000F14C0EB8007A3397FF03FF800FF14FCA3007F14F81E2A7EA923>65
D<B512F014FE80158015C0390F800FE01407EC03F01401A5140315E01407EC1FC090B512
8015005C8015C09038800FE01407EC03F0140115F81400A5140115F01403EC0FE0B6FC15
C01580150014FC1D297EA823>I<90380FE0E090383FF9F0EBFFFD4813FF5A3807FC3F38
0FF00F381FC007A2383F80031300481301127EA2007CEB00E000FC1400A25AA97EA2127C
007E14E0EC01F0127F7EEB8003EA1FC0EC07E0380FF00F3907FC1FC06CB512806C14006C
5BEB3FF8EB0FE01C2B7DA923>I<387FFFF0B512FC80806C1480390F803FC0141FEC07E0
A2EC03F0140115F81400A315FC157CAA15F8A3140115F01403A2EC07E0EC0FC0143F007F
B51280B612005C5C6C13F01E297FA823>I<B612F015F8A4380F8000A515701500A21438
147CA3EBFFFCA5EB807CA3143891C7FCA3151C153EA6B612FEA415FC1F297EA823>I<00
7FB512FCB612FEA37E3907C0003EA5151C1500A3140E141FA390B5FCA5EBC01FA3140E91
C7FCA9EA7FFEB5FCA36C5A1F297FA823>I<90381FC1C090387FF3E090B5FC12035AEBF8
3F380FE01F381FC00F1380003F13071300007E1303A3007CEB01C000FC90C7FCA25AA6EC
7FF815FCA27E15F8007CEB03E0127E1407A27EEB800F121FEBC01FEA0FE03807F87F90B5
FC7EC613FB90387FF1C090381FC0001E2B7EA923>I<397FF00FFE39FFF81FFFA3397FF0
0FFE390F8001F0AC90B5FCA5EB8001AE397FF00FFE39FFF81FFFA3397FF00FFE20297FA8
23>I<B512FEA538007C00B3ADB512FEA517297AA823>I<90381FFFE04913F0A36D13E090
38003E00B3A8127C12FEA2147E14FE38FF03FC6CB45AA2001F13E06C5BD801FEC7FC1C2A
7DA823>I<397FE01FF838FFF03FA3387FE01F390F000F80EC1F005C147E147C5C130149
5A5C495A130F495AA2133F497E497E13FBEBF1F0A2EBE0F813C0EB807CA2497EA280A2EC
0F8015C01407EC03E0397FE007FC38FFF00FA3387FE0071E297EA823>I<EA7FFEB5FCA3
6C5AEA07C0B3A6157CA7007FB512FCB6FCA36C14F81E297EA823>I<39FF8001FFA26D5A
A3391EE00778A3EBF00FEB700EA2EB781EA2EB381CEB3C3CA2EB1C38EB1E78A2EB0E70A3
EB07E0A3EB03C0A290C7FCA939FFC003FFA520297FA823>I<397FC01FF800FFEB3FFC13
E0A2397FF01FF8390F7003C0A213781338A2133CA2131C131EA2130E130FA3EB0783A3EB
03C3A3130114E3A2130014F3A21473A2147B143BA2387FE03F38FFF01FA2140FD87FE013
801E297EA823>I<3803FFF0000F13FC487F487FA2397F807F80387E001F007C130FA200
FC14C0481307B3A46C130FA2007C1480A2007E131F387F807F6CB51200A26C5B6C5B0003
13F01A2B7CA923>I<B512F014FE80158015C0390F801FE0EC07F01403140115F81400A5
140115F014031407EC1FE090B512C0158015005C14F00180C7FCABEAFFF87FA35B1D297E
A823>I<387FFFC0B512F88014FF7E390F807F80EC1FC0140F6E7E1403A514074A5A141F
EC7F8090B5C7FCA214FC8080EB807F6E7E141F140FA61587ED8F80A215CFD87FF013DF39
FFF807FF1600806C486C5AC812F8212A7FA823>82 D<9038FF83800003EBE3C04813FF12
1F5AEA7FC0EB003F00FE131F48130FA25A1407A26CEB038091C7FC127E127FEA3FF06CB4
FC6C13F06C13FC00017F39001FFF80010113C0EB001FEC0FE01407EC03F0A20070130112
F8A36C1303A26CEB07E06C130F9038E03FC090B5FC15005C00F15B38703FE01C2B7DA923
>I<007FB512F8B612FCA439F807C07CA50070143800001400B3A7EBFFFE487FA36C5B1E
297EA823>I<39FFF81FFFA5390F8001F0B3A7EBC003A2000714E0EBE007EBF00F000314
C0EBFC3F6CB512806C14006D5AEB1FF8EB07E0202A7FA823>I<397FF00FFE00FF14FFA3
007F14FE390F8001F0A23907C003E0A43903E007C0A4EBF00F00011480A43900F81F00A4
EB7C3EA4EB3C3CEB3E7CA3EB1E78A4EB1FF86D5AA36D5AA2202A7FA823>I<39FFC003FF
A5003CC7123CA2003E147C001E1478A8390F07E0F0EB0FF0A5EB1E78A2000714E0A3EB9C
39EBBC3DA4EBB81D000314C0A3EBF81FEBF00FA300011480EBE007202A7FA823>I<397F
F07FF0EBF8FFA3EBF07F3907E03F000003133EEBF07E0001137CEBF8FC00005B13FDEB7D
F0137F6D5AA26D5AA26D5AA280131F80133F80137DEB7CF813F8147CEA01F0801203497E
12079038C00F80120F397FE03FF8D8FFF013FCA3D87FE013F81E297EA823>I<397FF00F
FE39FFF81FFFA3397FF00FFE3907C003E0EBE007000314C013F00001130F01F813800000
131F01FC1300137C143E133E147EEB1F7CA26D5AA26D5AA25C1303ACEB1FFC497EA36D5A
20297FA823>I<003FB512E04814F0A4397C0007E0140FEC1FC01580143F0038EB7F00C7
127E14FE495A5C1303495A5C130F495A5C133F49C7FC137E13FE485A5B1203485A4913E0
000FEB01F0EA1FC01380123FEA7F00127EB6FCA46C14E01C297DA823>I<387FFFC0B512
E0A314C000F8C7FCB3B3A6B512C014E0A36C13C0133473AD23>I<127812F87EA27E127E
127F7E7F121FA27F120F7F12077F12037F1201A27F12007F137E137F7FA280131F80130F
801307A280130380130180130080147EA2147F801580141F15C0140FA21407EC03801A34
7CAD23>I<387FFFC0B512E0A37EEA0003B3B3A6EA7FFFB5FCA36C13C013347EAD23>I<00
7FB51280B612C0A46C14801A067C7E23>95 D<3803FF80000F13E04813F8487F80EB80FF
EC3F80381F001FC7FC140F14FF137F0003B5FC120F5A387FF00F130012FCA25A141F7E6C
133F387F81FF90B512FC6C14FE7E000713C73901FE01FC1F1D7D9C23>97
D<B47E7FA41207A7EBC1FCEBC7FF01DF13C090B512E015F09038FE0FF8EBF8039038F001
FCEBE000A249137EA2153EA5157E7F15FC7F14019038F803F89038FE0FF090B5FC15E001
DF138001CF1300380383F81F297FA823>I<EB3FF0EBFFFC000313FF5A5A381FE07FEA3F
80387F003E007E90C7FCA25AA25AA57EA2007E1307007FEB0F80141FEA3FC0391FF07F00
6CB5FC6C5B6C5BC613F0EB3FC0191D7B9C23>I<ECFF8015C0A41407A7EB7F873801FFE7
4813F7000F13FF5A13E0383F803F387F001F007E130FA2481307A25AA56C130FA2127E14
1F007F133F383F807FEBE0FF6CB512FE7E000313F76C13C738007F031F297EA823>I<EB
3FC0EBFFF800037F4813FF481480381FF07F393F801FC0EB000F007E130715E05AB6FCA4
15C000F8C8FC7EA2007EEB01C0007FEB03E0383F800713E0391FF81FC06CB5FC6C148000
01EBFE006C6C5AEB1FE01B1D7D9C23>I<147F903801FFC0010713E05B5BEB3FCF140F90
383E07C091C7FCA4007FB51280B612C0A36C1480D8003EC7FCB3383FFFFE487FA36C5B1B
297EA823>I<EC01F090383F07FC9038FFDFFE000313FF5A48147E381FE1FE9038807E18
393F003F00A2003E7FA4003F5BA2381F807EEBE1FE6CB45A485B5C001E13C0013FC7FC90
C8FC121F1340380FFFFCECFF804814C04814F0397E0007F8007C130048147CA248143CA3
6C147C6C14FC007FEB03F8EBE01F6CB512F0000F14C06C14800001EBFE0038003FF01F2E
7E9D23>I<B47E7FA41207A7EBC1FCEBC7FF01DF138090B512C0A29038FE0FE0EBF807EB
F00313E0A313C0AD39FFFE1FFF5CA38020297FA823>I<133813FEA5133890C7FCA6EA7F
FC487EA3127FEA003EB3387FFFFEB6FCA36C13FE182A7AA923>I<14E0EB03F8A5EB00E0
1400A63803FFF04813F8A37EC7FCB3AB13011238387C03F012FEEB0FE0B5FC14C06C1300
6C5AEA0FF815397DA923>I<EA7F80487EA3127F1203A7ECFFFC13C1A313C0EC3F00147E
5CEBC1F8EBC3F0EBC7E0EBCFC0EBDFE0EBFFF0A2EBFCF8497EEBF07EEBE03E497E1580EC
0FC01407EC03E0397FFE0FFFB55AA36C487E20297FA823>I<EA7FFEB5FCA37EEA001FB3
AD007FB512C0B612E0A36C14C01B297CA823>I<397E1F01F039FF7FC7FC9038FFEFFE14
FF6C80390FE1FE1FEBC1FC01C07FEB80F8A2EB00F0AE3A7FE3FE3FE026FFF3FF13F0A326
7FE3FE13E0241D819C23>I<38FF81FCEBC7FF01DF138090B512C0A23907FE0FE0EBF807
EBF00313E0A313C0AD39FFFE1FFF5CA380201D7F9C23>I<133F3801FFE0487F487F487F
381FC0FE383F807F383E001F007E1480007C130F00FC14C0481307A66C130FA2007C1480
007E131F6CEB3F006D5A381FE1FE6CB45A6C5B6C5B6C5BD8003FC7FC1A1D7C9C23>I<38
FF81FCEBC7FF01DF13C090B512E015F03907FE0FF8EBF8039038F001FCEBE000A249137E
A2153EA5157E7F15FC7F14019038F803F89038FE0FF090B5FC15E001DF138001CF1300EB
C3F801C0C7FCAAEAFFFEA51F2C7F9C23>I<90383FC1C09038FFF3E0000313FB4813FF5A
381FF07F383FC01F387F000F127E14075A14035AA57E1407127E140F007F131FEA3F8038
1FE07F90B5FC12076C13FB6C13E338003F83EB0003AAEC7FFF91B51280A36E1300212C7E
9C23>I<397FF00FE039FFF87FF8ECFFFC13FB6CB5FCC613F8ECC078EC800091C7FC5BA2
5BA35BAA387FFFFCB57EA36C5B1E1D7E9C23>I<3801FF9C000F13FE5A127FA2EAFF0000
FC137E48133EA26C131C6C1300EA7FF0383FFF80000F13E06C13F838007FFCEB01FEEB00
7F0070133F00F8131F7E143F7E38FF80FFEBFFFE14FC14F814F000701380181D7B9C23>
I<137013F8A7007FB51280B612C0A36C1480D800F8C7FCACEC01C0EC03E0A3EBFC07140F
9038FE1FC0EB7FFF158090383FFE00EB0FFCEB07F01B257EA423>I<39FF807FC001C013
E0A400071303B01407140FEBE03F90B6FC7EA2C613F3EB3FC1201D7F9C23>I<39FFF03F
FCA5390F8007C000071480A2EBC00F00031400A26D5A0001131EA2EBF03E0000133CA2EB
F87CEB7878A2EB7CF8EB3CF0A2133F6D5AA36D5A6D5A1E1D7E9C23>I<397FF00FFE39FF
F81FFFA3397FF00FFE001FC712F86C14F0A57F390783E1E0EB87F1A3EB8FF90003EB79C0
13CFA2EBDF7BA2EBDE3B00011480EBFE3FA2EBFC1FA23900F80F00201D7F9C23>I<397F
F07FF039FFF8FFF8A3397FF07FF03903E03E003801F03C3800F87CEB78F8EB7CF0EB3FE0
131F6D5A5C1307497E497E133DEB3CF0EB7878EBF07C0001133C497E3803C01F397FF03F
F839FFF87FFCA3397FF03FF81E1D7E9C23>I<39FFF03FFCA539078007C0158013C00003
130F1500EA01E05CEBF01E1200A26D5A1378A26D5AA3EB1E7014F0130EEB0FE0A213075C
A35CA2130F91C7FCA2EA3E1FEA7F1E133EEA7CFC127F5B6C5A6C5AEA0F801E2C7E9C23>
I<003FB512F04814F8A4397C000FF0EC1FE0EC3FC00038EB7F80C7EAFF00EB01FC495A49
5A495A495A495A49C7FC13FE485AD807F81370484813F8485A485A485AB6FCA46C14F01D
1D7E9C23>I<EC1FE0ECFFF05B130715E090380FF00014C05CAE131F137FD87FFFC7FC48
5A5BA27F6C7EC66C7E131F130FAE8014F0903807FFE015F013017FEC1FE01C347DAD23>
I<127812FCB3B3AE1278063472AD23>I<EA7FC0EAFFF87F13FF7EC66C7E131F130FAE80
14F0903807FFE06D13F07FA25B4913E090380FF00014C05CAE131F137FD87FFFC7FCB5FC
13FC5BEA7FC01C347DAD23>I<3803C038380FF07C381FF8FCEA3FFF4813F8B512F038FC
7FE038F83FC038700F0016097AA823>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmbxti10 10 38
/Fe 38 122 df<DC1FF8EB03F893B5EB0FFF0303DAC03F1380923C0FF80FE0FF0FC0DB1F
E09039F1FE1FE092263FC01F143F037F90393FF3FC7F168003FF14F706E714C04A1300DE
CFF81380DD0F0FEB1E00050091C7FC5C4B141F61A314074B143FA2011FB912FC4984A26D
609026000FF8C7D87FE0C7FC61A3141F4B14FF61A4143F4B5B96C8FCA3147F4B5B60A314
FFA24B130760A35B92C7120F60A3495A4D5AA34A5D0107153F000F140F283F87F83F805B
D87FC7EB7FC0D8FFCF01FF495A5C4DC9FCD98FE0495AD99FC0EB81FCD91F80495A3BFC3F
00FE0FF0D87FFE90387FFFC0D81FF8011F90CAFCD807E0EB03F84B4C81BA3F>11
D<93381FFFC093B512FC030314FF923A0FF8007F80DB1FE0EB0FC04B48EB3FE04B48137F
15FF93C712FF5C19C04A5AF07F80F01E00020792C7FC5DA4140F5DA2013FB712FE5BA26D
5E903A001FF00007A2170F60143F5D171F60A3027F143F4B5CA3177F02FF5D5DA217FF60
49EE83E092C7FC4C1387F007C0A25BF00F805CF01F00820107ED7F3E4AEC3FFC715AEF07
E094C8FC495AA2120F383F8FF0EA7FCFEAFFDF5CA2EB9FC0EBBF80013FCBFCEAFC7EEA7F
FCEA1FF8EA07E03B4C81BA38>I<1507150FA2151F157F15FFEC01FE1407141F147F9038
07FFFC137F90B5FC14DF90387C1FF81300A2143F15F0A3147F15E0A314FF15C0A35B1580
A35B1500A35B5CA3130F5CA3131F5CA3133F5CB612F815FCA215F8203775B631>49
D<15FF020713E0021F13F891387F03FE903901F800FF494814804948137F494814C0D91F
8C133FEB3F1CD97E1E14E0D97C0E137F13FC13F8120113F0021E13FF0003011C14C0EBE0
3C1438EC780102F014809038E3E0032601FFC014006C90380007FE013C495A90C7485A4B
5A4B5A4B5A4A90C7FC4A5AEC0FF8EC3FF0EC7FC04948C8FCEB07FCEB0FF0495AEB3F8001
FFC7EA0FC0D801FC15805B4848141F4848EC3F0048485C9039FFC001FF4890B55A485D13
0FD87E035CD87C005C6E5B00FC011F138048010790C7FCEC01F82B3878B631>I<DCFFE0
1338030F01FC1378037F01FF13F80203B612C3020F9039E00FE7F0913A3FFE0003FFDA7F
F87F902601FFE07F490180EC7FE04990C8FC4948153F495A4948ED1FC0495A495A5A4A16
805A485BA24890C91300A2484893C7FCA3485AA3127F5BA312FF5BA549ED01F0170360A2
17076C6C5E170F60003F161F6D4BC7FC001F167E6D5D6C6C4A5A6C6C4A5A6C6DEB0FE06C
01E0EB3F806C9026FC01FFC8FC013FB512FC010F14F0010314809026003FFCC9FC3D3B72
B945>67 D<0103B812C04917E0A3D90007EB80019438007FC0181F5C93C7120FA35C4B15
80A3143F4B13F017F81601027F160003F849C7FCA2160302FF13074B485A163F92B5FC5B
5FA2EDE03F49141F03C05B160F161F5B038090C8FCA349141E92CAFCA35B5CA3133F5CA3
137F5CB612FE815DA23B397AB83C>70 D<0103B612E017F0A217E0D90003EBC000A35C5E
A35C93C7FCA35C5DA3143F5DA3147F5DA314FF5DA35B5DA35B5DA35B5DA35B92C8FCA35B
5CA3133F5C007FB512FC81B65A7E2C397BB827>73 D<0103B612F04981A25FD900070180
C7FCA35C93C8FCA35C5DA3143F5DA3147F5DA314FF5DA35B5DA35B5DA2EF078049150F5D
A2171F49160092C75A173E177E5B4A5CA21601013F4A5A4A1307160F4C5A017F147F9138
F803FFB85AA35F313979B83A>76 D<0103B500C0030FB51280496E4B14C0621D80D90007
4D90C7FC97B5FC824A5E03BF923803EFFEA2F107DF141F033F92380F9FFCF11F1F6F6C15
3F023F163E023E047C5BA2F1F87F147E027CDB01F05BF003E06F6C15FF02FC4B5A02F84B
485BA2F01F01130102F0033E5C6F6C137C61010316F802E0DA01F05CA24D485A0107ED07
C002C095C8FC923903FF0F8061010FED1F000280023E5CA24D131F011F5D02005F6F5B19
3F495D013E4B5CA24D137F017E92C7FCD801FE60B526FC00FE90B612F0A25E5E5A3979B8
59>I<0103B500C049B512F0496E4914F81BF082D9000792390007F80070EC03E019074A
7F62EDBFFE190F91381F9FFF031F5E6F7F191F4A6C7F023E94C7FC6F7F61DA7E017F027C
163E6F7F197E02FC6D7E4A167C707E19FC01016E7E4A5E701380188101036E13C14A5E70
13E118E301076E13F34AEDFBE08218FF010F814A5E83A2011F8191C86C5BA2835B013E6F
90C8FCA283137ED801FE6F5AB512FC187EA2183C4D397AB84A>I<923803FF80033F13F8
4AB512FE0207903801FF80913A1FF8007FE0DA3FE06D7EDAFF806D7E4990C76C7E494814
07D90FFC81494814034A81133F495A494816805A5C5A91C8FC5A5A5BA2121F495D123FA3
48484B1300A448484B5AA34D5AA26049157F6017FF605E604C5B6C7E4C90C7FC4C5A003F
4B5A6D4A5A001F4B5A6C6C4A5A6D4913802707FF800790C8FC6C9038E03FFCC690B512F0
013F14C0010F49C9FC010013E0393B72B947>I<0103B7FC4916F018FC18FFD90007D980
0F1380050113C07113E04AED7FF093C7FCA219F85C5DA3023FEDFFF05DA219E0027F5C4B
15C04D1380190002FF4A5A4BEB1FFCEF3FF04CB45A4990B6C7FC17FC839238E00FFF4902
037F4B6C7F848249825DA25E495E1500A25E5B4A5DA3013F4A141C4AED803EA2197E017F
6E147C4A16FCB6D8F801EBC0F870EBE3F094387FFFE0051F13C0CA000313003F3A79B847
>82 D<92393FF001C0913901FFFE030207EBFF07021F14CF913A3FE01FFF8091387F8007
9138FE000349487F49486D130013074A80130F177E495AA3013F157C80A26E91C7FC80EC
FF8015F8EDFF8016F06D14FC82826D817F6D817F6D7E020780EC007F1507150181167FA2
D80F805DA2163F001F157F5FA294C7FC003F5D5E6D13015E486C495A6D495A01FCEB1FE0
9039FF807FC000FE90B55AD8F83F49C8FCD8F00F13F848C613C0323B78B936>I<48B9FC
481880A21900489039807FF8039026FC00FF130001F08248484A7F5B5CD81F80163E0100
5C5A5C123E007E5D127C4A157E00FC177C00784B133CC793C7FC5CA293C9FCA25CA25DA2
143FA25DA2147FA25DA214FFA25DA25BA25DA25BA25DA25BA25D007FB612F8B7FCA25E39
3871B742>I<003FB500FC90B512F8486E4814FC03FC15F8A226007FF8C73803FC00EF01
F001FF1503605CA2481607605CA248160F605CA248161F95C7FC5CA2485E173E91C8FCA2
48167E177C5BA2003F16FC5F5BA2007F15015F5BA2160300FF5E5B16075FA2494A5A161F
007F93C8FC5E6D147E003F5D4B5A6C6CEB07F06C6CEB1FE06CB4EBFFC06C90B5C9FCC614
FC013F13F0010713803E3A6DB849>I<EC3FC0903801FFF00107EBFCF090391FF07FFC90
383FC03F9038FF801F48EB000F485A5E485A120F49131F001F5D5B123F153F007F5D5BA2
157F00FF5D5BA215FF5E49EC87C0A25C160F1780A2007F49131F4A14006C6C5A023F133E
391FE0FE7F3A07FFFC3FFC00019038F01FF83A007F8007E02A2777A531>97
D<EB1FE0EA0FFFA4C66C5AA213FFA25CA25AA291C8FCA25AA25BA21207EC3F809038FDFF
F090B512FC48EBC1FEEC80FF9039FE007F805B484814C0153F5B157F123FA25BA2007F14
FFA25BA25C00FF15801380A25C160013005D14075D4A5AA26C495A5D6D485A003F495A26
1FC1FEC7FC6CB45A000313E0C690C8FC223B76B92C>I<EC0FF0ECFFFC010313FF90390F
F81F8090393FE00FC090387FC01F9038FF803F48EB007F484813FF485A120F5B001F1580
49EB7F00003F141892C7FC127F5BA312FF5BA45BA3ED0180ED03C0007FEC07E0150F6C6C
EB1FC0ED7F803A1FE001FE00390FF80FFC0003B512F0C614C0D91FFCC7FC232777A52C>
I<EE0FF0ED07FFA49238003FE0A2167FA217C0A216FFA21780A25DA21700A25DEC3FC390
3901FFF3FE010713FF90381FF07F90383FC03F9039FF801FFC48EB000F485AA248485C12
0F49131F121F495C123F153F127F495CA2157F12FF495CA215FFA249EC87C0A25C168FEE
0F80A2007F49131F4A14006C6C5A023F133E391FE0FE7F3A07FFFC3FFC00019038F01FF8
3A007F8007E02C3B77B931>I<EC0FF0ECFFFE0103EBFF8090390FF81FC090383FE00F90
397F8007E0EBFF00485A1203485A120F49130F001F15C04848131FED7F80913801FF0000
7FEB3FFC90B512F015C002F0C7FCD8FFE0C8FC5BA45BA3ED0180007FEC03C0ED07E06D13
0F003FEC1FC06C6CEB7F80913801FE003907F80FFC6CB512F0C614C0D91FFCC7FC232777
A52C>I<167E923803FFC04B13E092381FE3F092383FC7F816CFED7F9FA215FF17F05CEE
1FE0EE078093C7FCA25C5DA414075D011FB6128017C01780A29026000FF8C7FCA5141F5D
A4143F5DA4147FA25DA414FF5DA45B92C8FCA4495AA45C1307120F383F87F8EA7FC7EAFF
CF5CA2EB8FE0EB9FC0EB1F80D8FC3FC9FCEA7FFEEA1FF8EA07E02D4C81BA21>I<EC03F8
EC1FFF027F139E903A01FE0FFF80903807FC0749487E49487EEB3FE0EB7FC01700EBFF80
485CA24801005BA215075A495CA2150F120F495CA2151FA2495CA2153FA25E0007147F15
FF6C6C5A4A5B3801FE0FD8007FB5FC6D5AD907F85B90C7FC5CA293C7FC120F383F8003D8
7FC05B12FF14074A5A01805B4A5A49485AECFF80263FFFFEC8FC6C13F8000113C029377B
A52C>I<EB03FCEA01FFA438000FF8A2131FA25CA2133FA25CA2137FA25CA213FFECC1FF
028713C0029F13F0489038FE07F802F87FECF00314E04801C07F148014005B000714075E
5BA2000F140F5E5BA2001F141F5E5B153F003F5DA24990387FE1F016C1007FECFFC3EE83
E05BA200FFED07C0A249EC0F80EE1F00ED7F3E90C7EA3FFC486E5A003CEC07E02C3B79B9
31>I<143C147F495A15805B1500A25C6D5AEB007091C7FCAB133FEBFFC000037F3807C7
F0380F87F8EA1F07A2EA3E0FA2127C131F5C12FCEAF83F00005B137F5CA213FF5CA25A91
C7FC5A5BEC0F801207EBFC1F1500120F495A143E5C13F000075BEBF1F06CB45AC65B013E
C7FC193C79BA1E>I<ED0780ED1FE0153FA2157FA316C0ED3F80ED1E0092C7FCABEC0FC0
EC7FF0ECFFFC903803F1FEEB07E049487E5CEB1F01133F133E137EEB7C0313FC01F85B13
001407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA25DA214FFA25DA25BA292C7FC
120FEA3F83387FC3FE12FFEBC7FCA2495AEB9FF0495A38FC7F80D87FFFC8FCEA3FF8EA0F
C0234C81BA1E>I<EB07F8EA03FFA438001FF0A2133FA214E0A2137FA214C0A213FFA214
80A25AA21400A25AA25BA21207A25BA2120FA25BA2121FA25BA2123FA25BA2127FA2EBC3
E0A212FF13C7EB87C0A2138F1480A2387F9F00123F13FEEA0FFCEA03F0153B78B919>
108 D<D801F8D90FF0EB0FF8D807FED97FFEEB3FFE260FFF81B56CB57E903DBFC3F07FC3
F03FC02A1F1FCF803FE7C07F003E903BFF001FEF801F4AECFF0049484A80007C495C4A5C
5F00FC49013F143FD8F87F4B5C5C1200047F147F01FF604A5CA204FF14FF486191C75B60
4B93C7FC5A494B48EB0F8019FE4B0207131F000706FC1300495CA20307EDF83E120F494A
5D62953803F9F0494A6DB45A494A6D5BD803C0D901E0023FC7FC492779A54E>I<D801F8
EB0FF0D807FEEB7FFE260FFF81B57E903ABFC3F07FC03B1F1FCF803FE0003E9038FF001F
5C494880007C5B5CA200FC49133FD8F87F5D5C1200167F01FF5D5CA216FF485E91C7FC5D
94C7FC5A4949EB0F8016FE0307131F000703FC13005BA2EEF83E120F495D5F923803F9F0
496DB45A496D5BD803C0023FC7FC312779A536>I<EC0FF891B5FC010314C090390FF81F
F090393FE007F890397FC003FCD9FF8013FE48EB0001484814FF485A120F5B121F5B123F
5D127F5BA25D00FF15FE5BA2ED0FFCA25BED1FF816F0153F16E0007FEC7FC016806C6CEB
FF004A5A391FE007FC390FF81FF00003B512C0C691C7FCEB1FF0282777A531>I<90390F
C003FC903A3FF00FFF8090267FFC3F13E0903A7DFEFE0FF0903AF8FFF807F800019138F0
03FC4913C001F115FED803E113801500A2EA07E313C35CEA000301071407A25CA2010F14
0F17FC5CA2011F141F17F85CEE3FF0133F17E04AEB7FC0A2017FECFF806E4813004B5A6E
485A9039FFFC0FF091B512C0029F90C7FCEC87F8480180C8FCA291C9FCA25AA25BA21207
A25B387FFFE0B57EA25C2F367EA531>I<01FCEB7F803A03FF01FFF04801C713FC3A0F9F
EFC0FE3A1F0FFF003F4A13FF003E495A131F4A5A007C13F0A216FED8FC3FEB01FC00F890
38E000F000001500A2137F5CA313FF5CA35A91C8FCA35A5BA312075BA35B5BEA01E02827
79A52A>114 D<EC3FC0903801FFF0010713FC90380FE07E90381F803FEB3F00017E13FF
A2EBFE0113FCA201FE13FE0001EB00FC9038FF8030ECF8006CEBFF8015E015F06D13F86D
13FC7F010313FEEB003F1407380F8001383FC000127FA200FF14FCA390388001F8903800
03F0127C007EEB0FE0393FC03F806CB51200000713FCC613C0202779A528>I<14F0EB03
F8130780495AA3131FA25CA2133FA25CA2137FA2B6128015C0A21580C6EB8000A25AA291
C7FCA25AA25BA21207A25BA2120FA25BA2121FA29038F007C0A2003F130F1580EBE01F15
00143E147EEBC07C6C6C5A380FE3F0EBFFE000031380C648C7FC1A3778B520>I<133FD9
FFC0130F000301F0EB1FC02607E7F8133FD80F83147F1387381F07FC003E15FFA2D87E0F
1580007C5B011F5B00FC13F000F81600EA003F4A5AA2017F5C14C0150713FF02805BA215
0F5A0200EBF83EA2031F137E177C16F0A2033F13F8A26C91387FF1F0EC80FF903A7F83F7
F3E0903A3FFFC3FFC0010F01811380903A01FC007E002F2779A534>I<017EEB01E03A01
FF8003F8489038E007FC3907C7F00FD80F87EB1FFEEA1F0F14F8123E150F397C1FF00715
03013F130100FC9038E000FC12F8EA007F5C16F813FF5C15014815F01400A2ED03E05A5B
ED07C0A2ED0F80A2ED1F00151E0001143E6D5B6C5C90387F81F06DB45A010F1380D901FE
C7FC272779A52C>I<013F161ED9FFC0011EEB7F80000301F090393F80FFC02607E7F813
7FD80F83DAFF8113E01387381F07FC003E5C1700D87E0F167F007C01F8153F011F49141F
00FC01F049EB0FC012F8EA003FECE0074C1480137F14C0030F141F01FF4A14001480A260
48021F143E02005B60A360A2033F495A6C5F9139807FF803017F01FF495A903B3FC1FBFC
0F8090261FFFF1B5C7FC01079038C07FFC01009038000FF03B2779A540>I<D907F813FE
903A1FFE03FF8090267FFF8713C03B01FC1FCF87E03B03F00FFF03F0D807E0EBFE0FD80F
C0141F018013FCD81F00143F4814F8123E021F14E0007E9138F01FC0007CED0F00C791C7
FC143F5DA3147F5DA314FF5D000FED03E0EA3FC0D87FC1140700FF16C0ED000F178001C3
141F0183EC3F0049147ED8FC0F6D5A3A7E1FBFC1F83A3FFF1FFFE0261FFC0713802703F0
01FEC7FC2C277AA52F>I<133FD9FFC0130F000301F0EB1FC02607E7F8133FD80F83147F
1387381F07FC003E15FF1780EA7E0F007C5B011F5B00FC01F0140012F8EA003F4A5A5E13
7F14C0150701FF5C1480A2150F485D1400A2151F5EA3153F5E6C147FEC80FFEB7F836DB5
5A130F903801FC7F90C712FF5EEA03C0260FF00190C7FC121F003F495AA24A5A4A5A01E0
5B49485A9038007F80261FC0FFC8FC380FFFFC000313F0C613802A3779A52F>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx9 9 44
/Ff 44 122 df<147014F0EB03E0EB07C0EB0F80131FEB3F00133E137E5B485AA2485AA2
12075B120FA2485AA3485AA3127FA390C7FCA35AAF7EA37FA3123FA36C7EA36C7EA21207
7F1203A26C7EA26C7E137E133E133FEB1F80130FEB07C0EB03E0EB00F01470144B78B722
>40 D<12E07E127C7E7E7F6C7E12077F6C7E6C7EA26C7EA27F137E137FA2EB3F80A3EB1F
C0A314E0A3130FA314F0AF14E0A3131FA314C0A3EB3F80A3EB7F00A2137E13FE5BA2485A
A2485A485A5B120F485A90C7FC123E5A12F05A144B7BB722>I<B512FCA816087F931D>
45 D<EB1FFC90B57E000314E0000F14F8391FE03FFC393F800FFF48487E6D6C1380D8FF
C014C06D7E16E080A36C5A6C5A6CC7FCC8FC16C05C16805C16004A5A4A5A5D4A5AEC3FC0
4A5A02FEC7FC495A495A903907E001E0EB0FC0EB1F8090383E00034914C05B4848130748
B6FC5A5A5A5A5AB71280A423317CB02C>50 D<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3F
C0EA0F00C7FCA9120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C217AA019>58
D<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F1587021F80150302
3F80EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A131FA249B67EA2
4981A290271F8000077F91C77EA24982013E80017E82017C80A201FC8249157FB500F001
3FB512F0A43C347DB343>65 D<B712FEEEFFC017F817FEC69039C0001FFF040713800401
13C0A27013E0A2EF7FF0A6EFFFE0A24C13C0A24C138093380FFE00EE3FFC91B612F017C0
17F89139C00007FE933803FF80040013C018E0EF7FF018F8173FA218FCA618F8A2177FEF
FFF04C13E05E040F13C0B912005F17F0178036337DB23F>I<DBFFE01338021F01FE1378
91B6EA80F8010315E1010F9038E00FF7903A1FFE0001FFD97FF8EB007FD9FFE0143F4849
141F4849140F4890C81207485A1703485A1701123F5B007F1600A349160012FFAB127F7F
1878A2123F7F001F17F818F06C7E6D15016CEE03E06C7F6C6DEC07C06C6DEC0F80D97FF8
EC3F00D91FFE14FE903A0FFFE007FC010390B512F0010015C0021F49C7FC020013F03535
7BB340>I<B712FCEEFFC017F817FEC69039E0003FFF040313C004007F717EEF1FF8717E
841707848319808319C0A419E0AB19C0A419805FA219004D5A170F604D5A4D5AEFFFE004
035B041F5BB848C7FC17F817C004FCC8FC3B337DB244>I<B812FCA4C69038E0001FEE03
FE16011600177E173EA2171EA3923803C01F170FA403071300A2150F153F91B5FCA4ECE0
3F150F1507A21503A592C8FCABB612F8A430337DB238>70 D<912601FFE01370021F01FC
13F091B61201010315C3010F9038C00FFF90393FFE0003D97FF81300D9FFE0147F484914
3F4849141F4890C8120F485A1707485A1703485AA2007F1601A25B94C8FC12FFA90303B6
12C0A2127F7F92C7387FF000A2123FA26C7EA26C7EA26C7E6C7F6C7F6C6D14FFEB7FF8D9
3FFE130390390FFFE00F010390B512E301001580021F9038FE0030020101F090C7FC3A35
7BB345>I<B612E0A4C6EBE000B3B3A7B612E0A41B337DB221>73
D<B600E090387FFFF0A4C601E0C73803F0004D5A4D5AEF3F80057EC7FC5F4C5A4C5AEE0F
E0EE1F804CC8FC167E5EED03F8ED07E04B5A4B7E157F4B7E02E17F02E37F02E77FECFFDF
ED0FFF4A6C7F02FC804A7E4A6C7F4A6C7F707E83163F707E707E84707F82707F707F8417
7F717E717EB6D8E007B512FCA43E337DB245>75 D<B612F8A4C601E0C8FCB3A81778A417
F817F0A31601A21603A21607160F161F167F923803FFE0B8FCA42D337DB235>I<B500E0
93387FFFF86E93B5FCA26E5DC6F1F800D9F7FCED03DFA3D9F3FEED079FA2D9F1FFED0F1F
A201F06D141EA26E6C143CA26E6C1478A26E6C14F0A36E6CEB01E0A26E6CEB03C0A26E6C
EB0780A26E6CEB0F00A26EEB801EA26F6C5AA36F6C5AA26F6C5AA292380FF9E0A26FB45A
A26F5BA26F90C7FCA3B526F000FE011FB512F8A2167C16384D337DB254>I<B500E09138
3FFFFC808080C66D9138003C00808101F77F13F301F17F8101F07F6E7E6E7E6E7E6E7F80
6E7F826E7F6E7F6F7E6F7E6F7E816F138017C06F13E06F13F06F13F8EE7FFCEE3FFE161F
EE0FFF18BC7013FC828282177F173F171FA2170F170717031701B500F01400187C183CA2
3E337DB245>I<913803FF80027F13FC49B6FC0107010113C0903A1FF8003FF0D93FE0EB
0FF8D9FFC0EB07FE48496D7E4890C76C13804980000717C04848ED7FE0A24848ED3FF0A2
003F17F8A2007F17FC49151FA300FF17FEAB007F17FCA26D153FA2003F17F8A36C6CED7F
F0A26C6CEDFFE0000717C06D5C6C17806C6D4913006C6D495AD97FF0EB1FFCD91FF8EB3F
F0903A07FF01FFC0010190B5C7FC6D6C13FC020713C037357BB342>I<B712F8EEFF8017
E017F8C69039E0007FFCEE0FFE707E701380A27013C0A218E0A718C0A24C1380A24C1300
4C5AEE7FFC91B612F017C04CC7FC02E0C9FCB3B612E0A433337DB23C>I<D90FFC137090
397FFF80F048B512E1000714FB390FF803FF391FE0007F4848133F49130F007F140790C7
FC1503481401A36D1300A27F6D140013F8387FFFC014FCECFFE06C14F86C14FE816C1580
000315C06C15E06C6C14F0131F010014F8140F9138007FFC153F151F150F00F01407A215
03A27EA216F86C14076C15F07E6DEB0FE001E0131F01FEEB7FC000FDB61200D8F87F5BD8
F01F13F8D8E00113C026357BB331>83 D<003FB812F8A4D9F003EB801FD87F80ED03FC01
001501007E1600007C177CA20078173CA400F8173E48171EA4C71600B3A9011FB612F0A4
37327DB13E>I<B600E090B512F8A4C601E0C8EAF800B3B0017F15016E5DA2013F4B5A6E
1407011F5E6D6C140F6D6CEC3F806D6C6C01FFC7FC6D9038F007FE6D6CB512F8021F5C02
0714C09126007FFCC8FC3D347DB244>I<B66C90381FFFFCA4000101E0C8EA7E006C177C
6E15FC017F5E6E1401A2013F5E6E1403011F5E6E1407010F5E6E140F6D5E81171F6D93C7
FC6F5B6D153E6F137E6D157C6F13FC027F5C811601023F5CEDFC03021F5CEDFE07020F5C
EDFF0F6E5C168F169F6E91C8FC16FF6E5BA26E5BA26F5AA36F5AA26F5AA26F5AA23E347E
B243>I<B66CB639800FFFFCA400019026C0000101C0C7EA1F001B1E6E6F143E6C6F163C
A26E6E6C147C017F19786E4A6C14F8013F61A26E496D1301011F616E497F010F03CF4A5A
A26E01076D13076D03875DA29226800F03EB800F6D96C7FCDBC01F6E5A6DDA1E01141EA2
DBE03EECE03E6DDA3C00143CDBF07C14F0027F0178017F5BA2DBF8F8ECF8F8023F49013F
5BA2DBFDE0EB1FFD021F5F03FF15FF6E496D5BA36E496D5BA26E90C76C90C8FCA36E486E
5AA24B140002005EA20378157856347EB25B>I<EB7FFE0003B512E04814F8390FF00FFC
391FF803FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF0
7F000F1300EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB512
1F0003EBFC0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC91387F
FF8001FDB512E09039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA2
17E0A917C0A216FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C0
7F13809026800FF8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE48
48487EEA0FF8EA1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07
807F6C6C130F000FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC2121
7DA027>I<ED01FC15FFA4150F1507ADEB07FE90383FFFC790B512F70003EB01FF3907FC
003F4848131F4848130F48481307A2127F5BA212FFA9127FA27F123F150F6C6C131F6C6C
133F6C6C497E2603FE03B512E0C6B512E7013F1387903807FC072B347DB331>I<903803
FF80013F13F090B512FC48EB03FE3907FC007F4848EB3F804848EB1FC05B003FEC0FE012
7F5B16F012FF150790B6FCA301C0C8FCA4127F7F123F16F06C7E000F14016C6CEB03E0D8
03FEEB0FC03A01FF807F806C6CB51200011F13FC010313E024217EA029>I<EC3FE09038
03FFF8010F13FC90383FF1FE90387FC3FFEBFF83481303A2EA03FEEC01FEA2EC00781500
A7B512FEA4D803FEC7FCB3A7387FFFF8A420347EB31B>I<16F890390FFC07FE90387FFF
9F48B6127F3907FC0FFC380FF003001F14FED9E001133E003FECFF1C1600A6001F5CEBF0
03000F5C3907FC0FF890B512E0486C1380D90FFCC7FC48C9FCA37F7F90B512F015FE6CEC
FF8016E06C15F06C15F84815FC121F393F80001F48C7EA03FE481401481400A46C14016C
6CEB03FC6C6CEB07F86C6CEB0FF0D80FFCEB7FE00003B61280C6ECFE00010F13E028327E
A12C>I<EA01FC12FFA4120F1207ADEC03FF020F13C0023F13F09138FC0FF89039FDE007
FCEBFFC04A6C7E1400A25BA25BB2B539E07FFFF0A42C347DB331>I<EA03F0487E487E48
7EA66C5A6C5A6C5AC8FCA8EA01FC12FFA4120F1207B3A5B512C0A412357DB418>I<147E
14FF4913804913C0A66D13806D1300147E91C7FCA8EC1FC0EB0FFFA41300147FB3AC121E
123FEA7F80EAFFC0ECFF80A201C113005C387F87FC6CB45A6C13E0000390C7FC1A4485B4
1B>I<EA01FC12FFA4120F1207B3B3A6B512E0A413347DB318>108
D<2703F803FEEB03FE00FF903B1FFFC01FFFC0027FD9E07F7F913BF81FF0F81FF0903CF9
E00FF9E00FF8260FFBC0EBFBC06CB4486CB4486C7E02001400495CA3495CB2B500E0B500
E0B512E0A443217CA04A>I<3901F803FF00FF010F13C0023F13F09138FC0FF89039F9E0
07FC380FFBC06CB4486C7E1400A25BA25BB2B539E07FFFF0A42C217DA031>I<903803FF
80011F13F090B512FE48EB01FF3A07FC007FC0D80FF0EB1FE0001F15F049130F003F15F8
491307007F15FCA300FF15FEA8007F15FCA26D130F003F15F8001F15F06D131F6C6CEB3F
E06C6CEB7FC03A01FF01FF006CEBFFFE013F13F80103138027217EA02C>I<3901FC07FC
00FF90387FFF8001FDB512E09039FFF01FF89138C007FC000F90380003FE6C4880496D13
80A26F13C0A3EE7FE0A9EEFFC0A34B1380A26D4913006D495A9138C00FFC9138F03FF801
FDB512E0D9FC7F1380DA0FF8C7FC91C9FCABB512E0A42B307EA031>I<3901F81F8000FF
EB7FF0ECFFF89038F9E3FC9038FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC006049
1300B1B512F0A41F217EA024>114 D<9038FFE1C0000713FF5A383F803F387E000F1407
5A14037EA26C6CC7FC13FCEBFFE06C13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB
007F140F00F0130714037EA26C14E06C13076CEB0FC09038C01F8090B5120000F913FC38
E03FE01C217DA023>I<133CA5137CA313FCA21201A212031207001FB51280B6FCA3D807
FCC7FCB0EC03C0A79038FE078012033901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I<
D801FC14FE00FF147FA4000F140700071403B21507A2150F151F6C6C497E6C6C01FB13F0
6CEBFFF3013F13C3903807FE032C217DA031>I<B53B83FFFC03FFE0A43D07FC001FE000
3E00183C6D167C00036F1378033F14F86C6C6E5B157F9139807BFC016C5FDAC0FB130301
7FD9F1FE5B14C19139E1E0FF07013F5E9139F3C07F0F011F038FC7FC14F7903A0FFF803F
DEA29238001FFE6D5DA26D486D5AA24A130701015DA26D486D5A4A13013B217EA040>
119 D<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D14806C4A5AA2ECC007017F
5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C01071378ECFEF801035B14
FF6D5BA26D5BA26E5AA26EC8FCA2141EA25CA2147C003E1378007F13F8486C5A1381EB83
E0EB87C0495AD87F3FC9FCEA3FFEEA1FF8EA07E02A307EA02F>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmti9 9 73
/Fg 73 123 df<DB07F8133EDB1FFFEBFF80923A7E0783E3C0923AF803C7C1E0912601F0
0F1387DA03E013CFA2DA07C090389F07C09339071F0380040090C7FC4A5A173EA3141F92
C7127E177CA35C143E011FB712F8A3D9007EC700F8C7FC147C16015FA214FC5C16035FA2
13015C16075FA313034A130F5FA313074A131F94C8FCA2130FA24A5B163EA2131F91C712
7E167CA2133E5E0038131C267E3C3F5B15013AFE787F03E000FC017E5B3AF8F03C0780D8
78E0011FC9FC393FC01FFC390F0003F03B4582B42F>11 D<923803FF80031F13F092383F
00F803F8133C4A48133E4A48137E17FE4A5A17FC17384A481300A3141F92C8FCA55C143E
011FB612E0A217C09039007E0007147C160F1780A214FC4A131F1700A301015C4A133EA3
167E0103147C5C1718EEFC1CEEF83C010715385C1778177016F0010F15F04AEBF8E01679
EE3FC0011FEC0F0093C7FC91C9FCA3133EA21238EA7E3C137CEAFE7812FC485AEA79E0EA
3FC0000FCAFC2F4582B42B>I<ED03FE92391FFFC7C092387E03EF9239F800FF80913801
F003EC03E0A2DA07C01400EE01DFEE001F4A485B173EA3021F147E92C7127CA317FC4A5C
143E011FB6FCA25F9039007E0001147C16035FA214FC4A13075FA30101140F4A5CA3161F
010392C7FC5C1706EE3F07EE3E0F0107150EA24A141E171C163C010F153C4AEB3E38EE1E
78705AEE03C0011F91C8FC91CAFCA3133EA21238EA7E3C137CEAFE7812FC485AEA78E0EA
3FC0000FCBFC324582B42D>I<DB03FE903803FFC092271FFFC01F13F8923B7E03E07F00
7C9227F800F0F8131E912801F003F1F0131FDA03E0D9F3E0133FDDF7C0137FDA07C013E7
DC01CF147E9326000F80131C020F17004B131F95C8FCA2141F92C7FC5F173EA25C143E01
1FB912F0A21AE0D9003EC7387C0003147E027C160705FC14C05FA202FC160F4A17801601
5F191F010118005C16034D5B193E13034A170C0407EC7E0E4DEB7C1E1A1C13075C040F15
384D13781A78010FEF7C704AEE3CF0041FEC1FE094C7EA078096C7FC49C7FC163EA3013E
5C0038131C007E013F1378013C14F83AFE7C7F01F026FC787E5B3AF8F03C07C0D878E049
5A273FC01FFECAFC390F0003F8484582B444>I<123812F87EA2127E123E123F7EEA0F80
A21207EA03C0A21201EA00800A0F6AB327>18 D<3803800E390FE03F80001F137FA53807
601D00001301EBE00301C01300A200015BEB80060003130E48485A00061318000E133848
5B485B48485A48485A00C090C7FC191773B327>34 D<EA0380EA0FE0121FA5EA07601200
13E013C0A2120113801203EA07001206120E5A5A5A5A5A0B176FB318>39
D<1560EC01E0EC03C0EC0700140E5C143C5C5C495A495A13075C49C7FC5B131E5B137C13
7813F85B12015B12035B1207A25B120FA290C8FC5AA2121E123EA3123C127CA31278A212
F8A35AAF12701278A21238A2123C121CA27EA27E6C7E12011B4A75B71F>I<14301438A2
8080A2140F801580A2140315C0A4140115E0A81403A415C0A31407A31580140FA315005C
A3141E143EA2143C147CA25CA25C13015C13035C13075C130F91C7FC131E133E133C5B5B
485AA2485A485A48C8FC121E5A12705A5A1B4A7EB71F>I<EA0380EA0FE0121FA5EA0760
120013E013C0A2120113801203EA07001206120E5A5A5A5A5A0B177A8718>44
D<B51280A46C1300110579911B>I<121C127F12FFA412FE12380808778718>I<17E0EE01
F0A2EE03E0A2EE07C0160F1780EE1F00A2163EA25EA25E15015E4B5AA24B5AA24B5A151F
93C7FC153EA25DA25DA24A5A14035D4A5AA24A5AA24AC8FCA2143E147E147C5CA2495AA2
495A13075C495AA249C9FCA2133EA25B13FC5B485AA2485AA2485AA2485A121F90CAFC12
3EA25AA25AA25A5A2C4B7EB727>I<EC1FC0EC7FF0903801E0F8903807C03CEB0F00011E
131E133E013C131F5B13F85B1201A2485AA20007143F5BA2120F153E49137E121FA348C7
12FCA4007EEB01F8A4007CEB03F012FCA2EC07E0A24814C0A2EC0F80A2EC1F00A2141E5C
0078137C5C387C01F0383C03E0381F0F80D80FFEC7FCEA03F8203477B127>I<EC018014
03A21407140FEC1F005C14FF5BEB1FFEEB7FBEEB7E7E1320EB007CA214FCA25CA21301A2
5CA21303A25CA21307A25CA2130FA25CA2131FA291C7FCA25BA2133EA2137EA2137C13FC
B512FCA3193277B127>I<EC0FE0EC3FF8ECF03E903803C01F903907800F80EB0F00011E
EB07C0131C5BD978C013E0EB70E0EBF06013E0120113C0ECE00F000301C013C013801381
EC801F01831480903887003F018E1400D801FC137ED800F05B90380001F84A5A4A5A4A5A
4AC7FC147E14F8EB03E0EB0FC049C8FC133E13784848EB0380485A4913074848140048C7
5A121E001C141E003F143E01F85B397DFF80F838781FFF486C5BD8E0035B6D1380D9007E
C7FC23347AB127>I<150E151FA2153F153EA3157E157CA215FC15F8A2140115F0A2EC03
E0A3EC07C0A2EC0F80A2EC1F00A2143EA25C147814F85C1301903803E0E0ECC1F0EB0781
EB0F83EC03E0131E133CEB7C0701F813C0EA01F0EA03E03807C00FD80F801380EA1FFC38
3FFFCF48EBFF82D8F00313FF3860003FC7EA1FF8EC3F00143EA3147E147CA314FC5CA414
6020417DB127>52 D<010614C090380FC00F91B51280160015FC4913F015C0D91CFEC7FC
91C8FC133C1338A313781370A313F0EBE0FE9038E3FF809038EF03C03901FC01E001F87F
EBF000497F485A5BC8FCA41401A4003C130300FC5CA34A5A5A00E0495AA24A5A4AC7FC6C
137E00705B387801F8383E07F0381FFFC06C90C8FCEA03F8223478B127>I<D9E0F81338
EBE3FC2601EFFE137801FF14F048EC01E09038FE0E03D807F814C09039F0060F80390FC0
071F90398003FF00391F0001EF001EEB001E003E5C123C485C15F8485C4813015DC71203
4A5AA24A5AA2141F92C7FC5C143E147EA25CA2495AA3495AA213075CA2130F5CA2131FA2
5C133FA391C8FCA2131C253476B127>55 D<1370EA01FC1203A413F8EA00E01300B0121C
127F5AA45A12380E20779F18>58 D<000FB8128018C0A21880CCFCACB812F883A25F3214
779C3B>61 D<161C163CA2167C16FCA21501821503A2ED077E150F150E151CA21538A215
7015F015E0EC01C0A2913803807F82EC0700A2140E141E141C5CA25CA25C49B6FCA25B91
3880003F49C7EA1F80A2130E131E131C133C13385B13F05B12011203D80FF0EC3FC0D8FF
FE903807FFFEA32F367BB539>65 D<0107B612C04915F017FC903A003F8000FE177FEF3F
8092C7121FA24A15C0A2147EA214FE18804A143FA20101ED7F00177E4A5C16010103EC03
F04C5A4AEB1FC091B6C7FC495C9139F0007F804AEB0FC0707E010F6E7E834A1301A2011F
81A25CA2133F5F91C71203A2494A5AA2017E4A5A4C5A01FE4A5A4CC7FC49EB01FE0001EC
07FC007FB612F0B712C04BC8FC32337BB236>I<DB1FF013C09238FFFC010203EBFF0391
3A0FF00F878091393F8003CF9139FE0001EF4948EB00FFD903F01500D90FE080495A4948
8091C8123E137E13FE485A4848153CA2485AA248481538A2485A94C7FC123F5BA3127F90
CBFCA412FEA2EE03C0A25F127E160794C7FC5E160E007F151E6C5D5E6C6C147016F06C6C
495A6C6CEB07C06C6C49C8FC6C6C133E6CB413FC90387FFFF0011F13C0D903FEC9FC3237
75B437>I<0107B612C04915F017FC903A003F8001FEEE007FEF1F8092C7EA0FC0EF07E0
5CEF03F0147E170102FE15F8A25CA21301A25CA2130317035CA2130718F04A1407A2130F
18E04A140F18C0011F151F18805CEF3F00133F177E91C85AA2494A5A4C5A017E4A5A4C5A
01FE4A5A047EC7FC49495A0001EC0FF8007FB612E0B7C8FC15F835337BB23A>I<0107B7
12F05B18E0903A003F80001F1707170392C7FC17015C18C0147EA214FEA24A130EA20101
EC1E03041C13804A91C7FC163C13035E9138F001F891B5FC5B5EECE0011500130F5E5C17
07011F01015BEEC00E0280141E92C7121C133F173C91C812381778495DA2017E14014C5A
01FE14074C5A49141F00014AB45A007FB7FCB8FC94C7FC34337CB234>I<0107B712E05B
18C0903A003F80003F170F170792C7FC17035C1880147EA214FEA25C161C0101EC3C0704
3813004A91C7FCA20103147816704A13F0150349B5FCA25EECE003130F6F5A14C0A2011F
13035E1480A2013F90C9FCA291CAFCA25BA2137EA213FEA25B1201387FFFFCB5FCA23333
7CB232>I<92391FE001809238FFF8030207EBFE07913A1FF01F0F0091393F80079F9139
FE0003DFD901F86DB4FCD907F05C49481300495A4948147E49C8127C137E13FE485A4848
1578A2485AA248481570A2485A94C7FC123F5BA3127F90CBFCA400FE91383FFFFCA25F92
38003F8094C7FCA2007E5DA2167EA2007F15FE7E5E6C6C1301A26C6C495A6D13076C6CEB
0F786C6C133E3A00FF01FC3090387FFFF0011F01C0C8FCD903FEC9FC313775B43B>I<01
07B548B512C0495CA2903C003FC0000FF0004B5CA292C75BA24A141F60147EA202FE143F
95C7FC5CA201015D177E5CA2010315FE5F5C91B6FC5B5F9138E00001A2010F14035F5CA2
011F14075F5CA2013F140F5F91C7FCA249141F5F137EA201FE143F94C8FC5B00015D3B7F
FFF01FFFFCB55BA23A337BB239>I<010FB51280A216009038003FC05DA292C7FCA25CA2
147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA2
91C8FCA25BA2137EA213FEA25B1201B512F8A25C21337BB21E>I<0107B590380FFFF05B
19E09026003FC0903803FE004B14F818E092C7485A4DC7FC4A141E177C027E5CEE01E002
FE495A4C5A4A011FC8FC163E010114785E4A485AED07C00103495A4B7EECF03F157F9039
07F1FFE0ECF3E79138E787F0ECEF0790380FFE0302FC7FECF80114E0D91FC07F15004A7F
A2013F147E167F91C77E835B161F017E81160F13FE835B000182267FFFF090B57EB55B95
C7FC3C337BB23B>75 D<0107B512C05BA29026003FC0C7FC5DA292C8FCA25CA2147EA214
FEA25CA21301A25CA21303A25CA21307A25CA2130FA25C17E0011F140117C05C1603013F
1580160791C7FCEE0F005B5E017E143EA201FE5CED01FC4913030001EC1FF8007FB6FCB7
FC5E2B337CB230>I<902607FFC0ED7FFC4917FF81D9003F4B1300611803023BED077CA2
027BED0EFC610273151C1838DAF1F01439F071F014E118E10101ED01C36102C1EC0383EF
070301031607050E5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C090C7FC13
0EEE0380011E017C5C933807003E011C140EA2013C4A137E187C01385C5E017816FC6F48
5B1370ED3FC001F0EC80016000011500D807F81503277FFF803E90B512C0B5EB3C01151C
46337BB245>I<902607FF8090383FFFC0496D5BA2D9001F913803F8004A6C6D5A6060EC
3BF0027B140360EC71F8A202F11407DAF0FC91C7FC14E0A20101017E5B170E14C0810103
151EEE801CEC801FA20107ECC03C030F1338140016E049010713781770010E14F0150301
1E15F0705A011C1301A2013C14FD03005B133816FF0178147F5F0170143FA213F070C8FC
1201EA07F8267FFF807FB5140EA23A337BB239>I<ED1FE0913801FFFC913807E03F9139
1F800FC091393E0003E002F8EB01F0495A4948EB00F8494814FC4948147C49C8127E133E
017E153E49153F485AA2485A12075B120F5B121F177F5B123FA348C912FEA4EE01FC12FE
EE03F8A217F0160717E0160F007E16C0EE1F80A2EE3F006C157E5E5E6C6C495A000F4A5A
6D495A0007EC1F806C6C013EC7FCD801F813FC39007E07F090383FFF80D907FCC8FC3037
75B43B>I<0107B612C04915F883903A003F8001FEEE003FEF1F8092C713C0170F5C18E0
147EA214FEEF1FC05CA201011680173F4A1500177E010315FE5F4AEB03F8EE07E00107EC
3FC091B6C7FC16F802E0C9FC130FA25CA2131FA25CA2133FA291CAFCA25BA2137EA213FE
A25B1201387FFFF0B5FCA233337CB234>I<ED1FE0913801FFFC913807E03F91391F800F
C091393E0007E002F8EB03F0494813014948EB00F8494814FC4948147C49C8127E133E13
7E49153F12015B485A12075B120FA2485A177FA2485AA348C912FEA4007EED01FC12FE17
F8160317F0160717E0160F007E16C0EE1F80A2023EEB3F00003E9038FF807E263F01C113
7C90390380C0F8001F903800C1F0D80F87EBC3E001C6EBE7C00007ECFF80D803E649C7FC
D801FE5B3B007F07F0018090383FFFE0D907FC130390C714005E1401160EEDF01EEDF87E
EDFFFC5EA26E5B5E6F5A031FC7FC304475B43B>I<0107B512FE49ECFFC017F0903A003F
8007F8EE01FCEE007E92C7127F835C1880147EA214FEEF7F005CA2010115FE5F4A13015F
01034A5AEE0FC04A495A04FEC7FC49B512F016C09138E003E0ED01F8010F6D7E167C4A13
7EA2131FA25CA2013F14FEA291C7FCA24913015E137EEF01C001FE150318805B00011607
277FFFF0001400B5ECFE0EEE7E1CC9EA1FF8EE07E032357BB238>I<913901FC01809138
0FFF03023F13C791387E07EF903A01F801FF0049487E4A7F495A4948133E131F91C7FC5B
013E143CA3137E1638A293C7FC137FA26D7E14E014FE90381FFFC06D13F86D7F01017F6D
6C7E020F7F1400153F6F7E150FA4120EA2001E5D121CA2151F003C92C7FCA2003E143E5D
127E007F5C6D485A9038C007E039F3F80FC000F0B5C8FC38E03FFC38C00FF029377AB42B
>I<0003B812C05A1880903AF800FC003F260FC001141F0180150F01005B001EEE070014
03121C003C4A5BA200380107140E127800705CA2020F141E00F0161CC74990C7FCA2141F
A25DA2143FA292C9FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25C497E
001FB512F05AA2323374B237>I<3B3FFFF801FFFE485CA2D801FEC7EA1FC049EC0F8017
0049140EA2161E120349141CA2163C1207491438A21678120F491470A216F0121F495CA2
1501123F90C75BA215035A007E5DA2150712FE4892C7FCA25D150E48141E151C153C1538
15786C5C5D007C1301007E495A003EEB0F806C011EC8FC380FC0FC6CB45A000113E06C6C
C9FC2F3570B239>I<B500C090383FFF80A3D807F8C73807F80049EC03E05F00034B5A94
C7FC5E160E5EA25E167816705E7F00014A5A15035E4BC8FCA2150E151E151C5D7F5D0000
14F05D4A5AA24A5AA24AC9FC140EA26D5A137E5C147814705CA2EB7FC0A25C91CAFCA213
3EA2133C1338313570B239>I<B53CC03FFFF003FFF8601480280FF00001FCC7EA7F806C
484AEC3E00193CA219386115036115074E5A030F140361031D4AC7FCA2DB38FC130EA203
705C15F06C6C01E05C140103C05CDA038014F060DA0700130160020E4A5AA24A4AC8FCA2
4A140E147802705C5C5FD9F1C014781770D9F3805CA201F7C7EA7FC0A201FE5DA26C4892
C9FCA249147E5B167C5B1678491470453570B24D>I<902607FFFE90387FFFC0A3902600
1FF090380FF80003C014C0020F5D6F91C7FC0207141E6F5B5F02035C6F485A02015C6F48
5A4CC8FC0200130EEDFE1EED7E3C5EED7FF06F5A5E5E151F82A24B7E157F1577EDE7F0EC
01C7EC038302077FEC0F01021E7F143CEC38004A7F4A137E495A0103147F49487F49C77F
131E49141F017C8113FC00074B7EB5D88003B57EA295C7FC3A337CB239>I<B500E09038
1FFFE0A218C0D803FCC73803FC006C4815F06D15C04C5A000093C7FC6D140E5E017E143C
017F5C5E6D5C6E485A4B5A011F13074BC8FCECC01E151C010F5B6E5A15F0903807E1E0EC
F3C05DD903F7C9FC14FEA26D5A5CA25C1303A35C1307A35C130FA35C131FA2133F380FFF
FE5AA2333371B239>I<EC1FFE143FA215FCEC3C00147C1478A314F85CA313015CA31303
5CA313075CA3130F91C7FCA35B131EA3133E133CA3137C1378A313F85BA312015BA31203
5BA312075BA3120F90C8FCA35A121EA3123E123CA3127C1278EA7FF8A212FFA21F4B7DB7
18>91 D<EC1FFE143FA215FCEC003C157CA21578A215F8A215F0A21401A215E0A21403A2
15C0A21407A21580A2140FA21500A25CA2141EA2143EA2143CA2147CA21478A214F8A25C
A21301A25CA21303A25CA21307A25CA2130FA291C7FCA25BA2131EA2133EA2133CA2137C
A2EA7FF8A212FFA21F4B82B718>93 D<EB03F0EB0FF890383E1C6090387C0FF0EBF807EA
01F0EA03E00007EB03E0EA0FC0A2381F800715C0EA3F00A2140F481480127EA2141F00FE
14005A1506EC3F07EC3E0F150E147E007C141EECFE1CEB01FCD83C03133C393E07BE3839
1F0E1E783907FC0FF03901F003C0202278A027>97 D<137EEA0FFE121F5B1200A35BA212
01A25BA21203A25BA21207A2EBC3E0EBCFF8380FDC3EEBF81F497E01E01380EA1FC01380
15C013005AA2123EA2007E131F1580127CA2143F00FC14005AA2147EA25CA2387801F85C
495A6C485A495A6C48C7FCEA0FFCEA03F01A3578B323>I<14FCEB07FF90381F07809038
3E03C0EBFC013801F8033803F0073807E00F13C0120F391F80070091C7FC48C8FCA35A12
7EA312FE5AA4007C14C0EC01E0A2EC03C06CEB0F80EC1F006C137C380F81F03803FFC0C6
48C7FC1B2278A023>I<ED0FC0EC03FFA21680EC001FA31600A25DA2153EA2157EA2157C
A215FCA2903803F0F8EB0FF8EB3E1DEB7C0F496C5AEA01F0EA03E000071303D80FC05BA2
381F8007A2D83F005BA2140F5A007E5CA2141F12FE4891C7FC1506EC3F075DEC3E0E147E
007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C022
3578B327>I<EB03F8EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F8014
07D83F0013005C007E133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2
007CEB0780EC1F00003C133E6C13F8380F03E03807FF80D801FCC7FC1A2277A023>I<15
1FED7FC0EDF0E0020113F0EC03E3A2EC07C316E0EDC1C091380FC0005DA4141F92C7FCA4
5C143E90381FFFFEA3D9007EC7FC147CA414FC5CA513015CA413035CA413075CA3130FA2
5CA3131F91C8FCA35B133E1238EA7E3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC2445
82B418>I<143FECFF80903803E1E6903807C0FF90380F807FEB1F00133E017E133F4913
3EA24848137EA24848137CA215FC12074913F8A21401A2D80FC013F0A21403120715E014
07140F141F3903E03FC00001137FEBF0FF38007FCF90381F0F801300141FA21500A25C14
3E1238007E137E5C00FE5B48485A387803E0387C0F80D81FFFC7FCEA07F820317CA023>
I<EB0FC0EA03FFA25CEA001FA391C8FCA25BA2133EA2137EA2137CA213FCA29038F83F80
ECFFE03901FBE0F09038FF80F8EC007849137C485A5B5BA2484813FC5D5BA2000F13015D
1380A2001F13035DEB0007EDC0C048ECC1E0020F13C0003E1481A2007E1483ED0380007C
1407160000FC140E151E48EB07F80070EB01F023357BB327>I<EB0180EB07E0A2130FEB
07C0EB038090C7FCABEA01F0EA03FCEA0F1E120E121C123C1238EA783E1270A2137EEAF0
7CEA60FCC65AA212015BA212035BA2000713C0EBC1E0000F13C01381A21383EB03801307
1400130E131EEA07F8EA01F013337AB118>I<1538157C15FCA315701500AB143EECFF80
903801E3C090380383E0EB0701130FEB0E03131C133C133814071378013013C01300140F
A21580A2141FA21500A25CA2143EA2147EA2147CA214FCA25CA21301A25CA213035C1238
387E07C0A238FE0F804848C7FCEAF83EEA787CEA3FF0EA0F801E4283B118>I<EB0FC0EA
01FF5A5CEA001FA391C7FCA25BA2133EA2137EA2137CA213FCA2491378EC01FE0001EB07
8FEC0E0F9038F01C3F143800031370ECE03E9038E1C01C9038E38000D807E7C7FC13EE5B
13F8120F13FFEB9FC0EB83F0EA1F81EB80F81300150C48141E151C123EA2007E143C1538
127C157800FCEB787015E048EB3FC00070EB0F8020357BB323>I<133FEA07FF5A13FEEA
007EA3137CA213FCA213F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380A2
121FA21300A25AA2123EA2127EA2127C1318EAFC1C133CEAF838A21378137012F013F0EA
F8E01279EA3FC0EA0F00103579B314>I<2703C003F8137F3C0FF00FFE01FFC03C1E783C
1F07C1E03C1C7CF00F8F01F03B3C3DE0079E0026383FC001FC7FD97F805B007001005B5E
137ED8F0FC90380FC00100E05FD860F8148012000001021F130360491400A200034A1307
6049013E130FF081800007027EEC83C0051F138049017C1403A2000F02FC1407053E1300
49495CEF1E0E001F01015D183C010049EB0FF0000E6D48EB03E03A227AA03F>I<3903C0
07F0390FF01FFC391E787C1E391C7CF01F393C3DE00F26383FC01380EB7F8000781300EA
707EA2D8F0FC131F00E01500EA60F8120000015C153E5BA20003147E157C4913FCEDF818
0007153C0201133801C013F0A2000F1578EDE070018014F016E0001FECE1C015E390C7EA
FF00000E143E26227AA02B>I<14FCEB07FF90381F07C090383E03E09038FC01F0EA01F8
3903F000F8485A5B120F484813FCA248C7FCA214014814F8127EA2140300FE14F05AA2EC
07E0A2007CEB0FC01580141FEC3F006C137E5C381F01F0380F83E03803FF80D800FCC7FC
1E2278A027>I<011E137C90387F81FF9039F3C387C09039E3EF03E03901E1FE01D9C1FC
13F0EBC3F8000313F0018314F814E0EA07871307000313C01200010F130316F01480A201
1F130716E01400A249EB0FC0A2013EEB1F80A2017EEB3F00017F133E5D5D9038FF81F090
38FDC3E09038F8FF80027EC7FC000190C8FCA25BA21203A25BA21207A25BB5FCA325307F
A027>I<903803F01890380FF83890383E1C7890387C0EF89038F807F0EA01F0EA03E000
071303D80FC013E0A2EA1F801407D83F0013C0A348130F007E1480A300FE131F481400A3
5C143E147E127C14FE495AEA3C03EA3E07EA1F0E3807FCF8EA01F0C7FC13015CA313035C
A21307A25C48B5FCA25C1D3078A023>I<3903C00FC0390FF03FF0391E78F078391C7DE0
3C393C3FC0FC00381380EB7F00007814F8D8707E13701500EAF0FC12E0EA60F812001201
A25BA21203A25BA21207A25BA2120FA25BA2121FA290C8FC120E1E227AA020>I<EB03F0
EB1FFCEB3C1EEB780FEBF007EA01E0140F0003131F13C0A2EBE00414007FEBFF8014E06C
13F06C13F8EB7FFC1307EB00FE147E143E123800FC133CA3147C00F013784813F0EAF001
387803E0383C0F80381FFE00EA03F818227AA01F>I<1303EB0F80A3131FA21400A25BA2
133EA2137EA2137C387FFFF8A2B5FC3800F800A21201A25BA21203A25BA21207A25BA212
0FA25B1460001F13F014E01300130114C01303001E1380EB07005BEA0F1EEA07F8EA01E0
15307AAE19>I<EA01F0D803FC1307D80F1E5B000E5C121C123C00385CD8783E133E1270
A2017E137ED8F07C137CEA60FCC65A15FC00015C5BA2140100035C13E0166002031370ED
E0F0D807C014E0A20003EB07E116C09038E00FC1EC1FC3000190383FE3809038F071E73A
007FE0FF0090381F803C24227AA029>I<01F01338D803FC13FCEA0F1E120E121C123C00
38147CEA783E0070143CA2137ED8F07C1338EA60FCC65A1578000114705BA215F0000314
E05BA2EC01C0A2EBC003158014071500EBE00EA26C6C5A3800F878EB7FE0EB1F801E227A
A023>I<D801F01538D803FC010E13FCD80F1E131E000E143E121C123C0038027E137CD8
783E137C0070163CA2017E13FCD8F07C491338EA60FCC65A0201147800014A137013F0A2
020314F0000316E001E05BA2160117C001C013C00207EB0380A29039E00FE0071700021F
130E3A01F03DF01E3A00F878F83C90393FF03FF090390FC00FC02E227AA033>I<011F13
7C90387FC1FF3A01E1E787803A03C0F703C0903880FE0FEA07004813FC000E1580001E90
38F80700001C91C7FC1301003C5B1218120013035CA31307A25C1506010F130F150E1480
0038141ED87C1F131C00FC143C1538013F5B39F07FC0E03970F3C3C0393FE1FF80260F80
7EC7FC22227CA023>I<13F0D803FC1307D80F1E130F000E141F121C123C0038143FD878
3E133E1270A2017E137ED8F07C137CEA60FCC65A15FC000114F85BA21401000314F013E0
A2140315E0EA07C0A20003130715C0EBE00F141F0001133F9038F07F8038007FEFEB1F8F
EB001F1500A25C003E133E007E137E147C5C007C5BEA7001495A38380780D83C1FC7FCEA
0FFCEA07F020317AA025>I<903807801C90381FE03C90383FF038017F13789038FFF8F0
3901F07CE0EBE01F3903C003C09038800780EC0F00C7121E141C143C5C5C495AEB07C049
5A011EC7FC5B5B4913704913F0000114E0485A38078001390FC003C0381FF80790383E0F
80393C1FFF00127838700FFE38F007F838E001E01E227CA01F>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmsy10 10 5
/Fh 5 104 df<EB0380497EA7397803803C00FC147E00FE14FE397F8383FC393FC387F8
390FE38FE03903FBBF803900FFFE00EB3FF8EB0FE0A2EB3FF8EBFFFE3903FBBF80390FE3
8FE0393FC387F8397F8383FC39FE0380FE00FC147E0078143C390007C000A76D5A1F247B
A62A>3 D<D93F801508D9FFF0151C00037F4813FE487F4814C09026C07FE0143C273F00
0FF01438003CD907FC147848EB01FE6E6C6C13F0007091383FC00300F091391FF80FE048
6EB5FC030314C06F14806F6C1300EE3FFC0040ED07F036137B9D41>24
D<181EA4181F84A285180785727EA2727E727E85197E85F11F80F10FC0F107F0007FBA12
FCBCFCA26C19FCCCEA07F0F10FC0F11F80F13F00197E61614E5A4E5AA24E5A61180F96C7
FCA260181EA4482C7BAA53>33 D<EC01F8140FEC3F80ECFC00495A495A495AA2130F5CB3
A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E131F80
130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102
D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC
1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA
07F0EAFFC000FCC8FC1D537ABD2A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmtt10 10 62
/Fi 62 122 df<003C131E007F137F481480A66C1400A6007E7FA6003E133EA3003C131E
001C131C191977B32C>34 D<010F133C90381F807EA8013F13FE4A5AA4007FB612F0B712
F8A4003F15F03A007E01F800A5EBFE0301FC5BA6003FB612F0B712F8A46C15F03A01F807
E000A30003130F01F05BA86C486C5A25337DB22C>I<EA0F80EA1FC0EA3FE013F0A213F8
A2121F120F1200A4120113F0A2120313E01207EA0FC0121FEA3F80EA7F0012FE5A5A1270
0D1B71B22C>39 D<143814FC13011303EB07F8EB0FF0EB1FC0EB3F80EB7F0013FE485A48
5A5B12075B120F5B485AA2123F90C7FCA25A127EA312FE5AAC7E127EA3127F7EA27F121F
A26C7E7F12077F12037F6C7E6C7E137FEB3F80EB1FC0EB0FF0EB07F8EB03FC1301130014
38164272B92C>I<127012FC7E7E6C7E6C7EEA0FE06C7E6C7E6C7E6C7E137F7F1480131F
14C0130FEB07E0A214F01303A214F81301A314FC1300AC130114F8A3130314F0A2130714
E0A2EB0FC0131F1480133F14005B13FE485A485A485A485AEA3FC0485A48C7FC5A5A1270
164279B92C>I<147814FCAF007FB612F0B712F8A46C15F0C700FCC7FCAF147825267DAB
2C>43 D<EA0F80EA1FE0EA3FF0EA7FF8A213FCA3123F121F120F120013F8A21201EA03F0
1207EA1FE0EA7FC0EAFF80130012FC12700E17718A2C>I<007FB6FCB71280A46C150021
067B9B2C>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B708A2C>I<1507ED
0F80151FA2153F16005D157E15FE5D14015D14035DA214075D140F5D141F5D143F92C7FC
5C147E14FE5CA213015C13035C13075C130F5C131F5CA2133F91C8FC5B137E13FE5B1201
5B12035B12075BA2120F5B121F5B123F90C9FC5A127E12FE5AA25A127821417BB92C>I<
EB03F8EB0FFE90383FFF80497F90B57E3901FE0FF03903F803F848486C7EEBE000484813
7EA248487FA248C7EA1F80A2003E140F007E15C0A3007C140700FC15E0AC6C140F007E15
C0A46CEC1F80A36C6CEB3F00A26C6C137E6D13FE00075CEBF0016C6C485A3901FE0FF06C
B55A6D5B6D5BD90FFEC7FCEB03F823357CB32C>I<1307497EA2131FA2133F137F13FF5A
1207127FB5FC13DF139FEA7C1F1200B3AE007FB512E0B612F0A36C14E01C3477B32C>I<
EB0FF890387FFF8048B512E00007804814FC391FF80FFE393FE001FF903880007F48C7EA
3F80007E141F00FE15C0150F6C15E01507A3127E123CC8FCA2150F16C0151F1680153F16
005D15FE4A5A14034A5A4A5A4A5A4A5AECFF804948C7FC495A495A495AEB3FE0EB7F8049
C8FC485A4848EB03C04848EB07E0EA1FE0485A48B6FCB7FCA36C15C023347CB32C>I<EB
0FFC90387FFF8048B512E0000714F84880391FF807FEEBC0004848137F6D7F1680151FA2
6C5A6CC7FCC8FC153F16005D15FE14014A5AEC1FF890381FFFF0495BA215F86D7F903800
07FEEC00FF81ED3F80ED1FC0150FA216E01507A2123C127EB4FC150F16C0A248141F007F
EC3F806DEB7F006C6C5B391FF807FE6CB55A6C5C6C14E0C66C1380D90FFCC7FC23357CB3
2C>I<EC07F04A7E141F143FA2147EA214FCEB01F8A2EB03F0EB07E0A2EB0FC0EB1F80A2
EB3F00137EA25B485AA2485A5B1207485AA2485A48C7FCA2127E5AB712FC16FEA36C15FC
C8EAF800AA91387FFFF091B512F8A36E13F027347EB32C>I<EB07FCEB3FFF90B512C048
8048803907FC07F8390FF001FC48486C7ED83F80137E157F48C77E007EEC1F8012FE5AED
0FC0A416E0A37E127E007F141F7E6D133F6C6C137F390FF001FF3807FC0F6CB6FC6C14F7
6C14C7013F130FD90FF813C090C7FCA2151F1680153F1600000F5C486C137E486C13FE4A
5A4A5A14079038801FF0391FE07FE090B55A6C91C7FC6C5B000113F838007FC023357CB3
2C>57 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00C7FCAE121FEA3F80EA7FC0
EAFFE0A5EA7FC0EA3F80EA1F000B2470A32C>I<EA0F80EA1FC0EA3FE0EA7FF0A5EA3FE0
EA1FC0EA0F80C7FCAEEA0F80EA1FC0EA3FE0127F13F0A4123F121F120F1201120313E012
07EA0FC0A2EA3F80EA7F005A5A12F812700C3071A32C>I<14FE497EA4497FA214EFA213
0781A214C7A2010F7FA314C390381F83F0A590383F01F8A490387E00FCA549137E90B512
FEA34880A29038F8003FA34848EB1F80A4000715C049130FD87FFEEBFFFC6D5AB514FE6C
15FC497E27347EB32C>65 D<007FB512E015F8B612FE6C8016C03903F0003FED0FE0ED07
F01503A2ED01F8A6ED03F0A21507ED0FE0ED1FC0EDFF8090B612005D5D15FF16C09039F0
001FE0ED07F0ED03F81501ED00FCA216FE167EA616FE16FC1501ED03F8150FED3FF0007F
B612E016C0B712806CECFE0015F027337FB22C>I<02FF13700107EBE0F84913F9013F13
FD4913FFEBFF813901FE007F4848131FD807F0130F1507485A491303485A150148C7FCA2
5A007EEC00F01600A212FE5AAB7E127EA3007F15F06CEC01F8A26C7EA26C6C13036D14F0
6C6C130716E0D803FC131F6C6CEB3FC03A00FF81FF806DB512006D5B010F5B6D13F00100
138025357DB32C>I<007FB612F0B712F8A37E3903F00001A7ED00F01600A4EC01E04A7E
A490B5FCA5EBF003A46E5A91C8FCA5163C167EA8007FB612FEB7FCA36C15FC27337EB22C
>69 D<007FB612F8B712FCA37ED803F0C7FCA716781600A515F04A7EA490B5FCA5EBF001
A46E5A92C7FCAD387FFFE0B5FC805C7E26337EB22C>I<903901FC038090390FFF87C049
13EF017F13FF90B6FC4813073803FC01497E4848137F4848133F49131F121F5B003F140F
90C7FCA2127EED078092C7FCA212FE5AA8913803FFF84A13FCA27E007E6D13F89138000F
C0A36C141FA27F121F6D133F120F6D137F6C7E6C6C13FF6D5A3801FF076C90B5FC6D13EF
011F13CF6DEB0780D901FCC7FC26357DB32C>I<007FB512F8B612FCA36C14F839000FC0
00B3B3A5007FB512F8B612FCA36C14F81E3379B22C>73 D<387FFFE0B57EA36C5BD803F0
C8FCB3AE16F0ED01F8A8007FB6FCB7FCA36C15F025337DB22C>76
D<D87FE0EB0FFC486CEB1FFEA26D133F007F15FC000F15E001BC137BA4019E13F3A3EB9F
01A2018F13E3A21483A2018713C314C7A201831383A214EFA201811303A214FFEB80FEA3
147C14381400ACD87FF0EB1FFC486CEB3FFEA36C48EB1FFC27337EB22C>I<D87FF0EB7F
FC486CEBFFFEA27F007FEC7FFCD807FEEB07C013DEA213DF13CFA2148013C714C0A213C3
14E0A213C114F0A213C014F8A2147CA3143EA2141E141FA2140F1587A2140715C7A21403
15E71401A215F71400A215FFD87FFC137F487E153FA26C48EB1F8027337EB22C>I<EB7F
FF0003B512E0000F14F848804880EBE003EB800048C7127FA2007E80A300FE158048141F
B3A86C143FA2007E1500A3007F5CA26C6C13FEEBF00790B5FC6C5C6C5C000314E0C66C90
C7FC21357BB32C>I<007FB512C0B612F88115FF6C15802603F00013C0153FED0FE0ED07
F0A2150316F81501A6150316F01507A2ED0FE0ED3FC015FF90B61280160015FC5D15C001
F0C8FCB0387FFF80B57EA36C5B25337EB22C>I<387FFFFCB67E15E015F86C803907E007
FE1401EC007F6F7E151FA26F7EA64B5AA2153F4BC7FCEC01FE140790B55A5D15E0818190
38E007FCEC01FE1400157F81A8160FEE1F80A5D87FFEEB1FBFB5ECFF00815E6C486D5AC8
EA01F029347EB22C>82 D<90381FF80790B5EA0F804814CF000714FF5A381FF01F383FC0
03497E48C7FC007E147F00FE143F5A151FA46CEC0F00007E91C7FC127F7FEA3FE0EA1FFC
EBFFC06C13FC0003EBFFC06C14F06C6C7F01077F9038007FFEEC07FF02001380153FED1F
C0A2ED0FE0A20078140712FCA56CEC0FC0A26CEC1F806D133F01E0EB7F009038FE01FF90
B55A5D00F914F0D8F83F13C0D8700790C7FC23357CB32C>I<007FB612FCB712FEA43AFC
007E007EA70078153CC71400B3AF90383FFFFCA2497F6D5BA227337EB22C>I<D87FF0EB
07FF486C491380A36C486D1300001FC8127CA46C6C5CA76C6C495AA4143E147FA33A03E0
FF83E0A214F7A201E113C3A3000101E35BA201F113C701F313E7A314C1A200005DA201F7
13F71480A301FF13FF017F91C7FC4A7EA4013E133E29347FB22C>87
D<3A3FFF03FFE0484913F0148714076C6D13E03A01F800FE007F0000495A13FE017E5BEB
7F03013F5B1487011F5B14CF010F5B14FF6D5BA26D90C7FCA26D5AA26D5AA2497EA2497E
A2497F81EB0FCF81EB1FC7EC87F0EB3F83EC03F8EB7F01017E7FEBFE00497F0001147E49
137F000380491480151FD87FFEEBFFFC6D5AB514FE6C15FC497E27337EB22C>I<387FFF
FCB512FEA314FC00FCC7FCB3B3B3B512FC14FEA36C13FC17416FB92C>91
D<387FFFFCB512FEA37EC7127EB3B3B3387FFFFEB5FCA36C13FC17417DB92C>93
D<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC01FC381F80000006C77EC8
127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E007F
14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>
97 D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138F07FC09138
801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13
036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F83900F03FC027
337FB22C>I<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A49137E
4848131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F0039
07FE03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>I<EC0FFE4A7EA380EC
003FAAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F90C7FC
007E80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CEC
BFFE6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381FFFC0017F13F048B57E
48803907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E015075A
B7FCA416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001
FF13FF000190B512806C1500013F13FC010F13F00101138023247CA32C>I<EC0FF8EC3F
FE91B5FC4914805B903807FC7F14F090390FE03F0014C092C7FCA6007FB512FEB7FCA36C
5C26000FC0C7FCB3A8003FB512F04880A36C5C21337DB22C>I<ED03F8903907F80FFC90
391FFE3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1CD9C000
1300001F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D481480D99F
FEC7FCEB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F03A3FC0001F
F848C7EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F801303D83F
E0EB0FF8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028387EA42C>
I<EA7FF0487EA3127F1201AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC9138F03F80ECC0
1F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029337FB22C>I<
1307EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007F
B512FCB612FEA36C14FC1F3479B32C>I<140EEC3F80A2EC7FC0A3EC3F80A2EC0E0091C7
FCA748B512804814C0A37EC7120FB3B3A2141F003C1480007E133FB414005CEB01FEEBFF
FC6C5B5C001F5B000790C7FC1A467CB32C>I<EA7FE0487EA3127F1201AA91381FFFF04A
13F8A36E13F0913800FE004A5A4A5A4A5A4A5A4A5A4A5A4AC7FC14FEEBF1FC13F3EBF7FE
90B5FCA2EC9F80EC0FC001FE7FEBFC07496C7E496C7E811400157E811680151F3A7FFFC0
FFFCB500E113FEA36C01C013FC27337EB22C>I<387FFFE0B57EA37EEA0003B3B3A5007F
B61280B712C0A36C158022337BB22C>I<3A7F83F007E09039CFFC1FF83AFFDFFE3FFCD8
7FFF13FF91B57E3A07FE1FFC3E01FCEBF83F496C487E01F013E001E013C0A301C01380B3
3B7FFC3FF87FF0027F13FFD8FFFE6D13F8D87FFC4913F0023F137F2D2481A32C>I<397F
F01FE039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807FEC000F5B
5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C>I<EB07FCEB1FFF017F
13C048B512F048803907FC07FC390FF001FE48486C7E0180133F003F158090C7121F007E
EC0FC0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F6C6CEB7F006D5B6C6C
485A3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247CA32C>I<397FF01FE0
39FFF8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE091380007F049EB03F8
5BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE0
9138E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0B57EA36C5B2736
7FA32C>I<903903FC078090391FFF0FC0017F13CF48B512EF4814FF3807FE07380FF001
48487E49137F4848133F90C7FC48141F127E150F5AA87E007E141FA26C143F7F6C6C137F
6D13FF380FF0033807FC0F6CB6FC6C14EF6C6C138F6D130FEB07F890C7FCAD0203B5FC4A
1480A36E140029367DA32C>I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B3900
3F7FE1ECFF019138FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C
26247EA32C>I<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36CEB
00F0007F140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC00
FE0078147F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000F8
148039701FFC0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1
ED03C0ED07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE023
2E7EAD2C>I<3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F39
00FE03FF90B7FC6D15807F6D13CF902603FE07130029247FA32C>I<3A7FFF01FFFCB514
FE148314016C15FC3A03E0000F80A26D131F00011500A26D5B0000143EA26D137E017C13
7CA2017E13FC013E5BA2EB3F01011F5BA21483010F5BA214C701075BA214EF01035BA214
FF6D90C7FCA26D5A147C27247EA32C>I<D87FFFEB7FFF6EB5FCB515806C16004A7ED807
C0EB01F0A66C6C495AA3143E147FA2D801F0495AECFF87A214F7A201F113C700005D9038
F9E3CFA201FB13EFA3D97BC190C7FC017F13FFA21480A2013F5B90381F007C29247FA32C
>I<3A3FFF03FFF048018713F8A36C010313F03A00FC007E005D90387E01F8013F5BEB1F
83EC87E090380FCFC0903807EF80EB03FF6D90C7FC5C6D5A147C14FE130180903803EF80
903807CFC0EB0FC7EC83E090381F01F0013F7FEB7E00017C137C49137E0001803A7FFF01
FFFC1483B514FE6C15FC140127247EA32C>I<3A7FFF01FFFCB5008113FE148314816C01
0113FC3A03E0000F806C7E151F6D140012005D6D133E137C017E137E013E137CA2013F13
FC6D5BA2EB0F815DA2EB07C1ECC3E0A2EB03E3ECE7C0130114F75DEB00FFA292C7FC80A2
143EA2147E147CA214FC5CA2EA0C01003F5BEA7F83EB87E0EA7E0F495A387FFF806C90C8
FC6C5A6C5AEA07E027367EA32C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmbx12 12 52
/Fj 52 122 df<ED0FFF4AB512C0020F14F0027F80903A01FFF803FC499038C000FE010F
EB00034948497E49485B5C495A4C138001FF6E13005CA3705AEE01F893C8FCA74BB51280
B9FCA5C69038E00003B3B0007FD9FFC1B6FCA538467EC53E>12 D<157F913803FFC0020F
7F4A7F91383FE1F891387F80789138FF007C49143C495A163E4948131EA3130FA3163E16
3C167C16786E13F84B5A4B5A15075E6D6C485A4BC70003B512E0153E15FC6D5B5D4B9139
0007C0004B5E6D6D150F4FC7FC6D6D151E49173E496D5D491778496D15F890261FBFFE4A
5AD93F3F5E9026FE1FFF1403D801FC6E495A00036D5E48486C6D130F000F6F49C8FC001F
6D6D133E48486C6D133C187C007F6D6D5B6F6C485A00FF6E6C485A6FEB87C06F13CFEFFF
806F91C9FC6D6D5B6F49EC01E06F7F6C6CEC3FFF706D13036C6C4A6DEB07C06C6C91B500
F0130FDA800702FCEB1F806C9026E03FF89039FF80FF00000390B5D8F03FEBFFFE6CDBC0
0F5C6C6CDA00035C011F01F8D9007F13E001030180020790C7FC4B477BC557>38
D<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C00F0F788E1F>46
D<EC3FF849B5FC010F14E0013F14F890397FF01FFC9039FFC007FE4890380001FF48486D
1380000716C049147F000F16E049143F001F16F0A2003F16F8A249141F007F16FCA600FF
16FEB3A3007F16FCA56C6CEC3FF8A3001F16F0A2000F16E06D147F000716C06D14FF6C6C
4913806C6D4813006C6D485A90397FF01FFC6DB55A010F14E0010314809026003FF8C7FC
2F427CC038>48 D<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FC
A5264177C038>I<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0
007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A
6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC
4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC
017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0010713
FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16
C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC
15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0
EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80F
FEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA25E5E
5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8
EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A
12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F01FF
EB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC01C7
14C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815E0C8
FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813C012
3E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F1480010F01
FCC7FC010113C02D427BC038>I<4AB47E021F13F0027F13FC49B6FC01079038807F8090
390FFC001FD93FF014C04948137F4948EBFFE048495A5A1400485A120FA248486D13C0EE
7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F89039F9
F01FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A317F85BA4127F
A5123FA217F07F121FA2000F4A13E0A26C6C15C06D4913806C018014006C6D485A6C9038
E01FFC6DB55A011F5C010714C0010191C7FC9038003FF02D427BC038>I<121E121F13FC
90B712FEA45A17FC17F817F017E017C0A2481680007EC8EA3F00007C157E5E00785D1501
4B5A00F84A5A484A5A5E151FC848C7FC157E5DA24A5A14035D14074A5AA2141F5D143FA2
147F5D14FFA25BA35B92C8FCA35BA55BAA6D5A6D5A6D5A2F447AC238>I<EC7FF00103B5
FC010F14C0013F14F090397F801FFC3A01FC0003FE48486D7E497F4848EC7F80163F4848
15C0A2001F151FA27FA27F7F01FE143F6D158002C0137F02F014006C01FC5B6E485A6C90
38FF83FCEDE7F86CECFFE06C5D6C92C7FC6D14C06D80010F14F882013F8090B7FC48013F
14802607FC0F14C0260FF80314E04848C6FC496D13F0003F141F48481307496D13F81500
00FF157F90C8123F161F160FA21607A36D15F0127F160F6D15E06C6C141F6DEC3FC06C6C
EC7F80D80FFE903801FF003A07FFC00FFE6C90B55AC615F0013F14C0010F91C7FC010013
F02D427BC038>I<EC7FF0903807FFFE011F6D7E017F14E09039FFE03FF0489038800FF8
48496C7E48488048486D7E001F80003F1680A2484815C08117E0A212FF17F0A617F8A45D
127FA3003F5CA26C7E5D6C6C5B12076C6C133E6CEBC07C6CEBFFF8013F5B010F01C013F0
0101130090C8FCA217E05DA2EA03C0D80FF015C0487E486C491380A217004B5A150F5E49
495A6C48495A01C0EBFFE0260FF0035B6CB65A6C4AC7FC6C14F86C6C13E0D907FEC8FC2D
427BC038>I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F8016
1F82033F80ED3E07037E80157C8203FC804B7E02018115F0820203814B137F0207815D17
3F020F814B7F021F8292C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0C8FC
A20103834A157F0107834A153FA249488284011F8491C97E4984133E017E82B6020FB612
F0A54C457CC455>65 D<B9FC18F018FE727E19E026003FFCC700077F05017F716C7E727E
727EA2721380A37213C0A74E1380A24E1300A24E5A4E5A4E5A4D5B05075B94B5128091B7
00FCC7FC18F018FF19E002FCC7000113F8716C7EF01FFE727E7213801AC07213E0A27213
F0A31AF8A71AF0A2601AE0604E13C0604E138095B5120005075BBA12F86119C04EC7FC18
E045447CC350>I<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B5
39E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F
4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FF
AE127F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE
1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001
FF80023F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>I<B9FC
18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F7F727F727F727F8473
7E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F624F5A
19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9FC4B44
7CC356>I<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E193EA3191E
A21778A285A405F890C7FCA316011603161F92B5FCA5ED001F160316011600A2F101E017
78A2F103C0A494C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F4DB5FCBB
FC61A443447DC34A>I<BA1280A419C026003FFEC7121F1701EF007F183F181F180F1807
19E01803A31801A3EE01E0F000F0A419001603A31607160F167F91B6FCA59138FE007F16
0F16071603A31601A693C9FCAFB712F0A53C447CC346>I<DCFFF01470031F01FF14F04A
B6EAE0010207EDF803023FEDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901
C0804990C87E4948814948814948167F4849163F4849161F5A4A160F485B19074890CAFC
19035A5BA2007F1801A34994C8FC12FFAD057FB612F0127F7FA3003FDC0001EBF000A27F
7EA26C7FA26C7F807E6C7F6C7F6D7E6D6C5D6D6C7E6D6D5C6D01F05C010101FE143F6D90
3AFFF001FF9F023F90B6120F0207EDFC030201EDF000DA001F02C01330030001FCC9FC4C
467AC458>I<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A>73
D<B712F0A526003FFECAFCB3B1F00780A4180F1900A460A360A2187EA218FE1701170317
07171F177FEE03FFB95AA539447CC343>76 D<B500FE067FB512806E95B6FCA26F5EA2D8
003F50C7FC013D6DEE03DFA2013C6DEE079FA26E6CEE0F1FA26E6C161EA26E6C163CA36E
6C1678A26E6C16F0A26E6DEC01E0A26E6DEC03C0A36E6DEC0780A26F6CEC0F00A26F6C14
1EA26F6C5CA36F6C5CA26F6C5CA26F6D485AA26F6D485AA26F6D485AA3706C48C7FCA293
383FF81EA2706C5AA2706C5AA3706C5AA2705BA2705BA2705BA2B6057FB6128071C7FCA2
173E171C61447CC36A>I<B64BB512FE8181A281D8003F6D91C7EA780081013D7F81133C
6E7E6E7F6E7F6E7F6E7F82806E7F6E7F6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382707F
707F707F707F8482707F707F717E7113807113C019E0837113F07113F87113FC7113FE19
FF847213F884848484A28484197F193F191FA2190F1907B61603190119001A78A24F447C
C358>I<B9FC18F018FE727E19E0D8001F90C7000F7F05017F716C7E727E727E721380A2
1AC084A21AE0A91AC0A24E1380A21A00604E5A4E5A4D485A050F5B92B712C096C7FC18FC
18C092CBFCB3A7B712E0A543447DC34D>80 D<B812F8EFFFC018F818FE727ED8001F90C7
003F13E005037F05007F727E727E727EA28684A286A762A24E90C7FCA24E5A61187F9438
01FFF005075B053F138092B7C8FC18F818E018F892C77FEF3FFF050F7F717F717FA2717F
A2717FA785A61B0F85A2187F73131F72141EB700E06DEB803E72EBE0FC72EBFFF8060114
F0726C13E0CC0007138050457DC354>82 D<DAFFE0131C010701FE133C013F9038FF807C
90B6EAE0FC4815F9489038801FFF3907FC00014848EB007F4848143F4848140F49140700
7F15035B1601160012FF177CA27FA26D153C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015
FF6C15E016FC6C816C6F7E6C826C826C6C81011F810107811300020F80140003077FED00
7F82040F1380828212F082A282A27EA218007EA26C5D6C5E6D14036D5D6D140701F84A5A
01FFEC3FF002F8EBFFE0486CB65AD8FC1F92C7FCD8F80714FC48C614F048010713803146
7AC43E>I<003FBA12E0A59026FE000FEB8003D87FE09338003FF049171F90C71607A200
7E1803007C1801A300781800A400F819F8481978A5C81700B3B3A20107B8FCA545437CC2
4E>I<B76C010FB512F8A526003FFEC93803E000B3B3A9011F17076280190F6D606F151F
6D95C7FC6D6D5D197E6D6D5D6D6D1403DA7FFC4A5A6EB4EC3FF0020F9039F003FFE06E90
B61280020193C8FC6E6C14FC030F14E09226007FFEC9FC4D457CC356>I<B792B6FCA526
003FFECAEAFC00806D606F15016D608119036D606F15076D606F150F6D6081191F6D6D93
C7FC61027F163E6F157E023F167C8119FC6E6D5C18016E5E7013036E5E8218076E6D5C18
0F6E5E70131F6E93C8FC705B037F143E82187E033F147C7013FC6F5C17816F5C17C117C3
6F5C17E76F5C17FF6F5CA36F91C9FCA2705AA2705AA3705AA2705AA2705AA250457EC355
>I<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D
7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC01
000313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE01
3EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97
D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139FF000F
FE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A2177F18
F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB512F0D9
F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C0010F14F0013F14FC90
397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F6E5AED
00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F00
6C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32
>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF8
07FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212FFAC
127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01F
EF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E
010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A001F
ED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F
17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE
011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13
F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03
F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522>I<DAFFE0137E
010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001FF84848EB0FFC4848
903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FCA26D5B000F5D6C6C
495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0000F90CAFCA47F7F
7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0C77ED83FC0140748
48020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B
07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427DAC38>I<EB7F
C0B5FCA512037EB1ED07FE92383FFF8092B512E002C114F89139C7F03FFC9138CF801F91
39DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA537457CC43E>I<137C48
B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFF
A512037EB3AFB6FCA518467CC520>I<EB7FC0B5FCA512037EB293387FFFE0A593380FE0
004C5A4CC7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15FEECC1FCECC3FE14C7ECDFFF
91B57E82A202F97F02E17F02C07FEC807F6F7E826F7E816F7F836F7F816F7F83707E163F
B60003B512F8A535457DC43B>107 D<EB7FC0B5FCA512037EB3B3B3A3B61280A519457C
C420>I<90277F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B512E002816E48
80913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E007F6C019E6D
013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7C
AC5E>I<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F801F00
0390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>
I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA
3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F1700A4
6C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7
FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90397FC00FF8B590B57E
02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15C04A
6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913
806E4913006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FCADB6
7EA536407DAC3E>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE00
0313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7D
AC2E>114 D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48C712
1F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C80
0003806C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C15
C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7FC
232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B512
80B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F
006DB5FC6D13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA50003
EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C7010F14
07010313FE9026007FF0EBFC00372E7CAC3E>I<B6903803FFFCA5000101E09038003E00
6C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7
FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA3
6E5BA26E90C8FCA26E5AA26E5AA21578362C7EAB3B>I<B500FE90383FFFF0A5C601F090
3803E0006D6C495A013F4A5A6D6C49C7FC6E5B6D6C137E6DEB807C6D6D5A6DEBC1F0EDE3
E06DEBF7C06EB45A806E90C8FC5D6E7E6E7F6E7FA24A7F4A7F8291381F3FFCEC3E1F027C
7F4A6C7E49486C7F01036D7F49487E02C08049486C7F49C76C7E013E6E7E017E141FB500
E090B512FCA5362C7EAB3B>120 D<B6903803FFFCA5000101E09038003E006C163C8001
7F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6D
EBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90
C8FCA26E5AA26E5AA21578A215F85D14015D001F1303D83F805B387FC007D8FFE05B140F
92C9FC5C143E495A387FC1F8EB07F06CB45A6C5B000790CAFCEA01FC36407EAB3B>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk tcrm1000 10 1
/Fk 1 137 df<EB1FE0EBFFFC487F0007EBFF804814C04814E04814F0A24814F8A3B612
FCAA6C14F8A36C14F0A26C14E06C14C06C14800001EBFE006C5BEB1FE01E207BA429>
136 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmbx12 14.4 64
/Fl 64 122 df<EEFFFC031FEBFF804AB612E0020781021F9038C00FF8913A7FFE0003FC
DAFFF0EB00FE4949EB03FF4901805B4990C7487F49485CA2495A4D7F013F6F5B5CA37190
C7FC715AEF01F894C9FCA90403B512C0BAFCA526003FFCC7120783B3B3A6003FB5D8FC03
B612C0A542547DD34B>12 D<EA07F0EA1FF8EA3FFE487EA2B5128014C0A314E0A37EA27E
EA1FFDEA07F1EA0001A2130314C0A313071480130FA214005B133EA25B5B485A1203485A
485A485A90C7FC120C132876D225>39 D<EA07F0EA1FF8487E487E7FB5FC1480A314C0A3
7EA27E7EEA07F3EA0003A213071480A3130F1400A25B131E133E133C137C5BA2485A485A
485A485A48C7FC121E120C1228769025>44 D<B712F0AB240B7F9F2D>I<EA07F0487E48
7E487E487EB51280A76C13006C5A6C5A6C5A6C5A1111769025>I<EF01E01703EF07F0A2
170FA2EF1FE0A218C0173FA2EF7F80A218005FA24C5AA25F1603A24C5AA25F160FA24C5A
A25F163FA24C5AA294C7FC5EA24B5AA25E1503A24B5AA25E150FA24B5AA25E153FA24B5A
A293C8FC5DA24A5AA25D1403A25D1407A24A5AA25D141FA24A5AA25D147FA24AC9FCA25C
1301A2495AA25C1307A2495AA25C131FA2495AA25C137FA249CAFCA25B1201A2485AA25B
1207A2485AA25B121FA2485AA25B127FA248CBFCA25AA2127CA2347879D943>I<913803
FFC0023F13FC91B6FC010315C0010F018113F0903A1FFC003FF849486D7E49486D7E4948
6D7E48496D138048496D13C0A24817E04890C813F0A34817F8A24817FC49157FA3007F17
FEA600FF17FFB3A5007F17FEA6003F17FCA26D15FFA26C17F8A36C17F0A26C6D4913E0A2
6C6D4913C06C17806E5B6C6D4913006D6C495AD91FFCEB3FF8903A0FFF81FFF06D90B55A
01011580D9003F01FCC7FC020313C0384F7BCD43>I<157815FC14031407141F14FF130F
0007B5FCB6FCA2147F13F0EAF800C7FCB3B3B3A6007FB712FEA52F4E76CD43>I<EC3FFE
0103B512E0010F14FC013F14FF90B712C048D9C07F7F2703FE000F13F8D807F801037FD8
0FE06D7F48486D7F48488001F01680486C6E13C07F486C6E13E07FA27013F0A56C5AA26C
5AEA0FF0EA03C0C914E05EA218C05E1880A24C13005F4C5A4B5B5F4B5B5F4B5B4B90C7FC
4B5A5E4B5AED7FE04B5A4A5B4A48C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC02FEEC03
E0495A495A495A495AD91F80140749C8FC013E150F017FB7FC90B812C05A5A5A5A5A5A5A
B9FC1880A4344E79CD43>I<91380FFFC091B512FC0107ECFF80011F15E090263FF8077F
9026FF800113FC4848C76C7ED803F86E7E491680D807FC8048B416C080486D15E0A4805C
A36C17C06C5B6C90C75AD801FC1680C9FC4C13005FA24C5A4B5B4B5B4B13C04B5BDBFFFE
C7FC91B512F816E016FCEEFF80DA000713E0030113F89238007FFE707E7013807013C018
E07013F0A218F8A27013FCA218FEA2EA03E0EA0FF8487E487E487EB57EA318FCA25E18F8
91C7FC6C17F0495C6C4816E001F04A13C06C484A1380D80FF84A13006CB44A5A6CD9F007
5BC690B612F06D5D011F1580010302FCC7FCD9001F1380374F7ACD43>I<177C17FEA216
0116031607160FA2161F163F167FA216FF5D5DA25D5DED1FBFED3F3F153E157C15FCEC01
F815F0EC03E01407EC0FC01580EC1F005C147E147C5C1301495A495A5C495A131F49C7FC
133E5B13FC485A5B485A1207485A485A90C8FC123E127E5ABA12C0A5C96C48C7FCAF020F
B712C0A53A4F7CCE43>I<D80380150ED807E0157E01FEEC03FED9FFF0137F91B65A5F5F
5F5F5F94C7FC5E5E16F016C093C8FC15F801E190C9FC01E0CAFCABEC0FFF027F13F001E3
B512FE01E76E7E9026FFF8077FDAC0017F49C713F8496E7E49143F4981496E7E6C481680
C9FC18C08218E0A418F0A3EA0FE0487E487E487E487EA418E0A35B6C484A13C05B491680
003EC85A003F17006C6C4A5A6D5D6C6C4A5AD807F8495BD803FE01075B2701FFC03F5B6C
90B65A013F4AC7FC6D14F8010314C09026007FF8C8FC344F79CD43>I<ED0FFF92B512E0
020780021F14FC91397FFE03FE903A01FFF0007F4901C0EB3F804990C7121F4948EC7FC0
494814FF49484913E049485B01FF5C485BA2485B5AA2486F13C04A6D1380486F1300177E
94C7FC5AA291CAFC5AA21508913801FFF8020713FFB54814C04A14F04AC66C7E023C6D7E
4A6D7E4A6D7E7013804A15C0A24A15E07013F05C18F8A491C714FCA37EA67EA46C17F880
A27E18F06C5D18E06C6D15C07E6E4913806C6D15006D6C495A6D6CEB7FFC6DB448485A6D
90B55A010315C0010092C7FC023F13FC020713C0364F7ACD43>I<121F7F7FEBFF8091B8
1280A45A1900606060A2606060485F0180C86CC7FC007EC95A4C5A007C4B5A5F4C5A160F
4C5A484B5A4C5A94C8FC16FEC812014B5A5E4B5A150F4B5AA24B5AA24B5A15FFA24A90C9
FCA25C5D1407A2140FA25D141FA2143FA4147F5DA314FFA55BAC6D5BA2EC3FC06E5A3952
79D043>I<913807FFC0027F13FC0103B67E010F15E090261FFC0113F8903A3FE0003FFC
D97F80EB0FFE49C76C7E48488048486E1380000717C04980120F18E0177FA2121F7FA27F
7F6E14FF02E015C014F802FE4913806C7FDBC00313009238F007FE6C02F85B9238FE1FF8
6C9138FFBFF06CEDFFE017806C4BC7FC6D806D81010F15E06D81010115FC010781011F81
491680EBFFE748018115C048D9007F14E04848011F14F048487F48481303030014F84848
80161F4848020713FC1601824848157F173FA2171FA2170FA218F8A27F007F17F06D151F
A26C6CED3FE0001F17C06D157F6C6CEDFF806C6C6C010313006C01E0EB0FFE6C01FCEBFF
FC6C6CB612F06D5D010F1580010102FCC7FCD9000F13C0364F7ACD43>I<91380FFF8091
B512F8010314FE010F6E7E4901037F90267FF8007F4948EB3FF048496D7E484980486F7E
484980824817805A91C714C05A7013E0A218F0B5FCA318F8A618FCA46C5DA37EA25E6C7F
6C5DA26C5D6C7F6C6D137B6C6D13F390387FF803011FB512E36D14C30103028313F89039
007FFE03EC00401500A218F05EA3D801F816E0487E486C16C0487E486D491380A218005E
5F4C5A91C7FC6C484A5A494A5A49495B6C48495BD803FC010F5B9027FF807FFEC7FC6C90
B55A6C6C14F06D14C0010F49C8FC010013F0364F7ACD43>I<EA07F0487E487E487E487E
B51280A76C13006C5A6C5A6C5A6C5AC8FCB3EA07F0487E487E487E487EB51280A76C1300
6C5A6C5A6C5A6C5A113576B425>I<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C7F
A24C7FA34C8083047F80167E8304FE804C7E03018116F8830303814C7E03078116E08303
0F814C7E031F81168083033F8293C77E4B82157E8403FE824B800201835D840203834B80
0207835D844AB87EA24A83A3DA3F80C88092C97E4A84A2027E8202FE844A82010185A24A
820103854A82010785A24A82010F855C011F717FEBFFFCB600F8020FB712E0A55B547BD3
66>65 D<BA12C019FEF1FFC01AF01AFCD8000701F0C7000313FFDE007F7F737F070F7F73
7F878587858785A287A84F5BA263616361634F5B4F5B077F90C7FC4E485A060713F892B8
12E097C8FC861AF003F0C7000313FE9539003FFF80070F13E0737F07017F87737F747E1C
807413C0A27413E0A31CF0A386A362A31CE0A2621CC0A250138097B5FC1C004F5B19074F
5B073F13F04EB55ABC128098C7FC1AF81AC007F8C8FC54527CD160>I<932601FFFCEC01
C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F0203DAE003EBC07F020F
01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F882494982494982
4949824949824990CA7E494883A2484983485B1B7F485B481A3FA24849181FA3485B1B0F
A25AA298C7FC5CA2B5FCAE7EA280A2F307C07EA36C7FA21B0F6C6D1980A26C1A1F6C7F1C
006C6D606C6D187EA26D6C606D6D4C5A6D6D16036D6D4C5A6D6D4C5A6D01FC4C5A6D6DEE
7F806D6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF80203903AFFE001FFF0020091B612
C0033F93C8FC030715FCDB007F14E0040101FCC9FC525479D261>I<BA7E19FCF1FF801A
F01AFCD8000701F0C7000F13FF060014C0071F7F070713F807017F737F747E747F747F86
747F747F8886888688A2757EA31D8087A21DC0A51DE0A387A963A31DC0A51D80A2631D00
A3515AA2646264505B6264505B505B5090C7FCF2FFFE4F5B07075B071F5B96B512C0060F
91C8FCBB5A1AF01AC007FCC9FC19805B527CD167>I<BC1280A5D8000701F8C7000114C0
F0001F19071901851A7F1A3F1A1FA2F20FE0A21A07A31A03A318F81BF01A01A497C7FC17
01A317031707170F177F92B6FCA59238F8007F170F170717031701A317001B3EA31B7CA3
95C8FCA21BFCA21BF8A21A01A31A031BF01A071A0FA21A1F1A3FF27FE0F101FF1907191F
0603B5FCBCFCA21BC0A34F517CD058>I<BB12FEA5D8000701F8C700077FF0007F191F19
0785858586861B80A21A1FA31A0FA41BC006F81307A497C7FCA31701A317031707170F17
7F92B6FCA59238F8007F170F170717031701A31700A795C9FCB3B812F8A54A517CD055>
I<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F0203
DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901
F8824949824949824949824949824990CA7E494883A2484983485B1B7F485B481A3FA248
49181FA3485B1B0FA25AA298C8FC5CA2B5FCAE6C057FB712E0A280A36C94C7003FEBC000
A36C7FA36C7FA27E6C7FA26C7F6C7FA26D7E6D7F6D7F6D6D5E6D7F6D01FC93B5FC6D13FF
6D6C6D5C6E01F0EC07FB020F01FEEC1FF10203903AFFF001FFE0020091B6EAC07F033FEE
001F030703FC1307DB007F02E01301040149CAFC5B5479D26A>I<B8D8C003B8FCA5D800
0701F8C9001FEBE000B3AE92BAFCA503F8C9121FB3B1B8D8C003B8FCA560527CD169>I<
B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A527CD132>I<B800C091B612F8A5D800
0701F8C90003EBF8009738007F8051C7FC505AF203F8F20FF0505A505A505A50C8FCF101
FCF107F84F5A4F5A4F5A4F5A07FEC9FCF003FC4E5A4E5A4E5A4E5A4E5ADD01FECAFC4D5A
4D5A4D5A4D7E173F4D7E4C487E4C7F5E4C804C804C80EEFF7F9226F9FE3F7FDBFBFC8092
26FFF81F7F4C7EDCC0077F0480804C7E4B6D804B6D804B8284727F727F8684727F727F87
84728087737F85737F87737F85737F88857380747F888697B512FCB800C0013FECFFFEA5
5F527CD169>75 D<B812F8A5D8000701F8CAFCB3B3A91A7CA41AFC1AF8A51901A31903A2
19071AF0190FA2191F193F197F19FF180360183F4DB5FCBB12E0A546527CD151>I<B600
FC073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EFA202EF6DEF03CFA202E76DEF
078FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C1778A26F6C17F0A26F6DED01
E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151EA26F6D5DA3706C5DA2706C5D
A2706D495AA2706D495AA2706D495AA3706D49C7FCA2706D131EA2706D5BA2716C5BA371
6C5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3715BA2715BA2725AA2725AA2
D93FFC6F5AB74DB712FEA2725AA2725A77527CD180>I<B600FC93B7FC8181A282D80007
6E9239003FFC0070EE07E08282A28202EF7F02E77F02E380A202E18002E0806F7F6F7F6F
7FA26F7F6F7F6F806F80A26F80707F707F707F707FA2707F7080708070808583717F717F
717F717FA27114807114C07114E07213F07213F8A27213FC7213FE7213FF721487A27214
C77214E77313F77313FF85A285858585A28586868686A286868686A2D93FFC187FB7173F
1B1F1B0F1B07755A60527CD169>I<93380FFFC00303B6FC031F15E092B712FC0203D9FC
0013FF020F01C0010F13C0023F90C7000313F0DA7FFC02007F494848ED7FFE4901E0ED1F
FF49496F7F49496F7F4990C96C7F49854948707F4948707FA24849717E48864A83481B80
4A83481BC0A2481BE04A83A2481BF0A348497113F8A5B51AFCAF6C1BF86E5FA46C1BF0A2
6E5F6C1BE0A36C6D4D13C0A26C6D4D1380A26C1B006C6D4D5A6E5E6C626D6C4C5B6D6D4B
5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B90C7FC6D6D4B5A6D01FF02035B023F01E0011F13
F0020F01FC90B512C0020390B7C8FC020016FC031F15E0030392C9FCDB001F13E0565479
D265>I<BAFC19F819FF1AE086D8000701F0C7001F13FC060113FF726C13807313C0070F
13E01BF0857313F81BFCA27313FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0614F13
C04F13004E485A061F5B92B812F01AC04FC7FC19E003F8CBFCB3AEB812C0A550527CD15C
>I<B912F0F0FF8019F819FF1AC0D8000701F0C714F0060F7F060113FE727F737F737F85
737F87A2737FA387A863A2616363A24F5B4F5B4F90C8FC4F5A06035B060F13F095B512C0
92B8C9FC19F819E019F89226F0000313FE9439007FFF80727F727F727F727F727F8684A2
8684A787A71D1C75133EA38575137E73157C7513FC731401B86C6D9038F803F807039038
FE07F07390B512E0736C14C0080F1400CEEA7FFC5F537CD164>82
D<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F9026FFFC006D5A4801
E0EB0FFD4801800101B5FC4848C87E48488149150F001F824981123F4981007F82A28412
FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC6CEDFFC017F06C
16FC6C16FF6C17C06C836C836D826D82010F821303010082021F16801400030F15C0ED00
7F040714E01600173F050F13F08383A200788200F882A3187FA27EA219E07EA26CEFFFC0
A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003FFE0
486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C5479D24B>I<00
3FBC1280A59126C0003F9038C0007F49C71607D87FF8060113C001E08449197F49193F90
C8171FA2007E1A0FA3007C1A07A500FC1BE0481A03A6C994C7FCB3B3AC91B912F0A55351
7BD05E>I<B800C00103B612FCA5D8000701F8CAEBF000F31F80B3B3B11B3FA26D97C7FC
81637F1B7E6D6D17FE505A6E7E505A6E6D15076E4D5A6E6D4B5A6E6D4B5A6E01F84B5A6E
6DDA03FFC8FC6E6CB46CEB0FFE6F9039F001FFF8030F90B65A030316C0DB007F92C9FC04
0F14F8DC007F13805E537CD167>I<B700FE031FB512FEA5D8001F01F0CA383FFE00F307
F06D626F170F6D62811B1F6D6D601B3F6D97C7FC6F5F6D197E821BFE6E6D5E1A016E6D5E
1A036E60701507A26E6D5E1A0F6E6D5E1A1F6E6070153FA26E6D93C8FC626E6E147E1AFE
6F5E711301A26F6D5C19036F6D5C19076F5E71130FA26F6D5C191F6F6D5C193F6F93C9FC
715BA26FEC807E19FE706D5A18C1705C18E3705C18F318F770EBFFE0A2705CA2705CA370
91CAFCA2705BA2715AA3715AA2715AA2715A715A5F537DD166>I<B700FC017FB600FE91
B612F0A5D8003F01C0C8001F01E0C9EBF8006F71EE0FC06D7161876F1C1F6D7196C7FC6F
8373606D1E3E6F836D7160876F1CFC6D666F4B801F016D66704A806E525A88704A17076E
059F5F70021F80080F160F6E6570023F806EDC3E074CC8FC8870027E5F6EDC7C03163E70
02FC804F6C167E6E1C7C700101814F6C16FC6E745B70010317016E4C6D5D060716C00580
496D14036F63DDC00F16E04F6D14076F07F05BDDE01F170F6F92C76C5D1DF8DDF03E6E14
1F6F98C9FCDDF87E16FC067C6E5C6FF1FE3EDDFCFC177E6F4A6E147C1DFFDDFFF06E14FC
6F62A24E816F62A270496F5BA24E817061A295C97E7061A270487090CAFCA37048705AA2
4D1601040360A27048705A84537DD18B>I<003FB7D88003B7FCA5D8000749C8000701F8
C7FC6D6D9238007F806D6E93C8FC7015FE6D17016E6D5D704A5A6E16076E6D4A5A6E6D5D
4F5A6E6D143F6E6D4A5A7191C9FC6E16FE6EECC00171485A6F5D6F6D485A6FEBF80F7148
5A6F5D6F6D485AEFFF7F6F4ACAFC6F5C6F5CA2705B705B8482707F707FA2707F7080855E
4C80855E4C80DC3FCF7F058F7FEE7F074C6C7FDB01FE814C7E4B486C8003076E7F4B4881
4C7F4B486D7F033F824C7F4BC76C7F4B6E7F4A5A4B6E804A486E800207844A48814B6F7F
4A4883023F824A486F7F92C96C7F02FE840101830103718090263FFFC084B76C0103B712
F8A55D527CD166>I<B8030FB61280A5D8000F01FCCA003F90C7FC6FEF07F86D6D606D4F
5A826D6E4C5A6D4F5A826E6D4CC8FC6E18FE826E6D4B5A6E4D5A826E6D4B5A6E4D5A836E
6E4A5A6E4D5A836F6D4AC9FC6F5E715C6F6D495A6F1503715C6F6D495A6F150F06805B6F
6E485A6F153F06E05B706D48CAFC705C725A70EBFDFC7013FF61705C82705C6182715B96
CBFCB3AA030FB712F8A561527ED166>I<EC7FFF0107B512F0013F14FE90B77E48D9E00F
7F2703FE000113F0486C6D7F6EEB3FFC48826E131F83707FA36C496D7FA26C90C7FC6C5A
C9FCA6037FB5FC020FB6FC91B7FC01071487013FEBF0074913803901FFFC004813F0485B
485B485B4890C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C02797F6C6D01F113F86C
9026C003E1EBFFE06C9026F81FC014F06C90B5487EC6ED001F011F01FC010713E0010101
E090C8FC3C387CB641>97 D<EB3FF0B5FCA51203C6FCB3A4923801FFE0030F13FE033FEB
FFC092B612F002F301017F913AF7F8003FFEDAFFE0EB0FFF03806D7F92C76C7F4A6E7F4A
824A6E7FA2727EA285A28584A31A80AC1A00A44E5AA36118FF616E4A5BA26E4A5B6E4A5B
6F495BDACFC04990C7FCDA87F0EB7FFC913A03FE03FFF849C6B612E0496D148049011F01
FCC8FC90C7000313C041547BD24B>I<913801FFF8021FEBFF8091B612F0010315FC010F
9038C00FFE903A1FFE0001FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F13
8091C7FC486F1300705A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C0
7E6E140F6CEE1F806C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390
B55A01001580023F49C7FC020113E033387CB63C>I<4DB47E0407B5FCA5EE001F1707B3
A4913801FFE0021F13FC91B6FC010315C7010F9038E03FE74990380007F7D97FFC0101B5
FC49487F4849143F484980485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA2
6C7F5F6C6D5C7E6C6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF
6D90B5128F0101ECFE0FD9003F13F8020301C049C7FC41547CD24B>I<913803FFC0023F
13FC49B6FC010715C04901817F903A3FFC007FF849486D7E49486D7E4849130F48496D7E
48178048497F18C0488191C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFCA6
127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F80
6D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390B55A010015C0021F49C7FC020113F0
34387CB63D>I<ED3FFC0203B5FC020F14C0023F14E09139FFF81FF0499038C03FF849EB
807F49903800FFFC495A495AA2495AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526
007FF8C8FCB3B3A7007FB512FEA52E547CD329>I<DA3FFF14FF0103B5D8F00713C0010F
DAFC1F13E0013FECFF7F90267FFC0F9038FF9FF09026FFE001EBF83F48496C13E0484990
387FF01F4890C7D83FF813E0489338FC0FC0F0078048486E6CC7FCA2003F82A9001F5EA2
6C6C4A5AA26C5E6C6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C314
F02607C03F90C9FC91CBFCA2120FA37FA213F813FE90B7FC6C16F817FF18C06C836C836C
836D828448B9FC12074848C700031480D81FF8EC003F4848150748486F13C083485A83A5
6D5D007F18806D5D003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C01
FE011F5B6C6CB71280010F03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543>I<EB3FF0
B5FCA51203C6FCB3A4EE1FFC93B512C0030314F0030F8092391FE07FFC92393F001FFE03
7C8003F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A5
42537BD24B>I<137F497E000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCAD
EB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325>I<157FEDFF80020313E04A13F0A2
4A13F8A76E13F0A26E13E002001380ED7F0092C7FCADED1FF891B5FCA51401EC007FB3B3
B1EA0780EA1FE0487E487E486C13FF16F0A216E05C16C04A13806C4848130049485A003F
495A000FB512F06C5C0001148026001FFCC7FC256C87D329>I<EB3FF0B5FCA51203C6FC
B3A54CB512F8A59339003FFE00EF1FF0EF3FC04D5A4DC7FCEE03FEEE07F84C5A4C5AEE7F
C04CC8FC4B5A4B5AED0FF8ED1FE04B7E4B7EECF1FF02F37F02F77F91B6FC83159F030F7F
02FE80DAF8077F4A7E6F7F6F7F83707E82707F84707F707F82707F84707F177F717E4D13
C0B6D8F003B6FCA540537CD247>I<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD2
25>I<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E017F8092
271FE07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06DD90780
137FDAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A
5EB3ACB6D8F807B6D8C03FB512FEA567367BB570>I<D93FF0EB1FFCB591B512C0030314
F0030F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F
8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<913801FFE0021F13FE
91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F
48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F18
80A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD9
3FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643
>I<903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301017F913AF7F8007FFE00
03D9FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380
AC1A0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC91
26FBFE075B02F8B612E06F1480031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B
>I<90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3
E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AA
B612FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF8
1307D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13
FF15F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F
030713F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001
F8EC7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C38
7CB635>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FC
B8FCA426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC
6DEBFFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA500
03ED001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFF
C0903A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B>I<B6
00F00107B5FCA5000101F8C8EA7FE06C6DED3F00A2017F163E6E157E013F167C6E15FC6D
5E6F13016D5E8117036D5E6F13076D5E6F130F6D5E6F131F6D93C7FC815F6E6C133E177E
023F147C6F13FC6E5C16816E5C16C3A26EEBE3E016E76E5C16FF6E5CA26E91C8FCA26F5A
A36F5AA26F5AA26F5AA26F5A6F5A40367DB447>I<B6D8E07FB5D8C003B512C0A5000101
F0C701F0C7381FF8006E027FED07E06C715DA26E023F150F017F705DA26E181F013F4B6C
92C7FC6E606D70143E94B5FC6F177E6D4A6E137C03C001F315FC6D715B160303E001E114
016D020702E05B03F013C06D71485A160F03F8D9807F13076D05F85B93381F003F03FC16
0F027F4902FC5BDBFE3E011F131F023F04FE90C8FC167EDBFF7C010F5B6E01FCECFF3E4C
6D137E6E5FA24C7F6E5F4C7F6E5FA24C7F6E5F4C147FA26E5F93C8123F6F5EA2033E6FC9
FC5A367DB461>I<007FB500F090387FFFFEA5C66C48C7000F90C7FC6D6CEC07F86D6D5C
6D6D495A6D4B5A6F495A6D6D91C8FC6D6D137E6D6D5B91387FFE014C5A6E6C485A6EEB8F
E06EEBCFC06EEBFF806E91C9FCA26E5B6E5B6F7E6F7EA26F7F834B7F4B7F92B5FCDA01FD
7F03F87F4A486C7E4A486C7E020F7FDA1FC0804A486C7F4A486C7F02FE6D7F4A6D7F495A
49486D7F01076F7E49486E7E49486E7FEBFFF0B500FE49B612C0A542357EB447>I<B600
F00107B5FCA5C601F8C8EA7FE06EED3F00A26D6C153E187E013F167C6E15FC6D5E6F1301
6D5E6F13036D5E8117076D6D5C170F6D6D5C171F6D93C7FC6F5B027F143E6F137E023F14
7C6F13FCA26E6D5A16816EEBC1F016C36E5C16E76E5C16FF6E5CA26E91C8FCA36F5AA26F
5AA26F5AA26F5AA26F5AA35E150F5E151F93C9FC5DD81FC0133E486C137E486C137C486C
13FC5D14015D14034A5A6C48485A49485A263FC07FCAFCEB81FE6CB45A6C13F000035BC6
90CBFC404D7DB447>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmbx12 20.74 17
/Fm 17 117 df<EE3FFF0307B512F8033F14FF4AB712E0020716F8021F16FE4AD9F8077F
91B5D8C00014C04991C7003F7F4901FC020F7F49496E7F49496E7F49496E7F49496E7F4B
81498590B5C96C7FA24849707FA24886A248864A824886A34886A448864A82A4481B80A8
B51AC0B3AA6C1B80A86C1B006E5EA46C62A36C62A36C6D4C5BA36C62A26C6D4C5BA26C6E
4B5B6D616F92B5FC6D96C7FC6D6D4A5B6D6D4A5B6D6D4A5B6D6D4A5B6D01FF023F5B6D02
C090B55A6ED9F8075C021F90B648C8FC020716F8020116E06E6C1580030702F8C9FCDB00
3F90CAFC527379F061>48 D<EE01F0EE07F8160F163F167FED01FF150F153F4AB5FC143F
010FB6FCB8FCA54A7E14C0EBF000C8FCB3B3B3B3AE007FBA12F0A8447171F061>I<9238
0FFFE04AB67E020F15F0027F15FE49B87E4917E0010F17F8013F8349D9C01F14FF9027FF
FC0001814801E06D6C80480180021F804890C86C8048486F8048486F8001FF6F804801C0
6E8002F081486D18806E816E18C0B5821BE06E81A37214F0A56C5BA36C5B6C5B6C5B0003
13C0C690C9FC90CA15E060A34E14C0A21B80601B0060626295B55A5F624D5C624D5C4D91
C7FC614D5B4D13F04D5B6194B55A4C49C8FC4C5B4C5B4C13E04C5B604C90C9FCEE7FFC4C
5A4B5B4B5B4B0180EC0FF04B90C8FC4B5A4B5A4B48ED1FE0EDFFE04A5B4A5B4A90C9FC4A
48163F4A5ADA3FF017C05D4A48167F4A5A4990CA12FFD903FC160749BAFC5B4919805B5B
90BBFC5A5A5A5A481A005A5ABCFCA462A44C7176F061>I<923801FFFE033FEBFFF84AB7
FC020F16E0023F16F84A16FE49B97E49DA003F80010F01F0010714F04901800101804948
C880D97FF86F7F02E081496C834801FC6F148014FF486E6E14C08181481AE081A96C5C1B
C06C4A5C6C5C6D90C815806D5AD90FF85D90CA150062606295B55A4D5C624D5C4D5C4D91
C7FC4D13FC4D5B4CB512E0047F1480037FB548C8FC92B612F818C018F8F0FF806F15F092
C7003F13FC050713FF050114C071807213F8727F727F867214801BC07214E01BF0A27214
F81BFCA37214FEA31BFFEBFF80000313E0487F001F13FC487FA2487FA2B67EA31BFEA360
1BFCA292C8FC6C1AF84A5D4A18F06C494B14E05C6C01C04B14C06C90C915804E14006C6D
4B5B6C01F092B55A6C01FC4A5C27007FFFC001075C6D01FE013F14C0010F90B85A6D4DC7
FC010117F8D9003F16E0020F93C8FC020015F0030749C9FC507378F061>I<F10FF04F7E
193FA2197F19FF60A260606060A2606095B5FCA25F5F5FA25F5F5F5F18BFEFFF3F5EEE03
FE17FCEE07F8160FEE1FF0EE3FE017C0167FEEFF804B13005E4B5A15074B5A4B5A5E153F
4B5A4B5A93C7FC4A5A14034A5A5D4A5A141F4A5A4A5A5D4AC8FC5B495A5C495A130F495A
495A5C137F495A4890C9FC5B485A1207485A485A5B123F485A485A90BC12FCA8CB02F8C7
FCB3A20307B912FCA856727BF161>I<0170187001FEEF01F86D6C160F02F8167FDAFF80
EC07FF03FE49B5FC92B85A6262A26297C7FC61616119E061614EC8FC18F86018C095C9FC
17F817C0020701F8CAFC91CDFCB0923801FFFC031FEBFFE092B612FC020315FF020F16C0
4A16F0027FD9003F7FDAFFF0010F13FE038001037F4AC76C8002F86E804A6F7F4A6F7F4A
834A6F7F91C980137E017C707F90CAFC1B80A21BC0A2841BE0A51BF0A313FE3803FF8000
0F7F4813F0487F5A80B5FCA41BE0A44E14C05C7E4A18805C4A5D6C90C9150001E0606C6C
5E6D606C6C4C5B7F000794B55A6C6C6C4A5C6C6D4A5C6E4A5C26007FF8021F49C7FC6DB4
027F5B6DD9F007B55A6D90B712E0010317806D4CC8FC6D6C15F8021F15C002034AC9FCDA
003F13804C7376F061>I<94381FFF800403B512F8043F14FE4BB77E030782031F16F003
7F8292B5D8FC017F02039139C0001FFE4A49C7EA07FF021F01F8804A496E13804A01C014
0F91B548023F13C04991C85A494992B5FC49494A14E0495B495E5D5B495BA290B55A5A5D
487114C0A24891C91480731300735A48F00FF896C8FC485BA45AA44849903803FFE0041F
13FE047FEBFFC04BB612F84B81030F15FFB590261FF8038092273FE0007F13E00480011F
7F4BC76C7F03FE6E7F4B6E7FDAFDF86E7FDAFFF017804B6E14C01BE05D7313F05D1BF8A2
92C914FC85A21BFE5CA31BFFA26C5BA87EA4807EA21BFE7EA37E1BFC6E5E6C1AF8A27E6F
17F06C95B512E06D7F1BC06D6D4A14806D4C1400816D6D4A5B6D6D4A5B6D01FF4A13F001
006E017F5B6ED9F007B55A6E90B7C7FC020F5E020316F86E16E0DA003F1580030702FCC8
FCDB007F1380507378F061>I<EA03FCA2487E7F14C0ECFFF092BA12C0A45AA31C801C00
63A2486263636363A26398C7FC48616249CAEA0FF801F0171F494D5A4F5A49604F5A007F
4D90C8FC60494C5A4E5A614E5A4E5A48CA127F4E5A4D5B96C9FCCA485A4D5A170F4D5A60
173F4D5A6017FF4C5BA25E4C90CAFCA24C5A161FA24C5AA2167FA24C5AA25DA24B5BA25D
A25DA25F5DA25DA35DA392B5FCA25FA25CA45CA75CAD6E5CA26E91CBFCA26E5BED3FF8ED
0FE0527775F461>I<93B57E031F14FC92B77E020316F0020F16FC023F16FF4A8349B5D8
800314E04901F8C7003F7F4901C0020F7F4990C800037FD91FFC6F7F49486F6C7E137F4A
7013804948827313C05A4A821BE05AA285487FA38080806E5E8003C017C08103F85D03FE
17806F6C5C6C6F160004F05C04FC4A5A6C6F5D706C13FFDDE0015B6CDCF8035BDDFC0F13
C06DDBFF1F5B6D93B5C7FC19FC6D17F06D5F6D17806D17E06D836D6C16FC6E16FF020F83
6E17E06E83020F83023F8391B97E4984010701F0178049D9C07F16C0013FD9801F16E049
EB00074948010116F048497F4849023F15F84849140F4A6E15FC48160148496E6C14FE4A
151F488391C9120348050014FF193F49838500FF84854983A28586A3861BFEA27FA2007F
1AFC7F1A7F1BF86C7FF2FFF06C7F6E4C13E06C6D4C13C06C6D5E6E4C13806C6D4C13006C
6D6CED7FFE6C02E04A485A013F01FC020F13F06D9026FFC001B55A010791B712806D95C7
FC010017FC021F16F002071680DA007F02FCC8FC030191C9FC507378F061>I<93B5FC03
1F14F092B612FE02076F7E021F16E04A16F891B87E49DAF00713FF0107DA0001804901FC
6D6C7F49496E7F49496E7F49496E7F90B5486E7F484A8048854891C86C7FA2487114805C
481AC0A2487213E0A2484918F0A31BF8A2B5FCA27313FCA51BFEA71BFF61A27EA396B6FC
7EA2806C5FA27E606C7F607E6C6E5C6CEF1FBF6D6DEC3F3F6D6D147F6D6D14FE6D6DEB01
FC6D01FE130701019039FFC01FF86D91B500F014FE023F15C06E15800203ECFE00DA007F
13F8030713C092C9FC4F13FCA41BF8A31BF0D91FF093B5FCEB7FFC496C18E0487F486E17
C06048801B804E1400A26260624E5B4B5C626C91C8485B4A4B5B4A92B55A6C01F04A91C7
FC02804A5B6C01E0020F5B6D6C023F13F002FE91B55A90273FFFE00F5C6D90B7C8FC0107
16FC6D16F0010016C0023F92C9FC020714F09126007FFECAFC507378F061>I<96267FFF
E01670063FB6ED01F80503B700F01403053F04FC14074CB96C130F040706E0131F043F72
133F93BA00FC137F0303DC00076D13FF030F03C09039003FFF814B02FCC8000713C3037F
02E0030113F792B600806F6CB5FC02034ACA121F4A02F8834A02E0834A4A1701027F4A83
91B548CC7E494A85495C4C854988494A85494A85495C8A4991CDFC90B54886A2484A1B7F
A2481E3F5D481E1F5D5A1F0FA2485CA3481E075DA2F703F0489BC7FCA45DA2B6FCB27EA2
81A47EA2F703F06FF307F87EA36C80A21F0F7E6F1CF07E6F1B1F7E20E06C6E1B3F816DF5
7FC06D80F7FF806D806D6E4F13006D6E616D525A826D6E4F5A6D6E4F5A6E6D6C4E5A021F
6EF0FFE06E6E4D5B6E02F84D5B6E02FE050F90C7FC02006E6CEE3FFE6F02F0EEFFFC031F
02FE03035B6FDAFFC0021F13E0030303FF0103B55A030093B7C8FC043F18FC040718F004
0118C0DC003F94C9FC050316F8DD003F1580DE007F01F0CAFC757A75F78C>67
D<92383FFFF80207B612E0027F15FC49B87E010717E0011F83499026F0007F13FC4948C7
000F7F90B502036D7E486E6D806F6D80727F486E6E7F8486727FA28684A26C5C72806C5C
6D90C8FC6D5AEB0FF8EB03E090CAFCA70507B6FC041FB7FC0303B8FC157F0203B9FC021F
ECFE0391B612800103ECF800010F14C04991C7FC017F13FC90B512F04814C0485C4891C8
FC485B5A485B5C5A5CA2B5FC5CA360A36E5DA26C5F6E5D187E6C6D846E4A48806C6D4A48
14FC6C6ED90FF0ECFFFC6C02E090263FE07F14FE00019139FC03FFC06C91B6487E013F4B
487E010F4B1307010303F01301D9003F0280D9003F13FC020101F8CBFC57507ACE5E>97
D<93387FFF80030FB512FC037FECFF804AB712E0020716F8021F16FE027FD9F8077F49B5
D8C000804991C7003F13E04901FC020F7F49496E7F49498049496E7F49496E7F90B55A48
727E92C914804884485B1BC048841BE0485BA27313F05AA25C5AA21BF885A2B5FCA391BA
FCA41BF002F8CCFCA67EA3807EA47E806CF103F0F207F86C7F1A0F6C6E17F06C191F6F17
E06C6E163F6D6DEE7FC06D6D16FF6D6D4B13806D6D4B13006D6D6CEC0FFE6D02E0EC3FFC
6D02F8ECFFF86D9126FFC00F5B023F91B65A020F178002034CC7FC020016F8031F15E003
0392C8FCDB000F13E04D507BCE58>101 D<903801FFFCB6FCA8C67E131F7FB3AD95380F
FFE095B512FE05036E7E050F15E0053F15F84D81932701FFF01F7F4CD900077FDC07FC6D
80DC0FF06D80DC1FC07F4C48824CC8FC047E6F7F5EEDFDF85E03FF707F5EA25EA25EA293
C9FCA45DB3B3A6B8D8E003B81280A8617879F76C>104 D<902601FFFCEC7FFEB6020FB5
12F0057F14FE4CB712C0040716F0041F82047F16FE93B5C66C7F92B500F0010F14C0C66C
0380010380011F4AC76C806D4A6E8004F06F7F4C6F7F4C6F7F4C8193C915804B7014C086
1DE0A27414F0A27414F8A47513FCA57513FEAF5113FCA598B512F8A31DF0621DE0621DC0
621D806F5E701800704B5B505B704B5B7092B55A04FC4A5C704A5C706C010F5C05E0013F
49C7FC9227FE7FFC01B55A70B712F0040F16C0040393C8FC040015F8053F14C0050301F0
C9FC94CCFCB3A6B812E0A85F6F7ACD6C>112 D<902601FFF8EB07FEB691383FFFC094B5
12F00403804C14FE4C8093261FFC3F138093263FE07F13C0DC7F80B5FCC66C5D011FDAFE
0114E06DEBF9FC16F815FB16F016E015FF16C07114C05E72138095381FFE0093C76C5AF0
01E095C8FCA25DA65DB3B3A2B812F8A8434E7ACD4F>114 D<15FFA75CA55CA45CA25CA2
5CA25CA25C91B5FCA25B5B5B131F5B90B9FC120FBAFCA6D8000791C9FCB3B3A3F01FE0AE
183F7014C07F187F7014806D16FF826D4B13006E6D485AEEFE0F6E90B55A020F5D6E5D02
0115C06E6C5C031F49C7FC030113F03B6E7CEC4B>116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmbx7 7 36
/Fn 36 122 df<B512E0A713077F9019>45 D<EB1FF0EBFFFE0003EBFF803907F83FC039
0FE00FE0391FC007F0EB8003003F14F8EB00014814FCA44814FEAE6C14FCA3393F8003F8
A3391FC007F0390FE00FE03907F83FC06CB51280C6EBFE00EB1FF01F277DA526>48
D<EB03C0130F133FEA07FFB5FCA2EAF83F1200B3AA007FB512E0A31B267BA526>I<EB7F
C03803FFF8000F13FE393F81FF80397E007FC0007FEB3FE039FF801FF0A2EC0FF8A3EA7F
00123EC7FCA2EC1FF0A2EC3FE015C0EC7F80ECFF00EB01FC495AEB07E0495A90381F8078
EB3E005B4913F0EA01E00007B5FC5A5A5A5AB612E0A31D267CA526>I<EB3FF090B5FC39
03E03FC0390F801FE0D81F0013F09038800FF8EA3FC0A213E0A213C0001F14F0380F001F
C713E0143FEC7F80903801FF00EB7FFC14F014FF9038003FC0EC1FF0EC0FF815FC140700
1C14FE127FEAFF80A415FCEB000F007E14F8003EEB1FF0391FC03FE06CB512C00003EBFE
0038007FF01F277DA526>I<EC03E01407140F141F143F147F14FF5B14EFEB03CFEB078F
EB0F0F131F133E137C13F8EA01F013E0EA03C0EA0780EA0F005A123E5A5AB71280A3C738
1FE000A7010FB51280A321267EA526>I<123C123F90B6FCA34814FE15FC15F815F015E0
39780007C0EC0F8048EB1F00143E5CC75A495AA2495A13075C130F495AA2133FA349C7FC
A35BA8137E133C20287CA626>55 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCA612
1EEA7F80A2EAFFC0A4EA7F80A2EA1E000A1A7B9915>58 D<EC03E04A7EA34A7EA24A7EA2
4A7EA24A7E1479A202F17F14F0010180ECE07F010380ECC03F010780EC801FA2010F80EC
000F4980011E1307013E80013FB5FC4980A2903878000101F881497F00018249147F0003
8249143F487ED8FFFE0107B51280A331297DA838>65 D<B7FC16F016FC3A03FC0007FF03
01138081EE7FC017E0163FA4167F17C016FF4B13804B1300ED1FFC90B612F08216FE903A
FC0001FF809238007FC0EE3FE017F0161F17F8A617F0163FEE7FE0EEFFC003031380B812
0016FC16C02D287DA735>I<B7FC16F016FC3A03FE0007FF030013C0EE3FE0707E707E16
07707E83A2707EA41880A91800A35F16035F16074C5A4C5A4C5AEEFFC0030790C7FCB75A
16F093C8FC31287DA739>68 D<B712FEA33903FE0003ED00FF163FA28282A3EE07801578
A293C7FC15F8A2140390B5FCA3EBFE031400A21578EE01E0A292380003C0A31607A2EE0F
80A2161F167FED03FFB81200A32B287DA731>I<B712FCA33903FE0007ED01FEED007E16
3EA2161EA3160F1578A2160015F8A2140390B5FCA3EBFE031400A21578A392C7FCAAB512
FEA328287DA72F>I<DA0FFC133849B5EAC0780107ECF0F890391FFC01FD90397FE0003F
2601FF80131F4848C7120F4848140748481403001F15015B003F15005B007F1678A25B00
FF93C7FCA8031FB512C0A2127F6D9039000FF800A2123F7F121F7F120F6C7E6C7E6C6C6C
131F26007FE0133FD91FFC13FF0107B512F80101ECE018D9000F90C8FC322A7CA83B>I<
90383FF00E3901FFFE1E0007EBFFBE390FE01FFE381F0003003E1301007E1300007C147E
00FC143EA2151E7E7E6D90C7FC13E0EA7FFEEBFFF014FF6C14C06C14F06C80000380C680
011F7F1300140702011380EC007F153F12F0151FA36C15005D7E6C147E6C6C5B9038F003
F800FBB55A00F014C026E00FFEC7FC212A7CA82A>83 D<007FB712F0A39039803FE00FD8
7E001403007C15010078150000F816F8A2481678A5C71500B3A4017FB512F0A32D277DA6
34>I<EBFFF0000713FE486D7E391FE03FE06E7E140F6E7EA2EA0780C7FCA2EB3FFF0003
B5FC380FFE07EA3FE0EA7F80EAFF005AA36C130F141F387FC07F3A3FFFFBFFC0000F13E1
00011300221A7E9925>97 D<EAFFF0A3120FABEC7FC09038F3FFF890B512FE913880FF80
9039FC003FC049EB1FE049130F16F0150716F8A8ED0FF0A216E06D131F01FEEB3FC06DEB
FF009038CFFFFE018313F89038007FC025287EA72A>I<913807FF80A3EC007FABEB1FF8
90B5FC000314FF380FF807381FE00148487E49137F127FA248C7FCA87E7F003F14FF6D5A
6C6C5A380FF80F0003B612F8C6EBFE7FEB1FF025287EA72A>100
D<EB3FF83801FFFE48EBFF80390FF83FC0391FE007E0383FC003018013F0007F13010100
13F85AA290B5FCA390C8FCA36C7EA2003F14786C7E6C6C13F83907F807F06CB512E0C614
C090381FFE001D1A7E9922>I<EB03FE90381FFF80017F13C03901FF1FE0EA03FE13FCEA
07F8A2EC0FC091C7FCA5B512F0A3D807F8C7FCB3A2387FFFC0A31B287EA717>I<151E90
393FE07F803A01FFFDFFC00007EBFFCF390FE03F8F391FC01FCFEB800F003FECE30015E0
A4001F5CEBC01F6C6C485A6CB5C7FC4813FC380E3FE0001EC9FCA2121F90B5FC15E06C14
F815FE6C805A003F158048C7FC00FE143F48141FA26C143F007E1500D87F8013FF393FE0
03FE000FB512F8000314E026003FFEC7FC22277E9A26>I<EA0780EA0FC0EA1FE0EA3FF0
A4EA1FE0EA0FC0EA0780C7FCA5EAFFF0A3120FB3A2EAFFFEA30F297DA815>105
D<EAFFF0A3120FAB913803FFC0A3913801FE00EC03F8EC0FE04A5A4A5A02FEC7FCEBF1FC
EBF7F8EBFFFC8080A201F87F496C7E496C7E6E7E6E7E6E7E816E7E26FFFE0713E0A32328
7EA728>107 D<EAFFF0A3120FB3B0B5FCA310287DA715>I<27FFE01FE013FF9126FFFC07
13E001E16D487F3C0FE7C1FF3E0FF8D9EF00EB780701EE6D486C7E01FC14E04914C0A249
1480AEB53B07FFF83FFFC0A33A1A7D993F>I<39FFE01FE0ECFFFC01E17F390FE7C1FFEB
EF0001EEEB7F8013FC5BA25BAEB53807FFF8A3251A7D992A>I<EB1FFC90B57E000314E0
3907F80FF0390FE003F8391F8000FC003F8048C7127FA3481580A76C15006D5B003F5CEB
C0016C6C485A390FF80FF80003B512E0C61480D91FFCC7FC211A7E9926>I<39FFF07FC0
9038F3FFF890B512FE000F903880FF809039FC007FC049EB3FE049131FED0FF0A216F815
07A6150F16F0A2ED1FE06D133F01FEEB7FC09039FF01FF00ECFFFE01F313F89038F07FC0
91C8FCA8B5FCA325257E992A>I<38FFE0FCEBE1FF01E71380000FEBBFC0EBEE3F13FCA2
13F8EC0F0091C7FC5BADB57EA31A1A7E991F>114 D<3801FFCE000F13FE123F387E007E
007C133E48131EA26C90C7FCEAFFE0EBFF8014F06C7F6C13FE000F7F1203C66C13801301
38F0001F140F7E7E6CEB1F0038FF807EEBFFFC14F000E013C0191A7E991E>I<1378A413
F8A21201A212031207121FB512FCA33807F800AD141EA5143E3803FC7C3801FFF86C13F0
EB3FC017257FA41D>I<3AFFF007FF80A3000FEB007FB015FFA25C3807F8076CB5EA7FF8
6C13FC38003FF0251A7D992A>I<D8FFFEEBFFE0A3D80FF0EB3F006D133E0007143C6D13
7C000314786D13F800015CEBFF016C5C1483017F5B14C7013F5B14EF011F90C7FC14FF6D
5AA26D5AA26D5AA26D5A231A7E9928>I<3AFFFE07FFC0A33A07F801F8006D485A6C6C48
5A6C6C485A6CEB9F806DB4C7FC6D5A6D5A6D5A6D7E6D7E1307497E496C7E013E7F496C7E
496C7E48486C7E48486C7E00076D7E3AFFF007FFE0A3231A7E9928>120
D<D87FFFEB7FF0A3D807F8EB1F806D14000003141E6D133E0001143C6D137C6C1478EC80
F86D6C5A14C190383FE1E0EB1FE3ECF3C0EB0FF7ECFF807F92C7FC7F5C13015C13005CA2
00185BEA7E0100FF5B1303495A495AD87A3FC8FCEA7FFEEA3FF8EA0FE024257F9928>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmmi10 10 2
/Fo 2 63 df<EF0380EF0FC0173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FC
ED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF
80D803FECAFCEA0FF8EA3FE0EA7F8000FECBFCA2EA7F80EA3FE0EA0FF8EA03FEC66C7EEB
3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE
923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0170FEF0380323279AD41>60
D<126012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE
01FF9338007F80EF1FC0A2EF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED
1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA
07FCEA3FF0EA7FC048CBFC12FC1270323279AD41>62 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr10 10 85
/Fp 85 124 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45>I<127812FCA27E7EEA7F80121FEA0FC0EA07E0EA03F0120013
78133C131E13060F0F77B92A>18 D<121C127FEAFF80A8EA7F00AB123EAB121CABC7FCA8
121C127FEAFF80A5EA7F00121C093C79BB17>33 D<001C131C007F137F39FF80FF80A26D
13C0A3007F137F001C131C00001300A40001130101801380A20003130301001300485B00
061306000E130E485B485B485B006013601A197DB92A>I<030C1303031E497EA2033E13
0FA2033C91C7FCA2037C5BA20378131EA303F8133EA24B133CA20201147CA24B1378A202
0314F8A24B5BA302071301007FB91280BA12C0A26C1880C7271F0007C0C7FC021E5CA302
3E130FA2023C91C8FCA2027C5BA20278131EA302F8133E007FB91280BA12C0A26C188028
0003E000F8C8FC4A5BA301071301A202805BA2010F1303A202005BA2491307A2011E5CA3
013E130FA2013C91C9FCA2017C5BA20178131EA20130130C3A4A7BB945>I<141FEC7FC0
903801F0E0903803C0600107137090380F803090381F00381518A25BA2133E133F153815
30A215705D5D140190381F838092CAFC1487148E02DC49B51280EB0FF85C4A9039003FF8
000107ED0FC06E5D71C7FC6E140E010F150CD91DFC141C01391518D970FE143801E01530
2601C07F1470D803805D00076D6C5BD80F00EBC00148011F5C4890380FE003003E6E48C8
FC007E903807F8060203130E00FE6E5A6E6C5A1400ED7F706C4B13036F5A6F7E6C6C6D6C
5B7013066C6C496C130E6DD979FE5B281FF001F07F133C3C07F80FE03FC0F86CB539800F
FFF0C69026FE000313C0D91FF0D9007FC7FC393E7DBB41>38 D<121C127FEAFF80A213C0
A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A1979B917>I<1460
14E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FCA25A12
1EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E1378A2
7F7F130E7FEB0380EB01C0EB00E01460135278BD20>I<12C07E12707E7E7E120F6C7E6C
7EA26C7E6C7EA21378A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07
C0A6EB0F80A31400A25B131EA2133E133C137C1378A25BA2485A485AA2485A48C7FC120E
5A5A5A5A5A13527CBD20>I<15301578B3A6007FB812F8B912FCA26C17F8C80078C8FCB3
A6153036367BAF41>43 D<121C127FEAFF80A213C0A3127F121C1200A412011380A21203
13005A1206120E5A5A5A12600A19798817>I<B512FCA516057F941C>I<121C127FEAFF80
A5EA7F00121C0909798817>I<150C151E153EA2153C157CA2157815F8A215F01401A215
E01403A215C01407A21580140FA215005CA2141E143EA2143C147CA2147814F8A25C1301
A25C1303A2495AA25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A2
5B1203A25B1207A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F
537BBD2A>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48
487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C
15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8
233A7DB72A>I<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A3
1C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E
123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D
140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B491303484814
00485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C0
3901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401
A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F
80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF00
6C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<15
38A2157815F8A2140114031407A2140F141F141B14331473146314C313011483EB030313
071306130C131C131813301370136013C01201EA038013005A120E120C5A123812305A12
E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C90
38F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F8039
07E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300
485C12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7
FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F80
0790387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3
127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA2
49148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C
6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E
003FB612E0A316C05A168016000070C712060060140E5D151800E01438485C5D5DC71201
4A5A92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133F
A5137FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F8
48486C7E4848137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01
FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F0
7F3903E07FFE3907801FFF48486C1380481303003E6D13C0003CEB007F007C143F0078EC
0FE000F814075A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C131ED807
E0137C3903F803F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13
C09038FC07E03903F803F048486C7E48486C7E49137E121F48487FA2007F158090C7FCA2
48EC1FC0A616E0A56C143FA27F123F001F147FA26C6C13FF3907E001DF0003149F3801F0
033900FC0F1FD93FFC13C0EB07F090C7FC153F1680A316005D000F147E487E486C5BA24A
5A4A5A49485A6C48485A001C495A260F807FC7FC3807FFFC000113F038003FC0233A7DB7
2A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A3
17>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201A41203
1300A25A1206A2120E5A121812385A1260093479A317>I<007FB812F8B912FCA26C17F8
CCFCAE007FB812F8B912FCA26C17F836167B9F41>61 D<EB3FE03801FFFE3907C03F8039
0E000FC0003CEB07F000301303007014F8007C130100FE14FC7EA4127E003CEB03F8C7FC
EC07F0A2EC0FE0EC1F80EC3F00147E147C5C495A5C495A5CA249C7FCA31306AA90C8FCA8
130EEB3F80497EA56D5A010EC7FC1E3B7CBA27>63 D<1538A3157CA315FEA34A7EA34A6C
7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003
A202C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7121FA249
6E7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C
7DBB3E>65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707E
A283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0
707E707E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0
B812C094C7FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF80
7E07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F1201
4848151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6D
ED0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D
6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002
011380313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03
F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A2
18E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F8
16C036397DB83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA317
06A317078316C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860
A318E093C712C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA33339
7DB839>I<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E
1706A2ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD
4813C0B612C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A
03FC000787D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F4848
1507A248481503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0
EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90F
F8EB03C7D903FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7C
BA41>I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6
486D497EB648B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A3
1A397EB81E>I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFFC0A44A5A
1380D87F005B0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F80233B7DB82B
>I<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A
4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E
4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E707E
A2707E707F8484486D497FB6011FEBFF80A339397DB841>I<B612E0A3000101C0C8FC6C
90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D
397DB834>I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7
F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C
1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3
ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED01
8045397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCF
F8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED
7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1F
F6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA21706
37397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED9
3F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2
001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17
F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A
5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390
C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0
EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF00
91B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<B612FEEDFFE016F80001903880
07FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004FF
C8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583A6F00180
A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07F0393B7D
B83D>82 D<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F484813
3F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F8
6CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC
007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C15
C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D
7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F00078160000701770
A300601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C>
I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E6D150C80
171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC91387F80
7E91381FFFF8020713E09138007F80373B7DB83E>I<B500FC91387FFF80A30003018091
380FFC006C90C8EA07E0715A6C705A6E1403017F93C7FCA280013F1506A26E140E011F15
0C80010F5DA28001075DA26E147001031560A26D6C5CA2806D4A5AA2ED8003027F91C8FC
A291383FC006A215E0021F5BA2EDF01C020F1318A26E6C5AA215FC02035BA2EDFEE00201
5BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB83E>I<B5D8FC07B5D8F001B5FCA30007
902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A26E
5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D
6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003FC
A203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A2
15F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A2020093C8FC4B
80503B7EB855>I<007FB590383FFFFCA3C601F801071380D97FE0D903FCC7FC013FEC01
F06D6C5C5F6D6C5C6D6C13034CC8FC6D6C1306160E6D6C5B6DEB8018163891387FC0306E
6C5A16E06E6C5A91380FF18015FB6EB4C9FC5D14036E7EA26E7F6F7EA24B7E15DF913801
9FF09138038FF8150F91380607FC91380E03FE140C4A6C7EEC38000230804A6D7E14E04A
6D7E49486D7E130391C76C7E01066E7E130E010C6E7E011C1401013C8101FE822607FF80
010713E0B500E0013FEBFF80A339397EB83E>I<B500FE91383FFFE0A3000301E0913807
FE00C649EC03F0017F6F5A606D6C5D6D6C140395C7FC6D6C1406A26D6C5C6D6C141C1718
6D6C143817306D6D5B6E6C13E05F91383FE0015F91381FF003DA0FF890C8FC1606913807
FC0E160C913803FE1C913801FF185E6E13B016E0157F6F5AB3A24B7E023FB512C0A33B39
7FB83E>I<003FB7FCA39039FC0001FE01C0130349495A003EC7FC003C4A5A5E0038141F
00784A5A12704B5A5E006014FF4A90C7FCA24A5A5DC712074A5AA24A5A5D143F4A5AA24A
5A92C8FC5B495AA2495A5C130F4948EB0180A2495A5C137F495A16034890C7FC5B120348
5AEE0700485A495C001F5D48485C5E4848495A49130FB8FCA329397BB833>I<EAFFF8A4
EAF000B3B3B3B3A3EAFFF8A40D5378BD17>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D
537FBD17>93 D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA2
6E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC
160C12FEA31401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00F
E03A007F8007C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E0
3E9039F3801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E
167FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F0090
3881E07E903800FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F8
0070484813F83907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12
FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E03900
7C07C090381FFF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1F
FF90387E078F9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2
127E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF
39007C078F90381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F8
03E03903F001F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7
FCA248C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F01338
6C6C137090387E03E090381FFF80903803FC0020277EA525>I<147E903803FF8090380F
C1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB
487E387FFFF8A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C39
01F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C
485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE
6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C
15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7
FC26387EA52A>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039
F3800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<
EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312
387EB717>I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301
B3B3A2123C127E00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B7
19>I<EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A
4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E81
1400157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3
120F1203B3B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8
913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D9
07F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<
3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25B
A35BB3A3486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E090
38F800F84848137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0
A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F00
6C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000
FFEB7FF89038F1E07E9039F3801F803A0FF7000FC0D803FEEB07E049EB03F04914F84913
0116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C090
39F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D9
03F813C090381FFE0190387E07819038FC01C33903F000E3000714774848133749133F00
1F141F485A150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF
3901F801CF39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>
I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038
FC0080491300A45BB3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E
003F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037F
C67F01071380EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E
38F3C07C38E1FFF038C03F801A277DA521>I<1318A51338A31378A313F8120112031207
001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01
F81A347FB220>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F
12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267E
A42E>I<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C
1306A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F1
80A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260F
F8009038000FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC80
06156FA2017E9038EFC00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EB
F87090260FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A
7FA20100141E4A130E0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F
80000092C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D
5AA2147F804A7E8114CF903801C7E090380383F090380703F8EB0601496C7E011C137E49
137F01787F496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFE
A33A0FF8000FF06C48EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA2
6D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA3
1438A21430A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1F
F0EA0FC027357EA32C>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012
300070EB1FC0EC3F800060137F150014FE495AA2C6485A495AA2495A495A495AA290387F
000613FEA2485A485A0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90
B5FCA21F247EA325>I<B81280A2290280962A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmbx10 10 82
/Fq 82 124 df<913A03FF8007FE027F9039F07FFF800103B500FDB512E0010F903A00FF
FE0FF0D93FF8ECF81F90267FE0019038F03FF849485A4816E014804816C00200ED1FF081
F007C06F91C7FCA8B912E0A4000390C701C0C7FCB3ABB5D8FC3FEBFF80A43D3A7EB938>
11 D<913803FFC0027F13F00103B512FC010FEB00FED93FF8133FD97FE0EBFF8049485A
5A1480484A13C04A6C1380A36F1300167E93C7FCA592383FFFC0B8FCA4000390C7FCB3AB
B5D8FC3F13FFA4303A7EB935>I<913903FFC7C0027F13FF0103B6FC010F130090383FF8
0190387FE003EBFFC05A14805A4A7EA281A9B8FCA4000390C7FCB3ABB5D8FC3F13FFA430
3A7EB935>I<EA0F80EA3FE0EA7FF0EAFFF8A8EA7FF0A7EA3FE0A7EA1FC0A7EA0F80A7C7
FCA7EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D3B78BA1D>33
D<0470EB038004F8497EA30301140F4C5CA20303141F4C91C7FCA303075C4C133EA2030F
147E4C137CA3031F14FC93C75AA34B1301033E5CA2007FBA12F0BB12F8A36C19F0C72801
F0000F80C7FCA30203141F4B91C8FCA302075C4B133EA3020F147E4B137CA3007FBA12F0
BB12F8A36C19F0C7277C0003E0C8FCA202FC13074A5CA30101140F4A5CA20103141F4A91
C9FCA201075C4A133EA3010F147E4A137CA2011F14FC91C75AA3010E1470454A7BB950>
35 D<EC07F0EC3FFC4A7E903801FE1F49487E49486C7E14F0010F8090381FE003A3133F
A215075EA26E48C9FC5D151E5D5D6D6C5ADAF9E00103B5FCECFBC0ECFF8092C7FC6D4891
38001F801900181E6D6C153E606F1478496D14F8494B5A013D6D5C01786D1303D801F84B
5A48486C6C5C00076E130F000F6D6C49C7FC261FE01F143E003F6E133C007F6DEB807C6E
6D5A00FF6DEBE1F06EEBF3E06EEBF7C06FB45A6F90C8FC6D6D48140F6F7E007F6E13C06D
6D6D131E003F020F6D133E6C6C017F01FC137C3D0FFF03FF3FFF03FC6C9026FFFC0FEBFF
F86CDAF00314E0C69126C0007F13C0D90FFCC73807FE00403C7CBA4A>38
D<EA0F80EA3FE0EA7FF0A2EAFFF8A213FCA3127FA2123FEA0F9CEA001C133C1338A31378
137013F0EA01E0A2EA03C0EA0780EA0F005A121C12180E1D79B91B>I<141C143C14F8EB
01F0EB03E01307EB0FC0EB1F8014005B137E13FE5B12015B1203A2485AA2120F5B121FA2
5B123FA4485AA512FFB1127FA56C7EA4121F7FA2120F7F1207A26C7EA212017F12007F13
7E7F7F1480EB0FC0EB07E01303EB01F0EB00F8143C141C165377BD25>I<12E07E127C7E
7E7F6C7E6C7E12037F6C7E7F12007F137E137FA2EB3F80A214C0131F14E0A2130F14F0A4
EB07F8A514FCB114F8A5EB0FF0A414E0131FA214C0133F1480A2EB7F00A2137E13FE5B12
015B485A5B1207485A485A90C7FC123E5A12F05A16537BBD25>I<ED03804B7EB3AB007F
B912FCBA12FEA36C18FCC8D807C0C8FCB3AB6F5A3F417BB44A>43
D<EA0F80EA3FE0EA7FF0A2EAFFF8A213FCA3127FA2123FEA0F9CEA001C133C1338A31378
137013F0EA01E0A2EA03C0EA0780EA0F005A121C12180E1D798C1B>I<B61280A819087F
9620>I<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B>I<1670
16F8A2150116F0A2150316E0150716C0A2150F1680151F16005D153EA2157E157C15FC5D
A214015D14035DA214075D140F5D141F92C7FCA25C143E147E147CA214FC5C13015CA213
035C13075CA2130F5C131F91C8FC5B133EA2137E137C13FC5BA212015B12035BA212075B
120F5B121F90C9FCA25A123E127E127CA212FC5AA2127025537BBD30>I<49B4FC010F13
E0017F13FC9038FF83FE4848C67E4848EB7F804848EB3FC04848EB1FE0A2001F15F0A248
48EB0FF8A3007F15FCA500FF15FEB3007F15FCA4003F15F8A26D131F001F15F0A2000F15
E06D133F000715C06C6CEB7F806C6CEBFF003900FF83FE6DB45A011F13F0010190C7FC27
387CB630>I<141E143E14FE1307133FB5FCA313CFEA000FB3B3A6007FB61280A4213779
B630>I<EB0FFC90387FFFC048B512F0000714FC390FF03FFF261F800F1380263F000313
C05AD9C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8FCEDFFF0A216E05C16
C04A138016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F849481378495A495A495A
013EC712F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA425377BB630>I<EB03
FF011F13F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF001FC14F0
121F7FA56C4814E0A23803F001C714C04A138016004A5A4A5AEC3FF090380FFFC092C7FC
15F090380007FE913801FF806E13C016E0ED7FF016F816FC153FA216FEEA1FC0487E487E
487EA416FCA249EB7FF8127F01C0EBFFF06C4814E06C6C4813C0260FFC0713806CB61200
000114FC6C6C13F0010790C7FC27387CB630>I<ED07C0150FA2151F153F157F15FFA25C
5C5C5CA2141E5C147C5C5C495A495A1307495A5C131E5B137C5B5B485A485A1207485A90
C7FC121E5A127C5AB81280A4C70001EBC000AA0103B61280A429377DB630>I<001C15C0
D81F80130701F8137F90B61280A216005D5D15F05D15804AC7FC14F090C9FCA8EB07FE90
383FFFE090B512F89038FC07FC9038E003FFD98001138090C713C0120EC813E0157F16F0
A216F8A21206EA3F80EA7FE012FF7FA44914F0A26C4813FF90C713E0007C15C06C5B6C49
1380D9C0071300390FF01FFE6CB512F8000114E06C6C1380D90FF8C7FC25387BB630>I<
EC0FF8ECFFFE0103EBFF8090390FF80FC090393FE003E090397FC001F09038FF000F48EC
1FF84848133F485A120F5B121FA2003FEC1FF0ED0FE04990C7FC127FA21408EC7FF039FF
F1FFFC01F313FFD9F78013809039FF007FC049EB3FE04914F0ED1FF85B16FCA34914FEA5
127FA5123F16FCA26C7E16F8000F143F6C6C14F0ED7FE06C6C14C03A01FF81FF806C90B5
1200013F13FC010F13F00101138027387CB630>I<123C123EEA3FE090B71280A4170048
5D5E5E5EA25E007CC7EA0FC000784A5A4BC7FC00F8147E48147C15FC4A5A4A5AC7485A5D
140F4A5A143F92C8FC5C147E14FE1301A2495AA31307A2130F5CA2131FA5133FA96D5A6D
5A6D5A293A7BB830>I<49B47E010F13F0013F13FC9038FE01FF3A01F8007F804848EB3F
C04848EB1FE0150F485AED07F0121FA27FA27F7F01FEEB0FE0EBFF809138E01FC06CEBF0
3F02FC13809138FF7F006C14FC6C5C7E6C14FE6D7F6D14C04914E048B612F0EA07F84848
6C13F8261FE01F13FC383FC007EB8001007F6D13FE90C7123F48140F48140715031501A2
1500A216FC7E6C14016D14F86C6CEB03F06D13076C6CEB0FE0D80FFEEB7FC00003B61200
C614FC013F13F00103138027387CB630>I<EB03FF011F13E0017F13F83901FF03FE4848
C67E4848EB7F80484814C0001FEC3FE0123F49EB1FF0127F16F8A212FF16FCA516FEA500
7F143FA3123F157F6C7E000F14FF6C6C5A3903FE03DF6CB5129F6C6C131FD91FFC13FCEB
00201400A216F8D80FE0133F487E486C14F0A216E0157F16C0EDFF80495A6C4848130090
388007FE390FE01FF86CB55A6C14C0C691C7FCEB1FF027387CB630>I<EA0F80EA3FE0EA
7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F80C7FCABEA0F80EA3FE0EA7FF0A2EAFFF8A5EA7F
F0A2EA3FE0EA0F800D2579A41B>I<007FB912FCBA12FEA36C18FCCDFCAF007FB912FCBA
12FEA36C18FC3F197BA04A>61 D<EB1FFE48B512E0000714F8390FE00FFE393F0003FF48
15806D7ED8FFC014C013E0A5EA7FC06C48481380EA1F00C7481300EC0FFC4A5AEC3FE04A
5A92C7FC14FE5C495AA25C495AA25CA990C9FCA7EB07C0EB1FF0497EA2497EA56D5AA26D
5AEB07C0223A7BB92D>63 D<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A80
15F302038015E1A202078015C0020F80ED807FA2021F80ED003F4A80023E131FA2027E80
027C7F02FC814A7FA20101824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291C8
123F4982013E151FA2017E82017C8101FE83B500F80107B61280A4413A7DB948>65
D<B812C017FC17FF18C028007FF000037F04007F717E717E171F84A2717EA74D5AA26017
3F4D5A4D5A4C13C0040F5B91B600FCC7FCA2EFFF8002F0C713F0EF3FF8717E717E717E19
807113C0A319E0A719C0A25F4D138019005FEF7FFE4C485AB912F018C095C7FC17F03B39
7DB844>I<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00FF3F49
01C0EB1FFFD91FFEC77E49481403D97FF080494880485B48177F4849153F4890C9FC181F
485A180F123F5B1807127FA24993C7FC12FFAD127F7FF003C0123FA27F001F1707A26C6C
1780180F6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A5A6DB44A5A010701C0EB0F
E06D01FCEBFF80010090B548C7FC021F14F8020314E09126003FFEC8FC3A3B7BB945>I<
B87E17F817FF18C028007FF8000713F09338007FF8EF1FFE717E050313807113C0A27113
E0F07FF0A2F03FF8A219FC181FA219FEA419FFAC19FEA419FC183FA219F8187F19F0F0FF
E0A24D13C04D13804D1300EF1FFEEF7FFC933807FFF0B912C095C7FC17FC178040397DB8
49>I<B912F0A426007FF8C7FCEF1FF8170717031701A21700A21878A3043C137C183CA4
1800167CA216FC150391B5FCA4ECF8031500167CA2163C180FA3181EA293C7FCA2183EA2
183C187CA218FCA2EF01F81703170F173FEE01FFB9FC18F0A338397DB83F>I<B912C0A4
3A007FF800039338007FE0171F170F1707A21703A21701A318F0EE7800A41800A216F8A2
1501150791B5FCA4ECF80715011500A21678A693C8FCADB7FCA434397DB83C>I<DB3FFC
EB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00FF3F4901C0EB1FFFD91FFE
C77E49481403D97FF080494880485B48177F4849153F4890C9FC181F485A180F123F5B18
07127FA24993C8FC12FFAB043FB61280A2127F7FDC0003EBC000123FA27F121FA26C7EA2
6C7F6C7F6C7F7ED97FF85C6D7E6DB45C010701C05B6D01FCEBFF3F010090B5EAFE0F021F
ECF8030203ECE0009126003FFEC9FC413B7BB94B>I<B6D8FC03B612F0A426007FF8C700
01EBE000B3A391B8FCA402F8C71201B3A6B6D8FC03B612F0A444397DB84B>I<B612FCA4
39007FF800B3B3ADB612FCA41E397DB824>I<010FB612C0A4D90001EBE000B3B3EA0F80
EA3FE0EA7FF0A2EAFFF8A35E5C13F0007F495BD83FE091C7FC391F800FFE390FF03FFC6C
B512F0000114C026003FFCC8FC2A3A7FB831>I<B600FC0103B512C0A426007FF8C8381F
E00019804EC7FC18FEEF01F84D5A4D5A4D5AEF3F80057EC8FC5F4C5A4C5AEE0FE0EE1F80
4CC9FC167E5EED03F84B7E4B7E4B7E4B7F5D02F9B57EDAFBF77FDAFFE37F15C103807F4A
487F4A6D7E4A133F707E707F8482707F707F8482717E717E8483717F717F858385B600FC
017FEBFFE0A443397DB84B>I<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35FA25F
A25F5F5E5EEE0FFE167FB8FCA431397DB839>I<B500F80403B512F06E5EA26E5ED8007F
F1E000A2D97BFF161EA201796D5DA201786D5DA26E6C5DA36E6C4A5AA26E6C4A5AA26E6C
4A5AA26E6C4A5AA26E6C141EA36E6D5BA26E6D5BA26F6C5BA26F6C485AA36F6C485AA26F
6C485AA26F6C48C7FCA2923803FF1EA36F13BCA26F13F8A2705AA2705AA213FCB500FC6D
4848B612F0A2EE0F80EE070054397DB85B>I<B500FC0203B512F0A28080C66C6D903900
03F0006F6E5A81017B7F13798101787F6E7E6E7E6E7F6E7FA26E7F6E7F6E7F6E7F6F7E15
3F826F13806F13C06F13E06F13F06F13F88117FCEE7FFEEE3FFF7013817013C17013E182
18F17013F97013FDEF7FFF8383A28383838383187FA2183F181F01FC160FB500FC150718
031801A244397DB84B>I<EDFFF8020FEBFF80027F14F0903A01FFC01FFC010790380007
FFD91FFC010113C0D93FF06D6C7E49486E7E49486E7E48496E7E48834890C86C7EA24848
6F1380A248486F13C0A2003F18E0A348486F13F0A400FF18F8AC007F18F06D5DA3003F18
E0A26D5D001F18C0A26C6C4B13806C18006E5C6C6D4A5A6C5F6C6D4A5A6D6C4A5AD93FFC
49485A6DB401075B0107D9C01F90C7FC010190B512FC6D6C14F0020F1480020001F8C8FC
3D3B7BB948>I<B8FC17F017FEEFFF8028007FF8000F13C0040113E07013F0EF7FF8EF3F
FCA2EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7120017FC17
E002F8C9FCB3A4B612FCA438397DB841>I<EDFFF8020FEBFF80027F14F0903A01FFE03F
FC010790380007FFD91FFC010113C049486D7FD97FE0EC3FF049486E7E488348496E7E48
90C86C7EA248486F1380A2001F18C04981003F18E0A3007F18F04981A300FF18F8AC007F
18F0A36D5D003F18E0A36C6C4B13C0A2000FDA1FC014806C6C90267FF0071300EDFFF86C
903A81F07C0FFE6C903AC3C01E1FFC6CDA800F5BD97FE3ECBFF0D93FF36DB45AD91FFF5D
010701C091C7FC01019038F01FFC6D6CB500F01308020F6E131C0200EBF9FC92260001FE
133C9438FF80FC18FF8219F8A28319F0A27113E0A27113C0711380711300EF01FC3E4A7B
B948>I<B712FCEEFFE017FC17FF28007FF8000F13C004017F707F717E717EA2717EA284
A760A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E0839139F8003FFCEE0FFF707F
707F8284A2707FA584A51A601AF084177F1901DD3FFE13E0B600FC011F130394390FFF87
C071EBFF8005011400CBEA1FFC443A7DB848>I<D907FF130E013FEBE01E90B5EAF83E00
03ECFE7E3A07FC01FFFE390FF0001F4848130F48481303491301007F140090C8FC167E5A
163EA27F161E7F7F6D91C7FC13FC387FFFE014FEECFFF06C14FE6F7E6C816C15F06C816C
81C681133F010F801301D9000F1480EC007F030F13C01503818100F0157FA3163FA27E17
807E167F6C16007E6D14FE01E0495A01F813039039FF801FF800FC90B512E0D8F83F5CD8
F00749C7FC39E0007FF02A3B7BB935>I<003FB91280A4D9F800EBF003D87FC09238007F
C049161F007EC7150FA2007C1707A200781703A400F818E0481701A4C892C7FCB3AE010F
B7FCA43B387DB742>I<B600FC011FB512C0A426007FF8C8381FC000725AB3B3181F013F
94C7FC8060011F163E6D6C157E187C6D6C15FC6D6D495A6D6DEB07F06D01F0EB1FE0DA7F
FEEBFFC0021FB6C8FC02075C020014F0030F1380423A7DB849>I<B600F00103B512E0A4
C601F0C83807F0006E5E017F5F6E150FA2013F5F6E151F011F94C7FC6E5D6D163E6F147E
6D167CA26F14FC6D5E6F13016D5E6F13036D5E811707027F5D6F130F023F5D6F131F021F
92C8FC815F6E143EEE807E6E147CEEC0FC6E5C16E016E16E5C16F36E5C16FF6F5BA36F5B
A26F90C9FCA26F5AA36F5AA26F5AA26F5A433A7EB848>I<B6D8E01FB500FC90383FFFFC
A4000101F0C7D83FFCC8EA7E006C71153C171F6E197C017F701578836E7014F8013F6F5E
6E1801011F4B6D5CA26E18036D4B6D5CA26D6D496D495A173C6F170F6D037C6D91C7FCEF
787F6F5F6D4B6C6C131E816D02016E5BEFE01F03F8177C027F01036E13784D7E03FCEE80
F8023F49486C5C15FE021F010FEDC1E04D7E03FF16C36E49EDE3C0041E7F049E15F76E01
BC6D5C04FC15FF6E95C8FC4C80A26E5F4C143F6E5F4C141FA2037F5E4C140FA26F486E5A
A2031F5E93C812036F5E5E3A7EB863>I<007FB5D8F803B512F8A4C66C48C7D80FF0C7FC
6D6C5D6D5E6F495A6D6D49C8FC7F6D6D137E6F5B6DEBF8016D5D6F485A6E6C485A023F13
0FDA1FFF5BEE9F806E01FFC9FC805E6E5B6E5B80826F7E153F826F7F5D4B7F92B57EA2DA
01F97FDA03F17F03F07F913807E07FDA0FC07F021F6D7E4B7E4A486C7F027E8102FE6D7F
4A7F49488149486D7F0107804A6E7E49488149486E7E013F81017F83B60107B61280A441
397DB848>I<B600F049B512E0A4C601FCC8380FF000017F705A6E4B5A6D6C4B5A6D7F4E
C7FC6D6D147E6D7F606D6D495A6D7F4D5A6D6D495A6E7E4D5A6E6C495A6E13804DC8FC6E
EBC07E6E13E05F6EEBF1F86E13F9EEFBF06EEBFFE0815F6F5B816F90C9FCB3A2021FB6FC
A443397EB848>I<003FB712FEA4913980007FFC01FCC7EAFFF801F05B01C015F0494913
E090C75A4816C0007E4A13805D007C16004B5A157F00785D4B5A5C5EC7485B5C5E5C4A5B
93C7FC5C4A5A5D14FF495B5D5B495B4B131E5B5D4990C7FC5B5C4948143E13FF5C485B48
167E4A147C484914FC5A4A13014890C7120348150F49143F4848EB01FFB8FCA42F397BB8
3A>I<EAFFFCA5EAF800B3B3B3B3EAFFFCA50E5376BD1B>I<EAFFFCA5EA007CB3B3B3B3EA
FFFCA50E537EBD1B>93 D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F
6E7FA26F7EA26C5A6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380F
FE00EA3FF85B485A12FF5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F
0003EBF80F39003FE0032A257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0023F
13FC9138FE03FFDAF00013804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FE
AA17FCA3EE1FF8A217F06E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039
F03FFFF8D9E00F13E0D9C00390C7FC2F3A7EB935>I<903801FFC0010F13FC017F13FFD9
FF8013802603FE0013C048485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12
FFA9127FA27F123FED01E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB4
5A010F13F00101138023257DA42A>I<EE7F80ED7FFFA4150381AF903801FF81010F13F1
013F13FD9038FFC07F0003EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA12
7FA27F123FA26C6C5B000F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1
010313012F3A7DB935>I<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F8048
48133F484814C0001FEC1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FC
A4127FA36C7E1678121F6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB512
00010F13FC010113E025257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F809038
3FE0FFD9FFC113C0A2481381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3
ABB512FEA4223A7DB91D>I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F
260FF801131F48486C138F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF00
1F5D6C6C4890C7FC3907FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C
7E90B512F8EDFF8016E06C15F86C816C815A001F81393FC0000F48C8138048157F5A163F
A36C157F6C16006D5C6C6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC01
0713F02B377DA530>I<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FF
DA3C01138014784A7E4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA
01F0EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4
153B7DBA1B>I<141FEC7FC0ECFFE0A24913F0A56D13E0A2EC7FC0EC1F0091C7FCA9EC0F
F0EB0FFFA4EB007F143FB3B0121FEA3F80EA7FC0EAFFE0EC7FE0A215C014FF6C48138090
3883FE006CB45A000F13F0000113801C4B86BA1D>I<13FFB5FCA412077EAF92380FFFE0
A4923803FC0016F0ED0FE0ED1F804BC7FC157E5DEC03F8EC07E04A5A141FEC7FE04A7E81
81A2ECCFFEEC0FFF496C7F806E7F6E7F82157F6F7E6F7E82150F82B5D8F83F13F8A42D3A
7EB932>I<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>I<01FED97FE0EB0FFC00FF
902601FFFC90383FFF80020701FF90B512E0DA1F81903983F03FF0DA3C00903887801F00
0749DACF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291C75BB3A3B5D8FC1FB50083
B512F0A44C257DA451>I<01FEEB7FC000FF903803FFF8020F13FE91381F03FFDA3C0113
80000713780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430257DA435>I<
903801FFC0010F13F8017F13FFD9FF807F3A03FE003FE048486D7E48486D7E48486D7EA2
003F81491303007F81A300FF1680A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C
495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029257DA430>I<9039FF01FF
80B5000F13F0023F13FC9138FE07FFDAF00113800007496C13C06C0180EB7FE091C713F0
EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E137F6E14E06EEBFFC0DAF003
13809139FC07FE0091383FFFF8020F13E0020390C7FC91C9FCACB512FCA42F357EA435>
I<49B4EB0780010FEBE00F013FEBF81F9039FFC07C3F0003EB803E3A07FE000F7F4848EB
07FF121F497F123F497F127FA25B12FFAA6C7EA36C7E5D6C7E000F5C6C6C5B6C6C133F6C
EBC0FD39007FFFF1011F13C10101130190C7FCAC037F13FEA42F357DA432>I<9038FE03
F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5CA29138807F80ED3F0015
0C92C7FC91C8FCB3A2B512FEA422257EA427>I<90383FF0383903FFFEF8000F13FF381F
C00F383F0003007E1301007C130012FC15787E7E6D130013FCEBFFE06C13FCECFF806C14
C06C14F06C14F81203C614FC131F9038007FFE140700F0130114007E157E7E157C6C14FC
6C14F8EB80019038F007F090B512C000F8140038E01FF81F257DA426>I<130FA55BA45B
A25B5BA25A1207001FEBFFE0B6FCA3000390C7FCB21578A815F86CEB80F014816CEBC3E0
90383FFFC06D1380903803FE001D357EB425>I<01FFEC3FC0B5EB3FFFA4000714016C80
B3A35DA25DA26C5C6E4813E06CD9C03E13FF90387FFFFC011F13F00103138030257DA435
>I<B539F001FFF8A4000390C7EA3F00161E6E133E6C153C6E137C6C15786E13F8017F5C
ECF001013F5C14F8011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13
BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA22D257EA432>I<B500F1B538803FFFA43D07
FE000FF80003E06C6C010715C082028015076C6E6C148015076C01C0ED0F00826E485C01
7FED801E5D90273FF01E7F5B17C0DAF83E147C011F90393C3FE078037C14F8903B0FFC78
1FF0F0A29139FEF00FF10107EDF9E002FF14FB6D496CB45AA24B7E6D5EA26D496C90C7FC
A292C7FC6E5CA2023E147C023C143C40257EA445>I<B539F01FFFF0A4000390398003F8
006C01C013E06C1407D97FE05B6D6C485A6E48C7FC90381FFC3E010F5B903807FEFC6D6C
5A5D6D5B6D5B6E7E6E7E814A7EA24A7E903801F3FFD903E37FD907C17FEB0FC049486C7E
4A6C7E013E80496D7E49130F00016E7EB590383FFFF8A42D257EA432>I<B539F001FFF8
A4000390C7EA3F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8
011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5A
A26E5AA26E5AA26E5AA292C8FCA25C141E003F133E387F803C38FFC07C147814F8EBC1F0
EBC3E06C485A387D1F80D83FFFC9FCEA1FFCEA07F02D357EA432>I<003FB612C0A3D9F0
031380EB800749481300003E5C003C495A007C133F5D0078495A14FF5D495B5BC6485B92
C7FC495A131F5C495A017FEB03C0EBFFF014E04813C05AEC80074813005A49EB0F80485A
003F141F4848133F9038F001FFB7FCA322257DA42A>I<B812FEA32F03809730>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmbx12 24.88 34
/Fr 34 122 df<BA12F0B33C137DB74D>45 D[<F31FE0F37FF8A2517EA2507FA3507FA2
5080A35080A25080A35080A25080A397B67EA24F81A34F81A24F82A34F82A24F82A21AFB
DF3FF981A2DF7FF1811AF06207FF6D80A24E01C081871A804E6E80A24E0100828761060F
6E81A24E48838761063F6E81A24E4883876106FF6F80A24D498388614D7080A24D90C8FC
768160050F7081A260051F708160053F7081A260057F70816005FF7180A2604C7280604C
7280A295CAFC4C72815F040F7281A294BDFC4C88A24C88A34C88A293BE7E05E0CB7E5F4B
7480A24B497280A294CCFC4B7481A24B487381A25E031F7481A24B487381A25E037F7481
A24B487480A25E4A7680A24A497480A293CEFC4A7681A24A4875814A7E0107B512FCB96C
043FBA12FCA9>158 145 120 272 175 65 D[<BFFC1EFEF6FFE01FFCF7FF8020F020FC
20FF8DC7000392CA001F15E00B0181776C800C1F807814FF0C03818A78818E79808B8E8B
8E8B8EA27980A4791580AB551500A4555CA26A676A676A555C9CB65AA2545D5492C7FC54
5C5414F80C3F5C545C53B612800B0F4AC8FC0B7F14F80A1FB612E095BBC9FC1FF81F801F
F8F7FF8020F820FE95CBECFFC00C1F14F00C07807814FE0C006E7E798079807980798079
8079808E79158023C08B23E08C23F0A223F88CA223FCA38C23FEAB5614FCA55614F8A39D
B612F0A25515E06723C055158067551500555C555C9CB6FC545D0C075D0C1F15C09BB75A
0B0F93C7FCC212FC6921E021800EFCC8FC20F020800DF0C9FC0CFCCAFC>143
142 120 269 165 I[<0803B500C0EE01F00703B600FEEE03F8077FDBFFE015070607B8
00FC150F063F05FF151F4DBA00E0143F050F07F8147F053F07FE14FF94BC5B04039326F8
000FECC003040F4BC86CEBF007043F03C0030F6D5A93B648C900036D5A4B03F09339007F
FF3F030703C0051F90B5FC4B92CB7E033F02FC18034B02F08492B648844A0380193F4A92
CD7E4A4A864A4A864A02F0864A4A864A8991B65A494B874992CF7E4C885B494A885E498B
494A88A2495C8D90B65A8D5A5E48217FA24892D1FC223FA25A5DA248211FA3485CFA0FF0
9FC7FCA25AA45DA3B6FCB27EA381A47EA46C80FA07F0FA0FF87EA2817EA36C6F1D1F23F0
7E827E223F6D6E1EE0A26D6E1D7F23C06D6E1DFF7F705213806D806D55130070646D6F64
6D6F515A6E6E1B1F6E6E515A6E6E515A6E6E1BFF6E6E505B6E6E505B6E6F4F5B6E03E04F
90C7FC6F6EF13FFE6F02FC4F5A030F02FF4E485A6F03C005075B030103F0051F5B6F03FE
057F1380043FDAFFE00303B5C8FC040F03FE033F13FC0403DBFFF80107B55A040093B812
E0053F1A80050F4FC9FC050119F8DD003F18C0060795CAFCDE007F16F0070393CBFCDF00
0314C0>141 146 115 271 168 I[<BE12FEF5FFFCF6FFC01FFCF7FF8020E020FC20FF21
C0C700030380C8000116F0E2000F810B0015FE0C1F800C0315C00C00810D3F8079800D07
14FE79807981796C808C7A807A808F7A807A808C8F7A818DA17E8DA17E8DA17EA27B80A2
A17E8DA17EA28DA17EA3A113808DA3A113C0A57B15E0A6A113F0B3A2A113E0A569A113C0
A5A11380A269A2A11300A3575CA2A15AA269A15A69A15AA2575CA15A69A15A9EB6FC5692
C7FC6B565C68565C565C565C565C9DB65A5592C8FC0D075C555C0D3F5C9CB65A0C0315C0
0C0F5D0C7F92C9FC0B07B612FC52B712F0C212C09ECAFC20FC20F020800DFCCBFC1FE00C
FCCCFC53CDFC>156 142 120 269 178 I[<C212F8A48DA5C7000303C0C9123FF5007F1E
0F0C0180787E1F1F8B8B1F018BA27A7E8C8CA28CA28CA28C8EA28CA38CA38EA2E21FF015
7FA67B7EA40A3F93C8FCA41C7FA21CFFA26363631B1F1B7F0807B5FC95B8FCA99538C000
07F2007F1B1F1B07878787A21C7FA21C3FA3FA7FC01C1FA2FAFF80A6571300A299CAFCA3
69A26AA22107A3210F6AA2211FA2213FA2575AA221FFA26868565BA26868207F9DB5FC55
5C1F071F1F1F7F0C03B6FC1E3F0B1FB7FCC35AA66AA3>138 141
120 268 153 I[<C21280A421C0A5C7000303C0C81201F40007F5007F0C1F14E01E071E
01787E8B8B8B8B7913F0A28B8BA2207FA3203F21F8201FA4200FA321FC2007A4F47FC0A3
F803FEA49DC7FCA31CFFA463A263A26363631B7F50B5FC1A1F95B8FCA99538C0001F1A01
747E1B1F878787A287A287A41C7FAA99CBFCB3AFBC12F8A9>127
141 120 268 146 I[<BC0207BB12F8A9C7000303C0CC001F4AC8FCB3B3B395BEFCA906
C0CC121FB3B3B3A6BC0207BB12F8A9>165 142 120 269 182 72
D[<BC12C0A9C7000103E0C8FCB3B3B3B3B3B3B0BC12C0A9>74 142
122 269 87 I[<B900C00C7FB812E0729BB9FC72657265A37265A27265C70003A101F8C8
FC72F51FEFA2706EF43FCFA3706EF47F8FA2706EF4FF0FA2706EF301FEA3706EF303FCA2
706EF307F8A2706EF30FF0A2706EF31FE0A3716EF23FC0A2716EF27F80A2716EF2FF00A2
716E4F5AA3716E4F5AA2716E4F5AA2716E4F5AA3716E4F5AA2726E4E5AA2726E4E5AA272
6E4EC7FCA3726E4D5AA2726E4D5AA2726E4D5AA2726E4D5AA3726E4D5AA2736E4C5AA273
6E4C5AA3736E4CC8FCA2736E4B5AA2736E4B5AA2736E4B5AA3736E4B5AA2736E4B5AA274
6E4A5AA2746E4A5AA3746E4AC9FCA2746E495AA2746E495AA3746E495AA2746E495AA274
6E495AA2756E485AA3756E485AA2756E48CAFCA275ECF1FEA275ECFBFCA375ECFFF8A275
5DA2755DA3765CA2765CA27691CBFCA2765BA34A6D715B49B512FEB900FC6F490303BB12
E0A2765BA2765BA3775A0B1FC9FC>203 142 120 269 220 77 D[<B900E04EB912F884
848484A2848585C700037094C7000302FCC7FC73DF000F90C8FC7C5A85858585A2708170
8170817081868270817081708187837181718171817181A2718171817181728188847281
728172817281A272817281738173818985738173817381898573817481748174818A8674
81748174818A8675817581758175818B877581758175818C887681768176817681A27681
7681768177158021C0897715E07715F07715F87715FCA27715FE7715FF7815877815C722
E78A7815F77815FF8AA28A8A8B8B8BA28B8B8B8BA28B8C8C8C8CA28C8C8C8CA28D8D8D8D
8DA24A6D8849B500FE88B900FC86227FA2223F221F220F2207A27C5A>165
142 120 269 182 I[<BE12F8F5FFF01EFF1FE01FFCF7FF8020E020F820FEC700030380
C8000781E2003F15C00B03810B00810C3F8078800C07807880788178818E8B8E8B8E8B8E
A28EA28B8EA42380AC2300A46A67A26AA26A676A676A9CB65A6A665492C7FC545C0C1F5C
545C9BB612E00B075D0B3F5D0A07B648C8FC95BB12F820E0208055C9FC1FF09CCAFC1EF0
0BF8CBFC06C0D0FCB3B3B2BCFCA9>137 142 120 269 159 80 D[<93260FFFF8163E4B
B600E0153F031F03FE5D037FDBFFC05C0203B800F05B020F05FC5B4A05FF5B027FF0C00F
91B526FE000FECF01F010302C0D9007F6D5A4991C800076D5A4901FC030090B6FC4901F0
163F4949160F4901808290B5170192CBFC4849844849181F87484984A2484984874886A2
48498588A24887A388A2B58680A36E85A280A26E8580A2818103F0725A6C6E96C7FC15FE
8116E06C15FEEEFFE017FF6C17F0F0FF806C18F8F1FFC06C19FCF2FF806C1AE01BF86C1A
FE6C747E6D1AE0886D866D866D1AFF6D876D87010087806E86020F86020386020086153F
030F851501DB001F19801601DC000F18C0EF007F060717E0F0003F070316F0F1003F1A0F
080315F81A00871B1F877514FCA287007F86486C85A288A388A36D86A31EF87FA37F1EF0
A26D626D1CE0A27F6D5013C0A26E1B806E96B5FC6E1B0002F8606E4E5B6E626E6C5F03E0
4D5B03F84D5B03FE057F5BDBFFC093B55A04F803035C496CD9FF80021F91C7FCD9FC1F02
FF49B55AD9F80792B75A496C19F049C66149011F18804901074DC8FC90C817F848031F16
C048030003FCC9FC007C04011480>102 146 115 271 129 83 D[<000FC312F8A6488E
A304C0C7001F4AC7120103F8C8F0000F03C01C0192C9737E02FC1E1F4A1E0702E08A4A8A
4A8A4890CA757EA249203F49201FA349200FA2492007A4492003007F8EA4498CA848487A
1380A6CC99C7FCB3B3B3B3AA030FBD12FCA9>145 140 120 267
162 I<93B512FC037FECFFF00207B8FC023F17E091B912F84918FE0107727E499126C000
7F14E04901E0C7000F80496D020380496D020014FE6F6F7F90B570806F6F8085486E6F80
7380A27380A28885886C5CA26D4982886D5B6D5B010713C0010190CAFC90CCFCA90603B7
FC050FB8FC0403B9FC167F0307BAFC153F4AB7EA807F020FEDE000023F02FCC7FC91B612
E0010392C8FC4914FC011F14F04914C0495C90B548C9FC485C485C485C485C5A5D485CA2
4891CAFCA3B6FC5CA397B6FCA461806C60F107EF6C6E150F6F16CF6C183F6FDB7F8F806C
6EDBFF0F14E06C02FCDA03FE15FE6C6E91260FFC0791B5FC6C6E6CD93FF817806C923AF8
03FFF003013F91B6487E010FEF8000010394C77E010004FC141F021F03F0140702010380
DA007F1400DA000701F8CDFC695F79DD71>97 D<94387FFFF0041FB612E093B712FE0307
707E031F17F092B97E4A18FE020784021F9126F8000F14804A0280010014C04A49C74814
E049B500F85C494A17F0494A5C495C494A4A14F84991C8FC5D495B90B5FC5D5A485C7314
F05A4B6F14E05A7314C0487214804B93383FFE00F20FF84896C8FCA4485CA5B6FCB07EA2
81A37EA36C80A37E6F18FE6CF201FFA26C6E5F1CFE6C801B076C6EEF0FFC6D7F70EE1FF8
6DF13FF06D6E167F6D6EEEFFE06D02F84B13C06D6E5D6D02FF030F13806D03C0023F1300
023F02F0903801FFFC6E9126FF801F5B020792B65A6E18C0020060033F4CC7FC030716F8
030016C0041F4AC8FCDC007F13C0585F78DD67>99 D[<F53FE098B6FC4FB7FCA996C77E
1B0FA287B3B294383FFF80040FB512FC93B71280030716E0031F16F8037F16FE4AB91287
02074AC66C13C7021F02E0010713F74A91C890B6FC4A01FC153F49B548150F4902E08149
4A81494A814991CA7E495B8749498390B548835A5D5AA2485CA25A5D5AA35AA25D5AA5B6
FCB07EA57E81A37EA27EA2817EA26C80A26C626C6E5F636D7F6D6D94B6FC6D606D6D1607
705D6D6E4B81010102F0157F6D6E92B712FE6E01FE020301EF91B512806E6D6C011F13CF
020FDAF801B5120F020391B612FE6E17F86E6C16E0030F16800301EDFC00DB003F14E004
0049C74AC8FC>113 144 120 270 129 I<94387FFFC0040FB6FC93B712E0030716FC03
1F16FF037F17C04AB912F00207DAF80380021F912680003F13FE4A49C7000F7F4A01F802
038049B5486E804902C06E6C7F494A6F7F4991C9FC49727F4949707F4B84498490B54870
7F5A4B198048855D481CC086481CE05D5A871DF05AA25D5AA21DF887A2B6FCA392BBFCA5
1DF00380CDFCA77EA4817EA37EA2817EA26CF307F06FF00FF87E816C1B1F6F19F06C1B3F
6D6DF07FE06D7FF4FFC06D6E4C13806D6E5E6D02F04C13006D6EEE1FFE6D6E4C5A6D6C01
FFEEFFF86E02E002035B6E02FC021F5B02079126FFC003B55A6E92B7C7FC020060033F17
F8030F17E003011780DB003F03FCC8FC040315C0DC000F01F8C9FC5D5F7ADD6A>I<F5FF
C093260FFFFC030F13F04BB600E0027F7F031F03FE49B512FE037F9226FF8007800203B8
EAF01F020FDDFC3F15804A7148133F027FDA003F90B500F014C091B500F80107ED807F49
02E00101ECFC00010702806D6C5B93C87E49496F7F49496F7F49496F6D6D1380491A8077
130090B5486F6E6C5AF503F84875C8FCA2484A6F80A44887AB6C63A46C6E4B5CA26C63A2
6D6D4B5CA26D97C9FC6D6D4B5B6D6D4B5B6D6D4B5B705C010102E049B512E06D02F80107
5C4902FF013F5C4992B648CAFC496002F317F090260FE07F1680031F4BCBFC90261FC001
15E0DB000F01FCCCFC013F91CFFCA3137FA280A380A28080806E7E15F092B812F06DF0FF
E01BFEF3FFC06D1AF81CFE767E6D1BE06D87896D1BFE6D877F6E878A0103BD7E130F013F
8890BEFC4802E0C9003F814891CBFC4801FC180F48490601804849727E48498588484973
7F88A2B55A88A66E616C65A26E616C6D4F5B6C656E616C6D4F5B6C6D96B55A6C6D6C0503
5C6F5FC602F0051F49C7FC6D01FC057F5B6DD9FF800303B55A010F02F8033F14E06DDAFF
E0010FB65A010192B9C8FCD9003F19F8020F19E0020196C9FCDA001F17F0030194CAFCDB
000192CBFC6A887ADD74>103 D[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B2963803
FFFC073FEBFFE096B612F8060715FE061F6F7E4E16E095B87E4DD9FC03804DD9C000804D
48C76C7FDD0FF880DD1FE0824D486E804D5A05FEC881DCF1FC815F04F385EEF7F04D81EE
FFC0A24D84A294C9FCA25EA35EA45EB3B3AFB9D8E001B912C0A9>114
143 119 270 129 I[<EC3FC0ECFFF0010313FC497F497F498049804980A290B67EA248
81A86C5DA26D5CA26D5C6D5C6D91C8FC6D5B6D5B010013F0EC3FC091CAFCB3A3ED1FF001
7FB5FCB7FCA9EA003F1307A27FB3B3B3B0B91280A9>49 144 119
271 65 I[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3083FB712C0A908014AC7FCE0
003F13C09AC8FC515A515A505B5013E0080F5B505B5090C9FCF27FFC4F485A4F5B4F5B4F
5B4F90CAFCF17FFE4F5A4E5B4E5B4E13C0061F5B4E90CBFC4E5AF0FFF805037F5F4D7F4D
7F4D8094B67E16F104F38104F78193B77EA2868605F18017E04D814D6C804D6C8004FC6D
805E4C6D804C6D807280A27280728173808588738073807380A2738073807381A2748074
8074808689748074807480A274818A5015F0B96C017F92B5FCA9>112
143 121 270 123 107 D[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3B3B3B3B3AC
B912C0A9>50 143 119 270 65 I<DB3FE0912601FFFC943801FFFC017FB5031FD9FFE0
041FEBFFE0B792B600FC93B612FC060303FF030315FF060F04C0020F16C0063F04F0023F
16F095B86C91B87E4DD9FC036E49D9FC03804DD9C0006E49D9C000804D48C7003F6D4948
C7003F7FDD0FF86EDB0FF880D8003F4B48714848830107DB3FC06E9126C03FC06E804D48
4E5A6D4BC86F48C881DCE1FE6FDAE1FE814D61DCE3F8DEF3F884DCE7F0F0F7F04D6F4B81
DCEFC0F0FFC0A2DCFF804F84A294C993C9FCA24C61A34C61A44C61B3B3AFB900E090B900
E090B912E0A9B35D77DCC2>I<DB3FE0913803FFFC017FB5033FEBFFE0B792B612F80607
15FE061F6F7E4E16E095B87E4DD9FC03804DD9C000804D48C76C7FDD0FF880D8003FDB1F
E08201074B486E804D5A6D03FEC881DCE1FC815F04E385EEE7F04D81EEEFC0A2DCFF8084
A294C9FCA25EA35EA45EB3B3AFB9D8E001B912C0A9725D77DC81>I<94381FFFF00407B6
12C0047F15FC0303B87E030F17E0037F17FC4ABAFC4A9126FC007F80020F02C0010714E0
4A49C880027F01F8033F13FC91B5486F7F4902C003077F494A6F804991C96C8049497080
4949717F49874949717FA290B548717F48884B83481D80A2481DC04B83481DE0A2481DF0
A3484A7114F8A4481DFCA5B61BFEAF6C1DFCA56C6E4D14F8A36C1DF0A36C1DE06F5F6C1D
C0A26C6E4D1480A26C1D006F5F6C646D6D4D5B6F94B5FC6D636D6D4C5C6D6E4B5C6D6E4B
5C6D02F0031F5C6D6E4B91C7FC6D6C01FE92B512FC6ED9FFC001075C6E02FC017F5C0207
91B812C0020196C8FC6E6C17FC031F17F003031780DB007F03FCC9FC040715C0DC001F01
F0CAFC675F7ADD74>I<DB1FF091381FFFC0017FB50203B6FCB7021F15E095B712FC0503
16FF050F17C0053F17F094B912FC04F1DAC01F8004F79026FC00018093B500E06D6C14C0
D8003F93C86C8001074B030F8005F86F806D03E06F804D6F804D8194CA6C7F4C864C7180
5E7680A27680A27680A28B88A28BA288A28BA4882080B0200064A467A26467A3525CA267
64676467647062704D91C7FC7094B55AA2714B5C714B5C714B5C05F84B5C71033F5C05FF
4B91C8FC06C049B55A04FB01F001075C04F801FF017F14F07190B712C0051F94C9FC7116
FC050316F0DD007F1580060F02F8CAFC060049CBFC96CDFCB3ACB912E0A9718579DC81>
I<DB7FC049B47E90B6021F13F8B7027F13FE4DB67E4D15E04D814D814D01077F94263FF0
0F7F94387FC01F4D48487FD8003F16000107DAC1FE491480EEC3FC6D5DEEC7F05F16CF5F
16DF4D6D1400A204FFC76C5BA2735B4C6E5B735B070013C04C92C8FCA45EA65EB3B3AAB9
12FCA9515D79DC5F>114 D<92261FFFF814F80203B638C001FC023FEDFC0791B8121F01
0317FF130F013F9038F8001F4990C8FCD9FFF8153F4801E0150F484915034849814890CA
FC197F4848173F191F485AA2007F180FA31907487EA27FA28002E0705A6E93C8FC14FC14
FF15F06CECFF8016FCEEFFF06CEEFF8018F06C17FE727E6C18E0856C18FC6C846C727E6C
856D84011F846D841303010084023F83140F020183EC001FDB007F16801603DC000F15C0
1700183F060F14E0007F1703486C82727E857F85857FA2857F1BC07FA27F1B806D5F7F1B
006E5E6E5F6E163F6E4C5A02FC4C5A6E03035B6E6C4A5B03F0023F5B03FF0107B55A01F9
91B7C7FCD9F07F16FCD9E01F16F0D9800716C0D9000193C8FC48D9003F14F8007C020349
C9FC4B5F78DD5C>I[<ED03FEA81507A5150FA4151FA3153FA2157FA215FFA25CA25C5CA2
5C5C5C5C91B5FC13035B131F017F91B712F00007BAFCBBFCA7C74AC9FCB3B3AAF101FFB1
616E17FE82A219076E17FC836EEE0FF871131F6E6EEB3FF071137F6E6EEBFFE06EDAFF03
13C06E92B512806E1700033F5D6F5D03075D030015E0041F1480040001FCC7FC>72
132 124 258 90 I<DB0FF8F01FF0017FB594B6FCB74BB7FCA9D8003F94C77E0107190F
A26D85B3B3B063A463A263A27F6398B6FCA26DF001FB7015036EEF07F3E00FE3806E6D15
1FE07FC314FF6E6D6CDAFF83EDFFC06E6E010313036E02FCEB3FFE6E91B612FC020017F8
6F16E0031F16800303EDFE00DB007F14F8040102C093C8FC725E77DC81>I<B90303B7FC
A9D8000702F8CA000FEBFE006D6E050013E0666D6E6164826D5090C7FC836E4F5AA26E6E
4C5AA26E6E4C5AA26E6E5F1C3F836E4F5A836E4F5AA26E6E4B5BA26E6E4B90C8FCA26F6E
5D1B07846F4D5A846F4D5AA26F6E4A5AA26F6E4A5AA26F6E5D1BFF846F4C5B846F4C90C9
FCA2706E485AA27002C05B1A0F7002E05B1A1F19F0704B5A19F8704B5AA2706E485AA270
6E5B96B5FC7093CAFCA3715CA2715CA2715CA2715CA3715CA2715CA2715CA27191CBFCA2
725AA3725A725A725A705D7BDB7B>I<007FB86C49B712FEA9C792C9000F02C0C7FC6E6E
030101F0C8FC715F6E6E4B5B6E6E4B5B6E4E90C9FC6E6E5E71151F6E6E4B5A6E6E4B5A6E
4E5A6F6E495B72495B6F6E495B6F806F6E4990CAFC6F4C5A72495A6F6E495A6F6E495A6F
03815B705E7014C307E75B7091B5CBFC705D705D705D6282705D715C8386718071807180
837180864D814D815F4D81874D814D81DDFFF3804C13E14C01C1804C0180814E6C804C6E
804C487F4C48824C486D804C486D804B496D804B497F73804B49834B90C86C804B486F80
4B48814B486F804B48844C6F804A71804A496F804A49814A90CA814A487180023F728001
0FB500E07080B8031FB812E0A9735C7CDB7B>120 D<007FB800C04AB71280A9D800034A
CA000791C7FC6D080013F0775A6D6E4E5AA26E6E6064836E4F90C8FC836E4F5A836E4F5A
A26E6E4C5AA26E6E5F1C3F6E6E5F1C7F836E4F5A846F4D5B846F4D90C9FCA26F6E4A5AA2
6F6E5D1B0F846F4D5A846F4D5A846F4D5AA26F6E4A5AA2706E5C627002C091CAFC6219E0
704B5A19F0704B5AA2706E485AA2706E485AA27002FE5B1A7F19FF704B5AA2715DA27192
CBFCA2715CA2715CA3715CA2715CA2715CA2715CA2725BA27290CCFCA3725AA2725AA24E
5AA24E5AA261187FA24E5AA24D5B13FE2603FF804A90CDFC000F13E0486D4A5A487F486D
4A5AA260B56C141F4D5AA24D5A17FF604C5B4A4990CEFC6C5D4C5A6C49EB3FFC4A495A6C
4948485A9026FE80075B270FFFC03F5B6C90B6CFFC6C5D6C15F86C6C5C011F14C0010749
D0FC9038007FE071857CDB7B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmr9 9 13
/Fs 13 118 df<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E0391F00
01F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A239
0F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126>48
D<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126>
I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F00060
130712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F80150014
7E5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7FC001C14
70001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F80390F00
1FC0001EEB0FE0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0F
E015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F8140315
FC140115FEA3127EB4FCA415FC48130312780070EB07F86C14F0003C130F001FEB1FE039
0FE03F800003B51200C613FCEB1FE01F347DB126>I<EC01C0A214031407A2140F141FA2
143F147F146F14CF1301EB038F140F1307130E130C131C13381330137013E013C0EA0180
120313001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107B51280A3
21337EB226>I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9
EB0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215
F8A41218127E12FEA315F0140712F8006014E01270EC0FC06C131F003C14806CEB7F0038
0F80FE3807FFF8000113E038003F801D347CB126>I<123C127E12FFA4127E123C1200B0
123C127E12FFA4127E123C08207A9F15>58 D<B81280A3D803FCC7FC0001151FEE07C016
03A21601A21600A41760150CA31700A2151CA2153C15FC90B5FCA3EBFC00153C151CA215
0CA592C8FCAB487EB512FEA32B337DB232>70 D<90381FE00390387FFC0748B5FC3907F0
1FCF390F8003FF48C7FC003E80814880A200788000F880A46C80A27E92C7FC127F13C0EA
3FF013FF6C13F06C13FF6C14C06C14F0C680013F7F01037F9038003FFF14030200138015
7F153FED1FC0150F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E6C147E01C05B39
F1FC03F800E0B512E0011F138026C003FEC7FC22377CB42B>83 D<EA03F012FFA3120712
03AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2
150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F89038
01FFE0C76CC7FC25357EB32B>98 D<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390F
C007E0381F800315F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C
1418A26C6C1338000F14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D23
7EA122>101 D<3903F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE49
7FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>110 D<D803F0133F00FFEB0FFF
A30007EB007F000380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFED907
F8130026227EA02B>117 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmr12 12 17
/Ft 17 122 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>46
D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA3204278
C131>49 D<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA7F
8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C4813
076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A
5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A4848143848
C81230000E1570001FB612F0A25A5AB712E0A326427BC131>I<49B4FC010F13E0013F13
FC9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A2
15077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC
1FC0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316
FEA2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F80038
140F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E001
0190C7FC28447CC131>I<B8FC17F017FC00019039C00007FF6C499038007FC0017FED1F
E0EF07F0EF03FC717E717E84727E727E727EA2727E85180385A2180185A38584A31A80AD
1A00A36061A361180361180761180F614E5A183F614EC7FC18FEEF03FC4D5AEF1FE001FF
ED7FC0486DD907FFC8FCB812FC17F094C9FC41447CC34B>68 D<DB0FFE146092B500C013
E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E749
48EC00FF4948157F4948153F4948151F49C9120F485A491607120348481603A248481601
A248481600A2123FA2491760127FA396C7FC485AAD4CB612C06C7EA293C7387FF000725A
003F171F7FA2121F7F120FA26C7EA26C7E6C7EA26C7E6D7E6D6C153F6D7E6D6C157F6D6C
15E7D903FEEC01C7D900FFEC0383DA3FE0EB0F01DA0FFCEBFE000203B500F81360020002
E090C7FCDB0FFEC9FC42487BC54D>71 D<EB07FC90383FFF809038F80FE03903C003F048
C66C7E000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5
FC90380FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B176048C7FCA3153FA36D
137F007F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E03FF802701FFFC011300
3A001FE0007C2B2E7CAC31>97 D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091
383C07E091387001F89039FDE0007E02807F01FFEC1F8091C713C049EC0FE049140717F0
A2EE03F8A217FCA2160117FEAB17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FB
EC3F80D9F380EB7E00D9E1C05B9039E0F001F89039C03C07E09039801FFF80C7D803FCC7
FC2F467DC436>I<167FED3FFFA315018182B3EC7F80903803FFF090380FC07C90383F00
0E017E1307496D5AD803F87F48487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2
123FA26C7EA2000F5D7F6C6C5B00035C6C6C9038077F806C6C010E13C0013F011C13FE90
380FC0F8903803FFE09026007F0013002F467DC436>100 D<EB01FE903807FFC090381F
03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F121F484814E01507A2
007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F15606D14
E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80F8903803FFE0010090
C7FC242E7DAC2B>I<EE0F80D901FCEB7FE0903A0FFF81F0F090393F07E3819039FC01FF
033A01F800FE014848017E13E00007027FC7FC497F000F8149131F001F81A9000F5D6D13
3F000792C7FC6D5B0003147E6C6C5B6D485A3903BF07E090380FFF80260701FCC8FC90CA
FCA25AA37F6C7E7F90B512F86C14FF16E06C15F86C6C8048B67E3A07C0000FFF48481300
003FC8EA3F80003E151F48ED0FC0A2481507A56C150F007C1680007E151F003E16006C15
3E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC010113E02C427DAC
31>103 D<3901FC01FE00FF903807FFC091381E07F091383801F8000701707F0003EBE0
002601FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB
36>110 D<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D
7E48486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F
003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49
C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3903F803F000FFEB1FFCEC3C
3EEC707F0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB5
12FEA3202C7DAB26>114 D<1306A5130EA4131EA3133E137EA213FE12011207001FB512
F0B6FCA2C648C7FCB3A4150CAA017E131C017F1318A26D133890381F8030ECC070903807
E0E0903801FFC09038007F001E3E7EBC26>116 D<B539F007FFFCA30003D9C00113C0C6
496C1300017F14FC013F5C6E13E06D7E010F495A6D6C485A02F890C7FC903803FC060101
130E6E5A903800FF186E5AEC3FF05D141F140F6E7E81140FEC0DFCEC19FEEC38FF4A7E91
38603F8002C07F0101131F49486C7E02007F01066D7E010E1303496D7E013C80017C80D8
01FC1580D80FFE4913C0B5D8800F13FFA3302B7FAA33>120 D<B539F001FFFCA3000790
C7EA7FE06C48EC1F8000011600160E0000150C6D141C6D1418A26E1338013F1430A26D6C
5BA26E13E0010F5CA26D6C485AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130C
A2EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E
5BB4FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmr12 14.4 27
/Fu 27 122 df<B612FEA71F077F9C27>45 D<EE03804C7EA34C7EA34C7EA34C7EA34C7E
A24C7E16E7A203017F16C3A20303801681A2DB07017F82A2030E80177FA24B80173FA24B
6D7EA20378800370130FA203F0804B1307A20201814B7FA24A488183A24AC78083A2020E
82187FA24A6F7E021FB7FC4A82A30278C8EA1FFC0270150FA202F0824A1507A249488284
A249488384A249CA7FA24984010E177FA2011E84193F133E017F8448486C4C7E000F01E0
4B487EB500FE037FEBFFFEA44F557CD458>65 D<B812FEEFFFC018F818FE26007FF8C738
07FF806D4802017F011F6F6C7E727E727E727E727EA2727EA2721380A21AC0A384A360A2
1A80A2601A00A24E5A180F614E5A4E5AF0FFE04D1380050790C7FCEF7FFC91B712E08418
FE02F0C73801FF809438007FE0F01FF8727EF003FE857213807213C0F17FE0A2F13FF0A2
1AF8191FA21AFCA81AF8193FA21AF0197FF1FFE0A24E13C04E1380604E1300F03FFC013F
EEFFF8496C02075BBA12C096C7FC18FC18C046527AD153>I<BB1280A426007FFCC8123F
6D48030313C0011F1600193F191F190F1907A21903A2F101E0A31900A6050E1470A41A00
A3171EA3173E177E17FE160791B6FCA49138F800071600177E173E171EA3170EA31A0EA3
1A1C94C8FCA41A3C1A38A31A78A31AF0A21901A21903A21907F10FE0193F19FF013F1603
496C153FBBFC1AC0A347527BD150>69 D<B500FC95B512FCA36E5FD8007FF2F800D93DFF
943803BFF0011D62A2011C6DEE073FA36E6C160EA36E6C161CA26E6C1638A36E6C1670A3
6E6C16E0A36E6CED01C0A26E6CED0380A36E6DEC0700A36F6C140EA36F6C5CA26F6C5CA3
6F6C5CA36F6C5CA26F6C495AA36F6C495AA36F6D48C7FCA393387FC00EA2706C5AA3706C
5AA3706C5AA3706C5AA270B45AA3705BA3013E6E90C8FC137F496C4E7E000701F0027E4B
7EB66C4BB612FC173CA35E527AD16B>77 D<B812C017FEEFFFC018F026007FFCC713FC6D
48EC0FFF011F03017F9438007FE0727E727E727E180785727EA28684A286A762A26097C7
FCA24E5A614E5A4E5A4E5AF0FFC04D90C8FCEF0FFEEFFFF891B712C04DC9FC839126F800
0113C09338003FF0EF0FFC717EEF01FF85717F727EA2727EA2727EA985A81B0785180FA2
1B0F0607140E496C82496C6F141EB76EEB801C72EBC03C96387FE0F896381FFFF0CC0007
13E09638007F8050547BD156>82 D<DA3FF0130349B55B010714C0011FECF00F903A7FE0
0FF81F49C712FED801FCEC3F3F4848EC1FBF48486EB4FC48481403485A4980003F8190C9
7E5A83127E8312FEA283A37E837FA27F007F93C7FC7F7FEA3FFC7F6C6C7E14F86CEBFF80
6C14F8EDFF806C15F06C15FE6C6C806D15C0010F81010315F8D9007F80140F020080030F
7F03001480161F040713C0160182EF7FE0A2173FEF1FF0A200E0160FA31707A37EA318E0
7E170F7E18C06C161F6C17806D153F6D16006D157E6D15FED8FCFC4A5A017F4A5A26F83F
C0EB0FF0D90FFEEB7FC0D8F003B65A48C64AC7FC023F13F848010113C034567AD341>I<
003FBB12C0A449C79038F0000701F06E48130001C0183F48C8EE0FE0007E1907007C1903
A200781901A400701900A500F01AF0481A70A6C91700B3B3AC4C7E030313FC027FB712E0
A44C517CD055>I<ECFFC0010F13F8013F13FE9039FF00FF80D801F0EB3FE0D803C0EB0F
F0486C6D7E01F86D7E000F816D13016F7EA3707E6C5AEA01E0C9FCA6ED3FFF020FB5FC91
38FFFC7F01071300EB1FF0EB7FC04848C7FCEA03FC485A485A485A123F5B485A187012FF
90C8FCA216FFA35D6D14BF007F14036DEB073F6C6C90390F1FC0E06C6C131E6C6C90393C
0FE1C02707FE01F013FF0001B5486C13806C6C90398003FE00D907FCC712F834367BB43B
>97 D<EC0FFE91387FFFE049B512F8903907F801FE90391FE0001FD93F80EB078049C7EA
0FC001FE143F484815E00003157F485A485AA2485AEE3FC0003FED0F004991C7FCA2127F
A35B12FFAB127F7FA3123F6D1570121F6D15F0000F16E06D140112076C6CEC03C06D1580
6C6C14076C6DEB0F00D93FC0131E6D6C137C903907FC03F06DB55AD9007F1380DA0FF8C7
FC2C367CB434>99 D<17FF4BB5FCA4ED0007160182B3A6EC0FF8EC7FFF49B512E0903907
FC03F090391FE0007C49487F49C7120F01FE80484880485A000781484880A2485AA2485A
A2127FA35B12FFAB127FA27FA2123FA27F121FA26C6C5C00075D7F6C6C5C6C6C5C6C6C02
1E7F6D6C017C13E0D91FC049EBFF8090390FF807E00103B512800100495ADA1FF091C7FC
39547CD241>I<EC0FF891B5FC010314C090390FF80FF090391FC003FC90397F8001FE49
C77E4848EC7F804848143F49EC1FC0485A000FED0FE05B001F16F01607485AA2007F16F8
A25B160312FF90B7FCA30180C9FCA8127F7FA2123FA26D1538121F17786C6C1570000716
F06D15E06C6C14016C6CEC03C06C6C15806D6C130F6D6CEB1F00D90FF0133C903907FE01
F80101B512E06D6C1380DA07FCC7FC2D367DB434>I<157F913803FFE0020F13F091383F
C0F891387F01FC903901FE03FE903803FC0714F81307EB0FF0A290391FE003FCED01F892
C7FC495AB3B612FEA426003FC0C7FCB3B3A580EBFFF0007FEBFFF8A427547DD324>I<EF
1FC0DA3FE0EBFFE0902701FFFC0313F001079039FF07E1F8903A1FE03FCF01903A3F800F
FC03903A7F0007F80101FE010314F04848903901FC004000036F1300491300000781A249
80000F82A8000793C7FC6D5CA200035D6D130100015D6C6C495A017F495A6E485A9039FF
E03FC0D801C7B5C8FC01C113FC3903803FE091CAFCA57FA27F7F7F6CB612E016FF6C16C0
17F0013F15FC8390B8FCD803F8C7001F1380D80FE0020113C04848EC007F4848ED1FE090
C9120F127EEF07F012FE481603A56C1607007E17E0007F160F6C6CED1FC06C6CED3F806C
6CED7F006C6C15FED803FCEC03FCC6B4EC0FF0D93FF0EBFFC0010FB6C7FC010114F8D900
1F1380354E7DB43B>I<1378EA01FE487E487FA66C90C7FC6C5AEA007890C8FCB0EB7F80
B5FCA41203C6FC137FB3B3A43801FFE0B61280A419507CCF21>105
D<EBFF80B5FCA41203C6FC137FB3A793B512F8A4043F138093381FFC0017F017C094C7FC
163E5E5E4B5A4B5AED07804BC8FC151E5D15FC1481EC83FEEC87FF148F029E7F9138BC7F
C0ECF83F02F07F4A6C7EECC00F02807F4A6C7E6F7EA26F7E6F7F167F83707E161F83707E
160783707E8318802601FFC04913E0B6D8803F13FFA438537DD23E>107
D<EB7F80B5FCA41203C6FC137FB3B3B3B13801FFE0B612C0A41A537CD221>I<01FFD907
FEEC03FFB590261FFFC0010F13E0037F01F0013F13F8912701F80FFC9038FC07FE913D03
C003FE01E001FF000390260700019038038000C6010E6D6C48C76C7E6D48DA7F8E6E7E4A
159CA24ADA3FF86E7E02605D14E04A5DA34A5DB3AD2601FFE0DAFFF0EC7FF8B6D8C07F90
26FFE03FB512F0A45C347CB363>I<01FFEB07FCB590383FFF8092B512E0913901F00FF8
913903C007FC000349C66C7EC6010E13016D486D7E5C143002706E7E146014E05CA35CB3
AD2601FFE0903801FFE0B600C0B612C0A43A347CB341>I<EC0FFC91387FFF8049B512E0
903907F807F890391FE001FE90393F80007F017EC7EA1F80496E7E48486E7E0003824848
6E7EA248486E7EA248486E7EA2003F82A24848ED7F80A400FF17C0AB007F1780A26D15FF
A2003F1700A2001F5E6D1401000F5E6D140300075E6C6C4A5A6C6C4A5AA2D8007FEC3F80
6D6C49C7FC90391FE001FE903907F807F86DB55AD9007F1380DA0FFCC8FC32367CB43B>
I<90397F8007FCB590387FFF800281B512E0913987F00FF891398F8003FC000390399E00
01FFC601BC6D7FD97FF86E7E4A6E7E4A6E7E4A140F844A6E7EA2717EA3717EA4711380AB
4D1300A44D5AA24D5AA2606E140F4D5A6E5D6E4A5A6E4A5A02BC4AC7FC029E495A028FEB
07FC913987E01FF00281B512C0DA807F90C8FCED0FF892CAFCB13801FFE0B612C0A4394B
7DB341>I<01FFEB1F80B5EB7FF0913801FFF8913803E1FC91380783FE0003EB0F07C613
1EEB7F1C1438143091387003FC91386000F0160014E05CA45CB3AA8048487EB612F0A427
347DB32E>114 D<D907FE13C090387FFF8148B512E33907F803FF390FC0007F4848133F
48C7121F003E140F007E1407127C00FC1403A315017EA27E7F6C6C90C7FC13F013FF6C13
F86CEBFF806C14E06C14F86C14FEC680013F1480010714C0D9003F13E014039138007FF0
151F00E0140FED07F8A26C1403A215017EA36C15F0A26C14036C15E015076DEB0FC06DEB
1F80D8FDF0EB3F0039F8FC01FE39F07FFFF8D8E01F13E0D8C00390C7FC25367CB42E>I<
EB01C0A71303A41307A3130FA2131FA2133F137F13FF5A5A001F90B512E0B7FCA326003F
C0C7FCB3A71638AC6E1378011F1470A26D6C13F016E0903807F801903903FC03C0903901
FE07806DB51200EC3FFCEC07F0254B7EC92E>I<D97F80EC7F80B591B5FCA400031503C6
1500017F157FB3AC17FFA35EA3013F5C6EEB077FA2011F020E7F6D6C011C13F06E0178EB
FFC0903903FC01F06DB512E06D6C1380912607FC00EB80003A357CB341>I<B60103B512
80A4000301F09039007FF800C601C0EC3FE0017FED1F8095C7FC133F171E6D7E171C6E14
3C010F1538A26E1478010715708001035DA26E130101015D806D4A5AA2ED8007027F91C8
FC15C0023F130EA2EDE01E021F131CA26E6C5AA2EDF87802071370A26E6C5AA215FF6E5B
A26E5BA36FC9FCA2153EA3151C39347EB23E>I<B60103B51280A4000301F09039007FF8
00C601C0EC3FE0017FED1F8095C7FC133F6E141E131F171C6E143C010F15388001075DA2
6E14F001035D8001014A5AA26E13036D5D1580027F49C8FCA26F5A023F130E15E0021F5B
A2EDF03C020F133815F802075BA2EDFCF002035B15FE6E6C5AA36E5BA26FC9FCA3153EA2
151CA2153C153815781570A215F05D14015DA2003E495A127F486C48CAFCA2140E141E49
5A6C5B007C5B383F03E06CB45A00075BD801FCCBFC394B7EB23E>121
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 345 2216 a Fu(BEAST)38 b(-)h(Bioinspired)e(Ev)m(olutionary)d
(Agen)m(t)k(Sim)m(ulation)d(T)-10 b(o)s(olkit)1455 2331
y(Reference)38 b(Man)m(ual)1307 2667 y Ft(Generated)33
b(b)m(y)h(Do)m(xygen)f(1.3.2)1505 2884 y Fs(Sun)24 b(F)-6
b(eb)25 b(1)h(21:25:33)j(2004)p eop
%%Page: 2 2
2 1 bop eop
%%Page: 1 3
1 2 bop 150 1044 a Fr(Con)-6 b(ten)g(ts)150 1619 y Fq(1)77
b(BEAST)32 b(-)f(Bioinspired)f(Ev)m(olutionary)i(Agen)m(t)g(Sim)m
(ulation)e(T)-8 b(o)s(olkit)31 b(Main)g(P)m(age)319 b(1)275
1769 y Fp(1.1)83 b(In)n(tro)r(duction)26 b(.)41 b(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)146
b(1)275 1918 y(1.2)83 b(Mo)r(dules)46 b(.)c(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)146
b(1)275 2068 y(1.3)83 b(T)-7 b(utorials)24 b(.)42 b(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)146 b(1)275 2217 y(1.4)83 b(Example)27 b(co)r(de)36
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)146 b(2)275 2367 y(1.5)83 b(Links)24
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)146 b(2)150 2610
y Fq(2)77 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m(olutionary)i(Agen)m(t)g
(Sim)m(ulation)e(T)-8 b(o)s(olkit)31 b(Mo)s(dule)f(Index)182
b(3)275 2759 y Fp(2.1)83 b(BEAST)28 b(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)f(T)-7 b(o)r(olkit)27
b(Mo)r(dules)54 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)146 b(3)150
3002 y Fq(3)77 b(BEAST)23 b(-)g(Bioinspired)e(Ev)m(olutionary)j(Agen)m
(t)f(Sim)m(ulation)e(T)-8 b(o)s(olkit)23 b(Namespace)f(Index)100
b(5)275 3152 y Fp(3.1)83 b(BEAST)28 b(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)f(T)-7 b(o)r(olkit)27
b(Namespace)g(List)46 b(.)41 b(.)h(.)146 b(5)150 3395
y Fq(4)77 b(BEAST)35 b(-)g(Bioinspired)f(Ev)m(olutionary)i(Agen)m(t)f
(Sim)m(ulation)f(T)-8 b(o)s(olkit)34 b(Hierarc)m(hical)i(In-)275
3495 y(dex)3205 b(7)275 3644 y Fp(4.1)83 b(BEAST)28 b(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)f(T)-7 b(o)r(olkit)27
b(Class)g(Hierarc)n(h)n(y)47 b(.)41 b(.)h(.)146 b(7)150
3887 y Fq(5)77 b(BEAST)24 b(-)g(Bioinspired)f(Ev)m(olutionary)h(Agen)m
(t)h(Sim)m(ulation)d(T)-8 b(o)s(olkit)23 b(Comp)s(ound)g(Index)53
b(11)275 4037 y Fp(5.1)83 b(BEAST)28 b(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)f(T)-7 b(o)r(olkit)27
b(Comp)r(ound)h(List)51 b(.)41 b(.)h(.)105 b(11)150 4280
y Fq(6)77 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m(olutionary)i(Agen)m(t)g
(Sim)m(ulation)e(T)-8 b(o)s(olkit)31 b(File)g(Index)295
b(15)275 4429 y Fp(6.1)83 b(BEAST)28 b(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)f(T)-7 b(o)r(olkit)27
b(File)h(List)54 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)105 b(15)150
4672 y Fq(7)77 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m(olutionary)i(Agen)m
(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31 b(P)m(age)h(Index)252
b(17)275 4822 y Fp(7.1)83 b(BEAST)28 b(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)f(T)-7 b(o)r(olkit)27
b(Related)h(P)n(ages)38 b(.)k(.)f(.)h(.)105 b(17)150
5065 y Fq(8)77 b(BEAST)42 b(-)h(Bioinspired)e(Ev)m(olutionary)h(Agen)m
(t)h(Sim)m(ulation)e(T)-8 b(o)s(olkit)41 b(Mo)s(dule)g(Do)s(cu-)275
5164 y(men)m(tation)2882 b(19)275 5314 y Fp(8.1)83 b(Sim)n(ulation)28
b(F)-7 b(ramew)n(ork)45 b(.)d(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)105 b(19)275 5463 y(8.2)83 b(Bacteria)27
b(sim)n(ulation)g(classes)c(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)105 b(27)275 5613 y(8.3)83 b(Utilities)29
b(and)e(Help)r(er)h(F)-7 b(unctions)28 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)105 b(28)p eop
%%Page: 2 4
2 3 bop -358 70 a Fq(ii)3440 b(CONTENTS)p -358 103 4034
4 v 275 333 a Fp(8.4)83 b(Biosystems-Related)27 b(Classes)63
b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)105
b(34)275 481 y(8.5)83 b(Sensors)27 b(and)g(Sensor)g(F)-7
b(unctions)52 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)105
b(43)275 630 y(8.6)83 b(Serialisation)27 b(Utilities)43
b(.)f(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
105 b(47)150 868 y Fq(9)77 b(BEAST)30 b(-)h(Bioinspired)d(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)f(T)-8 b(o)s(olkit)29
b(Namespace)g(Do)s(c-)275 968 y(umen)m(tation)2829 b(53)275
1116 y Fp(9.1)83 b(BEAST)28 b(Namespace)f(Reference)32
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)105
b(53)150 1354 y Fq(10)29 b(BEAST)k(-)g(Bioinspired)e(Ev)m(olutionary)i
(Agen)m(t)h(Sim)m(ulation)d(T)-8 b(o)s(olkit)32 b(Class)g(Do)s(cumen-)
275 1454 y(tation)3057 b(67)275 1602 y Fp(10.1)41 b(BEAST::Animat)28
b(Class)f(Reference)55 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)105
b(67)275 1751 y(10.2)41 b(BEAST::AreaSensor)26 b(Class)h(Reference)50
b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)105 b(74)275 1900
y(10.3)41 b(BEAST::Bacterium)27 b(Class)g(Reference)82
b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)105 b(75)275 2048
y(10.4)41 b(BEAST::BeamSensor)26 b(Class)h(Reference)81
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)105 b(85)275 2197 y(10.5)41
b(BEAST::b)r(ound)p 1028 2197 25 4 v 30 w(mem)p 1233
2197 V 31 w(fun)p 1381 2197 V 30 w(t)p Fo(<)p 1536 2197
V 58 w Fp(Class,)p 1806 2197 V 56 w(Return,)p 2142 2197
V 58 w(Arg)27 b Fo(>)g Fp(Struct)h(T)-7 b(emplate)28
b(Reference)70 b(.)105 b(88)275 2345 y(10.6)41 b(BEAST::call)p
925 2345 V 30 w(on)p 1043 2345 V 29 w(mem)p 1247 2345
V 30 w(t)p Fo(<)28 b Fp(T,)g(M,)f(OP)g Fo(>)g Fp(Class)g(T)-7
b(emplate)28 b(Reference)73 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
105 b(89)275 2494 y(10.7)41 b(BEAST::creator)p Fo(<)26
b Fp(T)h Fo(>)h Fp(Struct)f(T)-7 b(emplate)28 b(Reference)74
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)105 b(90)275 2642 y(10.8)41 b(BEAST::deleter)p Fo(<)27
b Fp(T)h Fo(>)f Fp(Struct)h(T)-7 b(emplate)28 b(Reference)83
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)105 b(91)275 2791 y(10.9)41 b(BEAST::Distribution)28
b(Class)f(Reference)81 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)105
b(92)275 2939 y(10.10)o(BEAST::Distribution::Kernel)27
b(Struct)h(Reference)82 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)105 b(97)275 3088
y(10.11)o(BEAST::DNNAnimat)29 b(Class)e(Reference)61
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)105 b(99)275 3236 y(10.12)o
(BEAST::DynamicalNet)28 b(Class)f(Reference)68 b(.)41
b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)63 b(102)275 3385 y(10.13)o
(BEAST::DynamicalNet::Neuron)28 b(Struct)f(Reference)44
b(.)d(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)63 b(108)275 3533 y(10.14)o(BEAST::Ev)-5 b(alNearest)26
b(Class)h(Reference)d(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(112)275 3682 y(10.15)o(BEAST::Ev)-5 b(alNearestAbsX)27
b(Class)f(Reference)79 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(114)275
3830 y(10.16)o(BEAST::Ev)-5 b(alNearestAbsY)27 b(Class)f(Reference)79
b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)63 b(115)275 3979 y(10.17)o(BEAST::Ev)-5
b(alNearestAngle)26 b(Class)h(Reference)72 b(.)41 b(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(116)275 4128 y(10.18)o(BEAST::Ev)-5 b(alNearestSignal)p
Fo(<)p 1549 4128 V 55 w Fp(State,)p 1819 4128 V 58 w(Signal,)p
2121 4128 V 57 w(Cost)27 b Fo(>)g Fp(Class)g(T)-7 b(emplate)28
b(Reference)k(.)42 b(.)63 b(117)275 4276 y(10.19)o(BEAST::Ev)-5
b(alNearestXDist)27 b(Class)g(Reference)68 b(.)41 b(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(118)275 4425 y(10.20)o(BEAST::Ev)-5 b(alNearestYDist)27
b(Class)g(Reference)68 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(119)275
4573 y(10.21)o(BEAST::Ev)n(oDNNAnimat)28 b(Class)f(Reference)50
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)63 b(120)275 4722 y(10.22)o(BEAST::Ev)n
(oFFNAnimat)28 b(Class)e(Reference)68 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(121)275 4870 y(10.23)o(BEAST::Ev)n(olv)n(er)p Fo(<)25
b Fp(T)j Fo(>)f Fp(Class)g(T)-7 b(emplate)27 b(Reference)g(.)41
b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)63 b(122)275 5019 y(10.24)o(BEAST::extractor)p Fo(<)p
1223 5019 V 56 w Fp(Iterator)26 b Fo(>)h Fp(Struct)h(T)-7
b(emplate)28 b(Reference)71 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)63 b(124)275 5167 y(10.25)o(BEAST::F)-7 b(eedF)g(orw)n
(ardNet)27 b(Class)f(Reference)55 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(125)275 5316 y(10.26)o(BEAST::F)-7 b(eedF)g(orw)n(ardNet::Neuron)26
b(Struct)i(Reference)i(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(131)275 5464 y(10.27)o
(BEAST::FFNAnimat)29 b(Class)e(Reference)78 b(.)42 b(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)63 b(133)275 5613 y(10.28)o(BEAST::Gaussian2D)27
b(Struct)h(Reference)53 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(136)p -358 5723 4034 4 v -192 5823 a Fn(Generated)26
b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 3 5
3 4 bop 150 70 a Fq(CONTENTS)3415 b(iii)p 150 103 4034
4 v 275 333 a Fp(10.29)o(BEAST::GaussianNoise)26 b(Struct)i(Reference)f
(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(137)275 481 y(10.30)o
(BEAST::GaussianRing2D)27 b(Struct)h(Reference)75 b(.)41
b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)63 b(138)275 629 y(10.31)o(BEAST::GA)-9
b(V)i(arian)n(t)27 b(Struct)h(Reference)35 b(.)41 b(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)63 b(140)275 777 y(10.32)o(BEAST::GA)-9 b(V)i(arian)n(t::V)g
(arian)n(tData)26 b(Union)i(Reference)63 b(.)42 b(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(142)275
925 y(10.33)o(BEAST::GeneticAlgorithm)p Fo(<)27 b Fp(EV)n(O,)g(MUTFUNC)
i Fo(>)e Fp(Class)g(T)-7 b(emplate)27 b(Reference)76
b(.)41 b(.)h(.)63 b(143)275 1073 y(10.34)o(BEAST::GeneticAlgorithm)p
Fo(<)23 b Fp(EV)n(O,)f(MUTFUNC)i Fo(>)p Fp(::ev)n(o)p
2456 1073 25 4 v 28 w(sort)p Fo(<)p 2711 1073 V 52 w
Fp(EV)n(O)e Fo(>)g Fp(Struct)h(T)-7 b(em-)465 1172 y(plate)28
b(Reference)52 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(150)275 1320 y(10.35)o(BEAST::Group)p
Fo(<)p 1124 1320 V 57 w Fp(Ob)5 b(jT)n(yp)r(e)27 b Fo(>)g
Fp(Class)g(T)-7 b(emplate)28 b(Reference)h(.)41 b(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(151)275 1468
y(10.36)o(BEAST::Matc)n(hAdapter)p Fo(<)p 1421 1468 V
57 w Fp(F)-7 b(unctor)27 b Fo(>)g Fp(Struct)h(T)-7 b(emplate)28
b(Reference)64 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(154)275 1616 y(10.37)o(BEAST::Matc)n(hComp)r(oseAnd)27
b(Struct)h(Reference)i(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(155)275 1764
y(10.38)o(BEAST::Matc)n(hComp)r(oseOr)26 b(Struct)i(Reference)23
b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)63 b(156)275 1912 y(10.39)o(BEAST::Matc)n(hExact)p
Fo(<)p 1334 1912 V 56 w Fp(Ob)5 b(jectT)n(yp)r(e)27 b
Fo(>)h Fp(Struct)f(T)-7 b(emplate)28 b(Reference)64 b(.)42
b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(157)275 2060 y(10.40)o
(BEAST::Matc)n(hKindOf)p Fo(<)p 1393 2060 V 57 w Fp(Ob)5
b(jectT)n(yp)r(e)27 b Fo(>)g Fp(Struct)h(T)-7 b(emplate)28
b(Reference)70 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(158)275 2208 y(10.41)o(BEAST::Matc)n(hSp)r(eci\014c)28
b(Struct)g(Reference)47 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(159)275 2356 y(10.42)o(BEAST::MutationOp)r(erator)p
Fo(<)26 b Fp(T)h Fo(>)h Fp(Struct)g(T)-7 b(emplate)27
b(Reference)47 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(160)275 2505 y(10.43)o(BEAST::MutationOp)r(erator)p
Fo(<)26 b Fp(b)r(o)r(ol)h Fo(>)h Fp(Struct)f(T)-7 b(emplate)28
b(Reference)79 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(162)275 2653 y(10.44)o(BEAST::MutationOp)r(erator)p
Fo(<)26 b Fp(GA)-9 b(V)i(arian)n(t)27 b Fo(>)g Fp(Struct)h(T)-7
b(emplate)28 b(Reference)40 b(.)i(.)g(.)f(.)h(.)f(.)h(.)63
b(163)275 2801 y(10.45)o(BEAST::Ob)5 b(jLoader)p Fo(<)p
1284 2801 V 56 w Fp(T)n(yp)r(e)27 b Fo(>)g Fp(Struct)h(T)-7
b(emplate)28 b(Reference)38 b(.)k(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)63 b(165)275 2949 y(10.46)o(BEAST::Ob)5
b(jLoaderBase)25 b(Struct)j(Reference)55 b(.)42 b(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(166)275 3097 y(10.47)o(BEAST::P)n(opulation)p Fo(<)p
1288 3097 V 56 w Fp(Ind,)p 1491 3097 V 58 w(MutF)-7 b(unc)28
b Fo(>)g Fp(Class)e(T)-7 b(emplate)28 b(Reference)46
b(.)c(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(167)275 3245
y(10.48)o(BEAST::prop)r(ert)n(y)p Fo(<)p 1204 3245 V
56 w Fp(Owner,)p 1525 3245 V 57 w(T)n(yp)r(e,)p 1792
3245 V 57 w(In,)p 1949 3245 V 58 w(Out)28 b Fo(>)f Fp(Class)g(T)-7
b(emplate)27 b(Reference)35 b(.)41 b(.)h(.)f(.)h(.)63
b(170)275 3393 y(10.49)o(Random)p Fo(<)p 868 3393 V 57
w Fp(T)n(yp)r(e)28 b Fo(>)f Fp(Struct)h(T)-7 b(emplate)27
b(Reference)67 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(171)275 3541 y(10.50)o(BEAST::Ring2D)28
b(Struct)g(Reference)81 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(172)275 3689 y(10.51)o(BEAST::ScaleAbs)28 b(Struct)f(Reference)33
b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(173)275
3837 y(10.52)o(BEAST::ScaleAdapter)p Fo(<)p 1375 3837
V 57 w Fp(F)-7 b(unctor)27 b Fo(>)g Fp(Struct)h(T)-7
b(emplate)28 b(Reference)45 b(.)d(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)63 b(174)275 3985 y(10.53)o(BEAST::ScaleComp)r(ose)27
b(Struct)h(Reference)37 b(.)k(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(176)275 4133 y(10.54)o(BEAST::ScaleLinear)26 b(Struct)i(Reference)71
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(177)275 4281 y(10.55)o
(BEAST::ScaleNoise)27 b(Struct)h(Reference)42 b(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)63 b(178)275 4429 y(10.56)o(BEAST::ScaleThreshold)27
b(Struct)g(Reference)67 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(179)275
4577 y(10.57)o(BEAST::SelfSensor)27 b(Class)g(Reference)g(.)42
b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(180)275 4725
y(10.58)o(BEAST::Sensor)27 b(Class)g(Reference)i(.)41
b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(182)275
4873 y(10.59)o(BEAST::SensorEv)-5 b(alF)e(unction)27
b(Struct)g(Reference)j(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(185)275 5021
y(10.60)o(BEAST::SensorMatc)n(hF)-7 b(unction)27 b(Struct)h(Reference)c
(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)63 b(186)275 5169 y(10.61)o(BEAST::SensorScaleF)-7
b(unction)27 b(Struct)h(Reference)70 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(187)275 5317 y(10.62)o(BEAST::SerialException)26 b(Struct)i
(Reference)50 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(188)275 5465
y(10.63)o(BEAST::Signaller)p Fo(<)p 1206 5465 V 56 w
Fp(State,)p 1476 5465 V 58 w(Signal,)p 1778 5465 V 57
w(Cost)27 b Fo(>)g Fp(Class)g(T)-7 b(emplate)28 b(Reference)52
b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)63 b(189)275 5613 y(10.64)o
(BEAST::SimOb)5 b(ject)28 b(Class)f(Reference)74 b(.)41
b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(191)p 150 5723 4034
4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 4 6
4 5 bop -358 70 a Fq(iv)3417 b(CONTENTS)p -358 103 4034
4 v 275 333 a Fp(10.65)o(BEAST::Sim)n(ulation)28 b(Class)e(Reference)70
b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(194)275 482
y(10.66)o(BEAST::switc)n(her)27 b(Struct)h(Reference)60
b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(199)275
632 y(10.67)o(BEAST::T)-7 b(ouc)n(hSensor)26 b(Class)h(Reference)66
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(200)275 781 y(10.68)o
(BEAST::UniformNoise)27 b(Struct)h(Reference)56 b(.)41
b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)63 b(201)275 931 y(10.69)o(BEAST::Unserialiser)
26 b(Class)h(Reference)36 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(202)275 1081 y(10.70)o(BEAST::V)-7 b(ector2D)27 b(Class)g(Reference)
54 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(203)275
1230 y(10.71)o(BEAST::W)-7 b(all)28 b(Class)f(Reference)34
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(206)275 1380 y(10.72)o(BEAST::W)-7 b(orld)28 b(Class)e(Reference)44
b(.)d(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(208)275
1529 y(10.73)o(BEAST::W)-7 b(orldOb)5 b(ject)27 b(Class)g(Reference)55
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(213)150 1773 y Fq(11)29
b(BEAST)h(-)h(Bioinspired)d(Ev)m(olutionary)j(Agen)m(t)g(Sim)m(ulation)
d(T)-8 b(o)s(olkit)30 b(File)f(Do)s(cumen)m(ta-)275 1873
y(tion)3092 b(217)275 2022 y Fp(11.1)41 b(animat.cc)28
b(File)g(Reference)39 b(.)i(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)63 b(217)275 2172 y(11.2)41 b(animat.h)28
b(File)g(Reference)67 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)63 b(218)275 2322 y(11.3)41 b(animatmonitor.h)27
b(File)h(Reference)39 b(.)i(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(220)275 2471 y(11.4)41 b(bacteria.h)27 b(File)h(Reference)i(.)41
b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(221)275 2621 y(11.5)41 b(bacterium.h)28 b(File)g(Reference)85
b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(222)275 2770 y(11.6)41 b(b)r(east.h)28 b(File)g(Reference)64
b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(223)275 2920 y(11.7)41 b(collisions.h)27 b(File)h(Reference)61
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(225)275 3070 y(11.8)41 b(colours.h)27 b(File)h(Reference)66
b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(226)275 3219 y(11.9)41 b(distribution.cc)28 b(File)g(Reference)61
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(227)275 3369 y(11.10)o(distribution.h)28 b(File)g(Reference)d(.)41
b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(228)275 3518 y(11.11)o(dra)n(w)n(able.cc)26 b(File)i(Reference)34
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(229)275 3668 y(11.12)o(dra)n(w)n(able.h)26 b(File)i(Reference)62
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(230)275 3818 y(11.13)o(dynamicalnet.cc)28 b(File)g(Reference)64
b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(232)275
3967 y(11.14)o(dynamicalnet.h)28 b(File)g(Reference)f(.)42
b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(233)275
4117 y(11.15)o(feedforw)n(ardnet.h)27 b(File)h(Reference)41
b(.)g(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(235)275
4266 y(11.16)o(geneticalgorithm.h)27 b(File)h(Reference)38
b(.)k(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(237)275
4416 y(11.17)o(glutsimen)n(v.h)28 b(File)g(Reference)57
b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(239)275 4566 y(11.18)o(neuralanimat.h)27 b(File)h(Reference)34
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(240)275 4715 y(11.19)o(psoalgorithm.h)26 b(File)i(Reference)43
b(.)f(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(241)275 4865 y(11.20)o(random.h)27 b(File)h(Reference)44
b(.)d(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(242)275 5014 y(11.21)o(sensor.h)27 b(File)h(Reference)33
b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(244)275 5164 y(11.22)o(sensorbase.h)26 b(File)i(Reference)70
b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(245)275 5314 y(11.23)o(serialfuncs.h)27 b(File)h(Reference)73
b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(247)275 5463 y(11.24)o(signaller.h)27 b(File)h(Reference)84
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(249)275 5613 y(11.25)o(sim)n(ulation.cc)27 b(File)h(Reference)46
b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(250)p -358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 5 7
5 6 bop 150 70 a Fq(CONTENTS)3444 b(v)p 150 103 4034
4 v 275 333 a Fp(11.26)o(sim)n(ulation.h)28 b(File)g(Reference)73
b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(251)275 480 y(11.27)o(unserialiser.cc)26 b(File)i(Reference)79
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(254)275 626 y(11.28)o(unserialiser.h)27 b(File)h(Reference)42
b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(255)275 773 y(11.29)o(utilities.h)29 b(File)f(Reference)48
b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(256)275 920 y(11.30)o(w)n(orld.h)27 b(File)h(Reference)55
b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(257)275 1067 y(11.31)o(w)n(orldob)5 b(ject.cc)27 b(File)g(Reference)
62 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(259)150 1297 y Fq(12)29 b(BEAST)35 b(-)g(Bioinspired)e(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)e(T)-8 b(o)s(olkit)34
b(P)m(age)i(Do)s(cumen-)275 1397 y(tation)3009 b(261)275
1543 y Fp(12.1)41 b(F)-7 b(eedF)g(orw)n(ardNet)27 b(source)f(co)r(de)82
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(261)275 1690 y(12.2)41 b(DynamicalNet)28 b(source)f(co)r(de)j(.)42
b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(267)275 1837 y(12.3)41 b(Bacterium)27 b(source)g(co)r(de)44
b(.)e(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(273)275 1984 y(12.4)41 b(Braiten)n(b)r(erg)26 b(source)h(co)r(de)58
b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(278)275 2131 y(12.5)41 b(Shrew)28 b(source)e(co)r(de)71
b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)63 b(281)275 2278 y(12.6)41 b(Mouse)28 b(source)e(co)r(de)59
b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)63 b(282)275 2425 y(12.7)41 b(Predator/Prey)24
b(source)j(co)r(de)84 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)63 b(285)275 2571 y(12.8)41 b(Bacteria)27 b(example)g(source)f
(co)r(de)51 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(288)275 2718 y(12.9)41 b(A)28 b(short)f(user's)g(guide)74
b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)63 b(292)275 2865 y(12.10)o(T)-7 b(utorial)27 b(0:)37
b(A)28 b(note)f(on)g(the)h(co)r(de)72 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)63 b(294)275 3012 y(12.11)o(T)-7 b(utorial)27
b(1:)37 b(Building)27 b(y)n(our)g(\014rst)g(Animat)56
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(296)275 3159 y(12.12)o(T)-7
b(utorial)27 b(2:)37 b(Adding)28 b(Ob)5 b(jects)27 b(and)g(In)n
(teractiv)n(e)g(Animats)59 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(300)275 3306 y(12.13)o(T)-7
b(utorial)27 b(3:)37 b(In)n(tro)r(ducing)27 b(the)h(Genetic)g
(Algorithm)79 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(307)275 3453 y(12.14)o(T)-7
b(utorial)27 b(4:)37 b(More)26 b(Adv)-5 b(anced)28 b(Sim)n(ulations)71
b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(313)275 3600 y(12.15)o(T)-7
b(o)r(do)28 b(List)63 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63 b(314)275
3746 y(12.16)o(Deprecated)28 b(List)k(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)63
b(315)p 150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 6 8
6 7 bop eop
%%Page: 1 9
1 8 bop 150 1003 a Fm(Chapter)65 b(1)150 1465 y Fr(BEAST)77
b(-)h(Bioinspired)150 1714 y(Ev)-6 b(olutionary)76 b(Agen)-6
b(t)78 b(Sim)-6 b(ulation)150 1963 y(T)-19 b(o)6 b(olkit)77
b(Main)g(P)-6 b(age)150 2492 y Fl(1.1)135 b(In)l(tro)t(duction)150
2721 y Fp(W)-7 b(elcome)24 b(to)g(the)h Fq(BEAST)g Fp(do)r(cumen)n
(tation.)35 b(Here)24 b(y)n(ou)g(will)g(\014nd)h(references)e(for)h
(nearly)f(all)h(the)h(classes)e(in)150 2821 y(the)i(API,)g(along)f
(with)h(a)g(few)g(tutorials.)35 b(Some)25 b(parts)f(of)h
Fq(BEAST)g Fp(are)f(separated)f(in)n(to)i(their)g(o)n(wn)f(mo)r(dules)
150 2921 y(to)j(mak)n(e)g(na)n(vigating)f(the)i(do)r(cumen)n(tation)f
(a)h(little)g(easier.)150 3067 y(F)-7 b(or)22 b(help)i(na)n(vigating)d
(the)i(in)n(terface,)g(lo)r(ok)g(at)f Fq(A)27 b(short)g(user's)e(guide)
d Fp(\(includes)h(ho)n(wto)g(for)f(batc)n(h)h(mo)r(de\).)150
3391 y Fl(1.2)135 b(Mo)t(dules)275 3621 y Fk(\210)42
b Fq(Sim)m(ulation)36 b(F)-8 b(ramew)m(ork)33 b Fp(-)f(The)i(main)f
(classes)e(of)i(the)h(API)f(-)f(suc)n(h)h(as)g(W)-7 b(orldOb)5
b(ject,)34 b(Animat,)358 3721 y(W)-7 b(orld,)27 b(and)g(Sim)n(ulation.)
275 3889 y Fk(\210)42 b Fq(Sensors)27 b(and)j(Sensor)e(F)-8
b(unctions)24 b Fp(-)h Fq(BEAST)g Fp(has)f(a)h(p)r(o)n(w)n(erful)f
(sensor)f(library)-7 b(,)25 b(allo)n(wing)e(a)h(range)358
3988 y(of)j(realistic)g(sensors)f(to)h(b)r(e)h(easily)f(implemen)n
(ted.)275 4156 y Fk(\210)42 b Fq(Biosystems-Related)23
b(Classes)g Fp(-)h(Genetic)g(Algorithms)g(and)g(Neural)f(Net)n(w)n
(orks)g(form)h(an)f(in)n(tegral)358 4256 y(part)k(of)g(the)h(sim)n
(ulation)f(en)n(vironmen)n(t.)275 4424 y Fk(\210)42 b
Fq(Bacteria)c(sim)m(ulation)e(classes)c Fp(-)h(An)g(extension)g(for)f
(studying)h(bacterial)f(self-organisation)e(and)358 4524
y(pattern)d(formation.)275 4692 y Fk(\210)42 b Fq(Utilities)24
b(and)i(Help)s(er)f(F)-8 b(unctions)23 b Fp(-)f(Extensions)g(to)g(the)h
(STL)g(and)f(other)g(utilities)i(used)e(through-)358
4792 y(out)27 b Fq(BEAST)p Fp(.)275 4960 y Fk(\210)42
b Fq(Serialisation)25 b(Utilities)c Fp(-)i(A)h(sub-library)e(enabling)g
(y)n(ou)h(to)g(easily)f(write)h(loading)f(and)h(sa)n(ving)f(co)r(de)358
5059 y(for)27 b(y)n(our)f(deriv)n(ed)h(classes.)150 5383
y Fl(1.3)135 b(T)-11 b(utorials)275 5613 y Fk(\210)42
b Fq(T)-8 b(utorial)32 b(0:)41 b(A)32 b(note)g(on)f(the)h(co)s(de)p
eop
%%Page: 2 10
2 9 bop -358 70 a Fq(2)951 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Main)g(P)m(age)p -358 103 4034 4 v 275 333 a Fk(\210)42
b Fq(T)-8 b(utorial)32 b(1:)41 b(Building)30 b(y)m(our)j(\014rst)f
(Animat)275 499 y Fk(\210)42 b Fq(T)-8 b(utorial)32 b(2:)41
b(Adding)32 b(Ob)5 b(jects)32 b(and)g(In)m(teractiv)m(e)i(Animats)275
665 y Fk(\210)42 b Fq(T)-8 b(utorial)32 b(3:)41 b(In)m(tro)s(ducing)32
b(the)g(Genetic)g(Algorithm)275 831 y Fk(\210)42 b Fq(T)-8
b(utorial)33 b(4:)46 b(More)33 b(Adv)-5 b(anced)35 b(Sim)m(ulations)27
b Fp(-)i(Un\014nished)h(tutorial)e(on)h(more)g(adv)-5
b(anced)28 b(sim-)358 930 y(ulations.)150 1252 y Fl(1.4)135
b(Example)46 b(co)t(de)150 1481 y Fp(The)27 b(examples)e(and)i(some)f
(of)g(the)h(library)e(co)r(de)i(are)e(extensiv)n(ely)h(annotated,)g
(for)g(ease)g(of)g(access)g(these)g(are)150 1581 y(included)i(here.)150
1861 y Fj(1.4.1)112 b(Library)38 b(co)s(de)275 2061 y
Fk(\210)k Fq(Genetic)31 b(Algorithm)f(source)h(co)s(de)275
2227 y Fk(\210)42 b Fq(F)-8 b(eedF)g(orw)m(ardNet)32
b(source)g(co)s(de)275 2393 y Fk(\210)42 b Fq(DynamicalNet)30
b(source)i(co)s(de)275 2559 y Fk(\210)42 b Fq(Bacterium)30
b(source)i(co)s(de)150 2839 y Fj(1.4.2)112 b(Example)37
b(co)s(de)275 3039 y Fk(\210)42 b Fq(Braiten)m(b)s(erg)31
b(source)h(co)s(de)275 3205 y Fk(\210)42 b Fq(Shrew)31
b(source)h(co)s(de)275 3371 y Fk(\210)42 b Fq(Mouse)30
b(source)i(co)s(de)275 3537 y Fk(\210)42 b Fq(Predator/Prey)33
b(source)f(co)s(de)275 3703 y Fk(\210)42 b Fq(Bacteria)32
b(example)f(source)g(co)s(de)150 4025 y Fl(1.5)135 b(Links)150
4254 y Fp(The)28 b(follo)n(wing)e(sites)i(ma)n(y)e(b)r(e)i(useful)g
(when)g(dev)n(eloping)f(with)h Fq(BEAST)p Fp(.)275 4468
y Fk(\210)42 b Fi(http://www.comp)o(.le)o(ed)o(s.)o(ac.)o(uk)o(/ar)o
(23)o(/B)o(EAS)o(T/)o(ind)o(ex)o(.ph)o(p)21 b Fp(-)28
b(The)f Fq(BEAST)h Fp(homepage)275 4634 y Fk(\210)42
b Fi(http://www.sgi.)o(com)o(/t)o(ec)o(h/s)o(tl)o(/)22
b Fp(-)27 b(SGI's)h(excellen)n(t)f(STL)h(reference)275
4800 y Fk(\210)42 b Fi(http://www.cppr)o(efe)o(re)o(nc)o(e.c)o(om)o(/)
22 b Fp(-)27 b(A)h(prett)n(y)f(go)r(o)r(d)g(C++)g(reference)275
4966 y Fk(\210)42 b Fi(http://groups.g)o(oog)o(le)o(.c)o(om/)25
b Fp(-)32 b(Go)r(ogle)f(Groups)g(-)h(without)h(doubt)f(the)g(b)r(est)h
(place)e(to)h(\014nd)h(an-)358 5065 y(sw)n(ers)26 b(to)h(C++)g
(problems)p -358 5723 V -192 5823 a Fn(Generated)f(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 3 11
3 10 bop 150 1003 a Fm(Chapter)65 b(2)150 1465 y Fr(BEAST)77
b(-)h(Bioinspired)150 1714 y(Ev)-6 b(olutionary)76 b(Agen)-6
b(t)78 b(Sim)-6 b(ulation)150 1963 y(T)-19 b(o)6 b(olkit)77
b(Mo)6 b(dule)78 b(Index)150 2492 y Fl(2.1)135 b(BEAST)61
b(-)h(Bioinspired)h(Ev)l(olutionary)h(Agen)l(t)e(Sim)l(ulation)456
2641 y(T)-11 b(o)t(olkit)46 b(Mo)t(dules)150 2870 y Fp(Here)27
b(is)h(a)f(list)h(of)f(all)h(mo)r(dules:)268 3017 y(Sim)n(ulation)g(F)
-7 b(ramew)n(ork)37 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)116 b(19)268 3117 y(Bacteria)26
b(sim)n(ulation)h(classes)81 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)116 b(27)268 3216 y(Utilities)29
b(and)e(Help)r(er)h(F)-7 b(unctions)85 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)116 b(28)268 3316 y(Biosystems-Related)26
b(Classes)56 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)116 b(34)268 3416 y(Sensors)26 b(and)i(Sensor)e(F)-7
b(unctions)46 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)116 b(43)268 3515 y(Serialisation)26 b(Utilities)37
b(.)k(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)116 b(47)p eop
%%Page: 4 12
4 11 bop -358 70 a Fq(4)814 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Mo)s(dule)g(Index)p -358 103 4034 4 v -358 5723 V -192
5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 5 13
5 12 bop 150 1003 a Fm(Chapter)65 b(3)150 1465 y Fr(BEAST)77
b(-)h(Bioinspired)150 1714 y(Ev)-6 b(olutionary)76 b(Agen)-6
b(t)78 b(Sim)-6 b(ulation)150 1963 y(T)-19 b(o)6 b(olkit)77
b(Namespace)f(Index)150 2492 y Fl(3.1)135 b(BEAST)61
b(-)h(Bioinspired)h(Ev)l(olutionary)h(Agen)l(t)e(Sim)l(ulation)456
2641 y(T)-11 b(o)t(olkit)46 b(Namespace)g(List)150 2870
y Fp(Here)27 b(is)h(a)f(list)h(of)f(all)h(do)r(cumen)n(ted)f
(namespaces)g(with)h(brief)g(descriptions:)268 3017 y
Fq(BEAST)g Fp(\(The)g(namespace)f(for)g(ev)n(erything)f(in)i(the)g(sim)
n(ulation)f(en)n(vironmen)n(t)g(\))75 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h
(.)116 b(53)p eop
%%Page: 6 14
6 13 bop -358 70 a Fq(6)663 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Namespace)g(Index)p -358 103 4034 4 v -358 5723 V -192
5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 7 15
7 14 bop 150 1003 a Fm(Chapter)65 b(4)150 1465 y Fr(BEAST)77
b(-)h(Bioinspired)150 1714 y(Ev)-6 b(olutionary)76 b(Agen)-6
b(t)78 b(Sim)-6 b(ulation)150 1963 y(T)-19 b(o)6 b(olkit)77
b(Hierarc)-6 b(hical)75 b(Index)150 2492 y Fl(4.1)135
b(BEAST)61 b(-)h(Bioinspired)h(Ev)l(olutionary)h(Agen)l(t)e(Sim)l
(ulation)456 2641 y(T)-11 b(o)t(olkit)46 b(Class)g(Hierarc)l(h)l(y)150
2870 y Fp(This)28 b(inheritance)f(list)h(is)f(sorted)g(roughly)-7
b(,)26 b(but)j(not)e(completely)-7 b(,)28 b(alphab)r(etically:)268
3017 y(BEAST::auto)p 765 3017 25 4 v 29 w(prop)r(ert)n(y)p
Fo(<)p 1198 3017 V 56 w Fp(T)n(yp)r(e,)p 1466 3017 V
58 w(In,)p 1622 3017 V 57 w(Out)g Fo(>)386 3117 y Fp(BEAST::auto)p
883 3117 V 29 w(indexed)p 1191 3117 V 30 w(p)r(oin)n(ter)p
1480 3117 V 30 w(prop)r(ert)n(y)386 3216 y(BEAST::auto)p
883 3216 V 29 w(indexed)p 1191 3216 V 30 w(prop)r(ert)n(y)386
3316 y(BEAST::auto)p 883 3316 V 29 w(p)r(oin)n(ter)p
1171 3316 V 30 w(prop)r(ert)n(y)268 3416 y(BEAST::b)r(ound)p
831 3416 V 30 w(mem)p 1036 3416 V 30 w(fun)p 1183 3416
V 31 w(t)p Fo(<)p 1338 3416 V 57 w Fp(Class,)p 1609 3416
V 57 w(Return,)p 1945 3416 V 58 w(Arg)e Fo(>)i Fp(.)42
b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)116 b(88)268 3515 y(BEAST::call)p 728 3515 V 29
w(on)p 845 3515 V 30 w(mem)p 1050 3515 V 30 w(t)p Fo(<)28
b Fp(T,)f(M,)h(OP)f Fo(>)58 b Fp(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)116 b(89)268 3615 y(BEAST::creator)p Fo(<)25 b Fp(T)j
Fo(>)j Fp(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)116 b(90)268 3715 y(BEAST::deleter)p
Fo(<)27 b Fp(T)g Fo(>)41 b Fp(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)116 b(91)268 3814
y(BEAST::Distribution::Kernel)60 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)116 b(97)268 3914 y(BEAST::Dra)n(w)n(able)
386 4013 y(BEAST::AnimatMonitor)386 4113 y(BEAST::Collisions)386
4213 y(BEAST::T)-7 b(rail)386 4312 y(BEAST::W)g(orldOb)5
b(ject)61 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)85 b(213)504 4413 y(BEAST::Animat)63 b(.)41
b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)74 b(67)622 4513 y(BEAST::Bacterium)23 b(.)42 b(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)85 b(75)622 4613
y(BEAST::DNNAnimat)70 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)85 b(99)741 4713 y(BEAST::Ev)n(oDNNAnimat)57
b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)54 b(120)622
4813 y(BEAST::FFNAnimat)87 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)i(133)741 4913 y(BEAST::Ev)n(oFFNAnimat)74
b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)54 b(121)504
5014 y(BEAST::Distribution)24 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)74 b(92)504 5113 y(BEAST::Sensor)35
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)32 b(182)622 5214 y(BEAST::AreaSensor)55
b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)85
b(74)622 5313 y(BEAST::BeamSensor)22 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)85 b(85)622 5413 y(BEAST::SelfSensor)33
b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)i
(180)622 5513 y(BEAST::T)-7 b(ouc)n(hSensor)72 b(.)41
b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)i(200)504
5613 y(BEAST::W)-7 b(all)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)32 b(206)p
eop
%%Page: 8 16
8 15 bop -358 70 a Fq(8)626 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Hierarc)m(hical)i(Index)p -358 103 4034 4 v 268 333
a Fp(BEAST::DynamicalNet)75 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(102)268 432 y
(BEAST::DynamicalNet::Neuron)21 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)74 b(108)268 532 y(BEAST::Ev)n(olv)n(er)p
Fo(<)25 b Fp(T)i Fo(>)77 b Fp(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(122)268 632 y(BEAST::Ev)n(olv)n
(er)p Fo(<)25 b Fp(\015oat)i Fo(>)39 b Fp(.)j(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(122)386
746 y(BEAST::Ev)n(oDNNAnimat)58 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)85 b(120)386 846 y(BEAST::Ev)n(oFFNAnimat)75
b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85
b(121)268 960 y(BEAST::extractor)p Fo(<)p 1025 960 25
4 v 55 w Fp(Iterator)26 b Fo(>)j Fp(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)74 b(124)268 1060 y(BEAST::F)-7
b(eedF)g(orw)n(ardNet)60 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(125)268 1159 y(BEAST::F)-7
b(eedF)g(orw)n(ardNet::Neuron)71 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)74 b(131)268 1259 y(BEAST::Gaussian2D)31
b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)74 b(136)268 1359 y(BEAST::GaussianNoise)68
b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)74 b(137)268 1458 y(BEAST::GaussianRing2D)52 b(.)42
b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(138)268 1558 y(BEAST::GA)-9 b(V)i(arian)n(t)77 b(.)41
b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)74 b(140)268 1657 y(BEAST::GA)-9 b(V)i(arian)n(t::V)g(arian)n
(tData)33 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(142)268 1757 y(BEAST::GeneticAlgorithm)p Fo(<)27 b
Fp(EV)n(O,)g(MUTFUNC)h Fo(>)61 b Fp(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(143)268 1857 y(BEAST::GeneticAlgorithm)p Fo(<)27 b
Fp(EV)n(O,)g(MUTFUNC)h Fo(>)p Fp(::ev)n(o)p 2272 1857
V 29 w(sort)p Fo(<)p 2532 1857 V 56 w Fp(EV)n(O)f Fo(>)41
b Fp(.)g(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(150)268
1956 y(BEAST::GeneticAlgorithm)p Fo(<)27 b Fp(EV)n(O,)g(MutationOp)r
(erator)p Fo(<)e Fp(EV)n(O::gene)p 2727 1956 V 29 w(t)n(yp)r(e)j
Fo(>)f(>)35 b Fp(.)42 b(.)f(.)h(.)f(.)h(.)74 b(143)386
2071 y(BEAST::PSO)n(Algorithm)268 2185 y(BEAST::GetSim)n(ulationBase)
386 2285 y(BEAST::GetSim)n(ulation)268 2384 y(BEAST::LimitDistribution)
268 2484 y(BEAST::MutationOp)r(erator)p Fo(<)25 b Fp(T)j
Fo(>)68 b Fp(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(160)268 2584 y(BEAST::MutationOp)r(erator)p Fo(<)25
b Fp(b)r(o)r(ol)j Fo(>)36 b Fp(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)74 b(162)268 2683 y(BEAST::MutationOp)r(erator)p
Fo(<)25 b Fp(EV)n(O::gene)p 1754 2683 V 29 w(t)n(yp)r(e)j
Fo(>)67 b Fp(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(160)268 2783 y(BEAST::MutationOp)r
(erator)p Fo(<)25 b Fp(GA)-9 b(V)i(arian)n(t)27 b Fo(>)63
b Fp(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(163)268 2883
y(BEAST::NormalMutator)p Fo(<)26 b Fp(T)h Fo(>)268 2982
y Fp(BEAST::Ob)5 b(jLoaderBase)31 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(166)386
3097 y(BEAST::Ob)5 b(jLoader)p Fo(<)p 1204 3097 V 55
w Fp(T)n(yp)r(e)28 b Fo(>)60 b Fp(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)85 b(165)268 3211 y(BEAST::prop)r(ert)n(y)p
Fo(<)p 1007 3211 V 56 w Fp(Owner,)p 1328 3211 V 57 w(T)n(yp)r(e,)p
1595 3211 V 57 w(In,)p 1752 3211 V 58 w(Out)27 b Fo(>)85
b Fp(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)74 b(170)386 3326 y(BEAST::p)r(oin)n(ter)p
980 3326 V 29 w(prop)r(ert)n(y)268 3440 y(Random)p Fo(<)p
671 3440 V 57 w Fp(T)n(yp)r(e)27 b Fo(>)d Fp(.)42 b(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(171)268 3540 y(BEAST::Ring2D)60 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(172)268 3639 y(BEAST::SensorEv)-5 b(alF)e(unction)72
b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(185)386 3754 y(BEAST::Ev)-5 b(alCoun)n(t)386 3853 y(BEAST::Ev)g
(alDensit)n(y)386 3953 y(BEAST::Ev)g(alGradien)n(t)386
4053 y(BEAST::Ev)g(alNearest)29 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85 b(112)504 4159
y(BEAST::Ev)-5 b(alNearestAbsX)84 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)32 b(114)504 4258 y(BEAST::Ev)-5
b(alNearestAbsY)84 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)32 b(115)504 4358 y(BEAST::Ev)-5 b(alNearestAngle)77
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)32
b(116)504 4458 y(BEAST::Ev)-5 b(alNearestSignal)p Fo(<)p
1588 4458 V 55 w Fp(State,)p 1858 4458 V 58 w(Signal,)p
2160 4458 V 57 w(Cost)27 b Fo(>)83 b Fp(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)32 b(117)504 4557
y(BEAST::Ev)-5 b(alNearestXDist)74 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)32 b(118)504 4657 y(BEAST::Ev)-5
b(alNearestYDist)74 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)32 b(119)268 4771 y(BEAST::SensorMatc)n(hF)-7
b(unction)66 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)74 b(186)386 4886 y(BEAST::Matc)n(hAdapter)p Fo(<)p
1342 4886 V 56 w Fp(F)-7 b(unctor)28 b Fo(>)21 b Fp(.)42
b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85 b(154)386 4985
y(BEAST::Matc)n(hComp)r(oseAnd)73 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)85 b(155)386 5085 y(BEAST::Matc)n(hComp)r(oseOr)64
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85
b(156)386 5185 y(BEAST::Matc)n(hExact)p Fo(<)p 1255 5185
V 56 w Fp(Ob)5 b(jectT)n(yp)r(e)27 b Fo(>)22 b Fp(.)41
b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85 b(157)386 5284 y(BEAST::Matc)n
(hKindOf)p Fo(<)p 1314 5284 V 57 w Fp(Ob)5 b(jectT)n(yp)r(e)27
b Fo(>)g Fp(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85 b(158)386
5384 y(BEAST::Matc)n(hSp)r(eci\014c)25 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85 b(159)268
5498 y(BEAST::SensorScaleF)-7 b(unction)48 b(.)41 b(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(187)386 5613
y(BEAST::ScaleAbs)h(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)85 b(173)p -358 5723 4034
4 v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 9 17
9 16 bop 150 70 a Fq(4.1)31 b(BEAST)h(-)g(Bioinspired)d(Ev)m
(olutionary)k(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Hierarc)m(h)m(y)588 b(9)p 150 103 4034 4 v
386 333 a Fp(BEAST::ScaleAdapter)p Fo(<)p 1295 333 25
4 v 56 w Fp(F)-7 b(unctor)28 b Fo(>)67 b Fp(.)42 b(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)85 b(174)386 432 y(BEAST::ScaleComp)r(ose)79
b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85
b(176)386 532 y(BEAST::ScaleGradien)n(t)386 632 y(BEAST::ScaleLinear)48
b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)85 b(177)386 731 y(BEAST::ScaleNoise)f(.)41 b(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85
b(178)386 831 y(BEAST::ScaleThreshold)44 b(.)e(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85 b(179)268 947
y(BEAST::SerialException)27 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(188)268 1047
y(BEAST::Signaller)p Fo(<)p 1009 1047 V 56 w Fp(State,)p
1279 1047 V 58 w(Signal,)p 1581 1047 V 57 w(Cost)27 b
Fo(>)38 b Fp(.)k(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(189)268
1146 y(BEAST::SimOb)5 b(ject)81 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(191)386
1262 y(BEAST::Group)p Fo(<)p 1045 1262 V 57 w Fp(Ob)5
b(jT)n(yp)r(e)27 b Fo(>)79 b Fp(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)85 b(151)386 1362 y(BEAST::Group)p Fo(<)p
1045 1362 V 57 w Fp(Ind)27 b Fo(>)g Fp(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85 b(151)504 1470
y(BEAST::P)n(opulation)p Fo(<)p 1327 1470 V 56 w Fp(Ind,)p
1530 1470 V 58 w(MutF)-7 b(unc)28 b Fo(>)k Fp(.)42 b(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)32 b(167)268 1586 y(BEAST::Sim)n(ulation)76 b(.)41
b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)74 b(194)268 1686 y(BEAST::switc)n(her)38 b(.)j(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(199)268 1786 y(BEAST::UniformNoise)33 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(201)268 1885 y(BEAST::Unserialiser)41 b(.)g(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(202)268 1985 y(BEAST::V)-7 b(ector2D)60 b(.)42 b(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(203)268 2084 y(v)n(ector)p Fo(<)p 587 2084 V 56 w Fp(Ob)5
b(jT)n(yp)r(e)27 b Fh(\003)g Fo(>)386 2184 y Fp(BEAST::Group)p
Fo(<)p 1045 2184 V 57 w Fp(Ob)5 b(jT)n(yp)r(e)27 b Fo(>)79
b Fp(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85
b(151)268 2284 y(v)n(ector)p Fo(<)26 b Fp(Animat)i Fh(\003)f
Fo(>)268 2383 y Fp(v)n(ector)p Fo(<)f Fp(SensorMatc)n(hF)-7
b(unction)27 b Fh(\003)g Fo(>)386 2483 y Fp(BEAST::Matc)n(hComp)r
(oseAnd)73 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85
b(155)386 2583 y(BEAST::Matc)n(hComp)r(oseOr)64 b(.)42
b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)85
b(156)268 2682 y(BEAST::W)-7 b(orld)50 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(208)268 2782 y(BEAST::ZeroDistribution)p 150 5723 4034
4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 10 18
10 17 bop -358 70 a Fq(10)578 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Hierarc)m(hical)i(Index)p -358 103 4034 4 v -358 5723
V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 11 19
11 18 bop 150 1003 a Fm(Chapter)65 b(5)150 1465 y Fr(BEAST)77
b(-)h(Bioinspired)150 1714 y(Ev)-6 b(olutionary)76 b(Agen)-6
b(t)78 b(Sim)-6 b(ulation)150 1963 y(T)-19 b(o)6 b(olkit)77
b(Comp)6 b(ound)78 b(Index)150 2492 y Fl(5.1)135 b(BEAST)61
b(-)h(Bioinspired)h(Ev)l(olutionary)h(Agen)l(t)e(Sim)l(ulation)456
2641 y(T)-11 b(o)t(olkit)46 b(Comp)t(ound)e(List)150
2898 y Fp(Here)27 b(are)g(the)h(classes,)e(structs,)i(unions)f(and)g
(in)n(terfaces)g(with)h(brief)g(descriptions:)268 3051
y Fq(BEAST::Animat)34 b Fp(\(Animats)j(can)e(mo)n(v)n(e)g(around)g(and)
h(in)n(teract)f(with)h(other)f(ob)5 b(jects)36 b(in)g(the)584
3151 y(w)n(orld)26 b(\))g(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)116
b(67)268 3257 y Fq(BEAST::AreaSensor)30 b Fp(\(Detects)h(ob)5
b(jects)30 b(within)h(an)f(area)e(sp)r(eci\014ed)j(b)n(y)f(the)h(size)f
(and)g(shap)r(e)584 3357 y(of)d(the)h Fq(AreaSensor)g
Fp(\))i(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
116 b(74)268 3463 y Fq(BEAST::Bacterium)47 b Fp(.)42
b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)116 b(75)268 3569 y Fq(BEAST::BeamSensor)45 b Fp(\(BeamSensors)h
(can)h(really)g(b)r(e)g(three)h(distinct)g(kinds)f(of)h(sensor:)584
3668 y(Lasers,)25 b(whic)n(h)i(just)g(detect)g(ob)5 b(jects)27
b(a)f(certain)g(distance)h(a)n(w)n(a)n(y)e(in)i(a)f(straigh)n(t)g(line)
h(from)584 3768 y(the)h(sensor's)e(origin)g(\))c(.)42
b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)116
b(85)268 3874 y Fq(BEAST::b)s(ound)p 913 3874 29 4 v
33 w(mem)p 1152 3874 V 32 w(fun)p 1319 3874 V 34 w(t)p
Fo(<)p 1486 3874 V 66 w Fq(Class,)p 1796 3874 V 64 w(Return,)p
2186 3874 V 66 w(Arg)31 b Fo(>)c Fp(\(A)h(functor)f(whic)n(h)h(creates)
e(a)584 3974 y(unary)h(function)h(from)g(a)f(unary)g(mem)n(b)r(er)h
(function,)h(binding)f(an)g(instance)f(of)h(the)g(class)584
4073 y(to)f(whic)n(h)h(the)g(function)g(b)r(elongs)f(\))53
b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)116 b(88)268
4179 y Fq(BEAST::call)p 792 4179 V 34 w(on)p 927 4179
V 34 w(mem)p 1167 4179 V 31 w(t)p Fo(<)27 b Fq(T,)f(M,)g(OP)h
Fo(>)c Fp(\(Allo)n(ws)g(us)g(to)g(bind)h(functors)e(so)h(that)g(they)h
(w)n(ork)584 4279 y(on)j(particular)f(mem)n(b)r(ers)h(of)h(classes,)e
(useful)i(for)f(using)h(for)p 2503 4279 25 4 v 29 w(eac)n(h)f(on)g
(maps)g(\))52 b(.)42 b(.)f(.)h(.)f(.)h(.)116 b(89)268
4385 y Fq(BEAST::creator)p Fo(<)48 b Fq(T)f Fo(>)41 b
Fp(\(A)h(functor)f(for)g(use)g(with)g(the)h(for)p 2471
4385 V 29 w(eac)n(h)f(algorithm)f(whic)n(h)h(can)584
4485 y(p)r(erform)27 b(creation)f(of)i(ob)5 b(jects)27
b(when)h(called)f(on)g(a)g(con)n(tainer)g(of)g(p)r(oin)n(ters)g(\))f(.)
42 b(.)g(.)f(.)h(.)f(.)h(.)116 b(90)268 4591 y Fq(BEAST::deleter)p
Fo(<)30 b Fq(T)j Fo(>)27 b Fp(\(A)i(functor)e(for)h(use)f(with)i(the)f
(for)p 2338 4591 V 29 w(eac)n(h)f(algorithm)g(whic)n(h)g(can)h(p)r(er-)
584 4690 y(form)f(deletion)g(of)h(ob)5 b(jects)27 b(when)h(called)f(on)
g(a)h(con)n(tainer)e(of)i(p)r(oin)n(ters)e(\))85 b(.)41
b(.)h(.)g(.)f(.)h(.)f(.)h(.)116 b(91)268 4797 y Fq(BEAST::Distribution)
27 b Fp(\(Implemen)n(ts)i(a)f(grid)g(whic)n(h)h(stores)e(spatial)h
(densit)n(y)h(information)e(to)584 4896 y(a)g(sp)r(eci\014ed)h
(resolution,)e(e.g)h(\))e(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)116 b(92)268 5002 y Fq(BEAST::Distribution::Kernel)24
b Fp(\(Implemen)n(ts)k(di\013usion)g(and)f(other)g(neigh)n(b)r(ourho)r
(o)r(d)f(op)r(er-)584 5102 y(ations)h(\))74 b(.)41 b(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)116
b(97)268 5208 y Fq(BEAST::DNNAnimat)22 b Fp(\(An)j Fq(Animat)e
Fp(with)i(a)e(built-in)i(dynamical)e(net)n(w)n(ork)g(whic)n(h)h(is)g
(auto-)584 5308 y(matically)19 b(con\014gured)h(dep)r(ending)g(on)g
(the)h(Animat's)g(sensor)e(and)h(con)n(trol)f(con\014guration)584
5407 y(\))60 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)116
b(99)268 5513 y Fq(BEAST::DynamicalNet)32 b Fp(\(This)h(class)g
(implemen)n(ts)g(a)g(fully)h(recurren)n(t)e(con)n(tin)n(uous)g(\(or)h
(dy-)584 5613 y(namical\))27 b(neural)g(net)n(w)n(ork)f(\))53
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(102)p eop
%%Page: 12 20
12 19 bop -358 70 a Fq(12)624 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Comp)s(ound)f(Index)p -358 103 4034 4 v 268 333 a
(BEAST::DynamicalNet::Neuron)40 b Fp(\(Unlik)n(e)k(the)f
Fq(F)-8 b(eedF)g(orw)m(ardNet)p Fp(,)48 b(the)43 b Fq(Neuron)g
Fp(in)584 432 y Fq(DynamicalNet)c Fp(is)h(more)f(w)n(orth)n(y)g(of)h
(its)g(name,)j(since)d(nearly)g(all)f(the)i(pro)r(cessing)584
532 y(of)27 b(the)h(DNN's)h(\014ring)e(algorithm)f(o)r(ccurs)h(here)g
(\))69 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)74 b(108)268 632 y Fq(BEAST::Ev)-5
b(alNearest)23 b Fp(\(Keeps)h(a)g(tally)g(of)g(the)h(nearest)e(p)r(oin)
n(t)i(passed)e(in)i(and)f(returns)f(it)i(with)584 731
y(GetOutput)j(\))83 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(112)268 831 y Fq(BEAST::Ev)-5
b(alNearestAbsX)27 b Fp(\(Returns)g(the)h(absolute)f(x)h(p)r(osition)f
(of)h(the)g(nearest)e(target)h(\))36 b(.)74 b(114)268
930 y Fq(BEAST::Ev)-5 b(alNearestAbsY)27 b Fp(\(Returns)g(the)h
(absolute)f(y)h(p)r(osition)f(of)h(the)g(nearest)e(target)h(\))36
b(.)74 b(115)268 1030 y Fq(BEAST::Ev)-5 b(alNearestAngle)26
b Fp(\(Returns)i(the)g(normalised)e(angle)h(to)g(the)h(nearest)f
(target)g(\))34 b(.)42 b(.)74 b(116)268 1130 y Fq(BEAST::Ev)-5
b(alNearestSignal)p Fo(<)p 1493 1130 29 4 v 55 w Fq(State,)p
1796 1130 V 59 w(Signal,)p 2135 1130 V 57 w(Cost)23 b
Fo(>)c Fp(\()p Fq(Sensor)g Fp(ev)-5 b(aluation)19 b(functor:)584
1229 y(returns)26 b(the)i(signal)f(of)h(the)g(nearest)e(individual)i
(\))j(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)74 b(117)268 1329 y Fq(BEAST::Ev)-5 b(alNearestXDist)26
b Fp(\(Returns)i(the)g(v)n(ertical)e(distance)i(to)f(the)h(nearest)f
(target)g(\))49 b(.)42 b(.)74 b(118)268 1429 y Fq(BEAST::Ev)-5
b(alNearestYDist)26 b Fp(\(Returns)i(the)g(horizon)n(tal)e(distance)h
(to)h(the)g(nearest)e(target)h(\))117 b(119)268 1528
y Fq(BEAST::Ev)m(oDNNAnimat)66 b Fp(\(An)i(ev)n(olv)-5
b(able)66 b(v)n(ersion)f(of)j Fq(DNNAnimat)d Fp(with)j(Get-)584
1628 y(Genot)n(yp)r(e/SetGenot)n(yp)r(e)27 b(metho)r(ds)h(already)e
(set)h(up)h(\))45 b(.)c(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)74 b(120)268 1727 y Fq(BEAST::Ev)m(oFFNAnimat)g
Fp(\(An)i(ev)n(olv)-5 b(able)74 b(v)n(ersion)f(of)j Fq(FFNAnimat)e
Fp(with)h(Get-)584 1827 y(Genot)n(yp)r(e/SetGenot)n(yp)r(e)27
b(metho)r(ds)h(already)e(set)h(up)h(\))45 b(.)c(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(121)268 1927
y Fq(BEAST::Ev)m(olv)m(er)p Fo(<)31 b Fq(T)i Fo(>)103
b Fp(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
74 b(122)268 2026 y Fq(BEAST::extractor)p Fo(<)p 1140
2026 V 77 w Fq(Iterator)44 b Fo(>)36 b Fp(\(This)h(is)f(a)h(function)g
(ob)5 b(ject)36 b(whic)n(h)h(can)f(b)r(e)h(used)g(for)584
2126 y(cop)n(ying)26 b(from)h(an)h(iterator)e(when)i(the)g(n)n(um)n(b)r
(er)f(of)g(input)i(v)-5 b(alues)27 b(is)h(unkno)n(wn)f(\))63
b(.)42 b(.)f(.)h(.)74 b(124)268 2226 y Fq(BEAST::F)-8
b(eedF)g(orw)m(ardNet)42 b Fp(\(This)h(is)f(an)g(implemen)n(tation)h
(of)f(a)g(simple)h(t)n(w)n(o-la)n(y)n(er)c(feed-)584
2325 y(forw)n(ard)25 b(neural)i(net)n(w)n(ork)g(\))e(.)41
b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(125)268 2425 y Fq(BEAST::F)-8 b(eedF)g(orw)m(ardNet::Neuron)42
b Fp(\(This)h(mem)n(b)r(er)g(struct)g(simply)g(encapsulates)f(the)584
2524 y(w)n(eigh)n(ted)29 b(sum)g(function)i(whic)n(h)e(has)h(to)f(b)r
(e)h(p)r(erformed)f(on)h(the)g(w)n(eigh)n(ts)f(of)g(eac)n(h)g(no)r(de)
584 2624 y(when)e(the)h(net)g(\014res)f(\))h(.)42 b(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(131)268
2724 y Fq(BEAST::FFNAnimat)17 b Fp(\(An)j Fq(Animat)e
Fp(with)h(a)g(built-in)h(feed-forw)n(ard)d(net)n(w)n(ork)g(whic)n(h)i
(is)g(auto-)584 2823 y(matically)g(con\014gured)h(dep)r(ending)g(on)g
(the)h(Animat's)g(sensor)e(and)h(con)n(trol)f(con\014guration)584
2923 y(\))60 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(133)268 3023 y Fq(BEAST::Gaussian2D)26 b Fp(\(Plots)g(a)g(t)n(w)n
(o-dimensional)f(Gaussian)h(function)h(in)g(a)f(distribution)h(or)584
3122 y(distribution)g(k)n(ernel)g(\))74 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(136)268 3222
y Fq(BEAST::GaussianNoise)25 b Fp(\(Plots)i(normally)g(distributed)h
(noise)f(in)h(a)f(distribution)h(\))39 b(.)i(.)h(.)f(.)h(.)74
b(137)268 3321 y Fq(BEAST::GaussianRing2D)26 b Fp(\(Plots)h(a)g(t)n(w)n
(o)g(dimensional)g(Gaussian)g(ring)f(\))81 b(.)42 b(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)74 b(138)268 3421 y Fq(BEAST::GA)-11 b(V)j(arian)m(t)31
b Fp(\(This)f(is)g(a)f(general)f(purp)r(ose)h(data)g(t)n(yp)r(e)h(whic)
n(h)g(tak)n(es)f(\014v)n(e)g(basic)g(data)584 3521 y(t)n(yp)r(es:)36
b(in)n(t,)28 b(\015oat,)f(double,)h(c)n(har)e(and)i(b)r(o)r(ol)f(\))49
b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)74 b(140)268 3620 y Fq(BEAST::GA)-11
b(V)j(arian)m(t::V)g(arian)m(tData)31 b Fp(\(Union)d(of)f(\014v)n(e)h
(data)f(t)n(yp)r(es)g(for)g Fq(GA)-11 b(V)j(arian)m(t)30
b Fp(\))71 b(.)41 b(.)h(.)74 b(142)268 3720 y Fq
(BEAST::GeneticAlgorithm)p Fo(<)54 b Fq(EV)m(O,)k(MUTFUNC)g
Fo(>)50 b Fp(\(The)h Fq(GeneticAlgorithm)584 3820 y Fp(class)33
b(pro)n(vides)g(functionalit)n(y)h(to)g(co)n(v)n(er)f(a)g(range)g(of)i
(GA)f(metho)r(ds,)j(and)d(ma)n(y)f(b)r(e)i(ex-)584 3919
y(tended)28 b(to)f(incorp)r(orate)f(other)h(approac)n(hes)e(\))e(.)41
b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)74 b(143)268 4019 y Fq(BEAST::GeneticAlgorithm)p
Fo(<)23 b Fq(EV)m(O,)j(MUTFUNC)i Fo(>)p Fq(::ev)m(o)p
2542 4019 V 33 w(sort)p Fo(<)p 2828 4019 V 60 w Fq(EV)m(O)f
Fo(>)c Fp(\(A)h(little)584 4118 y(function)k(ob)5 b(ject)27
b(to)h(enable)f(us)g(to)h(sort)f(the)h(p)r(opulation)f(b)n(y)g
(\014tness)h(\))79 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(150)268 4218 y Fq(BEAST::Group)p Fo(<)p 1014 4218 V
65 w Fq(Ob)5 b(jT)m(yp)s(e)33 b Fo(>)27 b Fp(\(A)i(simple)e(class)g
(whic)n(h)h(creates)e(and)h(main)n(tains)g(a)h(v)n(ector)584
4318 y(of)f(ob)5 b(jects)27 b(of)h(the)g(sp)r(eci\014ed)g(t)n(yp)r(e)f
(and)h(adds)f(them)h(to)g(the)g(w)n(orld)e(eac)n(h)h(round)g(\))38
b(.)k(.)f(.)h(.)74 b(151)268 4417 y Fq(BEAST::Matc)m(hAdapter)p
Fo(<)p 1366 4417 V 76 w Fq(F)-8 b(unctor)41 b Fo(>)34
b Fp(\(Allo)n(ws)h(an)n(y)f(unary)g(predicate)h(to)f(b)r(e)i(adapted)
584 4517 y(for)27 b(use)g(as)g(a)g(matc)n(hing)g(function)h(\))i(.)42
b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(154)268 4617
y Fq(BEAST::Matc)m(hComp)s(oseAnd)37 b Fp(\(Chains)j(an)n(y)e(n)n(um)n
(b)r(er)h(of)h(matc)n(hing)f(functions)g(together)584
4716 y(suc)n(h)c(that)h(only)g(if)g(all)f(of)h(them)g(are)f(true)h(for)
f(the)h(ob)5 b(ject)36 b(b)r(eing)g(matc)n(hed,)h Fq(Matc)m(h-)584
4816 y(Comp)s(oseAnd)25 b Fp(will)i(return)h(true)f(\))50
b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(155)268 4915
y Fq(BEAST::Matc)m(hComp)s(oseOr)21 b Fp(\(Chains)h(an)n(y)h(n)n(um)n
(b)r(er)f(of)h(matc)n(hing)f(functions)i(together)e(suc)n(h)584
5015 y(that)d(should)g(an)n(y)g(of)g(them)h(b)r(e)g(true)f(for)f(the)i
(ob)5 b(ject)19 b(b)r(eing)h(matc)n(hed,)g Fq(Matc)m(hComp)s(ose-)584
5115 y(Or)27 b Fp(will)h(return)f(true)h(\))46 b(.)41
b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(156)268 5214 y Fq(BEAST::Matc)m(hExact)p Fo(<)p 1255
5214 V 70 w Fq(Ob)5 b(jectT)m(yp)s(e)36 b Fo(>)30 b Fp(\(Iden)n
(ti\014es)h(exact)f(ob)5 b(ject)30 b(t)n(yp)r(es,)h(so)e(if)i
(de\014ned)584 5314 y(with)24 b(Cheese,)g(will)g(return)g(true)g(only)f
(for)g(Cheese,)i(and)e(false)h(for)f(Cheddar)g(and)h(Gruy)n(\022)-39
b(ere)22 b(\))t(157)268 5414 y Fq(BEAST::Matc)m(hKindOf)p
Fo(<)p 1311 5414 V 55 w Fq(Ob)5 b(jectT)m(yp)s(e)23 b
Fo(>)18 b Fp(\(Iden)n(ti\014es)h(ob)5 b(jects)19 b(b)r(elonging)f(to)g
(hierarc)n(hies,)584 5513 y(so)25 b(if)i(de\014ned)g(with)f(Cheese,)h
(will)f(return)g(true)g(for)g(ob)5 b(jects)26 b(of)g(t)n(yp)r(e)h
(Cheese,)f(or)f(deriv)n(ed)584 5613 y(classes)h(suc)n(h)h(as)g(Cheddar)
g(and)g(Gruy)n(\022)-39 b(ere)26 b(\))43 b(.)f(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(158)p -358 5723 4034 4 v -192 5823 a Fn(Generated)26
b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 13 21
13 20 bop 150 70 a Fq(5.1)31 b(BEAST)h(-)g(Bioinspired)d(Ev)m
(olutionary)k(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Comp)s(ound)f(List)549 b(13)p 150 103 4034 4 v 268
333 a(BEAST::Matc)m(hSp)s(eci\014c)23 b Fp(\(Iden)n(ti\014es)g(one)f
(particular)f(ob)5 b(ject)22 b(and)g(returns)g(true)g(only)g(for)g
(that)584 432 y(ob)5 b(ject)27 b(\))68 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(159)268 539 y Fq(BEAST::MutationOp)s(erator)p Fo(<)31
b Fq(T)h Fo(>)98 b Fp(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(160)268 645 y Fq(BEAST::MutationOp)s(erator)p Fo(<)46
b Fq(b)s(o)s(ol)f Fo(>)c Fp(\(Sp)r(ecialised)g Fq(MutationOp)s(erator)g
Fp(for)f(b)r(o)r(ol,)584 744 y(simply)27 b(NOT's)h(its)f(input)i(\))e
(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(162)268 851 y Fq(BEAST::MutationOp)s(erator)p Fo(<)46
b Fq(GA)-11 b(V)j(arian)m(t)49 b Fo(>)41 b Fp(\(This)g(sp)r(ecialised)f
(m)n(utation)h(op)r(erator)584 950 y(pro)n(vides)26 b(the)i(facilities)
f(of)h(the)g(basic)f Fq(MutationOp)s(erator)g Fp(for)g
Fq(GA)-11 b(V)j(arian)m(t)30 b Fp(\))64 b(.)41 b(.)h(.)74
b(163)268 1057 y Fq(BEAST::Ob)5 b(jLoader)p Fo(<)p 1184
1057 29 4 v 58 w Fq(T)m(yp)s(e)24 b Fo(>)c Fp(\(A)h(functor)g(for)e
(recreating)g(templated)i(ob)5 b(ject)20 b(t)n(yp)r(es)h(using)584
1156 y(serialisation)k(\))55 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(165)268
1262 y Fq(BEAST::Ob)5 b(jLoaderBase)28 b Fp(\(A)g(simple)g(abstract)e
(base)h(class)g(for)g Fq(Ob)5 b(jLoader)29 b Fp(functors)e(\))35
b(.)42 b(.)74 b(166)268 1369 y Fq(BEAST::P)m(opulation)p
Fo(<)p 1208 1369 V 73 w Fq(Ind,)p 1453 1369 V 77 w(MutF)-8
b(unc)40 b Fo(>)35 b Fp(\(This)g(class)f(is)h(deriv)n(ed)f(from)g
Fq(Group)i Fp(and)584 1468 y(adds)22 b(a)h(managed)f(GA)i(whic)n(h)f
(is)g(automatically)f(run)h(on)g(the)h(whole)f Fq(P)m(opulation)g
Fp(ev)n(ery)584 1568 y(ep)r(o)r(c)n(h)k(\))82 b(.)41
b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)74 b(167)268 1674 y Fq(BEAST::prop)s(ert)m(y)p
Fo(<)p 1121 1674 V 78 w Fq(Owner,)p 1505 1674 V 80 w(T)m(yp)s(e,)p
1826 1674 V 81 w(In,)p 2023 1674 V 81 w(Out)43 b Fo(>)38
b Fp(\(Class)f(wrapp)r(er)g(for)g(a)g(mem)n(b)r(er)584
1774 y(v)-5 b(ariable)20 b(whic)n(h)i(allo)n(ws)e(mem)n(b)r(er)h(data)g
(to)g(b)r(e)h(exp)r(osed)f(with)h(in)n(visible)g(get/set)e(seman)n
(tics)h(\))t(170)268 1880 y Fq(Random)p Fo(<)p 722 1880
V 64 w Fq(T)m(yp)s(e)33 b Fo(>)27 b Fp(\(F)-7 b(unction)28
b(ob)5 b(ject)28 b(v)n(ersion)e(of)h(randv)-5 b(al)27
b(\))59 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)74 b(171)268 1986 y Fq(BEAST::Ring2D)26 b Fp(\(Plots)h(a)g(t)n(w)n
(o)g(dimensional)g(ring)g(\))38 b(.)k(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(172)268
2093 y Fq(BEAST::ScaleAbs)23 b Fp(\(Returns)h(the)g(absolute)f(v)-5
b(alue)24 b(of)g(the)g(input,)h(as)e(for)g(the)h(std::abs)g(function)g
(\))t(173)268 2199 y Fq(BEAST::ScaleAdapter)p Fo(<)p
1310 2199 V 74 w Fq(F)-8 b(unctor)40 b Fo(>)34 b Fp(\(Allo)n(ws)g(an)n
(y)f(unary)g(functor)h(to)h(b)r(e)f(adapted)g(for)584
2299 y(use)27 b(as)g(a)g(scaling)g(function)h(\))52 b(.)42
b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(174)268
2405 y Fq(BEAST::ScaleComp)s(ose)21 b Fp(\()p Fq(ScaleComp)s(ose)g
Fp(allo)n(ws)i(the)i(c)n(haining)e(of)h(t)n(w)n(o)f(scaling)g
(functions)584 2505 y(together,)43 b(suc)n(h)e(the)h(output)g(of)f(a)g
Fq(ScaleComp)s(ose)d Fp(functor)j(is)g(the)h(result)f(of)g(sec-)584
2604 y(ond\(\014rst\(input\)\),)33 b(where)e(\014rst)g(and)g(second)g
(are)f(the)i(argumen)n(ts)e(in)i(ScaleComp)r(ose's)584
2704 y(constructor)26 b(\))73 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(176)268
2810 y Fq(BEAST::ScaleLinear)23 b Fp(\(A)g(simple)g(linear)f(scaling)f
(function)j(whic)n(h)e(defaults)h(to)f(an)h(input)g(scale)584
2910 y(b)r(et)n(w)n(een)k(0)g(and)h(a)f(de\014ned)h(maxim)n(um,)f
(scaling)g(to)g(an)h(output)g(range)e(b)r(et)n(w)n(een)i(0)f(and)g(1)h
(\))10 b(177)268 3016 y Fq(BEAST::ScaleNoise)26 b Fp(\()p
Fq(ScaleNoise)g Fp(adds)h(uniform)h(random)f(noise)g(to)g(its)h(input)g
(\))d(.)42 b(.)f(.)h(.)f(.)h(.)74 b(178)268 3122 y Fq
(BEAST::ScaleThreshold)19 b Fp(\()p Fq(ScaleThreshold)h
Fp(tak)n(es)f(v)-5 b(alues:)32 b(threshold,)21 b(min)f(and)g(max)g(and)
584 3222 y(returns)26 b(min)j(if)f(input)g Fo(<)f Fp(threshold,)g(or)g
(max)g(if)h(input)h Fo(>)p Fp(=)e(threshold)g(\))51 b(.)41
b(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(179)268 3328 y Fq(BEAST::SelfSensor)26
b Fp(\(The)i Fq(SelfSensor)f Fp(is)g(used)h(to)f(detect)h(information)f
(ab)r(out)h(its)g(o)n(wner)e(\))93 b(180)268 3434 y Fq(BEAST::Sensor)22
b Fp(\(The)i Fq(Sensor)f Fp(class)f(is)h(the)h(base)e(class)h(for)f
(all)h(the)h(di\013eren)n(t)f(t)n(yp)r(es)g(of)h(sensor:)584
3534 y Fq(T)-8 b(ouc)m(hSensor)p Fp(,)28 b Fq(SelfSensor)p
Fp(,)f Fq(AreaSensor)h Fp(and)f Fq(BeamSensor)f Fp(\))60
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(182)268 3640
y Fq(BEAST::SensorEv)-5 b(alF)d(unction)26 b Fp(\(Abstract)i(base)f
(class)g(for)g(ev)-5 b(aluation)27 b(functors)g(\))68
b(.)41 b(.)h(.)f(.)h(.)74 b(185)268 3747 y Fq(BEAST::SensorMatc)m(hF)-8
b(unction)28 b Fp(\(Abstract)f(base)g(class)g(for)g(matc)n(hing)g
(functors)g(\))83 b(.)42 b(.)f(.)h(.)74 b(186)268 3853
y Fq(BEAST::SensorScaleF)-8 b(unction)27 b Fp(\(Abstract)g(base)g
(class)g(for)g(scaling)g(functors)g(\))33 b(.)42 b(.)g(.)f(.)h(.)f(.)h
(.)74 b(187)268 3959 y Fq(BEAST::SerialException)29 b
Fp(\(Since)h(exceptions)g(ha)n(v)n(e)e(an)i(undesirable)f(o)n(v)n
(erhead,)f(they)j(ha)n(v)n(e)584 4059 y(not)c(b)r(een)h(used)g
(elsewhere)e(in)i(the)g(sim)n(ulation)f(en)n(vironmen)n(t)g(for)g
(reasons)f(of)h(sp)r(eed)h(\))71 b(.)j(188)268 4165 y
Fq(BEAST::Signaller)p Fo(<)p 1103 4165 V 59 w Fq(State,)p
1409 4165 V 62 w(Signal,)p 1751 4165 V 61 w(Cost)26 b
Fo(>)d Fp(\(A)h(general-purp)r(ose)d(class)h(for)g(mo)r(delling)584
4265 y(signallers)k(with)i(discrete)f(signal)f(and)i(state)f(t)n(yp)r
(es)h(\))64 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)74 b(189)268 4371 y Fq(BEAST::SimOb)5
b(ject)32 b Fp(\(An)j(abstract)e(base)h(class)f(for)h(the)h
Fq(P)m(opulation)f Fp(template,)i(allo)n(wing)584 4470
y(p)r(opulations)27 b(with)h(di\013eren)n(t)g(templated)g(t)n(yp)r(es)f
(to)h(b)r(e)g(represen)n(ted)e(in)i Fq(Sim)m(ulation)d
Fp(\))32 b(.)74 b(191)268 4577 y Fq(BEAST::Sim)m(ulation)25
b Fp(\(The)j(basic)f Fq(Sim)m(ulation)f Fp(framew)n(ork)f(whic)n(h)j(m)
n(ust)g(b)r(e)g(deriv)n(ed)f(to)g(set)584 4676 y(up)h(sim)n(ulations)e
(\))85 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)74 b(194)268 4783 y Fq(BEAST::switc)m(her)27
b Fp(\(The)h(switc)n(her)f(is)h(useful)g(when)f(con\014guring)g(b)r(o)r
(ols)g(from)g(string)g(data)g(\))69 b(.)74 b(199)268
4889 y Fq(BEAST::T)-8 b(ouc)m(hSensor)28 b Fp(\(Detects)g(ob)5
b(jects)27 b(whic)n(h)h(are)e(touc)n(hing)h(the)h(sensor's)e(o)n(wner)h
(\))72 b(.)41 b(.)h(.)74 b(200)268 4995 y Fq(BEAST::UniformNoise)24
b Fp(\(Plots)j(uniform)h(noise)f(in)h(a)f(distribution)h(\))76
b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(201)268 5101 y Fq(BEAST::Unserialiser)34 b Fp(\(This)i(class)f(is)g
(a)n(v)-5 b(ailable)35 b(for)g(unserialising)f(ob)5 b(jects)35
b(from)g(streams,)584 5201 y(without)c(kno)n(wing)f(whic)n(h)g(t)n(yp)r
(e)h(of)g(ob)5 b(ject)31 b(is)g(to)f(b)r(e)i(unserialised)d(-)i(the)g
(t)n(yp)r(e)g(is)g(deter-)584 5301 y(mined)d(from)f(the)h(header)f(of)g
(the)h(stream)f(\))50 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(202)268
5407 y Fq(BEAST::V)-8 b(ector2D)28 b Fp(\(A)g(class)f(for)g(represen)n
(ting)f(t)n(w)n(o-dimensional)g(v)n(ectors)g(and)h(co)r(ordinates)f(\))
40 b(203)268 5513 y Fq(BEAST::W)-8 b(all)30 b Fp(\(This)i(is)f(a)g
(handy)g(class)g(for)f(putting)i(the)g(most)f(common)g(t)n(yp)r(e)h(of)
f(obstacle)g(-)584 5613 y(w)n(alls)26 b(-)i(in)n(to)f(the)h(w)n(orld)f
(\))34 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(206)p 150 5723 4034 4 v 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 14 22
14 21 bop -358 70 a Fq(14)624 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Comp)s(ound)f(Index)p -358 103 4034 4 v 268 333 a(BEAST::W)-8
b(orld)23 b Fp(\(This)h(is)g(where)g(it)g(all)g(happ)r(ens:)35
b Fq(W)-8 b(orld)23 b Fp(con)n(tains)h(p)r(oin)n(ters)f(to)h(ev)n(ery)f
(ob)5 b(ject)584 432 y(in)36 b(the)g(sim)n(ulation)f(en)n(vironmen)n(t)
g(and)h(allo)n(ws)f(those)g(ob)5 b(jects)36 b(to)f(in)n(teract)h(with)g
(eac)n(h)584 532 y(other,)27 b(and)g(then)h(b)r(e)g(displa)n(y)n(ed)f
(\))g(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(208)268
632 y Fq(BEAST::W)-8 b(orldOb)5 b(ject)32 b Fp(\(The)g(base)g(class)f
(for)h(ev)n(erything)f(that)i(mak)n(es)e(a)h(di\013erence)g(in)h(the)
584 731 y(w)n(orld,)23 b(including)i(Animats,)g(Sensors)e(and)g(all)h
(t)n(yp)r(es)g(of)g(scenery)f(and)h(in)n(teractiv)n(e)f(ob)5
b(ject)24 b(\))t(213)p -358 5723 V -192 5823 a Fn(Generated)i(on)f(Sun)
f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 15 23
15 22 bop 150 1003 a Fm(Chapter)65 b(6)150 1465 y Fr(BEAST)77
b(-)h(Bioinspired)150 1714 y(Ev)-6 b(olutionary)76 b(Agen)-6
b(t)78 b(Sim)-6 b(ulation)150 1963 y(T)-19 b(o)6 b(olkit)77
b(File)f(Index)150 2492 y Fl(6.1)135 b(BEAST)61 b(-)h(Bioinspired)h(Ev)
l(olutionary)h(Agen)l(t)e(Sim)l(ulation)456 2641 y(T)-11
b(o)t(olkit)46 b(File)f(List)150 2888 y Fp(Here)27 b(is)h(a)f(list)h
(of)f(all)h(do)r(cumen)n(ted)f(\014les)h(with)g(brief)g(descriptions:)
268 3038 y Fq(animat.cc)f Fp(\(Implemen)n(tation)h(of)g(the)g(Animat)g
(class)e(\))67 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(217)268 3142 y Fq(animat.h)26
b Fp(\(In)n(terface)i(of)f(the)h(Animat)g(class)f(and)g(asso)r(ciated)g
(constan)n(ts)f(\))76 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(218)268 3246 y Fq(animatmonitor.h)93 b Fp(.)41 b(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(220)268 3349 y Fq(bacteria.h)28 b Fp(\(Global)g(include)g(for)f(all)g
(bacteria-related)f(classes)g(\))53 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(221)268 3453 y Fq(bacterium.h)27
b Fp(\(The)h(in)n(terface)e(for)i(the)f(Bacterium)g(class)g(\))53
b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)74 b(222)268 3556 y Fq(b)s(east.h)107 b Fp(.)42
b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(223)268 3660 y Fq(collisions.h)25
b Fp(\(Dra)n(ws)i(collisions)f(in)i(the)g(W)-7 b(orld)27
b(\))60 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(225)268 3764
y Fq(colours.h)27 b Fp(\(A)h(handy)f(include)h(whic)n(h)g(pro)n(vides)e
(a)h(bunc)n(h)h(of)g(colours)e(\))58 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)74 b(226)268 3867 y Fq(distribution.cc)27
b Fp(\(Implemen)n(tation)h(of)f(the)h(Distribution)g(class)f(\))85
b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(227)268 3971 y Fq(distribution.h)26 b Fp(\(Implemen)n(ts)i(a)f(t)n(w)
n(o-dimensional)f(densit)n(y)i(distribution)f(\))72 b(.)41
b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(228)268 4075
y Fq(dra)m(w)m(able.cc)29 b Fp(\(Implemen)n(tation)f(of)g(Dra)n(w)n
(able)e(\))62 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(229)268
4178 y Fq(dra)m(w)m(able.h)20 b Fp(\(Include)f(this)h(\014le)f(if)g(y)n
(ou)f(wish)h(to)g(create)f(scenery)g(or)g(other)h(non-in)n(teractiv)n
(e)e(ob)5 b(jects)584 4278 y(whic)n(h)27 b(app)r(ear)g(in)h(the)g(w)n
(orld)e(\))49 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(230)268 4381 y Fq(dynamicalnet.cc)27 b Fp(\(Implemen)n(tation)h(of)g
(DynamicalNet)g(\))83 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(232)268 4485 y Fq(dynamicalnet.h)28
b Fp(\(This)i(\014le)f(con)n(tains)f(the)i(in)n(terface)e(for)h(the)h
(DynamicalNet)f(ob)5 b(ject,)29 b(a)g(fully-)584 4585
y(recurren)n(t,)d(con)n(tin)n(uous-time)g(neural)h(net)n(w)n(ork)g(\))
54 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)74 b(233)268 4688 y Fq(feedforw)m(ardnet.h)92
b Fp(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)74 b(235)268 4792 y Fq(geneticalgorithm.h)79
b Fp(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)74 b(237)268 4896 y Fq(glutsimen)m(v.h)31
b Fp(\(The)j(main)f(include)h(\014le)g(for)f(the)h(sim)n(ulation)e(en)n
(vironmen)n(t/GLUT)h(-)g(include)584 4995 y(this)27 b(\014le)h(if)g(y)n
(ou)f(w)n(an)n(t)g(to)h(run)f(sim)n(ulations)g(using)g(the)h(simple)g
(GLUT-based)f(in)n(terface)g(\))58 b(239)268 5099 y Fq(neuralanimat.h)
29 b Fp(\(The)i(basic)e(Animat)i(comes)e(with)i(no)f(con)n(trol)f
(system,)h(so)g(in)g(the)h(course)d(of)584 5198 y(deriving)e(a)i(new)f
(t)n(yp)r(e)h(of)g(Animat,)g(a)f(con)n(trol)f(system)i(m)n(ust)f(b)r(e)
h(added)g(\))j(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(240)268
5302 y Fq(p)s(opulation.h)g Fp(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)109
b Fq(??)268 5406 y(psoalgorithm.h)d Fp(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(241)268 5509 y Fq(random.h)f Fp(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(242)268 5613 y Fq(sensor.h)68 b Fp(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)74 b(244)p eop
%%Page: 16 24
16 23 bop -358 70 a Fq(16)926 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)g(Index)p -358 103 4034 4 v 268 333 a(sensorbase.h)24
b Fp(\(All)h(basic)f(sensor)g(ob)5 b(jects)24 b(are)f(de\014ned)j(in)f
(this)g(\014le,)g(but)g(no)g(sensor)e(functors,)i(or)584
432 y(help)r(er)i(functions)h(app)r(ear)f(here)g(\))i(.)42
b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(245)268 532
y Fq(sensorfunctors.h)52 b Fp(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)109 b
Fq(??)268 632 y(serialfuncs.h)28 b Fp(\(A)h(bunc)n(h)g(of)f(metho)r
(ds,)h(templates)g(and)f(classes)f(for)h(p)r(erforming)g(quic)n(k)g
(stream)584 731 y(insertion)k(and)h(extraction,)h(include)g(this)f
(\014le)h(if)g(y)n(ou)e(need)i(to)f(serialise)f(y)n(our)g(ob)5
b(jects')584 831 y(data)27 b(\))65 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(247)268 930 y Fq(signaller.h)33 b Fp(\(This)j(\014le)f(de\014nes)g(a)
g(class)f(whic)n(h)h(can)g(b)r(e)g(m)n(ultiply)h(inherited)f(with)h
(Animat)f(to)584 1030 y(create)26 b(a)h(signalling)g(Animat,)h(and)g
(some)f(asso)r(ciated)f(sensor)g(functors)h(whic)n(h)h(\))61
b(.)42 b(.)f(.)h(.)74 b(249)268 1130 y Fq(sim)m(ulation.cc)57
b Fp(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(250)268 1229 y Fq(sim)m(ulation.h)88
b Fp(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(251)268 1329 y Fq(trail.h)88
b Fp(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)109 b Fq(??)268
1429 y(unserialiser.cc)27 b Fp(\(Implemen)n(tation)h(of)f(Unserialiser)
f(\))71 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)74 b(254)268 1528 y Fq(unserialiser.h)25
b Fp(\(In)n(terface)i(of)g(a)f(class)g(and)h(related)g(functors)f(for)h
(unserialising)f(unkno)n(wn)g(t)n(yp)r(es)h(\))t(255)268
1628 y Fq(utilities.h)76 b Fp(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(256)268 1727 y Fq(v)m(ector2d.h)99 b Fp(.)42 b(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
109 b Fq(??)268 1827 y(w)m(orld.h)95 b Fp(.)42 b(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)74 b(257)268 1927 y Fq(w)m(orldob)5 b(ject.cc)29
b Fp(\(The)f(implemen)n(tation)f(of)h(W)-7 b(orldOb)5
b(ject)27 b(\))38 b(.)k(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)74 b(259)268 2026 y Fq(w)m(orldob)5
b(ject.h)96 b Fp(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)109 b Fq(??)p -358
5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 17 25
17 24 bop 150 1003 a Fm(Chapter)65 b(7)150 1465 y Fr(BEAST)77
b(-)h(Bioinspired)150 1714 y(Ev)-6 b(olutionary)76 b(Agen)-6
b(t)78 b(Sim)-6 b(ulation)150 1963 y(T)-19 b(o)6 b(olkit)77
b(P)-6 b(age)77 b(Index)150 2492 y Fl(7.1)135 b(BEAST)61
b(-)h(Bioinspired)h(Ev)l(olutionary)h(Agen)l(t)e(Sim)l(ulation)456
2641 y(T)-11 b(o)t(olkit)46 b(Related)g(P)l(ages)150
2870 y Fp(Here)27 b(is)h(a)f(list)h(of)f(all)h(related)f(do)r(cumen)n
(tation)g(pages:)268 3017 y(F)-7 b(eedF)g(orw)n(ardNet)27
b(source)f(co)r(de)75 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)74 b(261)268 3117 y(DynamicalNet)28 b(source)e(co)r(de)
d(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)74 b(267)268 3216 y(Bacterium)27 b(source)f(co)r(de)37
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)74 b(273)268 3316 y(Braiten)n(b)r(erg)26 b(source)g(co)r(de)
51 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)74 b(278)268 3416 y(Shrew)27 b(source)g(co)r(de)63
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)74 b(281)268 3515 y(Mouse)27 b(source)g(co)r(de)51
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)74 b(282)268 3615 y(Predator/Prey)24
b(source)i(co)r(de)77 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)74 b(285)268 3715 y(Bacteria)26 b(example)h(source)
g(co)r(de)44 b(.)d(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)74 b(288)268 3814 y(A)28 b(short)f(user's)g(guide)67
b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)74 b(292)268 3914 y(T)-7 b(utorial)27
b(0:)36 b(A)28 b(note)g(on)f(the)h(co)r(de)64 b(.)42
b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74
b(294)268 4013 y(T)-7 b(utorial)27 b(1:)36 b(Building)28
b(y)n(our)e(\014rst)i(Animat)48 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)74 b(296)268 4113 y(T)-7 b(utorial)27 b(2:)36
b(Adding)28 b(Ob)5 b(jects)27 b(and)h(In)n(teractiv)n(e)e(Animats)52
b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)74 b(300)268 4213 y(T)-7 b(utorial)27 b(3:)36
b(In)n(tro)r(ducing)27 b(the)h(Genetic)g(Algorithm)72
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)74 b(307)268 4312 y(T)-7 b(utorial)27
b(4:)36 b(More)27 b(Adv)-5 b(anced)28 b(Sim)n(ulations)63
b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)74 b(313)268
4412 y(T)-7 b(o)r(do)27 b(List)56 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)74 b(314)268 4512 y(Deprecated)27 b(List)e(.)42 b(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
74 b(315)p eop
%%Page: 18 26
18 25 bop -358 70 a Fq(18)883 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(P)m(age)i(Index)p -358 103 4034 4 v -358 5723 V -192
5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 19 27
19 26 bop 150 1003 a Fm(Chapter)65 b(8)150 1465 y Fr(BEAST)77
b(-)h(Bioinspired)150 1714 y(Ev)-6 b(olutionary)76 b(Agen)-6
b(t)78 b(Sim)-6 b(ulation)150 1963 y(T)-19 b(o)6 b(olkit)77
b(Mo)6 b(dule)78 b(Do)6 b(cumen)-6 b(tation)150 2492
y Fl(8.1)135 b(Sim)l(ulation)47 b(F)-11 b(ramew)l(ork)150
2721 y Fp(These)25 b(classes)f(wrap)h(the)h(in)n(terfaces)e(of)h(the)h
(GeneticAlgorithm)f(and)h(sim)n(ulation)f(en)n(vironmen)n(t)f(to)h(pro)
n(vide)150 2821 y(an)i(easy)g(w)n(a)n(y)f(to)i(set)f(up)h(a)f(range)g
(of)g(common)g(sim)n(ulation)g(t)n(yp)r(es.)150 3100
y Fj(Comp)s(ounds)275 3287 y Fk(\210)42 b Fp(class)26
b Fq(Animat)476 3412 y Fg(A)n(nimats)i(c)l(an)g(move)g(ar)l(ound)g(and)
g(inter)l(act)i(with)d(other)i(obje)l(cts)g(in)e(the)i(world.)275
3611 y Fk(\210)42 b Fp(class)26 b Fq(AnimatMonitor)275
3719 y Fk(\210)42 b Fp(class)26 b Fq(Collisions)275 3827
y Fk(\210)42 b Fp(class)26 b Fq(Dra)m(w)m(able)275 3935
y Fk(\210)42 b Fp(class)26 b Fq(Group)476 4060 y Fg(A)34
b(simple)g(class)h(which)f(cr)l(e)l(ates)j(and)d(maintains)h(a)f(ve)l
(ctor)i(of)e(obje)l(cts)i(of)e(the)h(sp)l(e)l(ci\014e)l(d)h(typ)l(e)f
(and)g(adds)476 4151 y(them)28 b(to)g(the)g(world)g(e)l(ach)h(r)l
(ound.)275 4350 y Fk(\210)42 b Fp(class)26 b Fq(P)m(opulation)476
4475 y Fg(This)31 b(class)g(is)g(derive)l(d)h(fr)l(om)f
Ff(Group)h Fg(and)g(adds)g(a)f(manage)l(d)h(GA)f(which)g(is)g
(automatic)l(al)t(ly)h(run)g(on)f(the)476 4566 y(whole)c
Ff(P)n(opulation)j Fg(every)f(ep)l(o)l(ch.)275 4766 y
Fk(\210)42 b Fp(class)26 b Fq(SimOb)5 b(ject)476 4890
y Fg(A)n(n)20 b(abstr)l(act)j(b)l(ase)e(class)g(for)f(the)h
Ff(P)n(opulation)h Fg(template,)g(al)t(lowing)e(p)l(opulations)h(with)f
(di\013er)l(ent)h(template)l(d)476 4982 y(typ)l(es)29
b(to)f(b)l(e)g(r)l(epr)l(esente)l(d)j(in)c Ff(Sim)n(ulation)p
Fg(.)275 5181 y Fk(\210)42 b Fp(class)26 b Fq(Sim)m(ulation)476
5305 y Fg(The)h(b)l(asic)i Ff(Sim)n(ulation)g Fg(fr)l(amework)f(which)g
(must)g(b)l(e)g(derive)l(d)h(to)f(set)h(up)e(simulations.)275
5505 y Fk(\210)42 b Fp(class)26 b Fq(T)-8 b(rail)275
5613 y Fk(\210)42 b Fp(class)26 b Fq(V)-8 b(ector2D)p
eop
%%Page: 20 28
20 27 bop -358 70 a Fq(20)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
476 333 a Fg(A)d(class)h(for)g(r)l(epr)l(esenting)i(two-dimensional)f
(ve)l(ctors)g(and)f(c)l(o)l(or)l(dinates.)275 532 y Fk(\210)42
b Fp(class)26 b Fq(W)-8 b(all)476 656 y Fg(This)27 b(is)g(a)h(handy)h
(class)f(for)f(putting)i(the)f(most)h(c)l(ommon)e(typ)l(e)i(of)e
(obstacle)j(-)d(wal)t(ls)h(-)f(into)h(the)h(world.)275
855 y Fk(\210)42 b Fp(class)26 b Fq(W)-8 b(orld)476 980
y Fg(This)25 b(is)g(wher)l(e)h(it)g(al)t(l)e(happ)l(ens:)36
b Ff(W)-7 b(orld)26 b Fg(c)l(ontains)h(p)l(ointers)f(to)g(every)h(obje)
l(ct)f(in)f(the)h(simulation)g(envir)l(on-)476 1071 y(ment)i(and)g(al)t
(lows)f(those)i(obje)l(cts)g(to)f(inter)l(act)h(with)f(e)l(ach)g
(other,)h(and)f(then)g(b)l(e)h(displaye)l(d.)275 1270
y Fk(\210)42 b Fp(class)26 b Fq(W)-8 b(orldOb)5 b(ject)476
1395 y Fg(The)29 b(b)l(ase)i(class)f(for)g(everything)h(that)g(makes)f
(a)g(di\013er)l(enc)l(e)h(in)e(the)h(world,)g(including)f(A)n(nimats,)h
(Sensors)476 1486 y(and)e(al)t(l)e(typ)l(es)k(of)d(sc)l(enery)i(and)f
(inter)l(active)h(obje)l(ct.)150 1857 y Fj(En)m(umerations)275
2043 y Fk(\210)42 b Fp(en)n(um)56 b Fq(AnimatP)m(artT)m(yp)s(e)h
Fh(f)f Fq(ANIMA)-8 b(T)p 1888 2043 29 4 v 35 w(BOD)m(Y)p
Fp(,)57 b Fq(ANIMA)-8 b(T)p 2689 2043 V 35 w(CENTRE)p
Fp(,)55 b Fq(ANIMA)-8 b(T)p 3614 2043 V 35 w(-)358 2143
y(ARR)m(O)m(W)p Fp(,)27 b Fq(ANIMA)-8 b(T)p 1199 2143
V 35 w(WHEEL)27 b Fh(g)476 2267 y Fg(Enumer)l(ation)h(typ)l(e)h(for)f
(the)g(di\013er)l(ent)h(c)l(olour)l(e)l(d)g(p)l(arts)g(of)e(the)i(A)n
(nimat.)275 2467 y Fk(\210)42 b Fp(en)n(um)27 b Fq(SimPrin)m(tSt)m
(yleT)m(yp)s(e)g Fh(f)358 2599 y Fq(SIM)p 544 2599 V
34 w(PRINT)p 892 2599 V 34 w(ST)-8 b(A)g(TUS)p Fp(,)272
b Fq(SIM)p 1768 2599 V 35 w(PRINT)p 2117 2599 V 34 w(ASSESSMENT)p
Fp(,)e Fq(SIM)p 3266 2599 V 35 w(PRINT)p 3615 2599 V
34 w(-)358 2699 y(GENERA)-8 b(TION)p Fp(,)26 b Fq(SIM)p
1254 2699 V 35 w(PRINT)p 1603 2699 V 34 w(R)m(UN)p Fp(,)358
2832 y Fq(SIM)p 544 2832 V 34 w(PRINT)p 892 2832 V 34
w(COMPLETE)i Fh(g)476 2956 y Fg(Use)l(d)g(in)f(Simulation::T)-6
b(oString)27 b(to)i(sp)l(e)l(cify)f(what)g(is)f(to)h(b)l(e)g(output.)
275 3155 y Fk(\210)42 b Fp(en)n(um)27 b Fq(W)-8 b(orldDispla)m(yT)m(yp)
s(e)28 b Fh(f)358 3288 y Fq(DISPLA)-8 b(Y)p 784 3288
V 35 w(NONE)22 b Fp(=)h(0,)g Fq(DISPLA)-8 b(Y)p 1722
3288 V 36 w(ANIMA)g(TS)24 b Fp(=)e(1,)i Fq(DISPLA)-8
b(Y)p 2835 3288 V 36 w(W)m(ORLDOBJECTS)358 3388 y Fp(=)27
b(2,)g Fq(DISPLA)-8 b(Y)p 968 3388 V 36 w(TRAILS)29 b
Fp(=)e(4,)358 3521 y Fq(DISPLA)-8 b(Y)p 784 3521 V 35
w(SENSORS)24 b Fp(=)f(8,)i Fq(DISPLA)-8 b(Y)p 1882 3521
V 36 w(COLLISIONS)24 b Fp(=)g(16,)g Fq(DISPLA)-8 b(Y)p
3162 3521 V 36 w(MONITOR)358 3620 y Fp(=)27 b(32,)g Fq(DISPLA)-8
b(Y)p 1010 3620 V 35 w(ALL)29 b Fp(=)e(65535)f Fh(g)476
3745 y Fg(A)n(n)h(enumer)l(ation)i(typ)l(e)g(for)f(sp)l(e)l(cifying)g
(which)f(elements)i(of)e(the)h(world)g(ar)l(e)g(to)h(b)l(e)f(displaye)l
(d.)150 4115 y Fj(F)-9 b(unctions)275 4302 y Fk(\210)42
b Fp(ostream)26 b(&)h Fq(op)s(erator)p Fo(<<)g Fp(\(ostream)g(&out,)g
(const)g(Dra)n(w)n(able)f(&d\))275 4410 y Fk(\210)42
b Fp(istream)26 b(&)i Fq(op)s(erator)p Fo(>>)f Fp(\(istream)g(&in,)g
(Dra)n(w)n(able)f(&d\))275 4518 y Fk(\210)42 b Fp(double)27
b Fq(deg2rad)h Fp(\(double\))476 4642 y Fg(Converts)h(de)l(gr)l(e)l(es)
h(to)e(r)l(adians.)275 4841 y Fk(\210)42 b Fp(double)27
b Fq(rad2deg)h Fp(\(double\))476 4966 y Fg(Converts)h(r)l(adians)g(to)f
(de)l(gr)l(e)l(es.)275 5165 y Fk(\210)42 b Fp(V)-7 b(ector2D)27
b Fq(op)s(erator)32 b Fh(\003)27 b Fp(\(double)h(l,)f(const)h(V)-7
b(ector2D)27 b(&v\))476 5289 y Fg(R)l(eturns)i(a)f(ve)l(ctor)h
(multiplie)l(d)e(by)h(a)f(double.)275 5488 y Fk(\210)42
b Fp(V)-7 b(ector2D)27 b Fq(P)m(olarV)-8 b(ector)29 b
Fp(\(double)e(l,)h(double)g(a\))476 5613 y Fg(Cr)l(e)l(ates)h(a)f
Ff(V)-7 b(ector2D)27 b Fg(obje)l(ct)i(using)f(old)f(PolarV)-6
b(e)l(ctor)30 b(syntax.)p -358 5723 4034 4 v -192 5823
a Fn(Generated)c(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 21 29
21 28 bop 150 70 a Fq(8.1)31 b(Sim)m(ulation)f(F)-8 b(ramew)m(ork)2840
b(21)p 150 103 4034 4 v 275 440 a Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetColour)h Fp(\()p Fq(AnimatP)m(artT)m(yp)s(e)p
Fp(,)i(const)f(\015oat)f Fh(\003)p Fp(\))476 565 y Fg(Sets)h(the)h(c)l
(olour)f(of)f(the)i(sp)l(e)l(ci\014e)l(d.)275 764 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetColour)h Fp(\()p Fq(AnimatP)m(artT)m(yp)s(e)p
Fp(,)i(\015oat,)e(\015oat,)h(\015oat,)f(\015oat)g(a=1.0f)6
b(\))476 888 y Fg(Sets)28 b(the)h(sp)l(e)l(ci\014e)l(d)g(p)l(art)g(of)e
(the)h Ff(Animat)g Fg(to)g(the)h(sp)l(e)l(ci\014e)l(d)f(c)l(olour.)275
1087 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetColour)h Fp(\(\015oat,)h
(\015oat,)f(\015oat,)g(\015oat=1.0f)6 b(\))275 1195 y
Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetColour)h Fp(\(const)h(\015oat)f
Fh(\003)p Fp(\))275 1302 y Fk(\210)42 b Fp(std::ostream)26
b(&)h Fq(op)s(erator)p Fo(<<)g Fp(\(std::ostream)g(&out,)g(const)h
(SimOb)5 b(ject)28 b(&ob)5 b(j\))476 1427 y Fg(Output)28
b(op)l(er)l(ator)i(for)e(al)t(l)f(obje)l(cts)i(derive)l(d)f(fr)l(om)g
Ff(SimOb)5 b(ject)p Fg(.)275 1626 y Fk(\210)42 b Fp(std::istream)27
b(&)g Fq(op)s(erator)p Fo(>>)g Fp(\(std::istream)g(&in,)h(SimOb)5
b(ject)28 b(&ob)5 b(j\))476 1750 y Fg(Input)28 b(op)l(er)l(ator)i(for)d
(al)t(l)g(obje)l(cts)i(derive)l(d)f(fr)l(om)g Ff(SimOb)5
b(ject)p Fg(.)275 1949 y Fk(\210)42 b Fq(Group)27 b Fp(\(in)n(t)i
(s=0\))476 2073 y Fg(Sets)f(the)h Ff(Group)g Fg(up)e(with)h(a)g(numb)l
(er)g(of)f(obje)l(cts)i(of)e(the)i(native)f(typ)l(e.)275
2272 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(AddT)-8
b(oW)g(orld)28 b Fp(\(\))476 2396 y Fg(A)l(dds)g(the)g(c)l(ontents)i
(of)d(the)i Ff(Group)g Fg(to)f(the)g Ff(W)-7 b(orld)p
Fg(.)275 2595 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(Serialise)h Fp(\(std::ostream)g(&\))g(const)275 2703
y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Unserialise)h
Fp(\(std::istream)g(&\))275 2811 y Fk(\210)42 b Fp(b)r(o)r(ol)27
b Fq(op)s(erator==)h Fp(\(const)g(V)-7 b(ector2D)27 b(&\))g(const)476
2935 y Fg(R)l(eturns)i(true)g(if)d(this)i(ve)l(ctor)i(is)d(e)l(qual)h
(to)g(other.)275 3134 y Fk(\210)42 b Fp(b)r(o)r(ol)27
b Fq(op)s(erator!=)h Fp(\(const)g(V)-7 b(ector2D)27 b(&\))g(const)476
3258 y Fg(R)l(eturns)i(true)g(if)d(this)i(ve)l(ctor)i(is)d(not)h(e)l
(qual)g(to)g(other.)275 3457 y Fk(\210)42 b Fp(V)-7 b(ector2D)27
b Fq(op)s(erator)32 b Fh(\003)27 b Fp(\(double\))h(const)476
3582 y Fg(R)l(eturns)h(this)f(ve)l(ctor)h(multiplie)l(d)e(by)h(l.)275
3781 y Fk(\210)42 b Fp(V)-7 b(ector2D)27 b(&)g Fq(op)s(erator)32
b Fh(\003)p Fq(=)27 b Fp(\(double\))476 3905 y Fg(Multiplies)g(this)h
(ve)l(ctor's)h(length)f(by)g(the)h(sp)l(e)l(ci\014e)l(d)g(value.)275
4104 y Fk(\210)42 b Fp(V)-7 b(ector2D)27 b Fq(op)s(erator+)h
Fp(\(const)f(V)-7 b(ector2D)27 b(&\))h(const)476 4228
y Fg(R)l(eturns)h(this)f(ve)l(ctor)h(plus)f(other.)275
4427 y Fk(\210)42 b Fp(V)-7 b(ector2D)27 b(&)g Fq(op)s(erator+=)h
Fp(\(const)g(V)-7 b(ector2D)27 b(&\))476 4552 y Fg(A)l(dds)h(other)h
(to)f(this)g(ve)l(ctor.)275 4751 y Fk(\210)42 b Fp(V)-7
b(ector2D)27 b Fq(op)s(erator-)g Fp(\(const)h(V)-7 b(ector2D)27
b(&\))g(const)476 4875 y Fg(R)l(eturns)i(this)f(ve)l(ctor)h(minus)f
(other.)275 5074 y Fk(\210)42 b Fp(V)-7 b(ector2D)27
b(&)g Fq(op)s(erator-=)h Fp(\(const)f(V)-7 b(ector2D)27
b(&\))476 5198 y Fg(Subtr)l(acts)j(other)f(fr)l(om)e(this)h(ve)l(ctor.)
275 5397 y Fk(\210)42 b Fp(V)-7 b(ector2D)27 b Fq(op)s(erator-)g
Fp(\(\))h(const)476 5522 y Fg(Ne)l(gates)h(b)l(oth)g(values)f(of)f(the)
i(ve)l(ctor.)p 150 5723 V 150 5823 a Fn(Generated)d(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 22 30
22 29 bop -358 70 a Fq(22)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
275 333 a Fk(\210)42 b Fp(v)n(oid)26 b Fq(normalise)g
Fp(\(\))476 456 y Fg(Converts)j(the)g(ve)l(ctor)g(into)f(a)f(unit)h(ve)
l(ctor)i(with)d(the)i(same)f(angle.)275 655 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(rotate)j Fp(\(double\))476 779 y
Fg(R)l(otates)g(the)g(ve)l(ctor)g(by)f(the)g(sp)l(e)l(ci\014e)l(d)h
(numb)l(er)g(of)e(r)l(adians.)275 977 y Fk(\210)42 b
Fp(V)-7 b(ector2D)27 b Fq(rotation)g Fp(\(double\))h(const)476
1101 y Fg(R)l(eturns)h(the)f(ve)l(ctor)i(r)l(otate)l(d)g(by)e(the)g(sp)
l(e)l(ci\014e)l(d)h(numb)l(er)f(of)g(r)l(adians.)275
1299 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetP)m(olarCo)s(ordinates)i
Fp(\(double,)f(double\))476 1423 y Fg(Sets)h(the)h(ve)l(ctor)g(up)f
(using)g(p)l(olar)g(c)l(o)l(or)l(dinates.)275 1622 y
Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetLength)i Fp(\(double\))476
1746 y Fg(Sets)g(the)h(length)f(of)f(the)i(ve)l(ctor.)275
1944 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetAngle)h Fp(\(double\))476
2068 y Fg(Sets)h(the)h(angle)f(of)f(the)h(ve)l(ctor.)275
2266 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetCartesian)i
Fp(\(double,)g(double\))476 2390 y Fg(Quick)f(way)h(of)f(setting)i(X)f
(and)g(Y)f(of)g(ve)l(ctor)j(at)e(the)g(same)g(time.)275
2589 y Fk(\210)42 b Fp(V)-7 b(ector2D)27 b Fq(GetRecipro)s(cal)g
Fp(\(\))h(const)476 2712 y Fg(R)l(eturns)h(the)f(opp)l(osite)h(ve)l
(ctor.)275 2911 y Fk(\210)42 b Fp(V)-7 b(ector2D)27 b
Fq(GetNormalised)d Fp(\(\))29 b(const)476 3035 y Fg(R)l(eturns)g(a)f
(unit)f(ve)l(ctor)j(with)d(the)i(same)f(angle)g(as)g(the)g(curr)l(ent)i
(ve)l(ctor.)275 3233 y Fk(\210)42 b Fp(double)27 b Fq(dot)h
Fp(\(const)f(V)-7 b(ector2D)27 b(&\))h(const)476 3357
y Fg(R)l(eturns)h(the)f(dot)h(pr)l(o)l(duct)g(of)e(the)i(ve)l(ctor)g
(with)f(other.)275 3555 y Fk(\210)42 b Fp(double)27 b
Fq(GetLength)h Fp(\(\))g(const)476 3679 y Fg(R)l(eturns)h(the)f(length)
h(of)e(the)h(ve)l(ctor,)h(if)e(p)l(ossible)h(use)g(GetL)l(engthSquar)l
(e)l(d)k(inste)l(ad.)275 3878 y Fk(\210)42 b Fp(double)27
b Fq(GetLengthSquared)i Fp(\(\))f(const)476 4001 y Fg(R)l(eturns)h(the)
f(squar)l(e)h(of)f(the)g(ve)l(ctor's)h(length,)f(useful)g(for)f
(quicker)i(c)l(omp)l(arisons.)275 4200 y Fk(\210)42 b
Fp(double)27 b Fq(GetAngle)g Fp(\(\))h(const)476 4324
y Fg(R)l(eturns)h(the)f(angle)g(of)f(the)i(ve)l(ctor)g(in)e(r)l
(adians.)275 4522 y Fk(\210)42 b Fp(double)27 b Fq(GetGradien)m(t)h
Fp(\(\))h(const)476 4646 y Fg(R)l(eturns)g(the)f(gr)l(adient)h(of)e
(the)i(ve)l(ctor.)275 4845 y Fk(\210)42 b Fp(V)-7 b(ector2D)27
b Fq(GetP)m(erp)s(endicular)h Fp(\(\))g(const)476 4968
y Fg(R)l(eturns)h(the)f(p)l(erp)l(endicular)i(to)e(the)g(ve)l(ctor/.)
275 5167 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Serialise)h
Fp(\(std::ostream)g(&\))g(const)476 5291 y Fg(Writes)h(a)f
Ff(V)-7 b(ector2D)28 b Fg(to)g(an)g(output)h(str)l(e)l(am.)275
5489 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Unserialise)h
Fp(\(std::istream)g(&\))476 5613 y Fg(R)l(e)l(ads)h(a)g
Ff(V)-7 b(ector2D)28 b Fg(fr)l(om)f(an)h(input)g(str)l(e)l(am.)p
-358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 23 31
23 30 bop 150 70 a Fq(8.1)31 b(Sim)m(ulation)f(F)-8 b(ramew)m(ork)2840
b(23)p 150 103 4034 4 v 275 441 a Fk(\210)42 b Fp(std::ostream)26
b(&)h Fq(op)s(erator)p Fo(<<)g Fp(\(std::ostream)g(&out,)g(const)h(V)-7
b(ector2D)27 b(&v\))476 566 y Fg(Output)h(op)l(er)l(ator)i(for)e
Ff(V)-7 b(ector2D)p Fg(.)275 765 y Fk(\210)42 b Fp(std::istream)27
b(&)g Fq(op)s(erator)p Fo(>>)g Fp(\(std::istream)g(&in,)h(V)-7
b(ector2D)27 b(&v\))476 890 y Fg(Input)h(op)l(er)l(ator)i(for)d
Ff(V)-7 b(ector2D)p Fg(.)275 1089 y Fk(\210)42 b Fp(V)-7
b(ector2D)27 b Fq(Cen)m(tre)h Fp(\(\))476 1214 y Fg(R)l(eturns)h(the)f
(c)l(entr)l(e)i(c)l(o)l(or)l(dinates.)275 1414 y Fk(\210)42
b Fp(V)-7 b(ector2D)27 b Fq(RandomLo)s(cation)f Fp(\(\))i(const)476
1538 y Fg(R)l(eturns)h(a)f(r)l(andom)g(c)l(o)l(or)l(dinate.)275
1738 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetColour)h Fp(\(\015oat)h(r,)f
(\015oat)g(g,)g(\015oat)g(b\))275 1846 y Fk(\210)42 b
Fp(virtual)27 b(v)n(oid)f Fq(AddT)-8 b(oW)g(orld)28 b
Fp(\(\))476 1971 y Fg(A)l(dds)g(either)h(the)f(whole)g(p)l(opulation,)g
(or)g(the)g(curr)l(ently)h(sele)l(cte)l(d)h(te)l(am)e(to)g(the)h
(world.)275 2170 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(BeginAssessmen)m(t)f Fp(\(\))476 2295 y Fg(This)i(metho)l(d)i(is)e
(c)l(al)t(le)l(d)h(at)g(the)g(b)l(e)l(ginning)g(of)g(the)g(assessment)i
(and)e(sets)h(up)f(te)l(ams)g(if)f(r)l(e)l(quir)l(e)l(d.)275
2494 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(EndAssessmen)m(t)f
Fp(\(\))476 2619 y Fg(This)k(metho)l(d)h(is)f(c)l(al)t(le)l(d)g(at)h
(the)g(end)f(of)g(the)h(assessment)h(and)f(c)l(auses)h(e)l(ach)f
(individual's)e(\014tness)j(sc)l(or)l(e)f(to)476 2710
y(b)l(e)e(stor)l(e)l(d.)275 2910 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(BeginGeneration)h Fp(\(\))476 3035 y Fg(This)g(metho)l
(d)i(is)e(c)l(al)t(le)l(d)h(at)g(the)g(b)l(e)l(ginning)g(of)g(the)g
(gener)l(ation)h(and.)275 3234 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(EndGeneration)i Fp(\(\))476 3359 y Fg(Performs)33
b(GA)g(management,)i(by)e(c)l(opying)g(the)g Ff(P)n(opulation)i
Fg(into)e(the)g(GA,)g(running)g(the)g(GA)g(on)g(the)476
3450 y(p)l(opulation)28 b(and)g(then)h(r)l(etrieving)g(the)f(new)g
(gener)l(ation)h(fr)l(om)f(the)g(GA.)275 3650 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(BeginRun)h Fp(\(\))476
3774 y Fg(This)f(metho)l(d)h(is)f(c)l(al)t(le)l(d)g(at)g(the)h(b)l(e)l
(ginning)g(of)f(the)h(run)f(and)h(ensur)l(es)h(that)f(the)g(c)l
(ontents)h(of)e(the)h(p)l(opulation)476 3866 y(has)h(b)l(e)l(en)g(r)l
(eset.)275 4065 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(EndRun)i Fp(\(\))476 4190 y Fg(This)f(metho)l(d)i(is)e(c)l(al)t(le)l
(d)h(at)g(the)g(end)g(of)g(the)g(run)g(and)g(curr)l(ently)h(do)l(esn)-8
b('t)29 b(do)f(anything)h(at)f(al)t(l.)275 4390 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(Serialise)h Fp(\(std::ostream)g(&\))g
(const)476 4514 y Fg(Copies)h(the)g Ff(P)n(opulation)i
Fg(to)e(a)f(str)l(e)l(am.)275 4714 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(Unserialise)h Fp(\(std::istream)g(&\))476
4839 y Fg(Converts)i(the)g(data)f(pr)l(o)l(duc)l(e)l(d)i(by)e
(Serialise)f(b)l(ack)i(into)f(a)f(p)l(opulation.)150
5210 y Fj(V)-9 b(ariables)275 5397 y Fk(\210)42 b Fp(const)27
b(double)g Fq(ANIMA)-8 b(T)p 1252 5397 29 4 v 35 w(RADIUS)28
b Fp(=)g(5.0)476 5522 y Fg(A)n(nimat's)f(default)h(r)l(adius.)p
150 5723 4034 4 v 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 24 32
24 31 bop -358 70 a Fq(24)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
275 333 a Fk(\210)42 b Fp(const)27 b(double)g Fq(ANIMA)-8
b(T)p 1252 333 29 4 v 35 w(MAX)p 1522 333 V 34 w(SPEED)28
b Fp(=)f(100.0)476 455 y Fg(A)n(nimat's)g(default)h(maximum)f(sp)l(e)l
(e)l(d.)275 652 y Fk(\210)42 b Fp(const)27 b(double)g
Fq(ANIMA)-8 b(T)p 1252 652 V 35 w(MIN)p 1489 652 V 34
w(SPEED)28 b Fp(=)f(-50.0)476 774 y Fg(A)n(nimat's)g(default)h(minimum)
e(sp)l(e)l(e)l(d.)275 971 y Fk(\210)42 b Fp(const)27
b(double)g Fq(ANIMA)-8 b(T)p 1252 971 V 35 w(MAX)p 1522
971 V 34 w(R)m(OT)g(A)g(TE)29 b Fp(=)e(TW)n(OPI)476 1093
y Fg(The)g(default)h(max)g(r)l(otation/fr)l(ame.)275
1290 y Fk(\210)42 b Fp(const)27 b(double)g Fq(ANIMA)-8
b(T)p 1252 1290 V 35 w(DRA)m(G)28 b Fp(=)f(50.0)476 1412
y Fg(A)n(n)g(arbitr)l(ary)j(friction)d(value.)275 1609
y Fk(\210)42 b Fp(const)27 b(double)g Fq(ANIMA)-8 b(T)p
1252 1609 V 35 w(A)m(CCEL)28 b Fp(=)g(5000.0)476 1732
y Fg(AN)f(arbitr)l(ary)j(ac)l(c)l(eler)l(ation)f(value.)275
1929 y Fk(\210)42 b Fp(const)27 b(double)g Fq(ANIMA)-8
b(T)p 1252 1929 V 35 w(TIMESTEP)28 b Fp(=)f(0.05)476
2051 y Fg(The)g(default)h(time)g(step.)275 2248 y Fk(\210)42
b Fp(const)27 b(in)n(t)h Fq(ANIMA)-8 b(T)p 1112 2248
V 34 w(P)g(AR)g(TS)29 b Fp(=)e(4)476 2370 y Fg(The)g(numb)l(er)i(of)e
(di\013er)l(ent)i(c)l(olours.)275 2567 y Fk(\210)42 b
Fp(const)27 b(in)n(t)h Fq(MONITOR)p 1192 2567 V 33 w(BARHEIGHT)f
Fp(=)h(25)275 2673 y Fk(\210)42 b Fp(const)27 b(unsigned)g(in)n(t)h
Fq(MAX)p 1289 2673 V 34 w(COLLISIONS)h Fp(=)e(200)275
2778 y Fk(\210)42 b Fp(const)27 b(double)g Fq(DRA)-11
b(W)g(ABLE)p 1402 2778 V 35 w(RADIUS)29 b Fp(=)e(50.0)476
2900 y Fg(The)g(default)h(diameter)h(for)e(dr)l(awables.)275
3097 y Fk(\210)42 b Fp(const)27 b(unsigned)g(in)n(t)h
Fq(TRAIL)p 1357 3097 V 35 w(LENGTH)g Fp(=)f(30)275 3203
y Fk(\210)42 b Fp(const)27 b(double)g Fq(W)m(ORLD)p 1218
3203 V 35 w(WIDTH)h Fp(=)f(800.0)275 3309 y Fk(\210)42
b Fp(const)27 b(double)g Fq(W)m(ORLD)p 1218 3309 V 35
w(HEIGHT)g Fp(=)g(600.0)150 3586 y Fj(8.1.1)112 b(Detailed)37
b(Description)150 3787 y Fp(These)25 b(classes)f(wrap)h(the)h(in)n
(terfaces)e(of)h(the)h(GeneticAlgorithm)f(and)h(sim)n(ulation)f(en)n
(vironmen)n(t)f(to)h(pro)n(vide)150 3886 y(an)i(easy)g(w)n(a)n(y)f(to)i
(set)f(up)h(a)f(range)g(of)g(common)g(sim)n(ulation)g(t)n(yp)r(es.)150
4033 y(They)g(also)g(pro)n(vide)f(an)i(in)n(terface)f(to)g(the)h(GUI.)
150 4311 y Fj(8.1.2)112 b(En)m(umeration)37 b(T)m(yp)s(e)h(Do)s(cumen)m
(tation)150 4511 y Fq(8.1.2.1)93 b(en)m(um)31 b(BEAST::SimPrin)m(tSt)m
(yleT)m(yp)s(e)150 4712 y Fp(Used)d(in)g Fq(Sim)m(ulation::T)-8
b(oString)24 b Fp(to)k(sp)r(ecify)g(what)f(is)h(to)f(b)r(e)h(output.)
142 4913 y Fq(En)m(umeration)i(v)-5 b(alues:)311 5012
y(SIM)p 497 5012 V 35 w(PRINT)p 846 5012 V 34 w(ST)d(A)g(TUS)78
b Fp(One-line)27 b(description)g(of)g(sim)n(ulation)h(p)r(osition.)311
5141 y Fq(SIM)p 497 5141 V 35 w(PRINT)p 846 5141 V 34
w(ASSESSMENT)76 b Fp(Output)28 b(at)f(end)h(of)g(assessmen)n(t.)311
5269 y Fq(SIM)p 497 5269 V 35 w(PRINT)p 846 5269 V 34
w(GENERA)-8 b(TION)75 b Fp(Output)29 b(at)e(end)h(of)f(generation.)311
5397 y Fq(SIM)p 497 5397 V 35 w(PRINT)p 846 5397 V 34
w(R)m(UN)76 b Fp(Output)29 b(at)e(end)h(of)f(run.)311
5525 y Fq(SIM)p 497 5525 V 35 w(PRINT)p 846 5525 V 34
w(COMPLETE)76 b Fp(Output)28 b(at)g(completion)f(of)h(sim)n(ulation.)p
-358 5723 4034 4 v -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 25 33
25 32 bop 150 70 a Fq(8.1)31 b(Sim)m(ulation)f(F)-8 b(ramew)m(ork)2840
b(25)p 150 103 4034 4 v 150 333 a(8.1.2.2)93 b(en)m(um)31
b(BEAST::W)-8 b(orldDispla)m(yT)m(yp)s(e)150 533 y Fp(An)28
b(en)n(umeration)f(t)n(yp)r(e)g(for)h(sp)r(ecifying)f(whic)n(h)h
(elemen)n(ts)f(of)h(the)g(w)n(orld)e(are)h(to)g(b)r(e)h(displa)n(y)n
(ed.)142 724 y Fq(See)j(also:)311 824 y Fp(W)-7 b(orld::T)g(oggle)142
1015 y Fq(En)m(umeration)30 b(v)-5 b(alues:)311 1114
y(DISPLA)d(Y)p 737 1114 29 4 v 36 w(NONE)75 b Fp(Nothing)28
b(is)f(displa)n(y)n(ed)g(at)g(all.)311 1239 y Fq(DISPLA)-8
b(Y)p 737 1239 V 36 w(ANIMA)g(TS)77 b Fp(Animats)28 b(are)e(displa)n(y)
n(ed.)311 1363 y Fq(DISPLA)-8 b(Y)p 737 1363 V 36 w(W)m(ORLDOBJECTS)76
b Fp(W)-7 b(orldOb)5 b(jects)27 b(are)g(displa)n(y)n(ed.)311
1487 y Fq(DISPLA)-8 b(Y)p 737 1487 V 36 w(TRAILS)77 b
Fp(T)-7 b(rails)27 b(are)f(displa)n(y)n(ed.)311 1612
y Fq(DISPLA)-8 b(Y)p 737 1612 V 36 w(SENSORS)75 b Fp(Sensors)27
b(are)f(displa)n(y)n(ed.)311 1736 y Fq(DISPLA)-8 b(Y)p
737 1736 V 36 w(COLLISIONS)77 b Fp(Collisions)26 b(are)h(displa)n(y)n
(ed.)311 1860 y Fq(DISPLA)-8 b(Y)p 737 1860 V 36 w(MONITOR)75
b Fp(The)28 b(monitor)f(is)g(displa)n(y)n(ed.)311 1984
y Fq(DISPLA)-8 b(Y)p 737 1984 V 36 w(ALL)77 b Fp(Ev)n(erything)26
b(is)i(displa)n(y)n(ed.)150 2260 y Fj(8.1.3)112 b(F)-9
b(unction)37 b(Do)s(cumen)m(tation)150 2461 y Fq(8.1.3.1)93
b(template)p Fo(<)p Fq(class)p 1179 2461 V 66 w(Ind,)35
b(class)p 1642 2461 V 68 w(MutF)-8 b(unc)p Fo(>)35 b
Fq(v)m(oid)f(BEAST::P)m(opulation)p Fo(<)p 3294 2461
V 67 w Fq(Ind,)p 516 2560 V 545 2560 a(MutF)-8 b(unc)32
b Fo(>)p Fq(::EndGeneration)e(\(\))71 b Fi([virtual,)40
b(inherited])150 2761 y Fp(P)n(erforms)35 b(GA)j(managemen)n(t,)g(b)n
(y)f(cop)n(ying)f(the)i Fq(P)m(opulation)f Fp(in)n(to)g(the)g(GA,)h
(running)f(the)g(GA)h(on)f(the)150 2861 y(p)r(opulation)27
b(and)h(then)g(retrieving)e(the)i(new)g(generation)e(from)h(the)h(GA.)
142 3052 y Fq(See)j(also:)311 3151 y(GeneticAlgorithm)311
3251 y(GeneticAlgorithm::Generate)150 3459 y Fp(Reimplemen)n(ted)d
(from)f Fq(BEAST::SimOb)5 b(ject)26 b Fp(\(p.)14 b(191\).)150
3719 y Fq(8.1.3.2)93 b(template)p Fo(<)p Fq(class)p 1177
3719 V 65 w(Ob)5 b(jT)m(yp)s(e)p Fo(>)33 b Fq(BEAST::Group)p
Fo(<)p 2422 3719 V 66 w Fq(Ob)5 b(jT)m(yp)s(e)34 b Fo(>)p
Fq(::Group)d(\(in)m(t)i Fe(s)g Fq(=)516 3818 y(0\))71
b Fi([inherited])150 4019 y Fp(Sets)28 b(the)g Fq(Group)g
Fp(up)g(with)g(a)f(n)n(um)n(b)r(er)g(of)h(ob)5 b(jects)27
b(of)g(the)h(nativ)n(e)f(t)n(yp)r(e.)142 4209 y Fq(P)m(arameters:)311
4309 y Fe(s)42 b Fp(The)28 b(n)n(um)n(b)r(er)f(of)h(ob)5
b(jects)27 b(to)h(b)r(e)g(created.)150 4630 y Fq(8.1.3.3)93
b(V)-8 b(ector2D)32 b(P)m(olarV)-8 b(ector)33 b(\(double)f
Fe(l)p Fq(,)e(double)h Fe(a)p Fq(\))72 b Fi([inline])150
4830 y Fp(Creates)26 b(a)i Fq(V)-8 b(ector2D)28 b Fp(ob)5
b(ject)27 b(using)h(old)f(P)n(olarV)-7 b(ector)25 b(syn)n(tax.)142
5021 y Fq(P)m(arameters:)311 5120 y Fe(l)42 b Fp(The)27
b(length)h(of)f(the)h(v)n(ector)311 5244 y Fe(a)42 b
Fp(The)28 b(angle)e(of)i(the)g(v)n(ector)e(an)n(ticlo)r(c)n(kwise)g
(from)i(due)g(east.)142 5435 y Fq(Deprecated)311 5535
y Fp(Probably)e(of)i(no)f(use)h(to)f(an)n(y)n(one)f(unless)h(they)h(ha)
n(v)n(e)f(a)g(strange)f(fascination)h(with)h(p)r(olar)f(co)r
(ordinates.)p 150 5723 4034 4 v 150 5823 a Fn(Generated)f(on)e(Sun)h(F)
-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 26 34
26 33 bop -358 70 a Fq(26)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
150 333 a(8.1.3.4)93 b(template)p Fo(<)p Fq(class)p 1179
333 29 4 v 66 w(Ind,)35 b(class)p 1642 333 V 68 w(MutF)-8
b(unc)p Fo(>)35 b Fq(v)m(oid)f(BEAST::P)m(opulation)p
Fo(<)p 3294 333 V 67 w Fq(Ind,)p 516 432 V 545 432 a(MutF)-8
b(unc)32 b Fo(>)p Fq(::Serialise)d(\(std::ostream)g(&)j
Fe(out)p Fq(\))g(const)71 b Fi([virtual,)40 b(inherited])150
633 y Fp(Copies)27 b(the)h Fq(P)m(opulation)f Fp(to)h(a)f(stream.)150
780 y(Note)h(that)g(only)f(the)h(GA)g(data)f(and)g(the)h(genot)n(yp)r
(es)f(of)g(the)h(p)r(opulation)g(are)e(stored.)142 946
y Fq(See)31 b(also:)311 1046 y(P)m(opulation::Unserialise)150
1229 y Fp(Reimplemen)n(ted)d(from)f Fq(BEAST::Group)p
Fo(<)p 1681 1229 V 66 w Fq(Ind)32 b Fo(>)27 b Fp(\(p.)14
b Fq(??)q Fp(\).)150 1486 y Fq(8.1.3.5)93 b(template)p
Fo(<)p Fq(class)p 1178 1486 V 66 w(Ob)5 b(jT)m(yp)s(e)p
Fo(>)34 b Fq(v)m(oid)g(BEAST::Group)p Fo(<)p 2634 1486
V 67 w Fq(Ob)5 b(jT)m(yp)s(e)35 b Fo(>)p Fq(::Serialise)516
1586 y(\(std::ostream)29 b(&)j Fe(out)p Fq(\))g(const)71
b Fi([virtual,)40 b(inherited])142 1773 y Fq(T)-8 b(o)s(do)311
1873 y Fp(Finish!)150 2066 y(Reimplemen)n(ted)28 b(from)f
Fq(BEAST::SimOb)5 b(ject)26 b Fp(\(p.)14 b(191\).)150
2213 y(Reimplemen)n(ted)28 b(in)g Fq(BEAST::P)m(opulation)p
Fo(<)p 1767 2213 V 65 w Fq(Ind,)p 2002 2213 V 66 w(MutF)-8
b(unc)32 b Fo(>)27 b Fp(\(p.)15 b(26\).)150 2470 y Fq(8.1.3.6)93
b(v)m(oid)30 b(BEAST::V)-8 b(ector2D::SetP)m(olarCo)s(ordinates)29
b(\(double)g Fe(l)p Fq(,)h(double)f Fe(a)p Fq(\))71 b
Fi([inline,)516 2569 y(inherited])150 2770 y Fp(Sets)28
b(the)g(v)n(ector)e(up)i(using)f(p)r(olar)g(co)r(ordinates.)142
2945 y Fq(P)m(arameters:)311 3044 y Fe(l)42 b Fp(The)27
b(v)n(ector's)f(new)i(length.)311 3162 y Fe(a)42 b Fp(The)28
b(v)n(ector's)e(new)h(angle.)150 3465 y Fq(8.1.3.7)93
b(template)p Fo(<)p Fq(class)p 1179 3465 V 66 w(Ind,)35
b(class)p 1642 3465 V 68 w(MutF)-8 b(unc)p Fo(>)35 b
Fq(v)m(oid)f(BEAST::P)m(opulation)p Fo(<)p 3294 3465
V 67 w Fq(Ind,)p 516 3565 V 545 3565 a(MutF)-8 b(unc)32
b Fo(>)p Fq(::Unserialise)d(\(std::istream)g(&)j Fe(in)p
Fq(\))71 b Fi([virtual,)40 b(inherited])150 3765 y Fp(Con)n(v)n(erts)26
b(the)i(data)f(pro)r(duced)g(b)n(y)h(Serialise)e(bac)n(k)h(in)n(to)g(a)
g(p)r(opulation.)142 3941 y Fq(See)k(also:)311 4041 y(P)m
(opulation::Serialise)150 4234 y Fp(Reimplemen)n(ted)d(from)f
Fq(BEAST::Group)p Fo(<)p 1681 4234 V 66 w Fq(Ind)32 b
Fo(>)27 b Fp(\(p.)14 b Fq(??)q Fp(\).)150 4490 y Fq(8.1.3.8)93
b(template)p Fo(<)p Fq(class)p 1177 4490 V 64 w(Ob)5
b(jT)m(yp)s(e)p Fo(>)33 b Fq(v)m(oid)f(BEAST::Group)p
Fo(<)p 2629 4490 V 66 w Fq(Ob)5 b(jT)m(yp)s(e)34 b Fo(>)p
Fq(::Unserialise)516 4590 y(\(std::istream)29 b(&)j Fe(in)p
Fq(\))71 b Fi([virtual,)40 b(inherited])142 4778 y Fq(T)-8
b(o)s(do)311 4877 y Fp(Add)29 b(general)d(ob)5 b(ject)27
b(unserialiser)142 5053 y Fq(T)-8 b(o)s(do)311 5152 y
Fp(Rather)33 b(than)h(remo)n(ving)d(only)i(ob)5 b(jects)33
b(from)g(this)g(group,)h(all)f(ob)5 b(jects)33 b(with)g(the)h(same)f(t)
n(yp)r(e)g(as)g(this)311 5252 y(group)27 b(are)f(remo)n(v)n(ed.)150
5445 y(Reimplemen)n(ted)i(from)f Fq(BEAST::SimOb)5 b(ject)26
b Fp(\(p.)14 b(191\).)150 5592 y(Reimplemen)n(ted)28
b(in)g Fq(BEAST::P)m(opulation)p Fo(<)p 1767 5592 V 65
w Fq(Ind,)p 2002 5592 V 66 w(MutF)-8 b(unc)32 b Fo(>)27
b Fp(\(p.)15 b(26\).)p -358 5723 4034 4 v -192 5823 a
Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 27 35
27 34 bop 150 70 a Fq(8.2)31 b(Bacteria)i(sim)m(ulation)c(classes)2666
b(27)p 150 103 4034 4 v 150 333 a Fl(8.2)135 b(Bacteria)46
b(sim)l(ulation)h(classes)150 562 y Fp(This)20 b(collection)e(of)i
(classes)e(and)i(functors)f(allo)n(w)f(the)i(user)f(to)g(implemen)n(t)i
(a)e(v)-5 b(ariet)n(y)18 b(of)i(sim)n(ulations)f(in)n(v)n(olving)150
661 y(bacterial)27 b(c)n(hemotaxis,)f(fractal)h(and)g(v)n(ortex)f
(formations)h(and)g(simple)h(sw)n(arming.)150 935 y Fj(Comp)s(ounds)275
1114 y Fk(\210)42 b Fp(class)26 b Fq(Bacterium)275 1214
y Fk(\210)42 b Fp(class)26 b Fq(Distribution)476 1332
y Fg(Implements)h(a)h(grid)g(which)g(stor)l(es)h(sp)l(atial)f(density)h
(information)e(to)h(a)g(sp)l(e)l(ci\014e)l(d)h(r)l(esolution,)f(e.g.)
275 1524 y Fk(\210)42 b Fp(struct)27 b Fq(Ev)-5 b(alDensit)m(y)275
1624 y Fk(\210)42 b Fp(struct)27 b Fq(Ev)-5 b(alGradien)m(t)275
1725 y Fk(\210)42 b Fp(struct)27 b Fq(Gaussian2D)476
1842 y Fg(Plots)h(a)f(two-dimensional)i(Gaussian)g(function)e(in)h(a)f
(distribution)i(or)f(distribution)h(kernel.)275 2034
y Fk(\210)42 b Fp(struct)27 b Fq(GaussianNoise)476 2151
y Fg(Plots)h(normal)t(ly)f(distribute)l(d)j(noise)e(in)f(a)g
(distribution.)275 2343 y Fk(\210)42 b Fp(struct)27 b
Fq(GaussianRing2D)476 2460 y Fg(Plots)h(a)f(two)i(dimensional)e
(Gaussian)i(ring.)275 2652 y Fk(\210)42 b Fp(struct)27
b Fq(LimitDistribution)275 2753 y Fk(\210)42 b Fp(struct)27
b Fq(Ring2D)476 2870 y Fg(Plots)h(a)f(two)i(dimensional)e(ring.)275
3062 y Fk(\210)42 b Fp(struct)27 b Fq(ScaleGradien)m(t)275
3162 y Fk(\210)42 b Fp(struct)27 b Fq(UniformNoise)476
3280 y Fg(Plots)h(uniform)f(noise)h(in)f(a)h(distribution.)275
3471 y Fk(\210)42 b Fp(struct)27 b Fq(ZeroDistribution)150
3745 y Fj(T)m(yp)s(edefs)275 3924 y Fk(\210)42 b Fp(t)n(yp)r(edef)28
b(\015oat)f Fq(DistReal)476 4041 y Fg(F)-6 b(or)25 b(sp)l(e)l(e)l(d,)h
(Distributions)g(use)f(\015o)l(ats)h(but)g(this)f(typ)l(e)l(def)h
(makes)f(it)g(p)l(ossible)g(to)g(switch)h(to)f(doubles)h(if)d(higher)
476 4132 y(ac)l(cur)l(acy)29 b(is)f(r)l(e)l(quir)l(e)l(d.)150
4497 y Fj(F)-9 b(unctions)275 4676 y Fk(\210)42 b Fp(Sensor)26
b Fh(\003)h Fq(Gradien)m(tSensor)h Fp(\(\))275 4777 y
Fk(\210)42 b Fp(Sensor)26 b Fh(\003)h Fq(DistributionSensor)f
Fp(\(\))150 5050 y Fj(8.2.1)112 b(Detailed)37 b(Description)150
5251 y Fp(This)20 b(collection)e(of)i(classes)e(and)i(functors)f(allo)n
(w)f(the)i(user)f(to)g(implemen)n(t)i(a)e(v)-5 b(ariet)n(y)18
b(of)i(sim)n(ulations)f(in)n(v)n(olving)150 5350 y(bacterial)27
b(c)n(hemotaxis,)f(fractal)h(and)g(v)n(ortex)f(formations)h(and)g
(simple)h(sw)n(arming.)150 5497 y(Note)j(that)h(while)g(some)f(sensors)
e(ha)n(v)n(e)i(b)r(een)h(included,)g(they)g(are)f(only)g(there)g(for)g
(the)h(purp)r(ose)e(of)i(letting)150 5597 y(regular)26
b(Animats)i(in)n(teract)f(with)h(distributions)f(-)h(bacteria)e(ha)n(v)
n(e)g(their)i(o)n(wn)f(streamlined)g(metho)r(d.)p 150
5723 V 150 5823 a Fn(Generated)f(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 28 36
28 35 bop -358 70 a Fq(28)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
150 333 a Fl(8.3)135 b(Utilities)48 b(and)d(Help)t(er)g(F)-11
b(unctions)150 585 y Fj(Comp)s(ounds)275 792 y Fk(\210)42
b Fp(class)26 b Fq(auto)p 742 792 29 4 v 35 w(indexed)p
1101 792 V 34 w(p)s(oin)m(ter)p 1436 792 V 34 w(prop)s(ert)m(y)275
914 y Fk(\210)42 b Fp(class)26 b Fq(auto)p 742 914 V
35 w(indexed)p 1101 914 V 34 w(prop)s(ert)m(y)275 1037
y Fk(\210)42 b Fp(class)26 b Fq(auto)p 742 1037 V 35
w(p)s(oin)m(ter)p 1078 1037 V 34 w(prop)s(ert)m(y)275
1159 y Fk(\210)42 b Fp(class)26 b Fq(auto)p 742 1159
V 35 w(prop)s(ert)m(y)275 1281 y Fk(\210)42 b Fp(struct)27
b Fq(b)s(ound)p 867 1281 V 34 w(mem)p 1107 1281 V 31
w(fun)p 1273 1281 V 35 w(t)476 1420 y Fg(A)e(functor)h(which)f(cr)l(e)l
(ates)j(a)d(unary)h(function)g(fr)l(om)e(a)i(unary)g(memb)l(er)g
(function,)f(binding)g(an)h(instanc)l(e)g(of)476 1512
y(the)i(class)g(to)g(which)g(the)h(function)e(b)l(elongs.)275
1725 y Fk(\210)42 b Fp(class)26 b Fq(call)p 700 1725
V 34 w(on)p 835 1725 V 35 w(mem)p 1076 1725 V 31 w(t)476
1865 y Fg(A)n(l)t(lows)j(us)g(to)h(bind)f(functors)i(so)f(that)g(they)g
(work)g(on)g(p)l(articular)g(memb)l(ers)h(of)e(classes,)h(useful)f(for)
h(using)476 1956 y(for)p 576 1956 24 4 v 28 w(e)l(ach)e(on)g(maps.)275
2170 y Fk(\210)42 b Fp(struct)27 b Fq(creator)476 2309
y Fg(A)g(functor)h(for)g(use)g(with)g(the)g(for)p 1479
2309 V 28 w(e)l(ach)g(algorithm)g(which)g(c)l(an)g(p)l(erform)g(cr)l(e)
l(ation)h(of)e(obje)l(cts)i(when)f(c)l(al)t(le)l(d)476
2400 y(on)f(a)h(c)l(ontainer)h(of)e(p)l(ointers.)275
2614 y Fk(\210)42 b Fp(struct)27 b Fq(deleter)476 2753
y Fg(A)g(functor)i(for)f(use)g(with)g(the)h(for)p 1481
2753 V 28 w(e)l(ach)g(algorithm)f(which)g(c)l(an)g(p)l(erform)h
(deletion)f(of)f(obje)l(cts)i(when)g(c)l(al)t(le)l(d)476
2844 y(on)e(a)h(c)l(ontainer)h(of)e(p)l(ointers.)275
3058 y Fk(\210)42 b Fp(class)26 b Fq(p)s(oin)m(ter)p
859 3058 29 4 v 34 w(prop)s(ert)m(y)275 3180 y Fk(\210)42
b Fp(class)26 b Fq(prop)s(ert)m(y)476 3319 y Fg(Class)38
b(wr)l(app)l(er)h(for)e(a)h(memb)l(er)g(variable)h(which)e(al)t(lows)h
(memb)l(er)g(data)h(to)f(b)l(e)g(exp)l(ose)l(d)i(with)d(invisible)476
3410 y(get/set)29 b(semantics.)275 3624 y Fk(\210)42
b Fp(struct)27 b Fq(Random)476 3763 y Fg(F)-6 b(unction)28
b(obje)l(ct)h(version)f(of)g(r)l(andval.)150 4165 y Fj(De\014nes)275
4373 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(M1)f Fp(259200)275
4495 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IA1)f Fp(7141)275
4617 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IC1)f Fp(54773)275
4740 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(RM1)e Fp(\(1.0/M1\))275
4862 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(M2)f Fp(134456)275
4985 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IA2)f Fp(8121)275
5107 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IC2)f Fp(28411)275
5229 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(RM2)e Fp(\(1.0/M2\))275
5352 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(M3)f Fp(243000)275
5474 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IA3)f Fp(4561)275
5597 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IC3)f Fp(51349)p
-358 5723 4034 4 v -192 5823 a Fn(Generated)f(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 29 37
29 36 bop 150 70 a Fq(8.3)31 b(Utilities)f(and)i(Help)s(er)f(F)-8
b(unctions)2514 b(29)p 150 103 4034 4 v 150 333 a Fj(En)m(umerations)
275 518 y Fk(\210)42 b Fp(en)n(um)27 b Fq(ColourT)m(yp)s(e)h
Fh(f)358 650 y Fq(COLOUR)p 779 650 29 4 v 34 w(BLA)m(CK)p
Fp(,)g Fq(COLOUR)p 1617 650 V 34 w(WHITE)p Fp(,)g Fq(COLOUR)p
2456 650 V 34 w(GREEN)p Fp(,)f Fq(COLOUR)p 3303 650 V
34 w(BLUE)p Fp(,)358 782 y Fq(COLOUR)p 779 782 V 34 w(RED)p
Fp(,)32 b Fq(COLOUR)p 1491 782 V 34 w(PURPLE)p Fp(,)h
Fq(COLOUR)p 2391 782 V 34 w(D)m(ARK)p 2714 782 V 35 w(PURPLE)p
Fp(,)g Fq(COLOUR)p 3615 782 V 34 w(-)358 881 y(YELLO)m(W)p
Fp(,)358 1013 y Fq(COLOUR)p 779 1013 V 34 w(LILA)m(C)p
Fp(,)43 b Fq(COLOUR)p 1582 1013 V 34 w(BR)m(O)m(WN)p
Fp(,)e Fq(COLOUR)p 2475 1013 V 34 w(LIGHT)p 2818 1013
V 36 w(GREY)p Fp(,)g Fq(COLOUR)p 3615 1013 V 34 w(-)358
1113 y(D)m(ARK)p 653 1113 V 34 w(GREY)p Fp(,)358 1245
y Fq(COLOUR)p 779 1245 V 34 w(MID)p 1013 1245 V 34 w(GREY)p
Fp(,)75 b Fq(COLOUR)p 1842 1245 V 34 w(ORANGE)p Fp(,)f
Fq(COLOUR)p 2817 1245 V 34 w(PINK)p Fp(,)h Fq(COLOUR)p
3615 1245 V 34 w(-)358 1344 y(SELECTION)27 b Fh(g)476
1468 y Fg(A)n(n)g(enumer)l(ation)i(typ)l(e)g(for)f(c)l(olours.)150
1838 y Fj(F)-9 b(unctions)275 2023 y Fk(\210)42 b Fp(const)27
b(\015oat)g Fh(\003)g Fq(random)p 1159 2023 V 34 w(colour)g
Fp(\(\))476 2147 y Fg(R)l(eturns)i(a)f(r)l(andom)g(c)l(olour,)g(al)t(l)
f(set)h(for)g(input)g(to)g(glColour4fv.)275 2345 y Fk(\210)42
b Fp(\015oat)27 b Fq(ran1)h Fp(\(in)n(t)g Fh(\003)p Fp(idum\))275
2452 y Fk(\210)42 b Fp(in)n(t)27 b Fq(rseed)h Fp(\(in)n(t)g
Fh(\003)p Fp(s,)f(b)r(o)r(ol)g(v)n(erb)r(ose\))275 2559
y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(Real)p Fo(>)g Fp(Real)g Fq(randv)-5 b(al)28 b Fp(\(Real)g(limit\))476
2682 y Fg(R)l(eturns)h(a)f(\(ne)l(ar\))h(uniform)e(distribute)l(d)i(r)l
(andom)g(numb)l(er)f(in)f(the)i(r)l(ange)f(0..limit,)d(as)j(a)g(R)l(e)l
(al.)275 2880 y Fk(\210)42 b Fp(in)n(t)27 b Fq(irand)h
Fp(\(in)n(t)h(limit\))476 3004 y Fg(R)l(eturns)g(a)f(r)l(andom)g(inte)l
(ger)h(in)e([0..limit-1].)275 3202 y Fk(\210)42 b Fp(b)r(o)r(ol)27
b Fq(brand)i Fp(\(double)e(p\))275 3309 y Fk(\210)42
b Fp(b)r(o)r(ol)27 b Fq(brand)i Fp(\(\015oat)e(p\))275
3416 y Fk(\210)42 b Fp(template)p Fo(<>)27 b Fp(in)n(t)g
Fq(randv)-5 b(al)29 b Fp(\(in)n(t)f(limit\))476 3539
y Fg(T)-6 b(emplate)28 b(sp)l(e)l(cialisation)g(to)h(stop)f(r)l(andval)
h(fr)l(om)e(b)l(eing)h(c)l(al)t(le)l(d)g(with)f(ints.)275
3738 y Fk(\210)42 b Fp(template)p Fo(<>)27 b Fp(b)r(o)r(ol)g
Fq(randv)-5 b(al)29 b Fp(\(b)r(o)r(ol\))275 3844 y Fk(\210)42
b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27 b(Real)p
Fo(>)g Fp(Real)g Fq(gaussrand)h Fp(\(v)n(oid\))476 3968
y Fg(R)l(eturns)h(a)f(normal)t(ly)f(distribute)l(d)i(variable)g(with)e
(zer)l(o)i(me)l(an)f(and)g(unit)f(varianc)l(e.)275 4166
y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(Real)p Fo(>)g Fp(Real)g Fq(normrand)g Fp(\(Real)h(mean,)f(Real)g
(sd\))476 4290 y Fg(R)l(eturns)g(a)e(r)l(andom)i(deviate)f(fr)l(om)f(a)
h(normal)g(distribution)g(with)g(sp)l(e)l(ci\014e)l(d)g(me)l(an)g(and)g
(standar)l(d)i(distribu-)476 4381 y(tion.)275 4579 y
Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)p 938 4579
25 4 v 54 w(InIt,)26 b(class)p 1347 4579 V 54 w(T)n(y)-7
b(,)26 b(class)p 1713 4579 V 54 w(Fn1)p Fo(>)p 1975 4579
V 55 w Fp(T)n(y)f Fq(accum)m(ulate)p 2601 4579 29 4 v
34 w(fun)h Fp(\()p 2827 4579 25 4 v 30 w(InIt)p 3021
4579 V 56 w(First,)p 3275 4579 V 56 w(InIt)p 3469 4579
V 56 w(Last,)p 358 4679 V 382 4679 a(T)n(y)p 517 4679
V 57 w(V)-7 b(al,)p 717 4679 V 58 w(Fn1)p 917 4679 V
57 w(F)g(unc\))476 4802 y Fg(V)h(ersion)34 b(of)e(the)i(STL)f(ac)l
(cumulate)h(algorithm)g(which)f(c)l(omputes)i(a)e(sum)g(of)g(al)t(l)f
(the)i(r)l(esults)g(of)f(a)g(unary)476 4894 y(function)p
782 4894 24 4 v 56 w(F)-6 b(unc)28 b(applie)l(d)g(to)g(the)g(values)h
(b)l(etwe)l(en)p 1990 4894 V 57 w(First)f(and)p 2357
4894 V 57 w(L)l(ast.)275 5092 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(class)25 b(T,)h(t)n(yp)r(ename)g(M,)h(class)e(OP)p
Fo(>)g Fp(call)p 2083 5092 25 4 v 29 w(on)p 2200 5092
V 30 w(mem)p 2405 5092 V 30 w(t)p Fo(<)h Fp(T,)g(M,)h(OP)e
Fo(>)h Fq(call)p 3174 5092 29 4 v 34 w(on)p 3309 5092
V 34 w(mem)e Fp(\(M)358 5192 y(T::)p Fh(\003)p Fp(m,)j(OP)g(op\))476
5315 y Fg(Help)l(er)h(function)g(for)f(c)l(onstructing)k
Ff(call)p 1712 5315 27 4 v 33 w(on)p 1838 5315 V 32 w(mem)p
2059 5315 V 31 w(t)c Fg(function)h(obje)l(cts.)275 5513
y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)p 946 5513
25 4 v 62 w(Class,)34 b(t)n(yp)r(ename)p 1610 5513 V
63 w(Return,)h(t)n(yp)r(ename)p 2339 5513 V 63 w(Arg)p
Fo(>)d Fp(b)r(ound)p 2831 5513 V 31 w(mem)p 3037 5513
V 30 w(fun)p 3184 5513 V 30 w(t)p Fo(<)p 3345 5513 V
63 w Fp(Class,)p 3622 5513 V 64 w(-)358 5613 y(Return,)p
668 5613 V 57 w(Arg)27 b Fo(>)g Fq(b)s(ound)p 1218 5613
29 4 v 34 w(mem)p 1458 5613 V 32 w(fun)h Fp(\()p 1684
5613 25 4 v 30 w(Class)e(&c,)p 2084 5613 V 58 w(Return\()p
2401 5613 V 30 w(Class::)p Fh(\003)p Fp(memfun\)\()p
3066 5613 V 30 w(Arg\)\))p 150 5723 4034 4 v 150 5823
a Fn(Generated)g(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d
(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 30 38
30 37 bop -358 70 a Fq(30)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
476 333 a Fg(A)d(help)l(er)i(function)e(for)h(c)l(onstructing)i
Ff(b)r(ound)p 1890 333 27 4 v 33 w(mem)p 2112 333 V 31
w(fun)p 2268 333 V 32 w(t)e Fg(obje)l(cts.)275 553 y
Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)p 946 553
25 4 v 62 w(Class,)34 b(t)n(yp)r(ename)p 1610 553 V 63
w(Return,)h(t)n(yp)r(ename)p 2339 553 V 63 w(Arg)p Fo(>)d
Fp(b)r(ound)p 2831 553 V 31 w(mem)p 3037 553 V 30 w(fun)p
3184 553 V 30 w(t)p Fo(<)p 3345 553 V 63 w Fp(Class,)p
3622 553 V 64 w(-)358 653 y(Return,)p 668 653 V 57 w(Arg)27
b Fo(>)g Fq(b)s(ound)p 1218 653 29 4 v 34 w(mem)p 1458
653 V 32 w(fun)h Fp(\()p 1684 653 25 4 v 30 w(Class)e
Fh(\003)p Fp(c,)p 2061 653 V 57 w(Return\()p 2377 653
V 31 w(Class::)p Fh(\003)p Fp(memfun\)\()p 3043 653 V
30 w(Arg\)\))476 798 y Fg(A)h(help)l(er)i(function)e(for)h(c)l
(onstructing)i Ff(b)r(ound)p 1890 798 27 4 v 33 w(mem)p
2112 798 V 31 w(fun)p 2268 798 V 32 w(t)e Fg(obje)l(cts.)275
1019 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)p
1126 1019 25 4 v 57 w(T)n(yp)r(e,)27 b(t)n(yp)r(ename)p
1774 1019 V 58 w(Base)p Fo(>)f Fp(b)r(o)r(ol)h Fq(IsA)h
Fp(\()p 2456 1019 V 30 w(Base)f Fh(\003)p Fp(in,)p 2845
1019 V 57 w(T)n(yp)r(e)h Fh(\003)p Fp(&out\))476 1164
y Fg(A)h(wr)l(app)l(er)i(for)f(R)-6 b(TTI)28 b(\(R)n(unTime)i(T)-6
b(yp)l(e)30 b(Identi\014c)l(ation\))h(typ)l(eid,)g(which)e(che)l(cks)i
(if)e(two)h(p)l(ointers)h(ar)l(e)f(of)476 1256 y(identic)l(al)d(typ)l
(es.)275 1476 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)p
1125 1476 V 56 w(T)n(yp)r(e,)26 b(t)n(yp)r(ename)p 1771
1476 V 56 w(Base)p Fo(>)f Fp(b)r(o)r(ol)i Fq(IsKindOf)e
Fp(\()p 2685 1476 V 31 w(Base)g Fh(\003)p Fp(in,)p 3073
1476 V 56 w(T)n(yp)r(e)i Fh(\003)p Fp(&out\))476 1622
y Fg(A)22 b(wr)l(app)l(er)j(for)e(R)-6 b(TTI)22 b(\(R)n(unTime)h(T)-6
b(yp)l(e)23 b(Identi\014c)l(ation\))i(using)e(dynamic)p
2695 1622 24 4 v 28 w(c)l(ast)i(which)d(che)l(cks)j(if)d(an)h(obje)l
(ct)476 1713 y(is)k(of)g(the)i(same)f(typ)l(e)g(or)g(is)g(in)f(herite)l
(d)i(fr)l(om)e(an)h(obje)l(ct)g(of)f(the)i(same)f(typ)l(e)h(as)f(an)f
(input)h(p)l(ointer.)275 1933 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)27 b(T)p Fo(>)g Fp(T)h Fq(b)s(ound)f
Fp(\(T)h(L,)g(T)f(U,)h(T)g(n\))476 2079 y Fg(T)-6 b(akes)28
b(a)g(typ)l(e,)g(a)g(lower)g(and)g(an)f(upp)l(er)i(limit)d(and)i(b)l
(ounds)h(the)g(input)f(value)g(to)g(those)h(limits.)275
2299 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(T)p Fo(>)g Fp(v)n(oid)g Fq(rb)s(ound)h Fp(\(T)f(L,)h(T)g(U,)g(T)f
(&n\))476 2445 y Fg(A)g(version)i(of)e(b)l(ound)h(which)g(takes)h(a)f
(r)l(efer)l(enc)l(e)h(as)f(its)g(ar)l(gument.)275 2665
y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(T)p Fo(>)g Fp(T)h Fq(limit)d Fp(\(T)j(L,)f(T)h(U,)g(T)f(n\))476
2811 y Fg(Limits)g(the)h(input)g(value)g(to)g(the)h(sp)l(e)l(ci\014e)l
(d)g(r)l(ange,)f(clipping)f(at)h(either)h(extr)l(eme.)275
3031 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(T)p Fo(>)g Fp(v)n(oid)g Fq(rlimit)e Fp(\(T)j(L,)g(T)f(U,)h(T)g(&n\))
476 3177 y Fg(A)f(version)i(of)e(limit)f(which)i(takes)h(a)f(r)l(efer)l
(enc)l(e)h(as)f(its)g(ar)l(gument.)150 3593 y Fj(V)-9
b(ariables)275 3810 y Fk(\210)42 b Fp(const)27 b(\015oat)g
Fq(ColourP)m(alette)g Fp([)14 b(][4])476 3956 y Fg(A)27
b(glob)l(al)h(c)l(olour)g(p)l(al)t(lete.)36 b(Could)27
b(pr)l(ob)l(ably)i(do)f(with)g(many)f(mor)l(e)h(c)l(olours.)150
4372 y Fj(8.3.1)112 b(En)m(umeration)37 b(T)m(yp)s(e)h(Do)s(cumen)m
(tation)150 4582 y Fq(8.3.1.1)93 b(en)m(um)31 b(BEAST::ColourT)m(yp)s
(e)150 4791 y Fp(An)d(en)n(umeration)f(t)n(yp)r(e)g(for)h(colours.)142
5035 y Fq(En)m(umeration)i(v)-5 b(alues:)311 5135 y(COLOUR)p
732 5135 29 4 v 35 w(BLA)m(CK)76 b Fp(Blac)n(k.)311 5289
y Fq(COLOUR)p 732 5289 V 35 w(WHITE)f Fp(White.)311 5443
y Fq(COLOUR)p 732 5443 V 35 w(GREEN)f Fp(Green.)311 5597
y Fq(COLOUR)p 732 5597 V 35 w(BLUE)i Fp(Y)-7 b(ou)28
b(get)f(the)h(idea.)p -358 5723 4034 4 v -192 5823 a
Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 31 39
31 38 bop 150 70 a Fq(8.3)31 b(Utilities)f(and)i(Help)s(er)f(F)-8
b(unctions)2514 b(31)p 150 103 4034 4 v 150 333 a Fj(8.3.2)112
b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150 533 y Fq(8.3.2.1)93
b(template)p Fo(<)p Fq(t)m(yp)s(ename)29 b(T)p Fo(>)j
Fq(T)g(b)s(ound)f(\(T)i Fe(L)p Fq(,)e(T)h Fe(U)p Fq(,)g(T)g
Fe(n)p Fq(\))71 b Fi([inline])150 734 y Fp(T)-7 b(ak)n(es)26
b(a)i(t)n(yp)r(e,)f(a)h(lo)n(w)n(er)e(and)h(an)g(upp)r(er)h(limit)g
(and)g(b)r(ounds)g(the)g(input)g(v)-5 b(alue)27 b(to)h(those)f(limits.)
150 880 y(Useful)h(for)f(angles.)142 1073 y Fq(P)m(arameters:)311
1172 y Fe(T)42 b Fp(The)28 b(t)n(yp)r(e)f(of)h(v)-5 b(alue.)311
1304 y Fe(L)42 b Fp(The)28 b(lo)n(w)n(er)e(limit.)311
1435 y Fe(U)42 b Fp(The)28 b(upp)r(er)f(limit.)311 1567
y Fe(n)42 b Fp(The)28 b(input)g(v)-5 b(alue.)142 1775
y Fq(Returns:)311 1874 y Fp(The)28 b(output)g(v)-5 b(alue.)150
2216 y Fq(8.3.2.2)93 b(template)p Fo(<)p Fq(t)m(yp)s(ename)29
b(Real)p Fo(>)h Fq(Real)i(gaussrand)g(\(v)m(oid\))71
b Fi([inline])150 2417 y Fp(Returns)27 b(a)h(normally)e(distributed)i
(v)-5 b(ariable)27 b(with)h(zero)e(mean)i(and)f(unit)h(v)-5
b(ariance.)150 2563 y(Recall)28 b(that)h(the)g(absolute)f(v)-5
b(alue)28 b(will)h(b)r(e)g Fo(>)p Fp(3)f(ab)r(out)g(once)g(in)h(400)e
(trials)h(\(the)h(three-sigma)e(rule\).)40 b(This)28
b(is)150 2663 y(adapted)h(from)g(the)h("Numerical)e(recipies)h(in)g(C")
g(b)r(o)r(ok)g(b)n(y)g(Press,)f(Flannery)-7 b(,)29 b(T)-7
b(euk)n(olsky)g(,)29 b(and)g(V)-7 b(etterling,)150 2763
y(p.217)150 3025 y Fq(8.3.2.3)93 b(template)p Fo(<)p
Fq(t)m(yp)s(ename)p 1393 3025 29 4 v 64 w(T)m(yp)s(e,)33
b(t)m(yp)s(ename)p 2140 3025 V 66 w(Base)p Fo(>)f Fq(b)s(o)s(ol)f(IsA)h
(\()p 2896 3025 V 35 w(Base)g Fh(\003)g Fe(in)p Fq(,)p
3376 3025 V 66 w(T)m(yp)s(e)516 3125 y Fh(\003)p Fq(&)g
Fe(out)p Fq(\))70 b Fi([inline])150 3325 y Fp(A)32 b(wrapp)r(er)g(for)f
(R)-7 b(TTI)32 b(\(RunTime)h(T)n(yp)r(e)f(Iden)n(ti\014cation\))g(t)n
(yp)r(eid,)i(whic)n(h)e(c)n(hec)n(ks)f(if)h(t)n(w)n(o)g(p)r(oin)n(ters)
f(are)g(of)150 3425 y(iden)n(tical)c(t)n(yp)r(es.)142
3633 y Fq(P)m(arameters:)311 3733 y Fe(in)41 b Fp(A)28
b(p)r(oin)n(ter)g(to)f(the)h(ob)5 b(ject)27 b(b)r(eing)h(tested.)311
3864 y Fe(out)42 b Fp(A)27 b(p)r(oin)n(ter)g(of)g(the)h(t)n(yp)r(e)f
(required,)f(whic)n(h)h(will)h(b)r(e)f(set)h(to)f(p)r(oin)n(t)g(to)g
(the)h(same)e(ob)5 b(ject)27 b(as)g(the)g(\014rst)494
3964 y(parameter)f(if)i(it)g(turns)g(out)f(they)h(are)f(of)g(iden)n
(tical)h(t)n(yp)r(es.)142 4172 y Fq(Returns:)311 4271
y Fp(T)-7 b(rue)28 b(if)g(a)f(matc)n(h)g(is)h(made.)142
4464 y Fq(See)j(also:)311 4564 y(IsKindOf)150 4905 y(8.3.2.4)93
b(template)p Fo(<)p Fq(t)m(yp)s(ename)p 1394 4905 V 64
w(T)m(yp)s(e,)34 b(t)m(yp)s(ename)p 2142 4905 V 67 w(Base)p
Fo(>)e Fq(b)s(o)s(ol)g(IsKindOf)g(\()p 3136 4905 V 34
w(Base)h Fh(\003)g Fe(in)p Fq(,)p 516 5005 V 545 5005
a(T)m(yp)s(e)f Fh(\003)p Fq(&)g Fe(out)p Fq(\))70 b Fi([inline])150
5206 y Fp(A)25 b(wrapp)r(er)e(for)h(R)-7 b(TTI)25 b(\(RunTime)g(T)n(yp)
r(e)g(Iden)n(ti\014cation\))f(using)h(dynamic)p 2586
5206 25 4 v 29 w(cast)f(whic)n(h)h(c)n(hec)n(ks)e(if)i(an)f(ob)5
b(ject)150 5305 y(is)27 b(of)h(the)g(same)f(t)n(yp)r(e)h(or)f(is)g(in)h
(herited)f(from)h(an)f(ob)5 b(ject)27 b(of)h(the)g(same)f(t)n(yp)r(e)h
(as)f(an)g(input)h(p)r(oin)n(ter.)142 5513 y Fq(P)m(arameters:)311
5613 y Fe(in)41 b Fp(A)28 b(p)r(oin)n(ter)g(to)f(the)h(ob)5
b(ject)27 b(b)r(eing)h(tested.)p 150 5723 4034 4 v 150
5823 a Fn(Generated)e(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 32 40
32 39 bop -358 70 a Fq(32)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
311 333 a Fe(out)42 b Fp(A)29 b(p)r(oin)n(ter)h(of)f(the)h(t)n(yp)r(e)g
(b)r(eing)g(tested)g(for,)f(whic)n(h)h(will)g(b)r(e)g(set)f(to)h(p)r
(oin)n(t)g(to)f(the)h(same)f(ob)5 b(ject)30 b(as)494
432 y(the)e(\014rst)f(param)n(ter)f(if)i(it)g(turns)g(out)g(it)g(is)f
(of)h(the)g(same)f(or)f(an)i(inherited)f(t)n(yp)r(e.)142
667 y Fq(Returns:)311 766 y Fp(T)-7 b(rue)28 b(if)g(a)f(matc)n(h)g(is)h
(made.)150 1168 y Fq(8.3.2.5)93 b(template)p Fo(<)p Fq(t)m(yp)s(ename)
29 b(T)p Fo(>)j Fq(T)g(limit)d(\(T)j Fe(L)p Fq(,)g(T)g
Fe(U)p Fq(,)f(T)i Fe(n)p Fq(\))70 b Fi([inline])150 1375
y Fp(Limits)28 b(the)g(input)g(v)-5 b(alue)28 b(to)f(the)h(sp)r
(eci\014ed)g(range,)e(clipping)i(at)f(either)h(extreme.)142
1610 y Fq(P)m(arameters:)311 1709 y Fe(T)42 b Fp(The)28
b(t)n(yp)r(e)f(of)h(v)-5 b(alues)27 b(to)h(w)n(ork)e(on.)311
1858 y Fe(L)42 b Fp(The)28 b(lo)n(w)n(er)e(limit.)311
2006 y Fe(U)42 b Fp(The)28 b(upp)r(er)f(limit.)311 2154
y Fe(n)42 b Fp(The)28 b(input)g(v)-5 b(alue.)142 2388
y Fq(Returns:)311 2488 y Fp(The)28 b(output)g(v)-5 b(alue.)150
2890 y Fq(8.3.2.6)93 b(template)p Fo(<)p Fq(t)m(yp)s(ename)29
b(T)p Fo(>)j Fq(v)m(oid)f(rb)s(ound)h(\(T)h Fe(L)p Fq(,)e(T)h
Fe(U)p Fq(,)g(T)g(&)g Fe(n)p Fq(\))71 b Fi([inline])150
3097 y Fp(A)28 b(v)n(ersion)e(of)i(b)r(ound)g(whic)n(h)f(tak)n(es)g(a)g
(reference)g(as)f(its)i(argumen)n(t.)142 3331 y Fq(P)m(arameters:)311
3431 y Fe(T)42 b Fp(The)28 b(t)n(yp)r(e)f(of)h(v)-5 b(alue.)311
3579 y Fe(L)42 b Fp(The)28 b(lo)n(w)n(er)e(limit.)311
3727 y Fe(U)42 b Fp(The)28 b(upp)r(er)f(limit.)311 3875
y Fe(n)42 b Fp(The)28 b(input)g(v)-5 b(alue.)150 4277
y Fq(8.3.2.7)93 b(template)p Fo(<)p Fq(t)m(yp)s(ename)29
b(T)p Fo(>)j Fq(v)m(oid)f(rlimit)f(\(T)i Fe(L)p Fq(,)g(T)g
Fe(U)p Fq(,)f(T)h(&)h Fe(n)p Fq(\))71 b Fi([inline])150
4484 y Fp(A)28 b(v)n(ersion)e(of)i(limit)g(whic)n(h)f(tak)n(es)g(a)g
(reference)g(as)g(its)h(argumen)n(t.)142 4719 y Fq(P)m(arameters:)311
4818 y Fe(T)42 b Fp(The)28 b(t)n(yp)r(e)f(of)h(v)-5 b(alues)27
b(to)h(w)n(ork)e(on.)311 4966 y Fe(L)42 b Fp(The)28 b(lo)n(w)n(er)e
(limit.)311 5114 y Fe(U)42 b Fp(The)28 b(upp)r(er)f(limit.)311
5263 y Fe(n)42 b Fp(The)28 b(input)g(v)-5 b(alue.)142
5497 y Fq(Returns:)311 5597 y Fp(The)28 b(output)g(v)-5
b(alue.)p -358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 33 41
33 40 bop 150 70 a Fq(8.3)31 b(Utilities)f(and)i(Help)s(er)f(F)-8
b(unctions)2514 b(33)p 150 103 4034 4 v 150 333 a Fj(8.3.3)112
b(V)-9 b(ariable)37 b(Do)s(cumen)m(tation)150 533 y Fq(8.3.3.1)93
b(const)32 b(\015oat)g(BEAST::ColourP)m(alette[)14 b(][4])150
734 y(Initial)31 b(v)-5 b(alue:)150 943 y Fd({)291 1022
y({)106 b(0.0f,)37 b(0.0f,)g(0.0f,)f(1.0f)72 b(},)291
1101 y({)106 b(1.0f,)37 b(1.0f,)g(1.0f,)f(1.0f)72 b(},)291
1179 y({)106 b(0.2f,)37 b(0.8f,)g(0.2f,)f(1.0f)72 b(},)291
1258 y({)106 b(0.2f,)37 b(0.2f,)g(0.8f,)f(1.0f)72 b(},)291
1337 y({)106 b(0.8f,)37 b(0.2f,)g(0.2f,)f(1.0f)72 b(},)291
1416 y({)106 b(0.5f,)37 b(0.3f,)g(0.7f,)f(1.0f)72 b(},)291
1495 y({)106 b(0.2f,)37 b(0.0f,)g(0.4f,)f(1.0f)72 b(},)291
1574 y({)106 b(0.8f,)37 b(0.8f,)g(0.2f,)f(1.0f)72 b(},)291
1653 y({)106 b(0.8f,)37 b(0.5f,)g(0.9f,)f(1.0f)72 b(},)291
1731 y({)106 b(0.4f,)37 b(0.3f,)g(0.1f,)f(1.0f)72 b(},)291
1810 y({)106 b(0.8f,)37 b(0.8f,)g(0.8f,)f(1.0f)72 b(},)291
1889 y({)106 b(0.3f,)37 b(0.3f,)g(0.3f,)f(1.0f)72 b(},)291
1968 y({)106 b(0.5f,)37 b(0.5f,)g(0.5f,)f(1.0f)72 b(},)291
2047 y({)106 b(0.9f,)37 b(0.9f,)g(0.1f,)f(1.0f)72 b(},)291
2126 y({)106 b(1.0f,)37 b(0.8f,)g(0.8f,)f(1.0f)72 b(},)291
2205 y({)106 b(0.5f,)37 b(0.5f,)g(1.0f,)f(0.5f)72 b(})150
2284 y(})150 2513 y Fp(A)28 b(global)e(colour)h(pallete.)36
b(Could)28 b(probably)e(do)i(with)g(man)n(y)f(more)g(colours.)p
150 5723 V 150 5823 a Fn(Generated)f(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 34 42
34 41 bop -358 70 a Fq(34)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
150 333 a Fl(8.4)135 b(Biosystems-Related)48 b(Classes)150
562 y Fp(This)20 b(collection)f(of)h(classes)e(implemen)n(t)j(a)e
(range)f(of)i(biosystems)f(algorithms)g(and)g(con)n(trol)g(systems)g
(including)150 661 y(a)27 b(m)n(ulti-purp)r(ose)g(genetic)h(algorithm)e
(and)i(t)n(w)n(o)e(neural)h(nets.)150 941 y Fj(Comp)s(ounds)275
1126 y Fk(\210)42 b Fp(class)26 b Fq(DynamicalNet)476
1250 y Fg(This)h(class)h(implements)g(a)g(ful)t(ly)e(r)l(e)l(curr)l
(ent)31 b(c)l(ontinuous)e(\(or)f(dynamic)l(al\))g(neur)l(al)g(network.)
275 1449 y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5 b(alNearestSignal)476
1573 y Ff(Sensor)27 b Fg(evaluation)i(functor:)36 b(r)l(eturns)30
b(the)e(signal)g(of)f(the)h(ne)l(ar)l(est)i(individual.)275
1772 y Fk(\210)42 b Fp(class)26 b Fq(Ev)m(olv)m(er)275
1879 y Fk(\210)42 b Fp(class)26 b Fq(F)-8 b(eedF)g(orw)m(ardNet)476
2003 y Fg(This)27 b(is)g(an)h(implementation)g(of)f(a)h(simple)f
(two-layer)i(fe)l(e)l(d-forwar)l(d)h(neur)l(al)e(network.)275
2202 y Fk(\210)42 b Fp(struct)27 b Fq(GA)-11 b(V)j(arian)m(t)476
2326 y Fg(This)25 b(is)h(a)f(gener)l(al)i(purp)l(ose)h(data)e(typ)l(e)h
(which)f(takes)h(\014ve)f(b)l(asic)g(data)h(typ)l(es:)36
b(int,)25 b(\015o)l(at,)i(double,)f(char)g(and)476 2417
y(b)l(o)l(ol.)275 2616 y Fk(\210)42 b Fp(class)26 b Fq
(GeneticAlgorithm)476 2739 y Fg(The)g Ff(GeneticAlgorithm)j
Fg(class)d(pr)l(ovides)h(functionality)g(to)f(c)l(over)h(a)f(r)l(ange)i
(of)d(GA)h(metho)l(ds,)h(and)g(may)476 2831 y(b)l(e)h(extende)l(d)i(to)
e(inc)l(orp)l(or)l(ate)i(other)f(appr)l(o)l(aches.)275
3029 y Fk(\210)42 b Fp(struct)27 b Fq(MutationOp)s(erator)275
3137 y Fk(\210)42 b Fp(struct)27 b Fq(MutationOp)s(erator)p
Fo(<)k Fq(b)s(o)s(ol)f Fo(>)476 3261 y Fg(Sp)l(e)l(cialise)l(d)e
Ff(MutationOp)r(erator)j Fg(for)d(b)l(o)l(ol,)f(simply)g(NOT's)g(its)h
(input.)275 3459 y Fk(\210)42 b Fp(struct)27 b Fq(MutationOp)s(erator)p
Fo(<)k Fq(GA)-11 b(V)j(arian)m(t)34 b Fo(>)476 3583 y
Fg(This)d(sp)l(e)l(cialise)l(d)i(mutation)g(op)l(er)l(ator)h(pr)l
(ovides)f(the)g(facilities)e(of)g(the)i(b)l(asic)g Ff(MutationOp)r
(erator)i Fg(for)476 3675 y Ff(GA)-10 b(V)j(arian)n(t)p
Fg(.)275 3873 y Fk(\210)42 b Fp(struct)27 b Fq(NormalMutator)275
3981 y Fk(\210)42 b Fp(class)26 b Fq(PSO)m(Algorithm)275
4088 y Fk(\210)42 b Fp(class)26 b Fq(Signaller)476 4212
y Fg(A)h(gener)l(al-purp)l(ose)k(class)d(for)g(mo)l(del)t(ling)f
(signal)t(lers)h(with)g(discr)l(ete)h(signal)e(and)h(state)i(typ)l(es.)
150 4582 y Fj(En)m(umerations)275 4768 y Fk(\210)42 b
Fp(en)n(um)110 b Fq(GASelectionT)m(yp)s(e)g Fh(f)g Fq(GA)p
1814 4768 29 4 v 35 w(R)m(OULETTE)h Fp(=)f(0,)130 b Fq(GA)p
3006 4768 V 35 w(RANK)p Fp(,)110 b Fq(GA)p 3615 4768
V 34 w(-)358 4868 y(TOURNAMENT)27 b Fh(g)476 4992 y Fg(The)g(di\013er)l
(ent)i(options)g(for)e(sele)l(ction)i(ar)l(e)f(enumer)l(ate)l(d)i(her)l
(e.)275 5191 y Fk(\210)42 b Fp(en)n(um)113 b Fq(GAFltP)m(aramT)m(yp)s
(e)h Fh(f)e Fq(GA)p 1846 5191 V 35 w(TOURNAMENT)p 2606
5191 V 34 w(P)-8 b(ARAM)p Fp(,)113 b Fq(GA)p 3287 5191
V 34 w(RANK)p 3615 5191 V 34 w(-)358 5290 y(SPRESSURE)p
Fp(,)27 b Fq(GA)p 1128 5290 V 34 w(EXPONENT)h Fh(g)476
5414 y Fg(Assorte)l(d)h(\015o)l(at)g(p)l(ar)l(ameters,)h(set)e(using)g
(GeneticA)n(lgorithm::SetPar)l(ameter.)275 5613 y Fk(\210)42
b Fp(en)n(um)27 b Fq(GAIn)m(tP)m(aramT)m(yp)s(e)j Fh(f)d
Fq(GA)p 1590 5613 V 35 w(TOURNAMENT)p 2350 5613 V 34
w(SIZE)h Fh(g)p -358 5723 4034 4 v -192 5823 a Fn(Generated)e(on)f(Sun)
f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 35 43
35 42 bop 150 70 a Fq(8.4)31 b(Biosystems-Related)d(Classes)2632
b(35)p 150 103 4034 4 v 476 333 a Fg(Assorte)l(d)29 b(inte)l(ger)g(p)l
(ar)l(ameters,)h(set)e(using)g(GeneticA)n(lgorithm::SetPar)l(ameter.)
275 535 y Fk(\210)42 b Fp(en)n(um)31 b Fq(GAPrin)m(tSt)m(yleT)m(yp)s(e)
j Fh(f)d Fq(GA)p 1631 535 29 4 v 34 w(P)-8 b(ARAMETERS)32
b Fp(=)f(1,)h Fq(GA)p 2718 535 V 35 w(CURRENT)f Fp(=)g(2,)i
Fq(GA)p 3615 535 V 34 w(-)358 634 y(GENERA)-8 b(TION)26
b Fp(=)i(4,)f Fq(GA)p 1383 634 V 34 w(HISTOR)-8 b(Y)28
b Fp(=)f(8)h Fh(g)476 762 y Fg(Use)g(to)g(set)g(the)h(printing)f(style)
g(when)g(using)g(GA's)g Fc(<<)f Fg(op)l(er)l(ator.)275
964 y Fk(\210)42 b Fp(en)n(um)49 b Fq(GAFitnessMetho)s(dT)m(yp)s(e)e
Fh(f)i Fq(GA)p 1880 964 V 34 w(BEST)p 2164 964 V 35 w(FITNESS)p
Fp(,)g Fq(GA)p 2824 964 V 35 w(W)m(ORST)p 3218 964 V
34 w(FITNESS)p Fp(,)358 1064 y Fq(GA)p 511 1064 V 34
w(MEAN)p 846 1064 V 34 w(FITNESS)p Fp(,)28 b Fq(GA)p
1484 1064 V 34 w(TOT)-8 b(AL)p 1843 1064 V 36 w(FITNESS)28
b Fh(g)476 1191 y Fg(The)f(metho)l(d)i(by)f(which)g(\014tness)h(is)e
(de)l(cide)l(d)i(when)f(individuals)f(have)h(multiple)g(sc)l(or)l(es.)
275 1393 y Fk(\210)42 b Fp(en)n(um)27 b Fq(GAFitnessFixT)m(yp)s(e)h
Fh(f)f Fq(GA)p 1625 1393 V 34 w(IGNORE)p Fp(,)g Fq(GA)p
2249 1393 V 35 w(CLAMP)p Fp(,)h Fq(GA)p 2836 1393 V 35
w(FIX)g Fh(g)476 1520 y Fg(Sets)g(the)h(metho)l(d)f(by)g(which)g
(\014tness)h(sc)l(or)l(es)h(ar)l(e)e(adjuste)l(d)h(b)l(efor)l(e)g(sele)
l(ction.)275 1723 y Fk(\210)42 b Fp(en)n(um)27 b Fq(GA)-11
b(V)j(arian)m(tT)m(yp)s(e)31 b Fh(f)358 1858 y Fq(GA)-11
b(V)p 572 1858 V 35 w(INT)p Fp(,)28 b Fq(GA)-11 b(V)p
1043 1858 V 35 w(FLO)m(A)j(T)p Fp(,)29 b Fq(GA)-11 b(V)p
1654 1858 V 35 w(DOUBLE)p Fp(,)28 b Fq(GA)-11 b(V)p 2354
1858 V 36 w(CHAR)p Fp(,)358 1994 y Fq(GA)g(V)p 572 1994
V 35 w(BOOL)27 b Fh(g)476 2121 y Fg(A)g(typ)l(e)i(\015ag)f(for)f(the)i
(GA)-8 b(V)i(ariant)29 b(data)f(typ)l(e.)150 2498 y Fj(F)-9
b(unctions)275 2689 y Fk(\210)42 b Fp(ostream)26 b(&)h
Fq(op)s(erator)p Fo(<<)g Fp(\(ostream)g(&out,)g(const)g(DynamicalNet)h
(&dnn\))476 2816 y Fg(A)n(n)f(output)i(op)l(er)l(ator)h(for)e
Ff(DynamicalNet)p Fg(.)275 3019 y Fk(\210)42 b Fp(istream)26
b(&)i Fq(op)s(erator)p Fo(>>)f Fp(\(istream)g(&in,)g(DynamicalNet)h
(&dnn\))476 3146 y Fg(A)n(n)f(input)h(op)l(er)l(ator)i(for)e
Ff(DynamicalNet)p Fg(.)275 3348 y Fk(\210)42 b Fp(ostream)26
b(&)h Fq(op)s(erator)p Fo(<<)g Fp(\(ostream)g(&out,)g(const)g(F)-7
b(eedF)g(orw)n(ardNet)27 b(&\013n\))476 3475 y Fg(Output)h(op)l(er)l
(ator)i(overlo)l(ad)f(for)f(the)g Ff(F)-7 b(eedF)g(orw)n(ardNet)p
Fg(.)275 3678 y Fk(\210)42 b Fp(istream)26 b(&)i Fq(op)s(erator)p
Fo(>>)f Fp(\(istream)g(&in,)g(F)-7 b(eedF)g(orw)n(ardNet)27
b(&\013n\))476 3805 y Fg(Input)h(op)l(er)l(ator)i(overlo)l(ad)e(for)g
(the)g Ff(F)-7 b(eedF)g(orw)n(ardNet)p Fg(.)275 4007
y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(T)p Fo(>)g Fp(std::ostream)g(&)g Fq(op)s(erator)p Fo(<<)h
Fp(\(std::ostream)f(&out,)g(const)g(Mutation-)358 4107
y(Op)r(erator)p Fo(<)e Fp(T)j Fo(>)f Fp(&m\))476 4234
y Fg(Output)h(op)l(er)l(ator)i(for)e(the)g Ff(MutationOp)r(erator)j
Fg(function)d(obje)l(ct.)275 4436 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)18 b(T)p Fo(>)g Fp(std::istream)g(&)h
Fq(op)s(erator)p Fo(>>)e Fp(\(std::istream)i(&in,)h(MutationOp)r
(erator)p Fo(<)358 4536 y Fp(T)27 b Fo(>)g Fp(&m\))476
4663 y Fg(Input)h(op)l(er)l(ator)i(for)d(the)h Ff(MutationOp)r(erator)k
Fg(function)27 b(obje)l(ct.)275 4865 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(class)e(EV)n(O,)i(class)f(MUTFUNC)p Fo(>)h
Fp(std::ostream)f(&)h Fq(op)s(erator)p Fo(<<)f Fp(\(std::ostream)g(&,)
358 4965 y(const)27 b(GeneticAlgorithm)p Fo(<)g Fp(EV)n(O,)g(MUTFUNC)h
Fo(>)g Fp(&\))476 5092 y Fg(The)f(GA's)h(output)h(op)l(er)l(ator.)275
5295 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)19
b(EV)n(O,)g(class)g(MUTFUNC)p Fo(>)i Fp(std::istream)f(&)g
Fq(op)s(erator)p Fo(>>)f Fp(\(std::istream)h(&,)h(const)358
5394 y(GeneticAlgorithm)p Fo(<)27 b Fp(EV)n(O,)f(MUTFUNC)j
Fo(>)e Fp(&\))476 5522 y Fg(The)g(GA's)h(input)g(op)l(er)l(ator.)p
150 5723 4034 4 v 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 36 44
36 43 bop -358 70 a Fq(36)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
275 333 a Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)36
b(EV)n(O,)h(class)g(MUTFUNC)p Fo(>)i Fp(std::istream)f(&)f
Fq(op)s(erator)p Fo(>>)g Fp(\(std::istream)h(&in,)358
432 y(GeneticAlgorithm)p Fo(<)27 b Fp(EV)n(O,)f(MUTFUNC)j
Fo(>)e Fp(&ga\))275 540 y Fk(\210)42 b Fp(std::ostream)26
b(&)h Fq(op)s(erator)p Fo(<<)g Fp(\(std::ostream)g(&out,)g(const)h(GA)
-9 b(V)i(arian)n(t)27 b(&v\))275 649 y Fk(\210)42 b Fp(std::istream)27
b(&)g Fq(op)s(erator)p Fo(>>)g Fp(\(std::istream)g(&in,)h(GA)-9
b(V)i(arian)n(t)27 b(&v\))275 757 y Fk(\210)42 b Fp(\015oat)27
b Fq(RandomNum)d Fp(\(\))476 882 y Fg(R)l(eturns)29 b(a)f(numb)l(er)g
(b)l(etwe)l(en)h(-1)f(and)g(1.)275 1081 y Fk(\210)42
b Fq(GeneticAlgorithm)25 b Fp(\(\015oat)i(crosso)n(v)n(er=0.7f,)c
(\015oat)28 b(m)n(utation=0.01f,)e(in)n(t)h(p)r(opSize=0\))476
1206 y Fg(Constructor:)43 b(sets)31 b(default)g(p)l(ar)l(ameters:)43
b(elitism)29 b(and)i(sub)l(elitism)g(0,)f(cr)l(ossover)j(p)l(oints)e
(1,)g(tournament)476 1297 y(p)l(ar)l(ameter)e(0.75,)e(tournament)j
(size)e(2,)f(r)l(ank)i(pr)l(essur)l(e)h(1.5,)d(exp)l(onent)i(1.0.)275
1497 y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)26 b Fp(EV)n(O)g
Fh(\003)i Fo(>)f Fq(GetP)m(opulationCop)m(y)h Fp(\(\))g(const)476
1622 y Fg(R)l(eturns)e(duplic)l(ates)h(of)d(the)i(output)h(p)l
(opulation)f(which)f(won)-8 b('t)25 b(b)l(e)h(delete)l(d)g(by)f(the)h
(GA)f(if)f(it)h(do)l(es)h(a)f Ff(Clean-)476 1713 y(Up\(\))p
Fg(.)275 1913 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(Generate)i Fp(\(\))476 2037 y Fg(The)f(gener)l(ation)j(function:)35
b(this)28 b(is)f(wher)l(e)i(it)f(al)t(l)e(happ)l(ens.)275
2237 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(ReGenerate)i Fp(\(\))476
2362 y Fg(Cal)t(ls)f(the)h Ff(Generate\(\))g Fg(metho)l(d)h(and)f(c)l
(opies)g(the)h(output)g(p)l(opulation)g(into)e(the)i(input.)275
2561 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(CalcStats)j Fp(\(\))476
2686 y Fg(Calculates)f(some)g(statistics)h(use)l(d)f(in)f(some)g(of)g
(the)h(sele)l(ction)g(metho)l(ds)h(and)f(also)f(stor)l(e)l(d)i(by)f
(the)g(class)g(for)476 2778 y(data)g(c)l(ol)t(le)l(ction.)275
2977 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Setup)i Fp(\(\))476
3102 y Fg(Pr)l(ep)l(ar)l(es)h(the)g(GA)f(for)f(the)i(next)f(ep)l(o)l
(ch.)275 3301 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(FixFitness)h
Fp(\(\))476 3426 y Fg(A)l(djusts)h(the)h(\014tness)g(ac)l(c)l(or)l
(ding)g(to.)275 3626 y Fk(\210)42 b Fp(\015oat)27 b Fq(GetFitness)f
Fp(\(EV)n(O)h Fh(\003)p Fp(i\))476 3751 y Fg(Calculates)d(the)g
(\014tness)h(sc)l(or)l(e)g(to)f(b)l(e)g(use)l(d)g(by)g(the)g(GA)f(fr)l
(om)h(the)g(stor)l(e)l(d)h(\014tness)g(sc)l(or)l(es)g(in)e(the)h(EV)n
(O)f(obje)l(ct.)275 3950 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SelectP)m(aren)m(tGenot)m(yp)s(e)j Fp(\(GENOTYPE)e(&\))476
4075 y Fg(Dep)l(ending)33 b(on)g(the)h(sele)l(ction)g(pr)l(o)l(c)l(e)l
(dur)l(e)h(chosen,)g(a)e(genotyp)l(e)i(is)d(taken)i(fr)l(om)f(the)g(p)l
(opulation)h(and)f(r)l(e-)476 4166 y(turne)l(d)c(by)f(r)l(efer)l(enc)l
(e.)275 4366 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SelectProbabilit)m(y)i
Fp(\(GENOTYPE)f(&\))476 4491 y Fg(R)l(oulette)40 b(and)f(R)l(ank)g
(Sele)l(ction)g(Having)g(done)g(the)g(Setup)h(function)f(\(ab)l(ove\),)
j(e)l(ach)e(individual)e(has)h(a)476 4582 y(pr)l(ob)l(ability)28
b(sc)l(or)l(e,)h(derive)l(d)f(fr)l(om)g(their)g(r)l(ank)h(or)f
(\014tness.)275 4781 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SelectT)-8
b(ournamen)m(t)28 b Fp(\(GENOTYPE)e(&\))476 4906 y Fg(T)-6
b(ournament)24 b(Sele)l(ction)h(The)e(metho)l(d)h(implemente)l(d)g(her)
l(e)g(is)f(an)h(amalgamation)g(of)e(two)i(slightly)g(di\013er)l(ent)476
4998 y(appr)l(o)l(aches.)275 5197 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(Crosso)m(v)m(erGenot)m(yp)s(es)i Fp(\(GENOTYPE)f(&,)g(GENOTYPE)f
(&\))476 5322 y Fg(This)j(metho)l(d)i(simply)f(takes)h(two)f(chr)l
(omosomes,)i(mum)d(and)h(dad,)h(and)f(swaps)h(them)f(over)h(at)f(a)g(r)
l(andom)476 5413 y(p)l(oint)e(along)g(the)g(length.)275
5613 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(MutateGenot)m(yp)s(e)i
Fp(\(GENOTYPE)f(&\))p -358 5723 V -192 5823 a Fn(Generated)f(on)f(Sun)f
(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 37 45
37 44 bop 150 70 a Fq(8.4)31 b(Biosystems-Related)d(Classes)2632
b(37)p 150 103 4034 4 v 476 333 a Fg(While)26 b(cr)l(ossover)31
b(simulates)d(the)g(e\013e)l(ct)h(of)f(sexual)g(r)l(epr)l(o)l(duction)i
(within)e(a)f(p)l(opulation,)h(mutation)h(arti\014-)476
424 y(cial)t(ly)d(r)l(epr)l(o)l(duc)l(es)31 b(the)d(e\013e)l(cts)i(of)d
(tr)l(anscription)j(err)l(ors)f(in)e(the)h(r)l(eplic)l(ation)h(of)e
(DNA.)275 623 y Fk(\210)42 b Fp(std::string)27 b Fq(T)-8
b(oString)27 b Fp(\(\))i(const)476 748 y Fg(R)l(eturns)e(a)f(string)h
(c)l(ontaining)g(various)f(details)h(ab)l(out)g(the)f(GA's)g(curr)l
(ent)i(state,)g(dep)l(ending)f(on)f(what)g(has)476 840
y(b)l(e)l(en)i(set)h(with)e(SetPrintStyle.)275 1039 y
Fk(\210)42 b Fp(std::string)27 b Fq(GetCSV)h Fp(\(c)n(har)e(separator=)
f(','\))j(const)476 1164 y Fg(R)l(eturns)c(a)f(string)h(c)l(ontaining)f
(a)g(simple)g(CSV)f(table)i(with)f(aver)l(age)h(and)g(b)l(est)g
(\014tness)g(for)f(every)h(gener)l(ation)476 1255 y(so)k(far.)275
1455 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(CleanUp)i Fp(\(\))476
1579 y Fg(Deletes)g(the)h(obje)l(cts)g(c)l(omprising)f(the)g(input)g
(and)g(output)h(p)l(opulations.)275 1779 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(Serialise)h Fp(\(std::ostream)g(&\))g(const)275
1887 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Unserialise)h
Fp(\(std::istream)g(&\))275 1995 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(Randomise)f Fp(\(in)n(t)k(n)n(umStates,)e(in)n(t)h(n)n
(umSignals\))476 2120 y Fg(R)l(andomises)d(the)g(signal)t(ler)g(so)g
(that)h(e)l(ach)f(p)l(ossible)g(internal)h(state)g(has)f(a)f(r)l(andom)
i(signal)e(asso)l(ciate)l(d)j(with)476 2211 y(it.)275
2411 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Generate)i
Fp(\(\))275 2519 y Fk(\210)42 b Fp(EV)n(O)26 b Fh(\003)h
Fq(Fly)h Fp(\(EV)n(O)f Fh(\003)p Fp(\))150 2799 y Fj(V)-9
b(ariables)275 2986 y Fk(\210)42 b Fp(const)27 b(double)g
Fq(FFN)p 1043 2986 29 4 v 35 w(A)m(CTIV)-11 b(A)j(TION)p
1692 2986 V 36 w(RESPONSE)26 b Fp(=)i(1)476 3111 y Fg(This)f(value)h
(de)l(cides)h(the)f(curve)h(of)e(the)i(sigmoid)e(function.)275
3310 y Fk(\210)42 b Fp(const)27 b(in)n(t)h Fq(FFN)p 903
3310 V 34 w(COLSIZE)g Fp(=)f(6)476 3435 y Fg(The)g(width)h(of)f(c)l
(olumns)h(in)g(T)-6 b(oString)28 b(output.)150 3806 y
Fj(8.4.1)112 b(Detailed)37 b(Description)150 4007 y Fp(This)20
b(collection)f(of)h(classes)e(implemen)n(t)j(a)e(range)f(of)i
(biosystems)f(algorithms)g(and)g(con)n(trol)g(systems)g(including)150
4107 y(a)27 b(m)n(ulti-purp)r(ose)g(genetic)h(algorithm)e(and)i(t)n(w)n
(o)e(neural)h(nets.)150 4254 y(There)g(are)g(also)f(classes)g(for)i
(using)f(these)g(con)n(trollers)f(in)i(the)g(sim)n(ulation)f(en)n
(vironmen)n(t.)150 4534 y Fj(8.4.2)112 b(En)m(umeration)37
b(T)m(yp)s(e)h(Do)s(cumen)m(tation)150 4734 y Fq(8.4.2.1)93
b(en)m(um)31 b(BEAST::GAFitnessFixT)m(yp)s(e)150 4935
y Fp(Sets)d(the)g(metho)r(d)g(b)n(y)f(whic)n(h)h(\014tness)f(scores)f
(are)h(adjusted)h(b)r(efore)f(selection.)142 5148 y Fq(En)m(umeration)j
(v)-5 b(alues:)311 5247 y(GA)p 464 5247 V 35 w(IGNORE)75
b Fp(Lea)n(v)n(e)26 b(them)i(as)f(they)h(are.)311 5380
y Fq(GA)p 464 5380 V 35 w(CLAMP)76 b Fp(Minim)n(um)29
b(\014tness)e(is)h(clamp)r(ed)g(at)f(0.)311 5513 y Fq(GA)p
464 5513 V 35 w(FIX)76 b Fp(W)-7 b(orst)28 b(score)e(set)h(to)h(0,)f
(others)g(scaled)g(up.)p 150 5723 4034 4 v 150 5823 a
Fn(Generated)f(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d
(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 38 46
38 45 bop -358 70 a Fq(38)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
150 333 a(8.4.2.2)93 b(en)m(um)31 b(BEAST::GAFitnessMetho)s(dT)m(yp)s
(e)150 533 y Fp(The)d(metho)r(d)g(b)n(y)f(whic)n(h)h(\014tness)f(is)h
(decided)f(when)h(individuals)g(ha)n(v)n(e)e(m)n(ultiple)i(scores.)142
740 y Fq(En)m(umeration)i(v)-5 b(alues:)311 840 y(GA)p
464 840 29 4 v 35 w(BEST)p 749 840 V 35 w(FITNESS)76
b Fp(The)27 b(b)r(est)h(\014tness)g(score)e(is)i(used.)311
971 y Fq(GA)p 464 971 V 35 w(W)m(ORST)p 858 971 V 34
w(FITNESS)76 b Fp(The)28 b(w)n(orst)e(\014tness)i(score)e(is)i(used.)
311 1101 y Fq(GA)p 464 1101 V 35 w(MEAN)p 800 1101 V
34 w(FITNESS)76 b Fp(The)27 b(a)n(v)n(erage)e(\014tness)j(is)f(used.)
311 1232 y Fq(GA)p 464 1232 V 35 w(TOT)-8 b(AL)p 824
1232 V 36 w(FITNESS)76 b Fp(The)27 b(total)h(\014tness)f(is)h(used.)150
1572 y Fq(8.4.2.3)93 b(en)m(um)31 b(BEAST::GAFltP)m(aramT)m(yp)s(e)150
1772 y Fp(Assorted)c(\015oat)g(parameters,)f(set)h(using)h
Fq(GeneticAlgorithm::SetP)m(arameter)p Fp(.)142 1979
y Fq(En)m(umeration)i(v)-5 b(alues:)311 2079 y(GA)p 464
2079 V 35 w(TOURNAMENT)p 1224 2079 V 34 w(P)d(ARAM)76
b Fp(Probabilit)n(y)23 b(of)i(\014ttest)h(winning)f(in)g(tournamen)n(t)
f(selection.)311 2210 y Fq(GA)p 464 2210 V 35 w(RANK)p
793 2210 V 34 w(SPRESSURE)75 b Fp(Selection)28 b(pressure)e(for)h(rank)
g(selection,)g([1.0:2.0].)311 2340 y Fq(GA)p 464 2340
V 35 w(EXPONENT)75 b Fp(An)29 b(exp)r(on)n(tial)e(mo)r(di\014er)g(for)g
(rank)g(and)g(roulette)g(probabilities.)150 2680 y Fq(8.4.2.4)93
b(en)m(um)31 b(BEAST::GAIn)m(tP)m(aramT)m(yp)s(e)150
2881 y Fp(Assorted)c(in)n(teger)f(parameters,)g(set)i(using)f
Fq(GeneticAlgorithm::SetP)m(arameter)p Fp(.)142 3088
y Fq(En)m(umeration)j(v)-5 b(alues:)311 3187 y(GA)p 464
3187 V 35 w(TOURNAMENT)p 1224 3187 V 34 w(SIZE)76 b Fp(Num)n(b)r(er)28
b(of)g(individuals)f(p)r(er)h(round)f(of)g(tournamen)n(t)g(selection.)
150 3527 y Fq(8.4.2.5)93 b(en)m(um)31 b(BEAST::GAPrin)m(tSt)m(yleT)m
(yp)s(e)150 3728 y Fp(Use)d(to)f(set)h(the)g(prin)n(ting)f(st)n(yle)g
(when)h(using)f(GA's)h Fo(<<)f Fp(op)r(erator.)142 3935
y Fq(En)m(umeration)j(v)-5 b(alues:)311 4035 y(GA)p 464
4035 V 35 w(P)d(ARAMETERS)75 b Fp(Displa)n(y)28 b(the)f(curren)n(t)g
(parameters.)311 4165 y Fq(GA)p 464 4165 V 35 w(CURRENT)75
b Fp(Displa)n(y)28 b(details)f(of)g(curren)n(t)g(generation.)311
4296 y Fq(GA)p 464 4296 V 35 w(GENERA)-8 b(TION)75 b
Fp(Displa)n(y)27 b(all)h(mem)n(b)r(ers)f(of)g(curren)n(t)g(generation.)
311 4427 y Fq(GA)p 464 4427 V 35 w(HISTOR)-8 b(Y)76 b
Fp(Sho)n(w)27 b(a)n(v)n(erage)e(and)i(b)r(est)h(\014tnesses)f(of)h(eac)
n(h)f(generation.)150 4767 y Fq(8.4.2.6)93 b(en)m(um)31
b(BEAST::GASelectionT)m(yp)s(e)150 4967 y Fp(The)d(di\013eren)n(t)f
(options)g(for)g(selection)h(are)e(en)n(umerated)h(here.)142
5174 y Fq(En)m(umeration)j(v)-5 b(alues:)311 5274 y(GA)p
464 5274 V 35 w(R)m(OULETTE)77 b Fp(Fitness)28 b(prop)r(ortional)d
(selection.)311 5404 y Fq(GA)p 464 5404 V 35 w(RANK)75
b Fp(Rank)28 b(prop)r(ortional)d(selection.)311 5535
y Fq(GA)p 464 5535 V 35 w(TOURNAMENT)76 b Fp(T)-7 b(ournamen)n(t)26
b(selection.)p -358 5723 4034 4 v -192 5823 a Fn(Generated)g(on)f(Sun)f
(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 39 47
39 46 bop 150 70 a Fq(8.4)31 b(Biosystems-Related)d(Classes)2632
b(39)p 150 103 4034 4 v 150 333 a(8.4.2.7)93 b(en)m(um)31
b(BEAST::GA)-11 b(V)j(arian)m(tT)m(yp)s(e)150 539 y Fp(A)28
b(t)n(yp)r(e)g(\015ag)f(for)g(the)h Fq(GA)-11 b(V)j(arian)m(t)29
b Fp(data)e(t)n(yp)r(e.)142 773 y Fq(See)k(also:)311
873 y(GA)-11 b(V)j(arian)m(t)150 1184 y Fj(8.4.3)112
b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150 1391 y
Fq(8.4.3.1)93 b(template)p Fo(<)p Fq(class)30 b(EV)m(O,)h(class)h
(MUTFUNC)p Fo(>)g Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p
Fo(<)516 1490 y Fq(EV)m(O,)f(MUTFUNC)i Fo(>)p Fq(::CleanUp)d(\(\))72
b Fi([inherited])150 1697 y Fp(Deletes)28 b(the)g(ob)5
b(jects)27 b(comprising)f(the)i(input)h(and)e(output)h(p)r(opulations.)
150 1844 y(Only)f(called)g(if)i(the)f Fq(GeneticAlgorithm)d
Fp(has)i(o)n(wnership)f(of)i(its)g(data.)142 2054 y Fq(See)j(also:)311
2154 y(SetOwnsData)150 2529 y(8.4.3.2)93 b(template)p
Fo(<)p Fq(class)30 b(EV)m(O,)h(class)h(MUTFUNC)p Fo(>)g
Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p Fo(<)516 2629
y Fq(EV)m(O,)k(MUTFUNC)i Fo(>)p Fq(::Crosso)m(v)m(erGenot)m(yp)s(es)d
(\(GENOTYPE)i(&)g Fe(mum)p Fq(,)516 2728 y(GENOTYPE)32
b(&)g Fe(dad)p Fq(\))71 b Fi([protected,)39 b(inherited])150
2935 y Fp(This)32 b(metho)r(d)h(simply)g(tak)n(es)f(t)n(w)n(o)f(c)n
(hromosomes,)h(m)n(um)g(and)h(dad,)g(and)g(sw)n(aps)e(them)i(o)n(v)n
(er)e(at)h(a)g(random)150 3034 y(p)r(oin)n(t)c(along)e(the)i(length.)
150 3181 y(This,)g(therefore,)e(is)i(the)g(sexual)f(part)g(of)g(the)h
(genetic)g(algorithm)150 3476 y Fq(8.4.3.3)93 b(template)p
Fo(<)p Fq(class)30 b(EV)m(O,)h(class)h(MUTFUNC)p Fo(>)g
Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p Fo(<)516 3575
y Fq(EV)m(O,)f(MUTFUNC)i Fo(>)p Fq(::Generate)e(\(\))71
b Fi([virtual,)40 b(inherited])150 3782 y Fp(The)28 b(generation)e
(function:)37 b(this)28 b(is)g(where)f(it)h(all)f(happ)r(ens.)150
3929 y(First)k(the)h(total,)g(b)r(est,)g(w)n(orst)e(and)h(a)n(v)n
(erage)e(\014tnesses)h(are)h(calculated)f(with)i Fq(CalcStats\(\))p
Fp(.)49 b(Then)31 b(\014tness)150 4028 y(scaling)c(and)g(probabilit)n
(y)g(distributions)h(are)f(done)g(b)n(y)g Fq(Setup\(\))p
Fp(.)38 b(Elitism)28 b(and)g(sub)r(elitism)g(are)f(dealt)h(with)150
4128 y(and)21 b(then)g(the)g(new)g(p)r(opulation)g(is)g(generated)e
(using)i(the)g(curren)n(t)f(selection)h(metho)r(d,)h(crosso)n(v)n(er)c
(parameters)150 4228 y(and)27 b(m)n(utation)h(op)r(erator.)142
4462 y Fq(T)-8 b(o)s(do)311 4561 y Fp(Accoun)n(t)28 b(for)f(o)r(dd)h(n)
n(um)n(b)r(ered)f(output)h(p)r(opulation)g(sizes)150
4960 y Fq(8.4.3.4)93 b(template)p Fo(<)p Fq(class)32
b(EV)m(O,)j(class)f(MUTFUNC)p Fo(>)h Fq(std::string)e(BEAST::Genetic-)
516 5060 y(Algorithm)p Fo(<)e Fq(EV)m(O,)j(MUTFUNC)h
Fo(>)p Fq(::GetCSV)e(\(c)m(har)j Fe(sep)-5 b(ar)g(ator)34
b Fq(=)h(','\))e(const)516 5160 y Fi([inherited])150
5366 y Fp(Returns)25 b(a)g(string)f(con)n(taining)g(a)h(simple)h(CSV)f
(table)g(with)h(a)n(v)n(erage)c(and)j(b)r(est)h(\014tness)f(for)g(ev)n
(ery)f(generation)150 5466 y(so)j(far.)150 5613 y(The)h(default)g
(separator)d(is)i(",")g(but)h(a)g(di\013eren)n(t)f(one)h(ma)n(y)e(b)r
(e)i(sp)r(eci\014ed.)p 150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h
(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 40 48
40 47 bop -358 70 a Fq(40)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
150 333 a(8.4.3.5)93 b(template)p Fo(<)p Fq(class)29
b(EV)m(O,)j(class)g(MUTFUNC)p Fo(>)g Fq(\015oat)g
(BEAST::GeneticAlgorithm)p Fo(<)516 432 y Fq(EV)m(O,)f(MUTFUNC)i
Fo(>)p Fq(::GetFitness)c(\(EV)m(O)j Fh(\003)f Fe(i)p
Fq(\))71 b Fi([protected,)39 b(inherited])150 633 y Fp(Calculates)22
b(the)i(\014tness)f(score)f(to)h(b)r(e)g(used)h(b)n(y)e(the)i(GA)g
(from)e(the)i(stored)e(\014tness)h(scores)f(in)h(the)h(EV)n(O)e(ob)5
b(ject.)150 780 y(If)28 b(no)f(scores)f(ha)n(v)n(e)h(b)r(een)h(stored,)
f(the)h(output)g(from)f(EV)n(O::GetFitness)g(is)h(returned.)150
1040 y Fq(8.4.3.6)93 b(template)p Fo(<)p Fq(t)m(yp)s(ename)31
b(T)p Fo(>)i Fq(std::ostream&)e(op)s(erator)p Fo(<<)i
Fq(\(std::ostream)e(&)j Fe(out)p Fq(,)516 1140 y(const)e(MutationOp)s
(erator)p Fo(<)f Fq(T)h Fo(>)g Fq(&)g Fe(m)p Fq(\))150
1340 y Fp(Output)c(op)r(erator)e(for)h(the)h Fq(MutationOp)s(erator)g
Fp(function)g(ob)5 b(ject.)150 1487 y(Note)25 b(that)g(in)g(order)e
(for)h(this)h(function)h(to)e(w)n(ork,)g(there)h(m)n(ust)g(exist)f(an)h
(output)g(op)r(erator)e(for)h(the)h(m)n(utation)150 1586
y(op)r(erator's)h(t)n(yp)r(e.)142 1769 y Fq(See)31 b(also:)311
1869 y(IMPLEMENT)p 924 1869 29 4 v 35 w(IOSTREAM)p 1484
1869 V 33 w(CAST)311 1969 y(IMPLEMENT)p 924 1969 V 35
w(IOSTREAM)p 1484 1969 V 33 w(BINAR)-8 b(Y)p 1904 1969
V 35 w(CONVERSION)150 2282 y(8.4.3.7)93 b(ostream&)31
b(op)s(erator)p Fo(<<)g Fq(\(ostream)f(&)i Fe(out)p Fq(,)f(const)h(F)-8
b(eedF)g(orw)m(ardNet)32 b(&)h Fe(\013n)p Fq(\))150 2483
y Fp(Output)28 b(op)r(erator)e(o)n(v)n(erload)f(for)i(the)h
Fq(F)-8 b(eedF)g(orw)m(ardNet)p Fp(.)142 2678 y Fq(P)m(arameters:)311
2778 y Fe(out)42 b Fp(An)28 b(output)g(stream.)311 2904
y Fe(\013n)42 b Fp(A)28 b Fq(F)-8 b(eedF)g(orw)m(ardNet)28
b Fp(ob)5 b(ject.)142 3100 y Fq(Returns:)311 3199 y Fp(A)28
b(reference)f(to)h(the)g(output)g(stream.)142 3395 y
Fq(See)j(also:)311 3495 y(F)-8 b(eedF)g(orw)m(ardNet::Serialise)150
3822 y(8.4.3.8)93 b(ostream&)31 b(op)s(erator)p Fo(<<)g
Fq(\(ostream)f(&)i Fe(out)p Fq(,)f(const)h(DynamicalNet)f(&)h
Fe(dnn)p Fq(\))150 4023 y Fp(An)c(output)g(op)r(erator)e(for)h
Fq(DynamicalNet)p Fp(.)142 4218 y Fq(P)m(arameters:)311
4318 y Fe(out)42 b Fp(A)27 b(reference)g(to)h(an)f(output)h(stream.)311
4444 y Fe(dnn)42 b Fp(A)28 b(reference)f(to)g(a)g Fq(DynamicalNet)p
Fp(.)142 4640 y Fq(Returns:)311 4739 y Fp(A)h(reference)f(to)h(an)f
(output)h(stream.)150 5066 y Fq(8.4.3.9)93 b(template)p
Fo(<)p Fq(t)m(yp)s(ename)32 b(T)p Fo(>)i Fq(std::istream&)f(op)s
(erator)p Fo(>>)h Fq(\(std::istream)e(&)j Fe(in)p Fq(,)516
5166 y(MutationOp)s(erator)p Fo(<)c Fq(T)h Fo(>)g Fq(&)g
Fe(m)p Fq(\))150 5366 y Fp(Input)c(op)r(erator)e(for)h(the)h
Fq(MutationOp)s(erator)g Fp(function)g(ob)5 b(ject.)150
5513 y(Note)28 b(that)g(in)g(order)e(for)h(this)h(function)h(to)e(w)n
(ork,)g(there)g(m)n(ust)h(exist)g(an)f(input)i(op)r(erator)d(for)h(the)
h(m)n(utation)150 5613 y(op)r(erator's)e(t)n(yp)r(e.)p
-358 5723 4034 4 v -192 5823 a Fn(Generated)g(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 41 49
41 48 bop 150 70 a Fq(8.4)31 b(Biosystems-Related)d(Classes)2632
b(41)p 150 103 4034 4 v 142 307 a(See)31 b(also:)311
407 y(IMPLEMENT)p 924 407 29 4 v 35 w(IOSTREAM)p 1484
407 V 33 w(CAST)311 507 y(IMPLEMENT)p 924 507 V 35 w(IOSTREAM)p
1484 507 V 33 w(BINAR)-8 b(Y)p 1904 507 V 35 w(CONVERSION)150
837 y(8.4.3.10)93 b(istream&)30 b(op)s(erator)p Fo(>>)h
Fq(\(istream)g(&)h Fe(in)p Fq(,)e(F)-8 b(eedF)g(orw)m(ardNet)33
b(&)f Fe(\013n)p Fq(\))150 1037 y Fp(Input)c(op)r(erator)e(o)n(v)n
(erload)f(for)i(the)h Fq(F)-8 b(eedF)g(orw)m(ardNet)p
Fp(.)142 1250 y Fq(P)m(arameters:)311 1349 y Fe(in)41
b Fp(An)28 b(input)h(stream.)311 1482 y Fe(\013n)42 b
Fp(A)28 b Fq(F)-8 b(eedF)g(orw)m(ardNet)28 b Fp(ob)5
b(ject.)142 1694 y Fq(Returns:)311 1794 y Fp(A)28 b(reference)f(to)h
(the)g(input)g(stream.)142 2007 y Fq(See)j(also:)311
2106 y(F)-8 b(eedF)g(orw)m(ardNet::Unserialise)150 2453
y(8.4.3.11)93 b(istream&)30 b(op)s(erator)p Fo(>>)h Fq(\(istream)g(&)h
Fe(in)p Fq(,)e(DynamicalNet)h(&)i Fe(dnn)p Fq(\))150
2654 y Fp(An)28 b(input)g(op)r(erator)e(for)h Fq(DynamicalNet)p
Fp(.)142 2866 y Fq(P)m(arameters:)311 2966 y Fe(in)41
b Fp(A)28 b(reference)f(to)h(an)f(input)h(stream.)311
3099 y Fe(dnn)42 b Fp(A)28 b(reference)f(to)g(a)g Fq(DynamicalNet)p
Fp(.)142 3311 y Fq(Returns:)311 3411 y Fp(A)h(reference)f(to)h(an)f
(input)h(stream.)150 3758 y Fq(8.4.3.12)93 b(template)p
Fo(<)p Fq(t)m(yp)s(ename)p 1443 3758 V 65 w(State,)36
b(t)m(yp)s(ename)p 2198 3758 V 67 w(Signal,)e(t)m(yp)s(ename)p
2989 3758 V 68 w(Cost)p Fo(>)g Fq(v)m(oid)564 3857 y(BEAST::Signaller)p
Fo(<)p 1405 3857 V 65 w Fq(State,)p 1717 3857 V 68 w(Signal,)p
2065 3857 V 67 w(Cost)e Fo(>)p Fq(::Randomise)d(\(in)m(t)34
b Fe(numStates)p Fq(,)564 3957 y(in)m(t)e Fe(numSignals)p
Fq(\))70 b Fi([inline,)41 b(inherited])150 4157 y Fp(Randomises)26
b(the)h(signaller)f(so)g(that)h(eac)n(h)f(p)r(ossible)h(in)n(ternal)f
(state)g(has)h(a)f(random)g(signal)g(asso)r(ciated)g(with)150
4257 y(it.)150 4404 y(Also)h(sets)h(the)g(signaller)e(to)h(a)g(random)g
(state)g(v)-5 b(alue.)150 4668 y Fq(8.4.3.13)93 b(template)p
Fo(<)p Fq(class)23 b(EV)m(O,)i(class)h(MUTFUNC)p Fo(>)g
Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p Fo(<)564 4767
y Fq(EV)m(O,)36 b(MUTFUNC)h Fo(>)p Fq(::SelectProbabilit)m(y)e
(\(GENOTYPE)i(&)f Fe(chr)-5 b(omo)p Fq(\))564 4867 y
Fi([protected,)39 b(inherited])150 5067 y Fp(Roulette)i(and)h(Rank)e
(Selection)i(Ha)n(ving)e(done)h(the)g(Setup)h(function)g(\(ab)r(o)n(v)n
(e\),)i(eac)n(h)c(individual)i(has)e(a)150 5167 y(probabilit)n(y)27
b(score,)f(deriv)n(ed)h(from)g(their)g(rank)g(or)g(\014tness.)150
5314 y(Imagine)c(all)h(the)h(probabilit)n(y)e(scores)f(of)i(the)h(p)r
(opulation)f(as)f(a)h(big)g(pie)g(c)n(hart,)g(prin)n(ted)g(on)g(a)f
(roulette)h(wheel.)150 5414 y(No)n(w)e(imagine)f(n)n(um)n(b)r(ers)h
(around)f(the)i(edge,)g(starting)e(at)h(0,)h(going)e(up)i(to)f(the)g
(total)g(probabilit)n(y)f(of)h(selection.)150 5513 y(W)-7
b(e)29 b(pic)n(k)f(a)g(random)f(n)n(um)n(b)r(er)h(b)r(et)n(w)n(een)h(0)
f(and)g(1,)g(and)h(call)f(it)g(slice.)39 b(This)29 b(is)f(where)g(our)g
(roulette)g(ball)g(will)150 5613 y(land.)p 150 5723 4034
4 v 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 42 50
42 49 bop -358 70 a Fq(42)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
150 333 a(8.4.3.14)93 b(template)p Fo(<)p Fq(class)23
b(EV)m(O,)i(class)h(MUTFUNC)p Fo(>)g Fq(v)m(oid)g
(BEAST::GeneticAlgorithm)p Fo(<)564 432 y Fq(EV)m(O,)35
b(MUTFUNC)i Fo(>)p Fq(::SelectT)-8 b(ournamen)m(t)34
b(\(GENOTYPE)i(&)h Fe(chr)-5 b(omo)p Fq(\))564 532 y
Fi([protected,)39 b(inherited])150 732 y Fp(T)-7 b(ournamen)n(t)25
b(Selection)h(The)g(metho)r(d)g(implemen)n(ted)g(here)g(is)f(an)h
(amalgamation)e(of)i(t)n(w)n(o)f(sligh)n(tly)g(di\013eren)n(t)150
832 y(approac)n(hes.)150 979 y(GA)p 282 979 25 4 v 30
w(TOURNAMENT)p 939 979 V 30 w(SIZE)30 b(individuals)h(are)e(selected)i
(at)f(random)f(from)i(the)f(p)r(opulation.)46 b(With)31
b(GA)p 3622 979 V 30 w(-)150 1079 y(TOURNAMENT)p 782
1079 V 30 w(P)-7 b(ARAM)32 b(probabilit)n(y)-7 b(,)32
b(the)g(\014ttest)h(individual)e(is)h(pic)n(k)n(ed,)g(otherwise)f(a)g
(random)g(indi-)150 1178 y(vidual)c(\(p)r(erhaps)h(still)g(the)g
(\014ttest\))g(is)g(c)n(hosen)e(from)i(the)g(tournamen)n(t.)150
1441 y Fq(8.4.3.15)93 b(template)p Fo(<)p Fq(class)23
b(EV)m(O,)i(class)h(MUTFUNC)p Fo(>)g Fq(v)m(oid)g
(BEAST::GeneticAlgorithm)p Fo(<)564 1541 y Fq(EV)m(O,)31
b(MUTFUNC)i Fo(>)p Fq(::Setup)d(\(\))71 b Fi([protected,)39
b(inherited])150 1741 y Fp(Prepares)25 b(the)j(GA)g(for)g(the)g(next)f
(ep)r(o)r(c)n(h.)150 1888 y(Output)33 b(p)r(opulation)e(is)h(cleared,)g
(input)h(p)r(opulation)f(is)g(sorted)f(b)n(y)h(\014tness,)h(p)r
(opulation)f(probabilities)f(are)150 1988 y(set)d(according)d(to)j(the)
g(selection)f(metho)r(d)h(in)g(use,)g(the)g(c)n(hromosome)d(length)j
(is)f(determined,)h(etc.)150 2135 y(TODO:)f(p)r(erhaps)g(mak)n(e)g(c)n
(hromoLength)f(the)i(shortest)f(of)g(an)n(y)g(giv)n(en)g(pair?)150
2398 y Fq(8.4.3.16)93 b(template)p Fo(<)p Fq(class)41
b(EV)m(O,)j(class)f(MUTFUNC)p Fo(>)h Fq(std::string)564
2497 y(BEAST::GeneticAlgorithm)p Fo(<)31 b Fq(EV)m(O,)k(MUTFUNC)g
Fo(>)p Fq(::T)-8 b(oString)34 b(\(\))h(const)564 2597
y Fi([inherited])150 2797 y Fp(Returns)28 b(a)f(string)g(con)n(taining)
g(v)-5 b(arious)27 b(details)h(ab)r(out)g(the)g(GA's)g(curren)n(t)f
(state,)h(dep)r(ending)g(on)g(what)g(has)150 2897 y(b)r(een)g(set)g
(with)g(SetPrin)n(tSt)n(yle.)150 3044 y(Options)h(include:)41
b(GA)p 920 3044 V 30 w(P)-7 b(ARAMETERS:)29 b(prin)n(t)g(the)h(curren)n
(t)f(parameters)e(GA)p 2795 3044 V 30 w(CURRENT:)j(prin)n(t)f(stats)150
3144 y(for)39 b(the)h(curren)n(t)f(generation)f(GA)p
1295 3144 V 31 w(GENERA)-7 b(TION:)39 b(output)h(the)g(curren)n(t)f
(generation)f(GA)p 3247 3144 V 31 w(HISTOR)-7 b(Y:)150
3243 y(prin)n(t)27 b(the)h(history)f(of)h(a)n(v)n(erage)c(and)k(b)r
(est)g(\014tness)142 3456 y Fq(T)-8 b(o)s(do)311 3555
y Fp(store)27 b(time)h(data)p -358 5723 4034 4 v -192
5823 a Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 43 51
43 50 bop 150 70 a Fq(8.5)31 b(Sensors)g(and)h(Sensor)g(F)-8
b(unctions)2546 b(43)p 150 103 4034 4 v 150 333 a Fl(8.5)135
b(Sensors)45 b(and)g(Sensor)g(F)-11 b(unctions)150 562
y Fp(Sensors)31 b(are)g(set)h(up)h(to)f(pro)n(vide)f(maxim)n(um)h
(\015exibilit)n(y)-7 b(,)34 b(so)d(if)i(y)n(ou)f(need)g(a)g(new)g
(sensor)f(whic)n(h)h(isn't)h(that)150 661 y(di\013eren)n(t)28
b(to)f(existing)g(ones,)g(y)n(ou)g(will)h(need)g(to)f(write)h(a)f
(minim)n(um)h(of)g(co)r(de)f(to)h(put)g(that)g(sensor)e(together.)150
941 y Fj(Comp)s(ounds)275 1128 y Fk(\210)42 b Fp(class)26
b Fq(AreaSensor)476 1252 y Fg(Dete)l(cts)j(obje)l(cts)g(within)f(an)f
(ar)l(e)l(a)i(sp)l(e)l(ci\014e)l(d)g(by)f(the)g(size)g(and)g(shap)l(e)h
(of)e(the)i Ff(AreaSensor)p Fg(.)275 1452 y Fk(\210)42
b Fp(class)26 b Fq(BeamSensor)476 1576 y Fg(Be)l(amSensors)38
b(c)l(an)e(r)l(e)l(al)t(ly)g(b)l(e)g(thr)l(e)l(e)i(distinct)f(kinds)f
(of)f(sensor:)53 b(L)l(asers,)40 b(which)35 b(just)i(dete)l(ct)h(obje)l
(cts)f(a)476 1668 y(c)l(ertain)28 b(distanc)l(e)h(away)g(in)e(a)g(str)l
(aight)j(line)d(fr)l(om)g(the)h(sensor's)h(origin.)275
1867 y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5 b(alCoun)m(t)275
1975 y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5 b(alNearest)476
2100 y Fg(Ke)l(eps)28 b(a)g(tal)t(ly)f(of)h(the)g(ne)l(ar)l(est)i(p)l
(oint)e(p)l(asse)l(d)h(in)e(and)h(r)l(eturns)i(it)d(with)h(GetOutput.)
275 2299 y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5 b(alNearestAbsX)476
2423 y Fg(R)l(eturns)29 b(the)f(absolute)h(x)f(p)l(osition)g(of)g(the)g
(ne)l(ar)l(est)i(tar)l(get.)275 2623 y Fk(\210)42 b Fp(class)26
b Fq(Ev)-5 b(alNearestAbsY)476 2747 y Fg(R)l(eturns)29
b(the)f(absolute)h(y)f(p)l(osition)g(of)f(the)i(ne)l(ar)l(est)g(tar)l
(get.)275 2947 y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5
b(alNearestAngle)476 3071 y Fg(R)l(eturns)29 b(the)f(normalise)l(d)g
(angle)g(to)h(the)f(ne)l(ar)l(est)i(tar)l(get.)275 3271
y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5 b(alNearestSignal)476
3395 y Ff(Sensor)27 b Fg(evaluation)i(functor:)36 b(r)l(eturns)30
b(the)e(signal)g(of)f(the)h(ne)l(ar)l(est)i(individual.)275
3595 y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5 b(alNearestXDist)476
3719 y Fg(R)l(eturns)29 b(the)f(vertic)l(al)h(distanc)l(e)g(to)f(the)g
(ne)l(ar)l(est)i(tar)l(get.)275 3919 y Fk(\210)42 b Fp(class)26
b Fq(Ev)-5 b(alNearestYDist)476 4043 y Fg(R)l(eturns)29
b(the)f(horizontal)h(distanc)l(e)g(to)f(the)h(ne)l(ar)l(est)g(tar)l
(get.)275 4242 y Fk(\210)42 b Fp(struct)27 b Fq(Matc)m(hAdapter)476
4367 y Fg(A)n(l)t(lows)g(any)h(unary)g(pr)l(e)l(dic)l(ate)i(to)e(b)l(e)
g(adapte)l(d)h(for)f(use)g(as)g(a)g(matching)g(function.)275
4566 y Fk(\210)42 b Fp(struct)27 b Fq(Matc)m(hComp)s(oseAnd)476
4691 y Fg(Chains)g(any)h(numb)l(er)g(of)f(matching)i(functions)f(to)l
(gether)i(such)e(that)h(only)e(if)f(al)t(l)h(of)g(them)h(ar)l(e)g(true)
h(for)e(the)476 4782 y(obje)l(ct)h(b)l(eing)g(matche)l(d,)h
Ff(Matc)n(hComp)r(oseAnd)e Fg(wil)t(l)f(r)l(eturn)k(true.)275
4982 y Fk(\210)42 b Fp(struct)27 b Fq(Matc)m(hComp)s(oseOr)476
5106 y Fg(Chains)g(any)h(numb)l(er)h(of)e(matching)h(functions)h(to)l
(gether)h(such)e(that)h(should)f(any)g(of)g(them)g(b)l(e)g(true)g(for)g
(the)476 5198 y(obje)l(ct)g(b)l(eing)g(matche)l(d,)h
Ff(Matc)n(hComp)r(oseOr)f Fg(wil)t(l)e(r)l(eturn)j(true.)275
5397 y Fk(\210)42 b Fp(struct)27 b Fq(Matc)m(hExact)476
5522 y Fg(Identi\014es)e(exact)h(obje)l(ct)g(typ)l(es,)g(so)f(if)e
(de\014ne)l(d)j(with)e(Che)l(ese,)i(wil)t(l)d(r)l(eturn)k(true)e(only)g
(for)f(Che)l(ese,)i(and)f(false)476 5613 y(for)i(Che)l(ddar)i(and)f
(Gruy)n(\022)-37 b(er)l(e.)p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 44 52
44 51 bop -358 70 a Fq(44)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
275 448 a Fk(\210)42 b Fp(struct)27 b Fq(Matc)m(hKindOf)476
579 y Fg(Identi\014es)j(obje)l(cts)g(b)l(elonging)g(to)f(hier)l(ar)l
(chies,)i(so)e(if)f(de\014ne)l(d)j(with)e(Che)l(ese,)h(wil)t(l)e(r)l
(eturn)i(true)g(for)f(obje)l(cts)476 671 y(of)e(typ)l(e)i(Che)l(ese,)f
(or)g(derive)l(d)h(classes)g(such)f(as)g(Che)l(ddar)h(and)f(Gruy)n
(\022)-37 b(er)l(e.)275 877 y Fk(\210)42 b Fp(struct)27
b Fq(Matc)m(hSp)s(eci\014c)476 1009 y Fg(Identi\014es)h(one)g(p)l
(articular)h(obje)l(ct)g(and)f(r)l(eturns)h(true)g(only)f(for)f(that)i
(obje)l(ct.)275 1215 y Fk(\210)42 b Fp(struct)27 b Fq(ScaleAbs)476
1347 y Fg(R)l(eturns)i(the)f(absolute)h(value)f(of)g(the)g(input,)f(as)
h(for)g(the)g(std::abs)h(function.)275 1553 y Fk(\210)42
b Fp(struct)27 b Fq(ScaleAdapter)476 1685 y Fg(A)n(l)t(lows)g(any)h
(unary)g(functor)h(to)f(b)l(e)g(adapte)l(d)h(for)f(use)g(as)g(a)g(sc)l
(aling)g(function.)275 1891 y Fk(\210)42 b Fp(struct)27
b Fq(ScaleComp)s(ose)476 2023 y Ff(ScaleComp)r(ose)20
b Fg(al)t(lows)g(the)h(chaining)g(of)e(two)i(sc)l(aling)g(functions)f
(to)l(gether,)k(such)d(the)g(output)h(of)e(a)g Ff(Scale-)476
2114 y(Comp)r(ose)25 b Fg(functor)i(is)f(the)g(r)l(esult)h(of)f(se)l(c)
l(ond\(\014rst\(input\)\),)k(wher)l(e)d(\014rst)g(and)f(se)l(c)l(ond)i
(ar)l(e)e(the)h(ar)l(guments)476 2205 y(in)g(Sc)l(aleComp)l(ose's)i(c)l
(onstructor.)275 2412 y Fk(\210)42 b Fp(struct)27 b Fq(ScaleLinear)476
2543 y Fg(A)h(simple)g(line)l(ar)g(sc)l(aling)h(function)g(which)f
(defaults)h(to)g(an)g(input)f(sc)l(ale)h(b)l(etwe)l(en)i(0)d(and)h(a)f
(de\014ne)l(d)i(maxi-)476 2635 y(mum,)c(sc)l(aling)i(to)g(an)g(output)h
(r)l(ange)g(b)l(etwe)l(en)g(0)f(and)g(1.)275 2841 y Fk(\210)42
b Fp(struct)27 b Fq(ScaleNoise)476 2973 y Ff(ScaleNoise)h
Fg(adds)g(uniform)f(r)l(andom)i(noise)f(to)g(its)g(input.)275
3179 y Fk(\210)42 b Fp(struct)27 b Fq(ScaleThreshold)476
3311 y Ff(ScaleThreshold)e Fg(takes)h(values:)35 b(thr)l(eshold,)26
b(min)e(and)h(max)g(and)g(r)l(eturns)h(min)e(if)g(input)h
Fc(<)f Fg(thr)l(eshold,)i(or)476 3402 y(max)h(if)g(input)h
Fc(>)p Fg(=)f(thr)l(eshold.)275 3608 y Fk(\210)42 b Fp(class)26
b Fq(SelfSensor)476 3740 y Fg(The)h Ff(SelfSensor)i Fg(is)e(use)l(d)h
(to)h(dete)l(ct)g(information)f(ab)l(out)g(its)g(owner.)275
3946 y Fk(\210)42 b Fp(class)26 b Fq(Sensor)476 4078
y Fg(The)33 b Ff(Sensor)g Fg(class)h(is)f(the)h(b)l(ase)g(class)g(for)f
(al)t(l)f(the)i(di\013er)l(ent)h(typ)l(es)f(of)f(sensor:)48
b Ff(T)-7 b(ouc)n(hSensor)p Fg(,)33 b Ff(Self-)476 4169
y(Sensor)p Fg(,)27 b Ff(AreaSensor)h Fg(and)g Ff(BeamSensor)p
Fg(.)275 4376 y Fk(\210)42 b Fp(struct)27 b Fq(SensorEv)-5
b(alF)d(unction)476 4507 y Fg(A)n(bstr)l(act)30 b(b)l(ase)e(class)h
(for)e(evaluation)i(functors.)275 4714 y Fk(\210)42 b
Fp(struct)27 b Fq(SensorMatc)m(hF)-8 b(unction)476 4845
y Fg(A)n(bstr)l(act)30 b(b)l(ase)e(class)h(for)e(matching)h(functors.)
275 5052 y Fk(\210)42 b Fp(struct)27 b Fq(SensorScaleF)-8
b(unction)476 5184 y Fg(A)n(bstr)l(act)30 b(b)l(ase)e(class)h(for)e(sc)
l(aling)h(functors.)275 5390 y Fk(\210)42 b Fp(class)26
b Fq(T)-8 b(ouc)m(hSensor)476 5522 y Fg(Dete)l(cts)29
b(obje)l(cts)g(which)f(ar)l(e)g(touching)h(the)f(sensor's)h(owner.)p
-358 5723 V -192 5823 a Fn(Generated)d(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 45 53
45 52 bop 150 70 a Fq(8.5)31 b(Sensors)g(and)h(Sensor)g(F)-8
b(unctions)2546 b(45)p 150 103 4034 4 v 150 333 a Fj(En)m(umerations)
275 514 y Fk(\210)42 b Fp(en)n(um)30 b Fq(SelfSensorT)m(yp)s(e)f
Fh(f)h Fq(SELF)p 1565 514 29 4 v 35 w(SENSOR)p 1988 514
V 33 w(X)p Fp(,)g Fq(SELF)p 2379 514 V 35 w(SENSOR)p
2802 514 V 33 w(Y)p Fp(,)g Fq(SELF)p 3193 514 V 35 w(SENSOR)p
3616 514 V 33 w(-)358 614 y(ANGLE)p Fp(,)d Fq(SELF)p
989 614 V 35 w(SENSOR)p 1412 614 V 33 w(CONTR)m(OL)h
Fh(g)476 734 y Fg(A)n(n)f(enumer)l(ation)h(typ)l(e)h(for)e(SelfSensor,)
g(use)l(d)h(to)g(sp)l(e)l(cify)f(which)g(fe)l(atur)l(e)i(of)e(the)g
(sensor's)i(owner)f(is)f(to)g(b)l(e)476 825 y(r)l(eturne)l(d)j(by)d
(GetOutput\(\).)150 1192 y Fj(F)-9 b(unctions)275 1374
y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)26 b(T)p
Fo(>)g Fp(Sensor)h Fh(\003)f Fq(Pro)m(ximit)m(ySensor)h
Fp(\(double)g(scop)r(e,)g(double)g(range,)f(double)h(orien-)358
1473 y(tation\))476 1593 y Fg(Cr)l(e)l(ates)e(a)f(se)l(gment-shap)l(e)l
(d)j(sensor)e(with)e(the)h(sp)l(e)l(ci\014e)l(d)h(sc)l(op)l(e,)g(r)l
(ange)g(and)f(orientation)h(which)e(dete)l(cts)j(the)476
1685 y(distanc)l(e)j(of)e(obje)l(cts)i(of)e(the)h(sp)l(e)l(ci\014e)l(d)
h(template)l(d)g(typ)l(e.)275 1879 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(class)26 b(T)p Fo(>)h Fp(Sensor)g Fh(\003)g
Fq(NearestAngleSensor)f Fp(\(\))275 1982 y Fk(\210)42
b Fp(template)p Fo(<)p Fp(class)26 b(T)p Fo(>)h Fp(Sensor)g
Fh(\003)g Fq(NearestXSensor)g Fp(\(\))275 2085 y Fk(\210)42
b Fp(template)p Fo(<)p Fp(class)26 b(T)p Fo(>)h Fp(Sensor)g
Fh(\003)g Fq(NearestYSensor)g Fp(\(\))275 2189 y Fk(\210)42
b Fp(template)p Fo(<)p Fp(class)28 b(T)p Fo(>)i Fp(Sensor)e
Fh(\003)i Fq(Densit)m(ySensor)f Fp(\(double)h(scop)r(e,)g(double)g
(range,)f(double)h(orien)n(ta-)358 2288 y(tion\))275
2391 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)26
b(T)p Fo(>)h Fp(Sensor)g Fh(\003)g Fq(CollisionSensor)d
Fp(\(\))275 2495 y Fk(\210)42 b Fp(template)p Fo(<)p
Fp(class)p 940 2495 25 4 v 56 w(F)-7 b(unctor)p Fo(>)27
b Fp(Matc)n(hAdapter)p Fo(<)p 1965 2495 V 56 w Fp(F)-7
b(unctor)28 b Fo(>)f Fh(\003)g Fq(Matc)m(hAdapt)j Fp(\()p
3056 2495 V 30 w(F)-7 b(unctor)27 b(f)6 b(\))476 2614
y Fg(A)27 b(help)l(er)i(function)e(for)h(cr)l(e)l(ating)h
Ff(Matc)n(hAdapter)f Fg(functors.)275 2809 y Fk(\210)42
b Fp(template)p Fo(<)p Fp(class)26 b(T)p Fo(>)h Fp(Sensor)g
Fh(\003)g Fq(NearestSignalSensor)f Fp(\(in)n(t)i(highestSignal\))476
2929 y Fg(Constructs)d(and)d(r)l(eturns)i(a)f(p)l(ointer)g(to)g(a)f
(sensor)i(which)e(wil)t(l)f(r)l(eturn)j(the)f(signal)g(of)e(the)i(ne)l
(ar)l(est)i Ff(Signaller)476 3020 y Fg(of)i(the)h(sp)l(e)l(ci\014e)l(d)
h(typ)l(e.)275 3215 y Fk(\210)42 b Fp(ScaleAdapter)p
Fo(<)p 937 3215 V 56 w Fp(F)-7 b(unctor)27 b Fo(>)h Fh(\003)f
Fq(ScaleAdapt)h Fp(\()p 1972 3215 V 31 w(F)-7 b(unctor)27
b(f)6 b(\))476 3334 y Fg(A)27 b(help)l(er)i(function)e(for)h(cr)l(e)l
(ating)h Ff(ScaleAdapter)f Fg(functors.)150 3701 y Fj(V)-9
b(ariables)275 3883 y Fk(\210)42 b Fp(const)27 b(\015oat)g
Fq(SENSOR)p 1158 3883 29 4 v 33 w(ALPHA)i Fp(=)e(0.1f)476
4003 y Fg(T)-6 b(r)l(ansp)l(ar)l(ency)30 b(value)e(for)g(Sensors.)275
4197 y Fk(\210)42 b Fp(const)27 b(double)g Fq(BEAM)p
1142 4197 V 34 w(SENSOR)p 1564 4197 V 33 w(SCOPE)h Fp(=)f(PI/4)476
4317 y Fg(The)g(default)h(sc)l(op)l(e)h(for)f Ff(BeamSensor)p
Fg(.)275 4512 y Fk(\210)42 b Fp(const)27 b(double)g Fq(BEAM)p
1142 4512 V 34 w(SENSOR)p 1564 4512 V 33 w(RANGE)g Fp(=)h(250.0)476
4632 y Fg(The)f(default)h(r)l(ange)h(for)f Ff(BeamSensor)p
Fg(.)275 4826 y Fk(\210)42 b Fp(const)27 b(\015oat)g
Fq(BEAM)p 1064 4826 V 34 w(DRA)-11 b(W)p 1403 4826 V
34 w(QUALITY)29 b Fp(=)f(0.1f)476 4946 y Fg(The)f(default)h(dr)l(aw)h
(quality)f(for)f Ff(BeamSensor)p Fg(.)150 5313 y Fj(8.5.1)112
b(Detailed)37 b(Description)150 5513 y Fp(Sensors)31
b(are)g(set)h(up)h(to)f(pro)n(vide)f(maxim)n(um)h(\015exibilit)n(y)-7
b(,)34 b(so)d(if)i(y)n(ou)f(need)g(a)g(new)g(sensor)f(whic)n(h)h(isn't)
h(that)150 5613 y(di\013eren)n(t)28 b(to)f(existing)g(ones,)g(y)n(ou)g
(will)h(need)g(to)f(write)h(a)f(minim)n(um)h(of)g(co)r(de)f(to)h(put)g
(that)g(sensor)e(together.)p 150 5723 4034 4 v 150 5823
a Fn(Generated)g(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d
(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 46 54
46 53 bop -358 70 a Fq(46)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
150 333 a Fj(8.5.2)112 b(En)m(umeration)37 b(T)m(yp)s(e)h(Do)s(cumen)m
(tation)150 533 y Fq(8.5.2.1)93 b(en)m(um)31 b(BEAST::SelfSensorT)m(yp)
s(e)150 734 y Fp(An)c(en)n(umeration)e(t)n(yp)r(e)i(for)f
Fq(SelfSensor)p Fp(,)f(used)i(to)f(sp)r(ecify)h(whic)n(h)f(feature)g
(of)g(the)h(sensor's)e(o)n(wner)g(is)h(to)h(b)r(e)150
833 y(returned)g(b)n(y)g(GetOutput\(\).)142 1050 y Fq(En)m(umeration)j
(v)-5 b(alues:)311 1150 y(SELF)p 550 1150 29 4 v 35 w(SENSOR)p
973 1150 V 33 w(X)76 b Fp(Returns)28 b(the)g(x)f(co)r(ordinate)g(of)g
(the)h(o)n(wner.)311 1283 y Fq(SELF)p 550 1283 V 35 w(SENSOR)p
973 1283 V 33 w(Y)76 b Fp(Returns)28 b(the)g(y)f(co)r(ordinate)g(of)g
(the)h(o)n(wner.)311 1416 y Fq(SELF)p 550 1416 V 35 w(SENSOR)p
973 1416 V 33 w(ANGLE)76 b Fp(Returns)28 b(the)g(o)n(wner's)e(orien)n
(tation.)311 1548 y Fq(SELF)p 550 1548 V 35 w(SENSOR)p
973 1548 V 33 w(CONTR)m(OL)76 b Fp(Returns)28 b(a)f(con)n(trol)f(v)-5
b(alue,)28 b(sp)r(eci\014ed)f(in)h(constructor.)150 1828
y Fj(8.5.3)112 b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150
2028 y Fq(8.5.3.1)93 b(template)p Fo(<)p Fq(class)29
b(T)p Fo(>)j Fq(Sensor)p Fh(\003)f Fq(NearestSignalSensor)g(\(in)m(t)g
Fe(highestSignal)p Fq(\))150 2229 y Fp(Constructs)25
b(and)g(returns)g(a)g(p)r(oin)n(ter)g(to)g(a)g(sensor)f(whic)n(h)h
(will)h(return)f(the)h(signal)e(of)i(the)g(nearest)e
Fq(Signaller)150 2329 y Fp(of)k(the)g(sp)r(eci\014ed)f(t)n(yp)r(e.)142
2540 y Fq(P)m(arameters:)311 2640 y Fe(T)42 b Fp(The)28
b(t)n(yp)r(e)f(of)h(ob)5 b(ject)27 b(to)h(detect)g(\(m)n(ust)g(b)r(e)g
(deriv)n(ed)f(from)g Fq(Signaller)p Fp(\).)311 2773 y
Fe(highestSignal)42 b Fp(The)27 b(highest)h(v)-5 b(alue)27
b(a)g(signal)g(migh)n(t)h(tak)n(e,)f(for)g(scaling.)150
3119 y Fq(8.5.3.2)93 b(template)p Fo(<)p Fq(class)30
b(T)p Fo(>)j Fq(Sensor)p Fh(\003)f Fq(Pro)m(ximit)m(ySensor)g(\(double)
g Fe(sc)-5 b(op)g(e)p Fq(,)34 b(double)e Fe(r)-5 b(ange)p
Fq(,)516 3218 y(double)31 b Fe(orientation)p Fq(\))150
3419 y Fp(Creates)22 b(a)h(segmen)n(t-shap)r(ed)g(sensor)e(with)j(the)g
(sp)r(eci\014ed)g(scop)r(e,)g(range)e(and)h(orien)n(tation)f(whic)n(h)h
(detects)h(the)150 3519 y(distance)j(of)h(ob)5 b(jects)27
b(of)h(the)g(sp)r(eci\014ed)f(templated)h(t)n(yp)r(e.)142
3730 y Fq(P)m(arameters:)311 3830 y Fe(T)42 b Fp(The)28
b(t)n(yp)r(e)f(of)h(ob)5 b(jects)27 b(to)h(detect.)37
b(The)28 b Fq(Matc)m(hKindOf)g Fp(functor)f(is)h(used)f(b)n(y)h
(default.)311 3963 y Fe(sc)-5 b(op)g(e)43 b Fp(The)29
b(angle)f(within)i(whic)n(h)e(to)h(detect)g(ob)5 b(jects.)41
b(An)29 b(angle)f(of)h(0)f(ma)n(y)g(b)r(e)i(sp)r(eci\014ed)f(to)g
(create)e(a)494 4062 y('laser')g(t)n(yp)r(e)g(sensor,)g(or)f(an)i
(angle)e(of)i(TW)n(OPI)f(will)h(create)e(an)i(all-round)e(distance)h
(sensor.)p -358 5723 4034 4 v -192 5823 a Fn(Generated)f(on)f(Sun)f(F)
-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 47 55
47 54 bop 150 70 a Fq(8.6)31 b(Serialisation)f(Utilities)2905
b(47)p 150 103 4034 4 v 150 333 a Fl(8.6)135 b(Serialisation)48
b(Utilities)150 571 y Fp(Curren)n(tly)-7 b(,)34 b(the)h(simplest)e(w)n
(a)n(y)g(to)h(store)e(data)i(is)f(b)n(y)h(serialisation)e(-)h(simply)h
(sa)n(ving)e(and)i(loading)e(ob)5 b(ject)150 671 y(data)27
b(as)g(unformatted)h(text.)150 998 y Fj(Comp)s(ounds)275
1216 y Fk(\210)42 b Fp(struct)27 b Fq(extractor)476 1363
y Fg(This)33 b(is)h(a)g(function)g(obje)l(ct)h(which)f(c)l(an)g(b)l(e)h
(use)l(d)g(for)e(c)l(opying)i(fr)l(om)f(an)g(iter)l(ator)h(when)g(the)g
(numb)l(er)f(of)476 1454 y(input)28 b(values)g(is)f(unknown.)275
1676 y Fk(\210)42 b Fp(struct)27 b Fq(Ob)5 b(jLoader)476
1822 y Fg(A)27 b(functor)i(for)e(r)l(e)l(cr)l(e)l(ating)j(template)l(d)
f(obje)l(ct)g(typ)l(es)g(using)f(serialisation.)275 2044
y Fk(\210)42 b Fp(struct)27 b Fq(Ob)5 b(jLoaderBase)476
2191 y Fg(A)27 b(simple)g(abstr)l(act)j(b)l(ase)f(class)f(for)g
Ff(Ob)5 b(jLoader)28 b Fg(functors.)275 2412 y Fk(\210)42
b Fp(struct)27 b Fq(SerialException)476 2559 y Fg(Sinc)l(e)f(exc)l
(eptions)j(have)e(an)f(undesir)l(able)i(overhe)l(ad,)g(they)f(have)g
(not)g(b)l(e)l(en)g(use)l(d)g(elsewher)l(e)h(in)e(the)h(simula-)476
2650 y(tion)g(envir)l(onment)i(for)f(r)l(e)l(asons)i(of)d(sp)l(e)l(e)l
(d.)275 2871 y Fk(\210)42 b Fp(struct)27 b Fq(switc)m(her)476
3018 y Fg(The)g(switcher)i(is)f(useful)f(when)h(c)l(on\014guring)h(b)l
(o)l(ols)g(fr)l(om)e(string)h(data.)275 3239 y Fk(\210)42
b Fp(class)26 b Fq(Unserialiser)476 3386 y Fg(This)21
b(class)h(is)f(available)g(for)g(unserialising)g(obje)l(cts)i(fr)l(om)e
(str)l(e)l(ams,)j(without)e(knowing)f(which)h(typ)l(e)g(of)f(obje)l(ct)
476 3477 y(is)27 b(to)h(b)l(e)g(unserialise)l(d)h(-)f(the)g(typ)l(e)h
(is)e(determine)l(d)i(fr)l(om)e(the)i(he)l(ader)g(of)e(the)h(str)l(e)l
(am.)150 3896 y Fj(De\014nes)275 4114 y Fk(\210)42 b
Fp(#de\014ne)28 b Fq(IMPLEMENT)p 1280 4114 29 4 v 34
w(IOSTREAM)p 1839 4114 V 34 w(CAST)p Fp(\()p 2164 4114
25 4 v 30 w(T)n(y)-7 b(,)p 2340 4114 V 58 w(Cast\))476
4261 y Fg(Use)31 b(this)g(macr)l(o)g(to)g(cr)l(e)l(ate)i(a)d(custom)i
(output)g(op)l(er)l(ator)h(which)e(simply)f(c)l(asts)p
2875 4261 24 4 v 60 w(T)-6 b(y)31 b(to)g(the)h(typ)l(e)f(sp)l(e)l
(ci\014e)l(d)476 4352 y(by)p 580 4352 V 56 w(Cast.)275
4574 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IMPLEMENT)p
1280 4574 29 4 v 34 w(IOSTREAM)p 1839 4574 V 34 w(BINAR)-8
b(Y)p 2260 4574 V 34 w(CONVERSION)p Fp(\()p 2984 4574
25 4 v 29 w(T)n(y\))476 4720 y Fg(This)31 b(macr)l(o)g(is)g(intende)l
(d)h(as)g(a)f(quick)h(solution)f(to)h(the)g(pr)l(oblem)g(of)e(enc)l(o)l
(ding)i(structs)i(and)d(classes)i(into)476 4812 y(output)c(str)l(e)l
(ams.)275 5033 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IMPLEMENT)p
1280 5033 29 4 v 34 w(SERIALISA)-8 b(TION)p Fp(\()p 2100
5033 25 4 v 31 w(Name,)p 2391 5033 V 57 w(P)n(aren)n(t\))476
5180 y Fg(Use)21 b(this)f(macr)l(o)h(to)g(add)g(b)l(asic)g
(serialisation)g(functionality)g(to)g(your)g(derive)l(d)g(classes)h(by)
f(simply)f(serialising)476 5271 y(under)28 b(a)g(new)g(name,)f(but)h
(using)g(the)h(p)l(ar)l(ent)g(serialisation)f(metho)l(ds.)275
5492 y Fk(\210)42 b Fp(#de\014ne)i Fq(IMPLEMENT)p 1296
5492 29 4 v 34 w(LO)m(ADER)p Fp(\()p 1767 5492 25 4 v
30 w(Name,)p 2078 5492 V 78 w(T)n(yp)r(e\))g
(Unserialiser::Instance\(\).Add\()p 3418 5492 V 29 w(Name,)358
5592 y(new)27 b(Ob)5 b(jLoader)p Fo(<)p 991 5592 V 28
w Fp(T)n(yp)r(e)p Fo(>)p Fp(\(\)\);)p 150 5723 4034 4
v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 48 56
48 55 bop -358 70 a Fq(48)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
150 333 a Fj(En)m(umerations)275 525 y Fk(\210)42 b Fp(en)n(um)27
b Fq(SerialErrorT)m(yp)s(e)i Fh(f)358 663 y Fq(SERIAL)p
717 663 29 4 v 34 w(ERR)m(OR)p 1099 663 V 33 w(UNKNO)m(WN)p
Fp(,)155 b Fq(SERIAL)p 2204 663 V 34 w(ERR)m(OR)p 2586
663 V 33 w(BAD)p 2832 663 V 35 w(FILE)p Fp(,)h Fq(SERIAL)p
3615 663 V 34 w(-)358 762 y(ERR)m(OR)p 712 762 V 33 w(WR)m(ONG)p
1135 762 V 33 w(TYPE)p Fp(,)28 b Fq(SERIAL)p 1838 762
V 35 w(ERR)m(OR)p 2221 762 V 33 w(UNKNO)m(WN)p 2795 762
V 34 w(TYPE)p Fp(,)358 900 y Fq(SERIAL)p 717 900 V 34
w(ERR)m(OR)p 1099 900 V 33 w(D)m(A)-8 b(T)g(A)p 1396
900 V 36 w(MISMA)g(TCH)27 b Fh(g)476 1029 y Fg(Enumer)l(ates)i(the)g
(di\013er)l(ent)f(typ)l(es)i(of)d(err)l(ors)i(enc)l(ounter)l(e)l(d)i
(in)c(serialisation.)150 1409 y Fj(F)-9 b(unctions)275
1602 y Fk(\210)42 b Fp(std::string)27 b Fq(add)p 909
1602 V 35 w(slashes)f Fp(\(const)i(std::string)f(&str\))275
1714 y Fk(\210)42 b Fp(std::string)27 b Fq(strip)p 951
1714 V 34 w(slashes)f Fp(\(const)i(std::string)f(&str\))275
1827 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)p 940
1827 25 4 v 56 w(Iterator)p Fo(>)26 b Fp(extractor)p
Fo(<)p 1764 1827 V 55 w Fp(Iterator)g Fo(>)h Fq(extract)j
Fp(\()p 2550 1827 V 30 w(Iterator)c(&Iter\))476 1956
y Fg(Constructs)k(and)e(r)l(eturns)h(an)f(extr)l(actor)j(of)c(the)h(c)l
(orr)l(e)l(ct)i(typ)l(e.)275 2159 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(class)p 952 2159 V 68 w(InIt,)i(class)p 1394
2159 V 69 w(OutIt)p Fo(>)p 1734 2159 V 70 w Fp(InIt)c
Fq(cop)m(y)p 2133 2159 29 4 v 36 w(from)e Fp(\()p 2435
2159 25 4 v 31 w(OutIt)p 2711 2159 V 70 w(First,)p 2982
2159 V 73 w(OutIt)p 3257 2159 V 70 w(Last,)p 3512 2159
V 73 w(InIt)p 358 2259 V 382 2259 a(Src\))476 2388 y
Fg(A)n(n)28 b(algorithm)g(similar)f(to)i(c)l(opy,)g(but)f(wher)l(e)h
(the)g(start)h(and)f(end)f(of)g(the)h(tar)l(get)h(r)l(ange)f(is)f(sp)l
(e)l(ci\014e)l(d)h(r)l(ather)476 2479 y(than)f(the)h(sour)l(c)l(e)g(r)l
(ange.)275 2683 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)p
946 2683 V 62 w(OutIt)p Fo(>)33 b Fp(std::istream)g(&)h
Fq(cop)m(y)p 2028 2683 29 4 v 35 w(from)p 2260 2683 V
33 w(istream)e Fp(\()p 2668 2683 25 4 v 30 w(OutIt)p
2937 2683 V 64 w(First,)p 3200 2683 V 65 w(OutIt)p 3469
2683 V 64 w(Last,)358 2783 y(std::istream)27 b(&in\))476
2912 y Fg(A)n(lthough)33 b(extr)l(act)j(and)d(c)l(opy)p
1365 2912 24 4 v 29 w(fr)l(om)g(should,)h(with)e(the)i(help)f(of)f
(istr)l(e)l(am)p 2654 2912 V 30 w(iter)l(ator,)j(b)l(e)e(able)g(to)g
(\014l)t(l)f(r)l(anges)476 3003 y(fr)l(om)j(input)h(str)l(e)l(ams,)j(c)
l(ertain)e(di\016culties)e(with)h(istr)l(e)l(ams)h(arise)f(which)g
(make)g(the)h(c)l(opy)p 3227 3003 V 29 w(fr)l(om)p 3410
3003 V 28 w(istr)l(e)l(am)476 3094 y(function)28 b(useful.)275
3298 y Fk(\210)42 b Fp(std::istream)27 b(&)g Fq(op)s(erator)p
Fo(>>)g Fp(\(std::istream)g(&in,)h(switc)n(her)f(s\))476
3427 y Fg(Input)h(op)l(er)l(ator)i(for)d(the)h(switcher)h(help)l(er)g
(obje)l(ct.)275 3631 y Fk(\210)42 b Fp(template)p Fo(<)p
Fp(t)n(yp)r(ename)p 1123 3631 25 4 v 54 w(T)n(y)-7 b(,)26
b(t)n(yp)r(ename)p 1675 3631 V 55 w(Ax)p Fo(>)f Fp(std::ostream)f(&)h
Fq(op)s(erator)p Fo(<<)f Fp(\(std::ostream)g(&out,)358
3730 y(const)j(std::v)n(ector)p Fo(<)p 1051 3730 V 56
w Fp(T)n(y)-7 b(,)p 1226 3730 V 57 w(Ax)28 b Fo(>)f Fp(&v\))476
3859 y Fg(A)33 b(generic)i(output)g(op)l(er)l(ator)h(for)d(ve)l(ctors,)
k(r)l(e)l(quir)l(es)f(the)e(ve)l(ctor's)i(c)l(ontents)f(typ)l(e)g(to)f
(have)h(its)f(own)g Fc(<<)476 3951 y Fg(op)l(er)l(ator.)275
4154 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)p
1134 4154 V 65 w(T)n(y)-7 b(,)38 b(t)n(yp)r(ename)p 1709
4154 V 65 w(Ax)p Fo(>)e Fp(std::istream)g(&)f Fq(op)s(erator)p
Fo(>>)g Fp(\(std::istream)h(&in,)358 4254 y(std::v)n(ector)p
Fo(<)p 834 4254 V 56 w Fp(T)n(y)-7 b(,)p 1009 4254 V
57 w(Ax)28 b Fo(>)f Fp(&v\))476 4383 y Fg(A)36 b(generic)h(input)f(op)l
(er)l(ator)j(for)d(ve)l(ctors,)k(r)l(e)l(quir)l(es)e(the)f(ve)l(ctor's)
h(c)l(ontents)h(typ)l(e)e(to)g(have)g(its)f(own)h Fc(>>)476
4474 y Fg(op)l(er)l(ator.)275 4678 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)p 1136 4678 V 67 w(T)n(y)-7
b(,)40 b(t)n(yp)r(ename)p 1715 4678 V 68 w(Pr,)f(t)n(yp)r(ename)p
2288 4678 V 68 w(Allo)r(c)p Fo(>)e Fp(std::ostream)g(&)h
Fq(op)s(erator)p Fo(<<)358 4778 y Fp(\(std::ostream)26
b(&out,)i(const)f(std::map)p Fo(<)g Fp(std::string,)p
2142 4778 V 57 w(T)n(y)-7 b(,)p 2317 4778 V 58 w(Pr,)p
2486 4778 V 56 w(Allo)r(c)28 b Fo(>)f Fp(&m\))476 4907
y Fg(A)d(sp)l(e)l(cialise)l(d)i(output)g(op)l(er)l(ator)h(for)d(maps)h
(with)g(key)g(typ)l(e)h(string,)g(which)e(uses)i(add)p
2966 4907 24 4 v 29 w(slashes)g(to)f(enc)l(o)l(de)h(the)476
4998 y(string.)275 5202 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)p 1138 5202 25 4 v 69 w(T)n(y)-7
b(,)43 b(t)n(yp)r(ename)p 1722 5202 V 70 w(Pr,)f(t)n(yp)r(ename)p
2300 5202 V 70 w(Allo)r(c)p Fo(>)e Fp(std::istream)f(&)h
Fq(op)s(erator)p Fo(>>)358 5301 y Fp(\(std::istream)27
b(&in,)g(const)h(std::map)p Fo(<)f Fp(std::string,)p
2072 5301 V 57 w(T)n(y)-7 b(,)p 2248 5301 V 57 w(Pr,)p
2417 5301 V 57 w(Allo)r(c)28 b Fo(>)f Fp(&m\))476 5430
y Fg(A)e(sp)l(e)l(cialise)l(d)h(input)g(op)l(er)l(ator)i(for)d(maps)h
(with)g(key)g(typ)l(e)h(string,)f(which)g(uses)g(strip)p
2971 5430 24 4 v 29 w(slashes)h(to)f(de)l(c)l(o)l(de)h(the)476
5522 y(string.)p -358 5723 4034 4 v -192 5823 a Fn(Generated)f(on)f
(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 49 57
49 56 bop 150 70 a Fq(8.6)31 b(Serialisation)f(Utilities)2905
b(49)p 150 103 4034 4 v 275 333 a Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)p 1127 333 25 4 v 58 w(Kt)n(y)-7
b(,)28 b(t)n(yp)r(ename)p 1721 333 V 58 w(T)n(y)-7 b(,)28
b(t)n(yp)r(ename)p 2279 333 V 59 w(Pr,)g(t)n(yp)r(ename)p
2831 333 V 58 w(Allo)r(c)p Fo(>)g Fp(std::ostream)f(&)358
432 y Fq(op)s(erator)p Fo(<<)f Fp(\(std::ostream)h(&out,)h(const)f
(std::map)p Fo(<)p 2239 432 V 57 w Fp(Kt)n(y)-7 b(,)p
2451 432 V 57 w(T)n(y)g(,)p 2626 432 V 57 w(Pr,)p 2796
432 V 57 w(Allo)r(c)28 b Fo(>)f Fp(&m\))476 557 y Fg(A)g(generic)i
(output)g(op)l(er)l(ator)h(for)d(maps,)h(r)l(e)l(quir)l(es)h(the)f
(map's)g(c)l(ontents)i(to)e(have)g(its)g(own)g Fc(<<)f
Fg(op)l(er)l(ator.)275 757 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)p 1129 757 V 60 w(Kt)n(y)-7
b(,)30 b(t)n(yp)r(ename)p 1727 757 V 60 w(T)n(y)-7 b(,)31
b(t)n(yp)r(ename)p 2289 757 V 60 w(Pr,)f(t)n(yp)r(ename)p
2846 757 V 60 w(Allo)r(c)p Fo(>)h Fp(std::istream)e(&)358
857 y Fq(op)s(erator)p Fo(>>)d Fp(\(std::istream)i(&in,)f(std::map)p
Fo(<)p 1953 857 V 58 w Fp(Kt)n(y)-7 b(,)p 2165 857 V
57 w(T)n(y)g(,)p 2340 857 V 57 w(Pr,)p 2510 857 V 57
w(Allo)r(c)27 b Fo(>)h Fp(&m\))476 981 y Fg(A)f(generic)i(input)f(op)l
(er)l(ator)i(for)d(maps,)h(r)l(e)l(quir)l(es)h(the)f(map's)g(c)l
(ontents)i(to)e(have)g(its)g(own)g Fc(>>)f Fg(op)l(er)l(ator.)275
1181 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(T1,)g(t)n(yp)r(ename)h(T2)p Fo(>)e Fp(T1)h(&)h Fq(stream)p
2360 1181 29 4 v 33 w(con)m(v)m(ert)h Fp(\(T2)f(&input\))476
1306 y Fg(A)n(n)f(inline)g(r)l(einterpr)l(et)j(c)l(ast)f(which)f(may)f
(b)l(e)h(helpful)f(in)h(outputting)h(enumer)l(ation)g(typ)l(es)g(to)f
(str)l(e)l(ams.)150 1678 y Fj(8.6.1)112 b(Detailed)37
b(Description)150 1879 y Fp(Curren)n(tly)-7 b(,)34 b(the)h(simplest)e
(w)n(a)n(y)g(to)h(store)e(data)i(is)f(b)n(y)h(serialisation)e(-)h
(simply)h(sa)n(ving)e(and)i(loading)e(ob)5 b(ject)150
1978 y(data)27 b(as)g(unformatted)h(text.)150 2125 y(T)-7
b(o)33 b(mak)n(e)g(it)i(easier)d(for)h(y)n(ou)g(to)h(implemen)n(t)g
(serialisation)e(for)h(y)n(our)g(o)n(wn)g(classes,)h(a)g(range)e(of)i
(functions,)150 2225 y(classes)26 b(and)i(macros)e(are)g(pro)n(vided.)
150 2505 y Fj(8.6.2)112 b(De\014ne)39 b(Do)s(cumen)m(tation)150
2706 y Fq(8.6.2.1)93 b(#de\014ne)31 b(IMPLEMENT)p 1487
2706 V 34 w(IOSTREAM)p 2046 2706 V 34 w(BINAR)-8 b(Y)p
2467 2706 V 34 w(CONVERSION\()p 3197 2706 V 33 w(T)m(y\))150
2907 y(V)g(alue:)150 3116 y Fd(inline)37 b(std::ostream&)i
(operator<<\(std::ostream)q(&)i(out,)c(_Ty&)f(i\))71
b(\\)150 3195 y({)2082 b(\\)291 3274 y(out.write\(reinterpret_c)q(ast)q
(<cha)q(r*>)q(\(&i\))q(,)41 b(sizeof\(i\)\);)215 b(\\)291
3353 y(return)37 b(out;)1589 b(\\)150 3432 y(})2082 b(\\)2267
3511 y(\\)150 3590 y(inline)37 b(std::istream&)i
(operator>>\(std::istream)q(&)i(in,)36 b(_Ty&)h(i\))106
b(\\)150 3669 y({)2082 b(\\)291 3747 y(in.read\(reinterpret_cas)q(t<c)q
(har*)q(>\(&)q(i\),)42 b(sizeof\(i\)\);)285 b(\\)291
3826 y(return)37 b(in;)1624 b(\\)150 3905 y(})150 4136
y Fp(This)34 b(macro)g(is)g(in)n(tended)h(as)e(a)h(quic)n(k)g(solution)
g(to)h(the)f(problem)g(of)h(enco)r(ding)f(structs)g(and)g(classes)f(in)
n(to)150 4235 y(output)28 b(streams.)150 4382 y(A)21
b(binary)e(con)n(v)n(ersion)f(is)i(p)r(erformed,)h(meaning)f(that)g(an)
n(y)g(p)r(oin)n(ters)f(and)h(complex)g(data)g(t)n(yp)r(es)g(\(e.g.)34
b(v)n(ectors\))150 4482 y(will)h(b)r(e)h(rendered)e(nonsensical)f(to)i
(the)h(input)f(op)r(erator.)57 b(Only)35 b(for)f(use)h(on)g(simple)g
(structs)g(and)f(classes)150 4581 y(con)n(taining)h(non-p)r(oin)n(ter)f
(t)n(yp)r(es.)61 b(Also,)38 b(output)e(pro)r(duced)f(b)n(y)h(these)g
(functions)g(is)f(unlik)n(ely)g(to)h(transfer)150 4681
y(b)r(et)n(w)n(een)25 b(platforms)g(due)g(to)h(di\013ering)f(n)n(um)n
(b)r(er)g(formats.)35 b(This)25 b(is)h(only)e(a)h(temp)r(orary)f
(solution)h(and)g(should)150 4781 y(b)r(e)j(replaced)f(with)h(sp)r
(ecial)f(input/output)h(op)r(erators.)150 5045 y Fq(8.6.2.2)93
b(#de\014ne)31 b(IMPLEMENT)p 1487 5045 V 34 w(IOSTREAM)p
2046 5045 V 34 w(CAST\()p 2377 5045 V 35 w(T)m(y)-8 b(,)p
2576 5045 V 67 w(Cast\))150 5245 y(V)g(alue:)150 5455
y Fd(inline)37 b(std::ostream&)i(operator<<\(std::ostream)q(&)i(out,)c
(_Ty&)f(i\))71 b(\\)150 5534 y({)2082 b(\\)291 5613 y(out)36
b(<<)g(static_cast<_Cast>\(i\);)959 b(\\)p 150 5723 4034
4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 50 58
50 57 bop -358 70 a Fq(50)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
291 333 a Fd(return)37 b(out;)1589 b(\\)150 412 y(})2082
b(\\)2267 490 y(\\)150 569 y(inline)37 b(std::istream&)i
(operator>>\(std::istream)q(&)i(in,)36 b(_Ty&)h(i\))106
b(\\)150 648 y({)2082 b(\\)291 727 y(_Cast)37 b(input;)1554
b(\\)291 806 y(in)36 b(>>)g(input;)1554 b(\\)291 885
y(i)36 b(=)f(static_cast<_Ty>\(input)q(\);)994 b(\\)291
964 y(return)37 b(in;)1624 b(\\)150 1042 y(})150 1300
y Fp(Use)30 b(this)h(macro)d(to)i(create)g(a)f(custom)h(output)h(op)r
(erator)e(whic)n(h)h(simply)g(casts)p 2772 1300 25 4
v 59 w(T)n(y)g(to)g(the)g(t)n(yp)r(e)h(sp)r(eci\014ed)150
1400 y(b)n(y)p 270 1400 V 57 w(Cast.)150 1547 y(Useful)d(for)f(con)n(v)
n(erting)f(en)n(um)i(t)n(yp)r(es)f(to)h(in)n(ts)f(whic)n(h)h(ma)n(y)f
(then)h(b)r(e)g(input)g(and)g(output)g(in)g(the)g(usual)f(w)n(a)n(y)-7
b(.)150 1850 y Fq(8.6.2.3)93 b(#de\014ne)31 b(IMPLEMENT)p
1487 1850 29 4 v 34 w(SERIALISA)-8 b(TION\()p 2313 1850
V 35 w(Name,)p 2651 1850 V 65 w(P)m(aren)m(t\))150 2058
y(V)g(alue:)150 2295 y Fd(public:)2154 b(\\)291 2374
y(void)37 b(Serialise\(std::ostream&)k(out\)const)920
b(\\)291 2453 y({)2223 b(\\)432 2532 y(out)36 b(<<)g(_Name)h(<<)f
("\\n";)1377 b(\\)432 2611 y(_Parent::Serialise\(out)q(\);)1276
b(\\)291 2690 y(})2223 b(\\)2549 2768 y(\\)291 2847 y(void)37
b(Unserialise\(std::istream&)42 b(in\))1059 b(\\)291
2926 y({)2223 b(\\)432 3005 y(std::string)39 b(name;)1518
b(\\)432 3084 y(in)36 b(>>)g(name;)1730 b(\\)432 3163
y(if)36 b(\(name)h(!=)f(_Name\))h({)1411 b(\\)573 3242
y(throw)37 b(SerialException\(SERIAL_)q(ERR)q(OR_W)q(RON)q(G_TY)q(PE,)
42 b(name,)142 b(\\)856 3321 y(std::string\("This)40
b(object)d(is)f(type)g("\))g(+)g(_Name\);)107 b(\\)432
3399 y(})2082 b(\\)432 3478 y(_Parent::Unserialise\(i)q(n\);)1241
b(\\)291 3557 y(})150 3815 y Fp(Use)24 b(this)h(macro)e(to)i(add)f
(basic)g(serialisation)e(functionalit)n(y)j(to)f(y)n(our)f(deriv)n(ed)h
(classes)f(b)n(y)h(simply)h(serialising)150 3915 y(under)i(a)h(new)f
(name,)h(but)g(using)f(the)h(paren)n(t)f(serialisation)f(metho)r(ds.)
150 4234 y Fj(8.6.3)112 b(En)m(umeration)37 b(T)m(yp)s(e)h(Do)s(cumen)m
(tation)150 4443 y Fq(8.6.3.1)93 b(en)m(um)31 b(BEAST::SerialErrorT)m
(yp)s(e)150 4651 y Fp(En)n(umerates)26 b(the)i(di\013eren)n(t)g(t)n(yp)
r(es)f(of)h(errors)d(encoun)n(tered)i(in)h(serialisation.)142
4891 y Fq(En)m(umeration)i(v)-5 b(alues:)311 4991 y(SERIAL)p
670 4991 V 35 w(ERR)m(OR)p 1053 4991 V 33 w(UNKNO)m(WN)75
b Fp(An)28 b(unkno)n(wn)f(problem.)311 5142 y Fq(SERIAL)p
670 5142 V 35 w(ERR)m(OR)p 1053 5142 V 33 w(BAD)p 1299
5142 V 35 w(FILE)76 b Fp(Unable)28 b(to)f(op)r(en)h(or)e(write)i(to)f
(the)h(\014le.)311 5294 y Fq(SERIAL)p 670 5294 V 35 w(ERR)m(OR)p
1053 5294 V 33 w(WR)m(ONG)p 1476 5294 V 34 w(TYPE)76
b Fp(Incoming)27 b(data)g(has)g(the)h(wrong)f(t)n(yp)r(e)g(lab)r(el.)
311 5445 y Fq(SERIAL)p 670 5445 V 35 w(ERR)m(OR)p 1053
5445 V 33 w(UNKNO)m(WN)p 1627 5445 V 34 w(TYPE)76 b Fp(Incoming)27
b(data)g(has)g(an)h(unkno)n(wn)f(t)n(yp)r(e)h(lab)r(el.)311
5597 y Fq(SERIAL)p 670 5597 V 35 w(ERR)m(OR)p 1053 5597
V 33 w(D)m(A)-8 b(T)g(A)p 1350 5597 V 36 w(MISMA)g(TCH)76
b Fp(The)22 b(wrong)g(t)n(yp)r(e)g(of)h(data)f(seems)g(to)h(b)r(e)g
(coming)f(in.)p -358 5723 4034 4 v -192 5823 a Fn(Generated)k(on)f(Sun)
f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 51 59
51 58 bop 150 70 a Fq(8.6)31 b(Serialisation)f(Utilities)2905
b(51)p 150 103 4034 4 v 150 333 a Fj(8.6.4)112 b(F)-9
b(unction)37 b(Do)s(cumen)m(tation)150 533 y Fq(8.6.4.1)93
b(template)p Fo(<)p Fq(class)p 1177 533 29 4 v 65 w(InIt,)33
b(class)p 1657 533 V 66 w(OutIt)p Fo(>)p 2024 533 V 67
w Fq(InIt)h(cop)m(y)p 2444 533 V 35 w(from)d(\()p 2744
533 V 35 w(OutIt)p 3047 533 30 4 v 68 w Fe(First)p Fq(,)p
3345 533 29 4 v 67 w(OutIt)p 516 633 30 4 v 545 633 a
Fe(L)-5 b(ast)p Fq(,)p 784 633 29 4 v 67 w(InIt)p 1013
633 30 4 v 67 w Fe(Sr)g(c)p Fq(\))150 833 y Fp(An)30
b(algorithm)d(similar)i(to)g(cop)n(y)-7 b(,)28 b(but)i(where)f(the)g
(start)f(and)h(end)h(of)f(the)g(target)f(range)g(is)h(sp)r(eci\014ed)g
(rather)150 933 y(than)f(the)g(source)e(range.)150 1080
y(F)-7 b(or)20 b(example,)h(to)f(cop)n(y)f(from)h(a)g(v)n(ector)e(of)j
(unkno)n(wn)e(length)h(in)n(to)g(a)g(range)f(of)h(kno)n(wn)f(length:)34
b Fi(vector)p Fo(<)p Fi(int)p Fo(>)150 1179 y Fi(target\(30\);)39
b(vector)p Fo(<)p Fi(int)p Fo(>)g Fi(source\(rand\(100\))e(+)43
b(30\);)f(copy)p 2465 1179 27 4 v 30 w(from\(target.begi)o(n\()o(\),)
150 1279 y(target.end\(\),)c(source.begin\(\)\);)142
1453 y Fq(See)31 b(also:)311 1552 y(extract)f Fp(for)d(another)f(w)n(a)
n(y)h(of)g(doing)g(exactly)g(the)h(same)f(thing.)150
1852 y Fq(8.6.4.2)93 b(template)p Fo(<)p Fq(class)p 1178
1852 29 4 v 66 w(OutIt)p Fo(>)33 b Fq(std::istream&)e(cop)m(y)p
2335 1852 V 35 w(from)p 2567 1852 V 33 w(istream)h(\()p
2981 1852 V 35 w(OutIt)p 3285 1852 30 4 v 69 w Fe(First)p
Fq(,)p 516 1952 29 4 v 545 1952 a(OutIt)p 818 1952 30
4 v 67 w Fe(L)-5 b(ast)p Fq(,)32 b(std::istream)d(&)j
Fe(in)p Fq(\))150 2152 y Fp(Although)g(extract)g(and)g(cop)n(y)p
1148 2152 25 4 v 28 w(from)g(should,)h(with)g(the)f(help)h(of)f
(istream)p 2563 2152 V 29 w(iterator,)g(b)r(e)g(able)g(to)g(\014ll)h
(ranges)150 2252 y(from)39 b(input)h(streams,)i(certain)c
(di\016culties)i(with)g(istreams)f(arise)f(whic)n(h)h(mak)n(e)g(the)g
(cop)n(y)p 3184 2252 V 29 w(from)p 3382 2252 V 30 w(istream)150
2351 y(function)28 b(useful.)150 2498 y(Simply)g(sp)r(ecify)h(the)f
(start)f(and)h(end)g(iterators)f(of)g(the)i(range)d(to)i(b)r(e)h
(\014lled)f(and)g(an)f(input)i(stream)e(to)h(use)g(as)150
2598 y(the)g(source.)150 2856 y Fq(8.6.4.3)93 b(template)p
Fo(<)p Fq(class)p 1176 2856 29 4 v 64 w(Iterator)p Fo(>)32
b Fq(extractor)p Fo(<)p 2081 2856 V 36 w Fq(Iterator)p
Fo(>)g Fq(extract)i(\()p 2906 2856 V 34 w(Iterator)f(&)f
Fe(Iter)p Fq(\))150 3056 y Fp(Constructs)27 b(and)g(returns)g(an)h
(extractor)d(of)j(the)g(correct)e(t)n(yp)r(e.)150 3203
y(F)-7 b(or)20 b(example,)h(to)f(cop)n(y)f(from)h(a)g(v)n(ector)e(of)j
(unkno)n(wn)e(length)h(in)n(to)g(a)g(range)f(of)h(kno)n(wn)f(length:)34
b Fi(vector)p Fo(<)p Fi(int)p Fo(>)150 3303 y Fi(target\(30\);)39
b(vector)p Fo(<)p Fi(int)p Fo(>)g Fi(source\(rand\(100\))e(+)43
b(30\);)f(generate\(target.)o(beg)o(in)o(\(\),)150 3402
y(target.end\(\),)c(extract\(source.be)o(gi)o(n\(\))o(\)\))o(;)142
3576 y Fq(See)31 b(also:)311 3675 y(extractor)150 3975
y(8.6.4.4)93 b(template)p Fo(<)p Fq(t)m(yp)s(ename)p
1393 3975 V 63 w(Kt)m(y)-8 b(,)33 b(t)m(yp)s(ename)p
2076 3975 V 65 w(T)m(y)-8 b(,)33 b(t)m(yp)s(ename)p 2715
3975 V 65 w(Pr,)f(t)m(yp)s(ename)p 3351 3975 V 66 w(Allo)s(c)p
Fo(>)516 4075 y Fq(std::ostream&)e(op)s(erator)p Fo(<<)h
Fq(\(std::ostream)f(&)i Fe(out)p Fq(,)g(const)g(std::map)p
Fo(<)p 3245 4075 V 64 w Fq(Kt)m(y)-8 b(,)p 3490 4075
V 67 w(T)m(y)g(,)p 516 4174 V 545 4174 a(Pr,)p 713 4174
V 66 w(Allo)s(c)31 b Fo(>)g Fq(&)h Fe(m)p Fq(\))72 b
Fi([inline])150 4375 y Fp(A)28 b(generic)f(output)h(op)r(erator)e(for)h
(maps,)g(requires)f(the)i(map's)f(con)n(ten)n(ts)g(to)h(ha)n(v)n(e)e
(its)i(o)n(wn)f Fo(<<)g Fp(op)r(erator.)150 4522 y(The)h(size)f(is)g
(output,)i(follo)n(w)n(ed)d(b)n(y)h(eac)n(h)g(k)n(ey)g(and)h(v)-5
b(alue,)27 b(separated)f(b)n(y)i(spaces.)150 4780 y Fq(8.6.4.5)93
b(template)p Fo(<)p Fq(t)m(yp)s(ename)p 1393 4780 V 64
w(T)m(y)-8 b(,)34 b(t)m(yp)s(ename)p 2034 4780 V 66 w(Pr,)f(t)m(yp)s
(ename)p 2672 4780 V 67 w(Allo)s(c)p Fo(>)e Fq(std::ostream&)516
4879 y(op)s(erator)p Fo(<<)j Fq(\(std::ostream)e(&)i
Fe(out)p Fq(,)g(const)h(std::map)p Fo(<)c Fq(std::string,)p
3124 4879 V 68 w(T)m(y)-8 b(,)p 3326 4879 V 70 w(Pr,)p
516 4979 V 545 4979 a(Allo)s(c)31 b Fo(>)g Fq(&)h Fe(m)p
Fq(\))71 b Fi([inline])150 5179 y Fp(A)24 b(sp)r(ecialised)g(output)h
(op)r(erator)d(for)h(maps)h(with)h(k)n(ey)e(t)n(yp)r(e)h(string,)h
(whic)n(h)f(uses)f(add)p 2896 5179 25 4 v 30 w(slashes)g(to)h(enco)r
(de)g(the)150 5279 y(string.)142 5461 y Fq(See)31 b(also:)311
5560 y(add)p 469 5560 29 4 v 35 w(slashes)p 150 5723
4034 4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 52 60
52 59 bop -358 70 a Fq(52)362 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Mo)s(dule)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
150 333 a(8.6.4.6)93 b(template)p Fo(<)p Fq(t)m(yp)s(ename)p
1396 333 29 4 v 67 w(T)m(y)-8 b(,)37 b(t)m(yp)s(ename)p
2042 333 V 69 w(Ax)p Fo(>)f Fq(std::ostream&)d(op)s(erator)p
Fo(<<)516 432 y Fq(\(std::ostream)c(&)j Fe(out)p Fq(,)f(const)h(std::v)
m(ector)p Fo(<)p 2185 432 V 66 w Fq(T)m(y)-8 b(,)p 2384
432 V 67 w(Ax)32 b Fo(>)g Fq(&)g Fe(v)p Fq(\))71 b Fi([inline])150
633 y Fp(A)36 b(generic)f(output)i(op)r(erator)d(for)i(v)n(ectors,)g
(requires)f(the)h(v)n(ector's)f(con)n(ten)n(ts)g(t)n(yp)r(e)i(to)e(ha)n
(v)n(e)g(its)h(o)n(wn)g Fo(<<)150 732 y Fp(op)r(erator.)150
879 y(The)28 b(size)f(is)g(output,)i(follo)n(w)n(ed)d(b)n(y)h(eac)n(h)g
(en)n(try)-7 b(,)27 b(separated)g(b)n(y)g(spaces.)150
1142 y Fq(8.6.4.7)93 b(template)p Fo(<)p Fq(t)m(yp)s(ename)p
1393 1142 V 63 w(Kt)m(y)-8 b(,)33 b(t)m(yp)s(ename)p
2076 1142 V 65 w(T)m(y)-8 b(,)33 b(t)m(yp)s(ename)p 2715
1142 V 65 w(Pr,)f(t)m(yp)s(ename)p 3351 1142 V 66 w(Allo)s(c)p
Fo(>)516 1242 y Fq(std::istream&)f(op)s(erator)p Fo(>>)i
Fq(\(std::istream)f(&)i Fe(in)p Fq(,)f(std::map)p Fo(<)p
2914 1242 V 66 w Fq(Kt)m(y)-8 b(,)p 3161 1242 V 69 w(T)m(y)g(,)p
3363 1242 V 69 w(Pr,)p 516 1342 V 545 1342 a(Allo)s(c)31
b Fo(>)g Fq(&)h Fe(m)p Fq(\))71 b Fi([inline])150 1542
y Fp(A)28 b(generic)f(input)h(op)r(erator)e(for)h(maps,)g(requires)f
(the)i(map's)g(con)n(ten)n(ts)f(to)g(ha)n(v)n(e)g(its)g(o)n(wn)g
Fo(>>)g Fp(op)r(erator.)150 1689 y(The)h(size)f(is)g(read,)g(follo)n(w)
n(ed)g(b)n(y)g(eac)n(h)g(k)n(ey)g(and)g(v)-5 b(alue.)150
1952 y Fq(8.6.4.8)93 b(template)p Fo(<)p Fq(t)m(yp)s(ename)p
1396 1952 V 67 w(T)m(y)-8 b(,)38 b(t)m(yp)s(ename)p 2043
1952 V 69 w(Ax)p Fo(>)e Fq(std::istream&)d(op)s(erator)p
Fo(>>)516 2052 y Fq(\(std::istream)c(&)j Fe(in)p Fq(,)f(std::v)m(ector)
p Fo(<)p 1865 2052 V 66 w Fq(T)m(y)-8 b(,)p 2064 2052
V 67 w(Ax)32 b Fo(>)g Fq(&)g Fe(v)p Fq(\))71 b Fi([inline])150
2252 y Fp(A)40 b(generic)e(input)i(op)r(erator)e(for)h(v)n(ectors,)h
(requires)e(the)i(v)n(ector's)e(con)n(ten)n(ts)h(t)n(yp)r(e)g(to)g(ha)n
(v)n(e)g(its)g(o)n(wn)g Fo(>>)150 2352 y Fp(op)r(erator.)150
2499 y(The)28 b(size)f(is)g(input,)i(follo)n(w)n(ed)d(b)n(y)i(eac)n(h)f
(en)n(try)-7 b(.)150 2762 y Fq(8.6.4.9)93 b(std::istream&)29
b(op)s(erator)p Fo(>>)i Fq(\(std::istream)f(&)i Fe(in)p
Fq(,)e(switc)m(her)i Fe(s)p Fq(\))72 b Fi([inline])150
2962 y Fp(Input)28 b(op)r(erator)e(for)h(the)h(switc)n(her)f(help)r(er)
h(ob)5 b(ject.)150 3109 y(Note)32 b(that)g(unlik)n(e)f(most)h(input)h
(op)r(erators,)d(this)j(one)e(do)r(es)g(not)h(tak)n(e)f(a)g(reference)g
(to)h(the)g(switc)n(her,)g(since)150 3209 y(the)c(switc)n(her)f(is)g
(in)n(tended)h(for)f(instan)n(tiation)g(at)h(the)g(time)g(of)g(input.)
150 3472 y Fq(8.6.4.10)93 b(template)p Fo(<)p Fq(t)m(yp)s(ename)28
b(T1,)j(t)m(yp)s(ename)g(T2)p Fo(>)g Fq(T1&)h(stream)p
2766 3472 V 33 w(con)m(v)m(ert)h(\(T2)f(&)g Fe(input)p
Fq(\))564 3571 y Fi([inline])150 3772 y Fp(An)c(inline)g(rein)n
(terpret)f(cast)g(whic)n(h)g(ma)n(y)g(b)r(e)h(helpful)h(in)e
(outputting)i(en)n(umeration)d(t)n(yp)r(es)i(to)f(streams.)150
3919 y(Probaly)d(b)r(etter)j(to)f(use)f(IMPLEMENT)p 1480
3919 25 4 v 29 w(IOSTREAM)p 1966 3919 V 30 w(CAST)h(or)f(ideally)-7
b(,)26 b(write)g(y)n(our)f(o)n(wn)g(input/output)150
4018 y(op)r(erators)h(for)h(y)n(our)f(t)n(yp)r(es.)p
-358 5723 4034 4 v -192 5823 a Fn(Generated)g(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 53 61
53 60 bop 150 1003 a Fm(Chapter)65 b(9)150 1465 y Fr(BEAST)77
b(-)h(Bioinspired)150 1714 y(Ev)-6 b(olutionary)76 b(Agen)-6
b(t)78 b(Sim)-6 b(ulation)150 1963 y(T)-19 b(o)6 b(olkit)77
b(Namespace)150 2212 y(Do)6 b(cumen)-6 b(tation)150 2741
y Fl(9.1)135 b(BEAST)44 b(Namespace)i(Reference)150 2971
y Fp(The)28 b(namespace)e(for)h(ev)n(erything)g(in)h(the)g(sim)n
(ulation)f(en)n(vironmen)n(t.)150 3257 y Fj(Comp)s(ounds)275
3448 y Fk(\210)42 b Fp(class)26 b Fq(Animat)476 3575
y Fg(A)n(nimats)i(c)l(an)g(move)g(ar)l(ound)g(and)g(inter)l(act)i(with)
d(other)i(obje)l(cts)g(in)e(the)i(world.)275 3777 y Fk(\210)42
b Fp(class)26 b Fq(AnimatMonitor)275 3888 y Fk(\210)42
b Fp(class)26 b Fq(AreaSensor)476 4015 y Fg(Dete)l(cts)j(obje)l(cts)g
(within)f(an)f(ar)l(e)l(a)i(sp)l(e)l(ci\014e)l(d)g(by)f(the)g(size)g
(and)g(shap)l(e)h(of)e(the)i Ff(AreaSensor)p Fg(.)275
4217 y Fk(\210)42 b Fp(class)26 b Fq(auto)p 742 4217
29 4 v 35 w(indexed)p 1101 4217 V 34 w(p)s(oin)m(ter)p
1436 4217 V 34 w(prop)s(ert)m(y)275 4328 y Fk(\210)42
b Fp(class)26 b Fq(auto)p 742 4328 V 35 w(indexed)p 1101
4328 V 34 w(prop)s(ert)m(y)275 4439 y Fk(\210)42 b Fp(class)26
b Fq(auto)p 742 4439 V 35 w(p)s(oin)m(ter)p 1078 4439
V 34 w(prop)s(ert)m(y)275 4550 y Fk(\210)42 b Fp(class)26
b Fq(auto)p 742 4550 V 35 w(prop)s(ert)m(y)275 4660 y
Fk(\210)42 b Fp(class)26 b Fq(Bacterium)275 4771 y Fk(\210)42
b Fp(class)26 b Fq(BeamSensor)476 4899 y Fg(Be)l(amSensors)38
b(c)l(an)e(r)l(e)l(al)t(ly)g(b)l(e)g(thr)l(e)l(e)i(distinct)f(kinds)f
(of)f(sensor:)53 b(L)l(asers,)40 b(which)35 b(just)i(dete)l(ct)h(obje)l
(cts)f(a)476 4990 y(c)l(ertain)28 b(distanc)l(e)h(away)g(in)e(a)g(str)l
(aight)j(line)d(fr)l(om)g(the)h(sensor's)h(origin.)275
5192 y Fk(\210)42 b Fp(struct)27 b Fq(b)s(ound)p 867
5192 V 34 w(mem)p 1107 5192 V 31 w(fun)p 1273 5192 V
35 w(t)476 5319 y Fg(A)e(functor)h(which)f(cr)l(e)l(ates)j(a)d(unary)h
(function)g(fr)l(om)e(a)i(unary)g(memb)l(er)g(function,)f(binding)g(an)
h(instanc)l(e)g(of)476 5411 y(the)i(class)g(to)g(which)g(the)h
(function)e(b)l(elongs.)275 5613 y Fk(\210)42 b Fp(class)26
b Fq(call)p 700 5613 V 34 w(on)p 835 5613 V 35 w(mem)p
1076 5613 V 31 w(t)p eop
%%Page: 54 62
54 61 bop -358 70 a Fq(54)211 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Namespace)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
476 333 a Fg(A)n(l)t(lows)f(us)g(to)h(bind)f(functors)i(so)f(that)g
(they)g(work)g(on)g(p)l(articular)g(memb)l(ers)h(of)e(classes,)h
(useful)f(for)h(using)476 424 y(for)p 576 424 24 4 v
28 w(e)l(ach)e(on)g(maps.)275 623 y Fk(\210)42 b Fp(class)26
b Fq(Collisions)275 730 y Fk(\210)42 b Fp(struct)27 b
Fq(creator)476 854 y Fg(A)g(functor)h(for)g(use)g(with)g(the)g(for)p
1479 854 V 28 w(e)l(ach)g(algorithm)g(which)g(c)l(an)g(p)l(erform)g(cr)
l(e)l(ation)h(of)e(obje)l(cts)i(when)f(c)l(al)t(le)l(d)476
945 y(on)f(a)h(c)l(ontainer)h(of)e(p)l(ointers.)275 1144
y Fk(\210)42 b Fp(struct)27 b Fq(deleter)476 1268 y Fg(A)g(functor)i
(for)f(use)g(with)g(the)h(for)p 1481 1268 V 28 w(e)l(ach)g(algorithm)f
(which)g(c)l(an)g(p)l(erform)h(deletion)f(of)f(obje)l(cts)i(when)g(c)l
(al)t(le)l(d)476 1359 y(on)e(a)h(c)l(ontainer)h(of)e(p)l(ointers.)275
1558 y Fk(\210)42 b Fp(class)26 b Fq(Distribution)476
1682 y Fg(Implements)h(a)h(grid)g(which)g(stor)l(es)h(sp)l(atial)f
(density)h(information)e(to)h(a)g(sp)l(e)l(ci\014e)l(d)h(r)l
(esolution,)f(e.g.)275 1881 y Fk(\210)42 b Fp(struct)27
b Fq(Distribution::Kernel)476 2005 y Fg(Implements)g(di\013usion)h(and)
g(other)h(neighb)l(ourho)l(o)l(d)h(op)l(er)l(ations.)275
2204 y Fk(\210)42 b Fp(class)26 b Fq(DNNAnimat)476 2328
y Fg(A)n(n)k Ff(Animat)h Fg(with)f(a)g(built-in)g(dynamic)l(al)h
(network)h(which)e(is)g(automatic)l(al)t(ly)h(c)l(on\014gur)l(e)l(d)h
(dep)l(ending)g(on)476 2419 y(the)c(A)n(nimat's)g(sensor)h(and)f(c)l
(ontr)l(ol)g(c)l(on\014gur)l(ation.)275 2618 y Fk(\210)42
b Fp(class)26 b Fq(Dra)m(w)m(able)275 2725 y Fk(\210)42
b Fp(class)26 b Fq(DynamicalNet)476 2849 y Fg(This)h(class)h
(implements)g(a)g(ful)t(ly)e(r)l(e)l(curr)l(ent)31 b(c)l(ontinuous)e
(\(or)f(dynamic)l(al\))g(neur)l(al)g(network.)275 3048
y Fk(\210)42 b Fp(struct)27 b Fq(DynamicalNet::Neuron)476
3172 y Fg(Unlike)34 b(the)i Ff(F)-7 b(eedF)g(orw)n(ardNet)p
Fg(,)34 b(the)i Ff(Neuron)f Fg(in)f Ff(DynamicalNet)i
Fg(is)e(mor)l(e)i(worthy)g(of)e(its)h(name,)476 3263
y(sinc)l(e)28 b(ne)l(arly)g(al)t(l)f(the)h(pr)l(o)l(c)l(essing)i(of)d
(the)i(DNN's)e(\014ring)h(algorithm)g(o)l(c)l(curs)h(her)l(e.)275
3462 y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5 b(alCoun)m(t)275
3569 y Fk(\210)42 b Fp(struct)27 b Fq(Ev)-5 b(alDensit)m(y)275
3677 y Fk(\210)42 b Fp(struct)27 b Fq(Ev)-5 b(alGradien)m(t)275
3784 y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5 b(alNearest)476
3908 y Fg(Ke)l(eps)28 b(a)g(tal)t(ly)f(of)h(the)g(ne)l(ar)l(est)i(p)l
(oint)e(p)l(asse)l(d)h(in)e(and)h(r)l(eturns)i(it)d(with)h(GetOutput.)
275 4107 y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5 b(alNearestAbsX)476
4231 y Fg(R)l(eturns)29 b(the)f(absolute)h(x)f(p)l(osition)g(of)g(the)g
(ne)l(ar)l(est)i(tar)l(get.)275 4429 y Fk(\210)42 b Fp(class)26
b Fq(Ev)-5 b(alNearestAbsY)476 4553 y Fg(R)l(eturns)29
b(the)f(absolute)h(y)f(p)l(osition)g(of)f(the)i(ne)l(ar)l(est)g(tar)l
(get.)275 4752 y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5
b(alNearestAngle)476 4876 y Fg(R)l(eturns)29 b(the)f(normalise)l(d)g
(angle)g(to)h(the)f(ne)l(ar)l(est)i(tar)l(get.)275 5075
y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5 b(alNearestSignal)476
5199 y Ff(Sensor)27 b Fg(evaluation)i(functor:)36 b(r)l(eturns)30
b(the)e(signal)g(of)f(the)h(ne)l(ar)l(est)i(individual.)275
5398 y Fk(\210)42 b Fp(class)26 b Fq(Ev)-5 b(alNearestXDist)476
5522 y Fg(R)l(eturns)29 b(the)f(vertic)l(al)h(distanc)l(e)g(to)f(the)g
(ne)l(ar)l(est)i(tar)l(get.)p -358 5723 4034 4 v -192
5823 a Fn(Generated)c(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 55 63
55 62 bop 150 70 a Fq(9.1)31 b(BEAST)h(Namespace)f(Reference)2519
b(55)p 150 103 4034 4 v 275 333 a Fk(\210)42 b Fp(class)26
b Fq(Ev)-5 b(alNearestYDist)476 456 y Fg(R)l(eturns)29
b(the)f(horizontal)h(distanc)l(e)g(to)f(the)h(ne)l(ar)l(est)g(tar)l
(get.)275 654 y Fk(\210)42 b Fp(class)26 b Fq(Ev)m(oDNNAnimat)476
778 y Fg(A)n(n)h(evolvable)i(version)f(of)g Ff(DNNAnimat)f
Fg(with)h(GetGenotyp)l(e/SetGenotyp)l(e)34 b(metho)l(ds)29
b(alr)l(e)l(ady)g(set)f(up.)275 976 y Fk(\210)42 b Fp(class)26
b Fq(Ev)m(oFFNAnimat)476 1099 y Fg(A)n(n)h(evolvable)i(version)f(of)g
Ff(FFNAnimat)f Fg(with)g(GetGenotyp)l(e/SetGenotyp)m(e)33
b(metho)l(ds)c(alr)l(e)l(ady)g(set)g(up.)275 1298 y Fk(\210)42
b Fp(class)26 b Fq(Ev)m(olv)m(er)275 1404 y Fk(\210)42
b Fp(struct)27 b Fq(extractor)476 1528 y Fg(This)33 b(is)h(a)g
(function)g(obje)l(ct)h(which)f(c)l(an)g(b)l(e)h(use)l(d)g(for)e(c)l
(opying)i(fr)l(om)f(an)g(iter)l(ator)h(when)g(the)g(numb)l(er)f(of)476
1619 y(input)28 b(values)g(is)f(unknown.)275 1817 y Fk(\210)42
b Fp(class)26 b Fq(F)-8 b(eedF)g(orw)m(ardNet)476 1941
y Fg(This)27 b(is)g(an)h(implementation)g(of)f(a)h(simple)f(two-layer)i
(fe)l(e)l(d-forwar)l(d)h(neur)l(al)e(network.)275 2139
y Fk(\210)42 b Fp(struct)27 b Fq(F)-8 b(eedF)g(orw)m(ardNet::Neuron)476
2263 y Fg(This)24 b(memb)l(er)h(struct)i(simply)d(enc)l(apsulates)j
(the)e(weighte)l(d)h(sum)e(function)h(which)g(has)g(to)g(b)l(e)g(p)l
(erforme)l(d)h(on)476 2354 y(the)i(weights)h(of)e(e)l(ach)h(no)l(de)h
(when)f(the)g(net)g(\014r)l(es.)275 2552 y Fk(\210)42
b Fp(class)26 b Fq(FFNAnimat)476 2675 y Fg(A)n(n)e Ff(Animat)h
Fg(with)f(a)h(built-in)f(fe)l(e)l(d-forwar)l(d)i(network)g(which)e(is)g
(automatic)l(al)t(ly)i(c)l(on\014gur)l(e)l(d)g(dep)l(ending)g(on)476
2767 y(the)i(A)n(nimat's)g(sensor)h(and)f(c)l(ontr)l(ol)g(c)l
(on\014gur)l(ation.)275 2965 y Fk(\210)42 b Fp(struct)27
b Fq(Gaussian2D)476 3088 y Fg(Plots)h(a)f(two-dimensional)i(Gaussian)g
(function)e(in)h(a)f(distribution)i(or)f(distribution)h(kernel.)275
3287 y Fk(\210)42 b Fp(struct)27 b Fq(GaussianNoise)476
3410 y Fg(Plots)h(normal)t(ly)f(distribute)l(d)j(noise)e(in)f(a)g
(distribution.)275 3608 y Fk(\210)42 b Fp(struct)27 b
Fq(GaussianRing2D)476 3732 y Fg(Plots)h(a)f(two)i(dimensional)e
(Gaussian)i(ring.)275 3930 y Fk(\210)42 b Fp(struct)27
b Fq(GA)-11 b(V)j(arian)m(t)476 4053 y Fg(This)25 b(is)h(a)f(gener)l
(al)i(purp)l(ose)h(data)e(typ)l(e)h(which)f(takes)h(\014ve)f(b)l(asic)g
(data)h(typ)l(es:)36 b(int,)25 b(\015o)l(at,)i(double,)f(char)g(and)476
4145 y(b)l(o)l(ol.)275 4343 y Fk(\210)42 b Fp(union)27
b Fq(GA)-11 b(V)j(arian)m(t::V)g(arian)m(tData)476 4466
y Fg(Union)27 b(of)g(\014ve)h(data)h(typ)l(es)g(for)f
Ff(GA)-10 b(V)j(arian)n(t)p Fg(.)275 4665 y Fk(\210)42
b Fp(class)26 b Fq(GeneticAlgorithm)476 4788 y Fg(The)g
Ff(GeneticAlgorithm)j Fg(class)d(pr)l(ovides)h(functionality)g(to)f(c)l
(over)h(a)f(r)l(ange)i(of)d(GA)h(metho)l(ds,)h(and)g(may)476
4879 y(b)l(e)h(extende)l(d)i(to)e(inc)l(orp)l(or)l(ate)i(other)f(appr)l
(o)l(aches.)275 5077 y Fk(\210)42 b Fp(struct)27 b Fq
(GeneticAlgorithm::ev)m(o)p 1551 5077 29 4 v 31 w(sort)476
5201 y Fg(A)g(little)h(function)f(obje)l(ct)i(to)f(enable)g(us)g(to)g
(sort)h(the)g(p)l(opulation)f(by)g(\014tness.)275 5399
y Fk(\210)42 b Fp(struct)27 b Fq(GetSim)m(ulation)275
5506 y Fk(\210)42 b Fp(struct)27 b Fq(GetSim)m(ulationBase)275
5613 y Fk(\210)42 b Fp(class)26 b Fq(Group)p 150 5723
4034 4 v 150 5823 a Fn(Generated)g(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 56 64
56 63 bop -358 70 a Fq(56)211 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Namespace)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
476 333 a Fg(A)k(simple)g(class)h(which)f(cr)l(e)l(ates)j(and)d
(maintains)h(a)f(ve)l(ctor)i(of)e(obje)l(cts)i(of)e(the)h(sp)l(e)l
(ci\014e)l(d)h(typ)l(e)f(and)g(adds)476 424 y(them)28
b(to)g(the)g(world)g(e)l(ach)h(r)l(ound.)275 628 y Fk(\210)42
b Fp(struct)27 b Fq(LimitDistribution)275 740 y Fk(\210)42
b Fp(struct)27 b Fq(Matc)m(hAdapter)476 869 y Fg(A)n(l)t(lows)g(any)h
(unary)g(pr)l(e)l(dic)l(ate)i(to)e(b)l(e)g(adapte)l(d)h(for)f(use)g(as)
g(a)g(matching)g(function.)275 1072 y Fk(\210)42 b Fp(struct)27
b Fq(Matc)m(hComp)s(oseAnd)476 1201 y Fg(Chains)g(any)h(numb)l(er)g(of)
f(matching)i(functions)f(to)l(gether)i(such)e(that)h(only)e(if)f(al)t
(l)h(of)g(them)h(ar)l(e)g(true)h(for)e(the)476 1292 y(obje)l(ct)h(b)l
(eing)g(matche)l(d,)h Ff(Matc)n(hComp)r(oseAnd)e Fg(wil)t(l)f(r)l
(eturn)k(true.)275 1496 y Fk(\210)42 b Fp(struct)27 b
Fq(Matc)m(hComp)s(oseOr)476 1625 y Fg(Chains)g(any)h(numb)l(er)h(of)e
(matching)h(functions)h(to)l(gether)h(such)e(that)h(should)f(any)g(of)g
(them)g(b)l(e)g(true)g(for)g(the)476 1716 y(obje)l(ct)g(b)l(eing)g
(matche)l(d,)h Ff(Matc)n(hComp)r(oseOr)f Fg(wil)t(l)e(r)l(eturn)j
(true.)275 1920 y Fk(\210)42 b Fp(struct)27 b Fq(Matc)m(hExact)476
2048 y Fg(Identi\014es)e(exact)h(obje)l(ct)g(typ)l(es,)g(so)f(if)e
(de\014ne)l(d)j(with)e(Che)l(ese,)i(wil)t(l)d(r)l(eturn)k(true)e(only)g
(for)f(Che)l(ese,)i(and)f(false)476 2140 y(for)i(Che)l(ddar)i(and)f
(Gruy)n(\022)-37 b(er)l(e.)275 2343 y Fk(\210)42 b Fp(struct)27
b Fq(Matc)m(hKindOf)476 2472 y Fg(Identi\014es)j(obje)l(cts)g(b)l
(elonging)g(to)f(hier)l(ar)l(chies,)i(so)e(if)f(de\014ne)l(d)j(with)e
(Che)l(ese,)h(wil)t(l)e(r)l(eturn)i(true)g(for)f(obje)l(cts)476
2563 y(of)e(typ)l(e)i(Che)l(ese,)f(or)g(derive)l(d)h(classes)g(such)f
(as)g(Che)l(ddar)h(and)f(Gruy)n(\022)-37 b(er)l(e.)275
2767 y Fk(\210)42 b Fp(struct)27 b Fq(Matc)m(hSp)s(eci\014c)476
2896 y Fg(Identi\014es)h(one)g(p)l(articular)h(obje)l(ct)g(and)f(r)l
(eturns)h(true)g(only)f(for)f(that)i(obje)l(ct.)275 3099
y Fk(\210)42 b Fp(struct)27 b Fq(MutationOp)s(erator)275
3212 y Fk(\210)42 b Fp(struct)27 b Fq(MutationOp)s(erator)p
Fo(<)k Fq(b)s(o)s(ol)f Fo(>)476 3340 y Fg(Sp)l(e)l(cialise)l(d)e
Ff(MutationOp)r(erator)j Fg(for)d(b)l(o)l(ol,)f(simply)g(NOT's)g(its)h
(input.)275 3544 y Fk(\210)42 b Fp(struct)27 b Fq(MutationOp)s(erator)p
Fo(<)k Fq(GA)-11 b(V)j(arian)m(t)34 b Fo(>)476 3673 y
Fg(This)d(sp)l(e)l(cialise)l(d)i(mutation)g(op)l(er)l(ator)h(pr)l
(ovides)f(the)g(facilities)e(of)g(the)i(b)l(asic)g Ff(MutationOp)r
(erator)i Fg(for)476 3764 y Ff(GA)-10 b(V)j(arian)n(t)p
Fg(.)275 3968 y Fk(\210)42 b Fp(struct)27 b Fq(NormalMutator)275
4080 y Fk(\210)42 b Fp(struct)27 b Fq(Ob)5 b(jLoader)476
4209 y Fg(A)27 b(functor)i(for)e(r)l(e)l(cr)l(e)l(ating)j(template)l(d)
f(obje)l(ct)g(typ)l(es)g(using)f(serialisation.)275 4412
y Fk(\210)42 b Fp(struct)27 b Fq(Ob)5 b(jLoaderBase)476
4541 y Fg(A)27 b(simple)g(abstr)l(act)j(b)l(ase)f(class)f(for)g
Ff(Ob)5 b(jLoader)28 b Fg(functors.)275 4745 y Fk(\210)42
b Fp(class)26 b Fq(p)s(oin)m(ter)p 859 4745 29 4 v 34
w(prop)s(ert)m(y)275 4857 y Fk(\210)42 b Fp(class)26
b Fq(P)m(opulation)476 4986 y Fg(This)31 b(class)g(is)g(derive)l(d)h
(fr)l(om)f Ff(Group)h Fg(and)g(adds)g(a)f(manage)l(d)h(GA)f(which)g(is)
g(automatic)l(al)t(ly)h(run)g(on)f(the)476 5077 y(whole)c
Ff(P)n(opulation)j Fg(every)f(ep)l(o)l(ch.)275 5280 y
Fk(\210)42 b Fp(struct)27 b Fq(P)m(opulation::Clone)476
5409 y Fg(Use)l(d)h(by)g Ff(P)n(opulation)i Fg(to)e(cr)l(e)l(ate)h(a)f
(clone)g(of)f(an)h(individual.)275 5613 y Fk(\210)42
b Fp(struct)27 b Fq(P)m(opulation::UnClone)p -358 5723
4034 4 v -192 5823 a Fn(Generated)f(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 57 65
57 64 bop 150 70 a Fq(9.1)31 b(BEAST)h(Namespace)f(Reference)2519
b(57)p 150 103 4034 4 v 476 333 a Fg(Mer)l(ges)23 b(two)f(individuals)f
(such)h(that)h(the)f(r)l(esulting)h(individual's)e(\014tness)i(sc)l(or)
l(es)g(wil)t(l)d(c)l(ontain)j(al)t(l)e(the)h(sc)l(or)l(es)476
424 y(of)27 b(b)l(oth)i(individuals.)275 624 y Fk(\210)42
b Fp(class)26 b Fq(prop)s(ert)m(y)476 749 y Fg(Class)38
b(wr)l(app)l(er)h(for)e(a)h(memb)l(er)g(variable)h(which)e(al)t(lows)h
(memb)l(er)g(data)h(to)f(b)l(e)g(exp)l(ose)l(d)i(with)d(invisible)476
840 y(get/set)29 b(semantics.)275 1040 y Fk(\210)42 b
Fp(class)26 b Fq(PSO)m(Algorithm)275 1149 y Fk(\210)42
b Fp(struct)27 b Fq(Ring2D)476 1274 y Fg(Plots)h(a)f(two)i(dimensional)
e(ring.)275 1473 y Fk(\210)42 b Fp(struct)27 b Fq(ScaleAbs)476
1599 y Fg(R)l(eturns)i(the)f(absolute)h(value)f(of)g(the)g(input,)f(as)
h(for)g(the)g(std::abs)h(function.)275 1798 y Fk(\210)42
b Fp(struct)27 b Fq(ScaleAdapter)476 1924 y Fg(A)n(l)t(lows)g(any)h
(unary)g(functor)h(to)f(b)l(e)g(adapte)l(d)h(for)f(use)g(as)g(a)g(sc)l
(aling)g(function.)275 2123 y Fk(\210)42 b Fp(struct)27
b Fq(ScaleComp)s(ose)476 2248 y Ff(ScaleComp)r(ose)20
b Fg(al)t(lows)g(the)h(chaining)g(of)e(two)i(sc)l(aling)g(functions)f
(to)l(gether,)k(such)d(the)g(output)h(of)e(a)g Ff(Scale-)476
2340 y(Comp)r(ose)25 b Fg(functor)i(is)f(the)g(r)l(esult)h(of)f(se)l(c)
l(ond\(\014rst\(input\)\),)k(wher)l(e)d(\014rst)g(and)f(se)l(c)l(ond)i
(ar)l(e)e(the)h(ar)l(guments)476 2431 y(in)g(Sc)l(aleComp)l(ose's)i(c)l
(onstructor.)275 2631 y Fk(\210)42 b Fp(struct)27 b Fq(ScaleGradien)m
(t)275 2739 y Fk(\210)42 b Fp(struct)27 b Fq(ScaleLinear)476
2865 y Fg(A)h(simple)g(line)l(ar)g(sc)l(aling)h(function)g(which)f
(defaults)h(to)g(an)g(input)f(sc)l(ale)h(b)l(etwe)l(en)i(0)d(and)h(a)f
(de\014ne)l(d)i(maxi-)476 2956 y(mum,)c(sc)l(aling)i(to)g(an)g(output)h
(r)l(ange)g(b)l(etwe)l(en)g(0)f(and)g(1.)275 3156 y Fk(\210)42
b Fp(struct)27 b Fq(ScaleNoise)476 3281 y Ff(ScaleNoise)h
Fg(adds)g(uniform)f(r)l(andom)i(noise)f(to)g(its)g(input.)275
3481 y Fk(\210)42 b Fp(struct)27 b Fq(ScaleThreshold)476
3606 y Ff(ScaleThreshold)e Fg(takes)h(values:)35 b(thr)l(eshold,)26
b(min)e(and)h(max)g(and)g(r)l(eturns)h(min)e(if)g(input)h
Fc(<)f Fg(thr)l(eshold,)i(or)476 3697 y(max)h(if)g(input)h
Fc(>)p Fg(=)f(thr)l(eshold.)275 3897 y Fk(\210)42 b Fp(class)26
b Fq(SelfSensor)476 4022 y Fg(The)h Ff(SelfSensor)i Fg(is)e(use)l(d)h
(to)h(dete)l(ct)g(information)f(ab)l(out)g(its)g(owner.)275
4222 y Fk(\210)42 b Fp(class)26 b Fq(Sensor)476 4347
y Fg(The)33 b Ff(Sensor)g Fg(class)h(is)f(the)h(b)l(ase)g(class)g(for)f
(al)t(l)f(the)i(di\013er)l(ent)h(typ)l(es)f(of)f(sensor:)48
b Ff(T)-7 b(ouc)n(hSensor)p Fg(,)33 b Ff(Self-)476 4438
y(Sensor)p Fg(,)27 b Ff(AreaSensor)h Fg(and)g Ff(BeamSensor)p
Fg(.)275 4638 y Fk(\210)42 b Fp(struct)27 b Fq(SensorEv)-5
b(alF)d(unction)476 4763 y Fg(A)n(bstr)l(act)30 b(b)l(ase)e(class)h
(for)e(evaluation)i(functors.)275 4963 y Fk(\210)42 b
Fp(struct)27 b Fq(SensorMatc)m(hF)-8 b(unction)476 5088
y Fg(A)n(bstr)l(act)30 b(b)l(ase)e(class)h(for)e(matching)h(functors.)
275 5288 y Fk(\210)42 b Fp(struct)27 b Fq(SensorScaleF)-8
b(unction)476 5413 y Fg(A)n(bstr)l(act)30 b(b)l(ase)e(class)h(for)e(sc)
l(aling)h(functors.)275 5613 y Fk(\210)42 b Fp(struct)27
b Fq(SerialException)p 150 5723 V 150 5823 a Fn(Generated)f(on)e(Sun)h
(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 58 66
58 65 bop -358 70 a Fq(58)211 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Namespace)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
476 333 a Fg(Sinc)l(e)c(exc)l(eptions)j(have)e(an)f(undesir)l(able)i
(overhe)l(ad,)g(they)f(have)g(not)g(b)l(e)l(en)g(use)l(d)g(elsewher)l
(e)h(in)e(the)h(simula-)476 424 y(tion)g(envir)l(onment)i(for)f(r)l(e)l
(asons)i(of)d(sp)l(e)l(e)l(d.)275 622 y Fk(\210)42 b
Fp(class)26 b Fq(Signaller)476 745 y Fg(A)h(gener)l(al-purp)l(ose)k
(class)d(for)g(mo)l(del)t(ling)f(signal)t(lers)h(with)g(discr)l(ete)h
(signal)e(and)h(state)i(typ)l(es.)275 943 y Fk(\210)42
b Fp(class)26 b Fq(SimOb)5 b(ject)476 1067 y Fg(A)n(n)20
b(abstr)l(act)j(b)l(ase)e(class)g(for)f(the)h Ff(P)n(opulation)h
Fg(template,)g(al)t(lowing)e(p)l(opulations)h(with)f(di\013er)l(ent)h
(template)l(d)476 1158 y(typ)l(es)29 b(to)f(b)l(e)g(r)l(epr)l(esente)l
(d)j(in)c Ff(Sim)n(ulation)p Fg(.)275 1356 y Fk(\210)42
b Fp(class)26 b Fq(Sim)m(ulation)476 1480 y Fg(The)h(b)l(asic)i
Ff(Sim)n(ulation)g Fg(fr)l(amework)f(which)g(must)g(b)l(e)g(derive)l(d)
h(to)f(set)h(up)e(simulations.)275 1678 y Fk(\210)42
b Fp(struct)27 b Fq(switc)m(her)476 1801 y Fg(The)g(switcher)i(is)f
(useful)f(when)h(c)l(on\014guring)h(b)l(o)l(ols)g(fr)l(om)e(string)h
(data.)275 1999 y Fk(\210)42 b Fp(class)26 b Fq(T)-8
b(ouc)m(hSensor)476 2122 y Fg(Dete)l(cts)29 b(obje)l(cts)g(which)f(ar)l
(e)g(touching)h(the)f(sensor's)h(owner.)275 2320 y Fk(\210)42
b Fp(class)26 b Fq(T)-8 b(rail)275 2427 y Fk(\210)42
b Fp(struct)27 b Fq(UniformNoise)476 2550 y Fg(Plots)h(uniform)f(noise)
h(in)f(a)h(distribution.)275 2749 y Fk(\210)42 b Fp(class)26
b Fq(Unserialiser)476 2872 y Fg(This)21 b(class)h(is)f(available)g(for)
g(unserialising)g(obje)l(cts)i(fr)l(om)e(str)l(e)l(ams,)j(without)e
(knowing)f(which)h(typ)l(e)g(of)f(obje)l(ct)476 2963
y(is)27 b(to)h(b)l(e)g(unserialise)l(d)h(-)f(the)g(typ)l(e)h(is)e
(determine)l(d)i(fr)l(om)e(the)i(he)l(ader)g(of)e(the)h(str)l(e)l(am.)
275 3161 y Fk(\210)42 b Fp(class)26 b Fq(V)-8 b(ector2D)476
3285 y Fg(A)27 b(class)h(for)g(r)l(epr)l(esenting)i(two-dimensional)f
(ve)l(ctors)g(and)f(c)l(o)l(or)l(dinates.)275 3483 y
Fk(\210)42 b Fp(class)26 b Fq(W)-8 b(all)476 3606 y Fg(This)27
b(is)g(a)h(handy)h(class)f(for)f(putting)i(the)f(most)h(c)l(ommon)e
(typ)l(e)i(of)e(obstacle)j(-)d(wal)t(ls)h(-)f(into)h(the)h(world.)275
3804 y Fk(\210)42 b Fp(class)26 b Fq(W)-8 b(orld)476
3927 y Fg(This)25 b(is)g(wher)l(e)h(it)g(al)t(l)e(happ)l(ens:)36
b Ff(W)-7 b(orld)26 b Fg(c)l(ontains)h(p)l(ointers)f(to)g(every)h(obje)
l(ct)f(in)f(the)h(simulation)g(envir)l(on-)476 4019 y(ment)i(and)g(al)t
(lows)f(those)i(obje)l(cts)g(to)f(inter)l(act)h(with)f(e)l(ach)g
(other,)h(and)f(then)g(b)l(e)h(displaye)l(d.)275 4217
y Fk(\210)42 b Fp(struct)27 b Fq(W)-8 b(orld::Displa)m(yInfo)275
4324 y Fk(\210)42 b Fp(struct)27 b Fq(W)-8 b(orld::P)m(oin)m(terInfo)
275 4430 y Fk(\210)42 b Fp(class)26 b Fq(W)-8 b(orldOb)5
b(ject)476 4554 y Fg(The)29 b(b)l(ase)i(class)f(for)g(everything)h
(that)g(makes)f(a)g(di\013er)l(enc)l(e)h(in)e(the)h(world,)g(including)
f(A)n(nimats,)h(Sensors)476 4645 y(and)e(al)t(l)e(typ)l(es)k(of)d(sc)l
(enery)i(and)f(inter)l(active)h(obje)l(ct.)275 4843 y
Fk(\210)42 b Fp(struct)27 b Fq(ZeroDistribution)150 5122
y Fj(T)m(yp)s(edefs)275 5307 y Fk(\210)42 b Fp(t)n(yp)r(edef)28
b(\015oat)f Fq(DistReal)476 5430 y Fg(F)-6 b(or)25 b(sp)l(e)l(e)l(d,)h
(Distributions)g(use)f(\015o)l(ats)h(but)g(this)f(typ)l(e)l(def)h
(makes)f(it)g(p)l(ossible)g(to)g(switch)h(to)f(doubles)h(if)d(higher)
476 5522 y(ac)l(cur)l(acy)29 b(is)f(r)l(e)l(quir)l(e)l(d.)p
-358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 59 67
59 66 bop 150 70 a Fq(9.1)31 b(BEAST)h(Namespace)f(Reference)2519
b(59)p 150 103 4034 4 v 150 333 a Fj(En)m(umerations)275
529 y Fk(\210)42 b Fp(en)n(um)56 b Fq(AnimatP)m(artT)m(yp)s(e)h
Fh(f)f Fq(ANIMA)-8 b(T)p 1888 529 29 4 v 35 w(BOD)m(Y)p
Fp(,)57 b Fq(ANIMA)-8 b(T)p 2689 529 V 35 w(CENTRE)p
Fp(,)55 b Fq(ANIMA)-8 b(T)p 3614 529 V 35 w(-)358 628
y(ARR)m(O)m(W)p Fp(,)27 b Fq(ANIMA)-8 b(T)p 1199 628
V 35 w(WHEEL)27 b Fh(g)476 760 y Fg(Enumer)l(ation)h(typ)l(e)h(for)f
(the)g(di\013er)l(ent)h(c)l(olour)l(e)l(d)g(p)l(arts)g(of)e(the)i(A)n
(nimat.)275 966 y Fk(\210)42 b Fp(en)n(um)27 b Fq(ColourT)m(yp)s(e)h
Fh(f)358 1105 y Fq(COLOUR)p 779 1105 V 34 w(BLA)m(CK)p
Fp(,)g Fq(COLOUR)p 1617 1105 V 34 w(WHITE)p Fp(,)g Fq(COLOUR)p
2456 1105 V 34 w(GREEN)p Fp(,)f Fq(COLOUR)p 3303 1105
V 34 w(BLUE)p Fp(,)358 1245 y Fq(COLOUR)p 779 1245 V
34 w(RED)p Fp(,)32 b Fq(COLOUR)p 1491 1245 V 34 w(PURPLE)p
Fp(,)h Fq(COLOUR)p 2391 1245 V 34 w(D)m(ARK)p 2714 1245
V 35 w(PURPLE)p Fp(,)g Fq(COLOUR)p 3615 1245 V 34 w(-)358
1345 y(YELLO)m(W)p Fp(,)358 1484 y Fq(COLOUR)p 779 1484
V 34 w(LILA)m(C)p Fp(,)43 b Fq(COLOUR)p 1582 1484 V 34
w(BR)m(O)m(WN)p Fp(,)e Fq(COLOUR)p 2475 1484 V 34 w(LIGHT)p
2818 1484 V 36 w(GREY)p Fp(,)g Fq(COLOUR)p 3615 1484
V 34 w(-)358 1584 y(D)m(ARK)p 653 1584 V 34 w(GREY)p
Fp(,)358 1723 y Fq(COLOUR)p 779 1723 V 34 w(MID)p 1013
1723 V 34 w(GREY)p Fp(,)75 b Fq(COLOUR)p 1842 1723 V
34 w(ORANGE)p Fp(,)f Fq(COLOUR)p 2817 1723 V 34 w(PINK)p
Fp(,)h Fq(COLOUR)p 3615 1723 V 34 w(-)358 1823 y(SELECTION)27
b Fh(g)476 1954 y Fg(A)n(n)g(enumer)l(ation)i(typ)l(e)g(for)f(c)l
(olours.)275 2160 y Fk(\210)42 b Fp(en)n(um)110 b Fq(GASelectionT)m(yp)
s(e)g Fh(f)g Fq(GA)p 1814 2160 V 35 w(R)m(OULETTE)h Fp(=)f(0,)130
b Fq(GA)p 3006 2160 V 35 w(RANK)p Fp(,)110 b Fq(GA)p
3615 2160 V 34 w(-)358 2260 y(TOURNAMENT)27 b Fh(g)476
2391 y Fg(The)g(di\013er)l(ent)i(options)g(for)e(sele)l(ction)i(ar)l(e)
f(enumer)l(ate)l(d)i(her)l(e.)275 2597 y Fk(\210)42 b
Fp(en)n(um)113 b Fq(GAFltP)m(aramT)m(yp)s(e)h Fh(f)e
Fq(GA)p 1846 2597 V 35 w(TOURNAMENT)p 2606 2597 V 34
w(P)-8 b(ARAM)p Fp(,)113 b Fq(GA)p 3287 2597 V 34 w(RANK)p
3615 2597 V 34 w(-)358 2697 y(SPRESSURE)p Fp(,)27 b Fq(GA)p
1128 2697 V 34 w(EXPONENT)h Fh(g)476 2828 y Fg(Assorte)l(d)h(\015o)l
(at)g(p)l(ar)l(ameters,)h(set)e(using)g(GeneticA)n(lgorithm::SetPar)l
(ameter.)275 3034 y Fk(\210)42 b Fp(en)n(um)27 b Fq(GAIn)m(tP)m(aramT)m
(yp)s(e)j Fh(f)d Fq(GA)p 1590 3034 V 35 w(TOURNAMENT)p
2350 3034 V 34 w(SIZE)h Fh(g)476 3166 y Fg(Assorte)l(d)h(inte)l(ger)g
(p)l(ar)l(ameters,)h(set)e(using)g(GeneticA)n(lgorithm::SetPar)l
(ameter.)275 3372 y Fk(\210)42 b Fp(en)n(um)31 b Fq(GAPrin)m(tSt)m
(yleT)m(yp)s(e)j Fh(f)d Fq(GA)p 1631 3372 V 34 w(P)-8
b(ARAMETERS)32 b Fp(=)f(1,)h Fq(GA)p 2718 3372 V 35 w(CURRENT)f
Fp(=)g(2,)i Fq(GA)p 3615 3372 V 34 w(-)358 3471 y(GENERA)-8
b(TION)26 b Fp(=)i(4,)f Fq(GA)p 1383 3471 V 34 w(HISTOR)-8
b(Y)28 b Fp(=)f(8)h Fh(g)476 3602 y Fg(Use)g(to)g(set)g(the)h(printing)
f(style)g(when)g(using)g(GA's)g Fc(<<)f Fg(op)l(er)l(ator.)275
3808 y Fk(\210)42 b Fp(en)n(um)49 b Fq(GAFitnessMetho)s(dT)m(yp)s(e)e
Fh(f)i Fq(GA)p 1880 3808 V 34 w(BEST)p 2164 3808 V 35
w(FITNESS)p Fp(,)g Fq(GA)p 2824 3808 V 35 w(W)m(ORST)p
3218 3808 V 34 w(FITNESS)p Fp(,)358 3908 y Fq(GA)p 511
3908 V 34 w(MEAN)p 846 3908 V 34 w(FITNESS)p Fp(,)28
b Fq(GA)p 1484 3908 V 34 w(TOT)-8 b(AL)p 1843 3908 V
36 w(FITNESS)28 b Fh(g)476 4039 y Fg(The)f(metho)l(d)i(by)f(which)g
(\014tness)h(is)e(de)l(cide)l(d)i(when)f(individuals)f(have)h(multiple)
g(sc)l(or)l(es.)275 4245 y Fk(\210)42 b Fp(en)n(um)27
b Fq(GAFitnessFixT)m(yp)s(e)h Fh(f)f Fq(GA)p 1625 4245
V 34 w(IGNORE)p Fp(,)g Fq(GA)p 2249 4245 V 35 w(CLAMP)p
Fp(,)h Fq(GA)p 2836 4245 V 35 w(FIX)g Fh(g)476 4377 y
Fg(Sets)g(the)h(metho)l(d)f(by)g(which)g(\014tness)h(sc)l(or)l(es)h(ar)
l(e)e(adjuste)l(d)h(b)l(efor)l(e)g(sele)l(ction.)275
4583 y Fk(\210)42 b Fp(en)n(um)27 b Fq(GA)-11 b(V)j(arian)m(tT)m(yp)s
(e)31 b Fh(f)358 4722 y Fq(GA)-11 b(V)p 572 4722 V 35
w(INT)p Fp(,)28 b Fq(GA)-11 b(V)p 1043 4722 V 35 w(FLO)m(A)j(T)p
Fp(,)29 b Fq(GA)-11 b(V)p 1654 4722 V 35 w(DOUBLE)p Fp(,)28
b Fq(GA)-11 b(V)p 2354 4722 V 36 w(CHAR)p Fp(,)358 4862
y Fq(GA)g(V)p 572 4862 V 35 w(BOOL)27 b Fh(g)476 4993
y Fg(A)g(typ)l(e)i(\015ag)f(for)f(the)i(GA)-8 b(V)i(ariant)29
b(data)f(typ)l(e.)275 5199 y Fk(\210)42 b Fp(en)n(um)30
b Fq(SelfSensorT)m(yp)s(e)f Fh(f)h Fq(SELF)p 1565 5199
V 35 w(SENSOR)p 1988 5199 V 33 w(X)p Fp(,)g Fq(SELF)p
2379 5199 V 35 w(SENSOR)p 2802 5199 V 33 w(Y)p Fp(,)g
Fq(SELF)p 3193 5199 V 35 w(SENSOR)p 3616 5199 V 33 w(-)358
5299 y(ANGLE)p Fp(,)d Fq(SELF)p 989 5299 V 35 w(SENSOR)p
1412 5299 V 33 w(CONTR)m(OL)h Fh(g)476 5430 y Fg(A)n(n)f(enumer)l
(ation)h(typ)l(e)h(for)e(SelfSensor,)g(use)l(d)h(to)g(sp)l(e)l(cify)f
(which)g(fe)l(atur)l(e)i(of)e(the)g(sensor's)i(owner)f(is)f(to)g(b)l(e)
476 5522 y(r)l(eturne)l(d)j(by)d(GetOutput\(\).)p 150
5723 4034 4 v 150 5823 a Fn(Generated)f(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 60 68
60 67 bop -358 70 a Fq(60)211 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Namespace)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
275 333 a Fk(\210)42 b Fp(en)n(um)27 b Fq(SerialErrorT)m(yp)s(e)i
Fh(f)358 464 y Fq(SERIAL)p 717 464 29 4 v 34 w(ERR)m(OR)p
1099 464 V 33 w(UNKNO)m(WN)p Fp(,)155 b Fq(SERIAL)p 2204
464 V 34 w(ERR)m(OR)p 2586 464 V 33 w(BAD)p 2832 464
V 35 w(FILE)p Fp(,)h Fq(SERIAL)p 3615 464 V 34 w(-)358
564 y(ERR)m(OR)p 712 564 V 33 w(WR)m(ONG)p 1135 564 V
33 w(TYPE)p Fp(,)28 b Fq(SERIAL)p 1838 564 V 35 w(ERR)m(OR)p
2221 564 V 33 w(UNKNO)m(WN)p 2795 564 V 34 w(TYPE)p Fp(,)358
696 y Fq(SERIAL)p 717 696 V 34 w(ERR)m(OR)p 1099 696
V 33 w(D)m(A)-8 b(T)g(A)p 1396 696 V 36 w(MISMA)g(TCH)27
b Fh(g)476 819 y Fg(Enumer)l(ates)i(the)g(di\013er)l(ent)f(typ)l(es)i
(of)d(err)l(ors)i(enc)l(ounter)l(e)l(d)i(in)c(serialisation.)275
1017 y Fk(\210)42 b Fp(en)n(um)27 b Fq(SimPrin)m(tSt)m(yleT)m(yp)s(e)g
Fh(f)358 1149 y Fq(SIM)p 544 1149 V 34 w(PRINT)p 892
1149 V 34 w(ST)-8 b(A)g(TUS)p Fp(,)272 b Fq(SIM)p 1768
1149 V 35 w(PRINT)p 2117 1149 V 34 w(ASSESSMENT)p Fp(,)e
Fq(SIM)p 3266 1149 V 35 w(PRINT)p 3615 1149 V 34 w(-)358
1249 y(GENERA)-8 b(TION)p Fp(,)26 b Fq(SIM)p 1254 1249
V 35 w(PRINT)p 1603 1249 V 34 w(R)m(UN)p Fp(,)358 1380
y Fq(SIM)p 544 1380 V 34 w(PRINT)p 892 1380 V 34 w(COMPLETE)i
Fh(g)476 1504 y Fg(Use)l(d)g(in)f(Simulation::T)-6 b(oString)27
b(to)i(sp)l(e)l(cify)f(what)g(is)f(to)h(b)l(e)g(output.)275
1702 y Fk(\210)42 b Fp(en)n(um)27 b Fq(W)-8 b(orldDispla)m(yT)m(yp)s(e)
28 b Fh(f)358 1834 y Fq(DISPLA)-8 b(Y)p 784 1834 V 35
w(NONE)22 b Fp(=)h(0,)g Fq(DISPLA)-8 b(Y)p 1722 1834
V 36 w(ANIMA)g(TS)24 b Fp(=)e(1,)i Fq(DISPLA)-8 b(Y)p
2835 1834 V 36 w(W)m(ORLDOBJECTS)358 1933 y Fp(=)27 b(2,)g
Fq(DISPLA)-8 b(Y)p 968 1933 V 36 w(TRAILS)29 b Fp(=)e(4,)358
2065 y Fq(DISPLA)-8 b(Y)p 784 2065 V 35 w(SENSORS)24
b Fp(=)f(8,)i Fq(DISPLA)-8 b(Y)p 1882 2065 V 36 w(COLLISIONS)24
b Fp(=)g(16,)g Fq(DISPLA)-8 b(Y)p 3162 2065 V 36 w(MONITOR)358
2165 y Fp(=)27 b(32,)g Fq(DISPLA)-8 b(Y)p 1010 2165 V
35 w(ALL)29 b Fp(=)e(65535)f Fh(g)476 2288 y Fg(A)n(n)h(enumer)l(ation)
i(typ)l(e)g(for)f(sp)l(e)l(cifying)g(which)f(elements)i(of)e(the)h
(world)g(ar)l(e)g(to)h(b)l(e)f(displaye)l(d.)150 2658
y Fj(F)-9 b(unctions)275 2843 y Fk(\210)42 b Fq(Sensor)27
b Fh(\003)g Fq(Gradien)m(tSensor)h Fp(\(\))275 2950 y
Fk(\210)42 b Fq(Sensor)27 b Fh(\003)g Fq(DistributionSensor)f
Fp(\(\))275 3057 y Fk(\210)42 b Fp(ostream)26 b(&)h Fq(op)s(erator)p
Fo(<<)g Fp(\(ostream)g(&out,)g(const)g(Dra)n(w)n(able)f(&d\))275
3164 y Fk(\210)42 b Fp(istream)26 b(&)i Fq(op)s(erator)p
Fo(>>)f Fp(\(istream)g(&in,)g(Dra)n(w)n(able)f(&d\))275
3271 y Fk(\210)42 b Fp(ostream)26 b(&)h Fq(op)s(erator)p
Fo(<<)g Fp(\(ostream)g(&out,)g(const)g Fq(DynamicalNet)g
Fp(&dnn\))476 3394 y Fg(A)n(n)g(output)i(op)l(er)l(ator)h(for)e
Ff(DynamicalNet)p Fg(.)275 3592 y Fk(\210)42 b Fp(istream)26
b(&)i Fq(op)s(erator)p Fo(>>)f Fp(\(istream)g(&in,)g
Fq(DynamicalNet)g Fp(&dnn\))476 3716 y Fg(A)n(n)g(input)h(op)l(er)l
(ator)i(for)e Ff(DynamicalNet)p Fg(.)275 3914 y Fk(\210)42
b Fp(ostream)26 b(&)h Fq(op)s(erator)p Fo(<<)g Fp(\(ostream)g(&out,)g
(const)g Fq(F)-8 b(eedF)g(orw)m(ardNet)28 b Fp(&\013n\))476
4037 y Fg(Output)g(op)l(er)l(ator)i(overlo)l(ad)f(for)f(the)g
Ff(F)-7 b(eedF)g(orw)n(ardNet)p Fg(.)275 4235 y Fk(\210)42
b Fp(istream)26 b(&)i Fq(op)s(erator)p Fo(>>)f Fp(\(istream)g(&in,)g
Fq(F)-8 b(eedF)g(orw)m(ardNet)28 b Fp(&\013n\))476 4359
y Fg(Input)g(op)l(er)l(ator)i(overlo)l(ad)e(for)g(the)g
Ff(F)-7 b(eedF)g(orw)n(ardNet)p Fg(.)275 4557 y Fk(\210)42
b Fp(string)26 b Fq(add)p 751 4557 V 35 w(slashes)h Fp(\(const)g
(string)g(&str\))476 4680 y Fg(R)l(eplac)l(es)g(sp)l(ac)l(es)h(with)f
(undersc)l(or)l(es)i(and)e(adds)g(b)l(ackslashes)h(to)f(other)h(char)l
(acters)h(which)e(might)f(b)l(e)h(inter-)476 4772 y(pr)l(ete)l(d)i(as)f
(white)g(sp)l(ac)l(e)h(by)f(an)g(input)g(str)l(e)l(am.)275
4970 y Fk(\210)42 b Fp(string)26 b Fq(strip)p 793 4970
V 35 w(slashes)g Fp(\(const)h(string)g(&str\))476 5093
y Fg(R)l(emoves)h(the)h(slashes)g(adde)l(d)f(by)g(add)p
1614 5093 24 4 v 29 w(slashes)h(and)f(r)l(einstates)i(the)e(original)f
(string.)275 5291 y Fk(\210)42 b Fp(ostream)26 b(&)h
Fq(op)s(erator)p Fo(<<)g Fp(\(ostream)g(&out,)g(const)g
Fq(SimOb)5 b(ject)27 b Fp(&ob)5 b(j\))476 5415 y Fg(A)n(n)27
b(output)i(op)l(er)l(ator)h(for)e(al)t(l)f(classes)i(derive)l(d)f(fr)l
(om)g Ff(SimOb)5 b(ject)p Fg(.)275 5613 y Fk(\210)42
b Fp(istream)26 b(&)i Fq(op)s(erator)p Fo(>>)f Fp(\(istream)g(&in,)g
Fq(SimOb)5 b(ject)27 b Fp(&ob)5 b(j\))p -358 5723 4034
4 v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 61 69
61 68 bop 150 70 a Fq(9.1)31 b(BEAST)h(Namespace)f(Reference)2519
b(61)p 150 103 4034 4 v 476 333 a Fg(A)n(n)27 b(input)h(op)l(er)l(ator)
i(for)e(al)t(l)e(classes)j(derive)l(d)g(fr)l(om)e Ff(SimOb)5
b(ject)p Fg(.)275 536 y Fk(\210)42 b Fp(const)27 b(\015oat)g
Fh(\003)g Fq(random)p 1159 536 29 4 v 34 w(colour)g Fp(\(\))476
664 y Fg(R)l(eturns)i(a)f(r)l(andom)g(c)l(olour,)g(al)t(l)f(set)h(for)g
(input)g(to)g(glColour4fv.)275 867 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)20 b(T)p Fo(>)g Fp(std::ostream)f(&)h
Fq(op)s(erator)p Fo(<<)g Fp(\(std::ostream)g(&out,)h(const)g
Fq(Mutation-)358 966 y(Op)s(erator)p Fo(<)27 b Fp(T)h
Fo(>)f Fp(&m\))476 1095 y Fg(Output)h(op)l(er)l(ator)i(for)e(the)g
Ff(MutationOp)r(erator)j Fg(function)d(obje)l(ct.)275
1298 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)61
b(T)p Fo(>)h Fp(std::istream)f(&)h Fq(op)s(erator)p Fo(>>)f
Fp(\(std::istream)h(&in,)71 b Fq(Mutation-)358 1397 y(Op)s(erator)p
Fo(<)27 b Fp(T)h Fo(>)f Fp(&m\))476 1526 y Fg(Input)h(op)l(er)l(ator)i
(for)d(the)h Ff(MutationOp)r(erator)k Fg(function)27
b(obje)l(ct.)275 1729 y Fk(\210)42 b Fp(template)p Fo(<)p
Fp(class)e(EV)n(O,)i(class)f(MUTFUNC)p Fo(>)h Fp(std::ostream)f(&)h
Fq(op)s(erator)p Fo(<<)f Fp(\(std::ostream)g(&,)358 1828
y(const)27 b Fq(GeneticAlgorithm)p Fo(<)e Fp(EV)n(O,)h(MUTFUNC)j
Fo(>)e Fp(&\))476 1956 y Fg(The)g(GA's)h(output)h(op)l(er)l(ator.)275
2159 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)19
b(EV)n(O,)g(class)g(MUTFUNC)p Fo(>)i Fp(std::istream)f(&)g
Fq(op)s(erator)p Fo(>>)f Fp(\(std::istream)h(&,)h(const)358
2259 y Fq(GeneticAlgorithm)p Fo(<)j Fp(EV)n(O,)j(MUTFUNC)i
Fo(>)e Fp(&\))476 2387 y Fg(The)g(GA's)h(input)g(op)l(er)l(ator.)275
2590 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)36
b(EV)n(O,)h(class)g(MUTFUNC)p Fo(>)i Fp(std::istream)f(&)f
Fq(op)s(erator)p Fo(>>)g Fp(\(std::istream)h(&in,)358
2690 y Fq(GeneticAlgorithm)p Fo(<)24 b Fp(EV)n(O,)j(MUTFUNC)i
Fo(>)e Fp(&ga\))275 2802 y Fk(\210)42 b Fp(std::ostream)26
b(&)h Fq(op)s(erator)p Fo(<<)g Fp(\(std::ostream)g(&out,)g(const)h
Fq(GA)-11 b(V)j(arian)m(t)29 b Fp(&v\))275 2913 y Fk(\210)42
b Fp(std::istream)27 b(&)g Fq(op)s(erator)p Fo(>>)g Fp(\(std::istream)g
(&in,)h Fq(GA)-11 b(V)j(arian)m(t)30 b Fp(&v\))275 3025
y Fk(\210)42 b Fp(v)n(oid)26 b Fq(glut)p 708 3025 V 34
w(start)p 939 3025 V 35 w(sim)m(ulation)f Fp(\(in)n(t)k(&args,)c(c)n
(har)i Fh(\003)p Fp(argv[)14 b(],)25 b Fq(Sim)m(ulation)h
Fh(\003)p Fp(pTheSim\))275 3137 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(class)30 b(T)p Fo(>)h Fq(Sensor)g Fh(\003)g
Fq(Pro)m(ximit)m(ySensor)g Fp(\(double)g(scop)r(e,)h(double)g(range,)f
(double)g(ori-)358 3236 y(en)n(tation\))476 3364 y Fg(Cr)l(e)l(ates)25
b(a)f(se)l(gment-shap)l(e)l(d)j(sensor)e(with)e(the)h(sp)l(e)l(ci\014e)
l(d)h(sc)l(op)l(e,)g(r)l(ange)g(and)f(orientation)h(which)e(dete)l(cts)
j(the)476 3456 y(distanc)l(e)j(of)e(obje)l(cts)i(of)e(the)h(sp)l(e)l
(ci\014e)l(d)h(template)l(d)g(typ)l(e.)275 3659 y Fk(\210)42
b Fp(template)p Fo(<)p Fp(class)26 b(T)p Fo(>)h Fq(Sensor)g
Fh(\003)h Fq(NearestAngleSensor)e Fp(\(\))275 3770 y
Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)26 b(T)p Fo(>)h
Fq(Sensor)g Fh(\003)h Fq(NearestXSensor)f Fp(\(\))275
3882 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)26
b(T)p Fo(>)h Fq(Sensor)g Fh(\003)h Fq(NearestYSensor)f
Fp(\(\))275 3994 y Fk(\210)42 b Fp(template)p Fo(<)p
Fp(class)24 b(T)p Fo(>)i Fq(Sensor)g Fh(\003)f Fq(Densit)m(ySensor)h
Fp(\(double)g(scop)r(e,)g(double)g(range,)f(double)h(orien)n(ta-)358
4093 y(tion\))275 4205 y Fk(\210)42 b Fp(template)p Fo(<)p
Fp(class)26 b(T)p Fo(>)h Fq(Sensor)g Fh(\003)h Fq(CollisionSensor)c
Fp(\(\))275 4317 y Fk(\210)42 b Fp(template)p Fo(<)p
Fp(class)p 940 4317 25 4 v 56 w(F)-7 b(unctor)p Fo(>)27
b Fq(Matc)m(hAdapter)p Fo(<)p 2049 4317 V 59 w Fp(F)-7
b(unctor)27 b Fo(>)h Fh(\003)f Fq(Matc)m(hAdapt)i Fp(\()p
3139 4317 V 30 w(F)-7 b(unctor)28 b(f)6 b(\))476 4445
y Fg(A)27 b(help)l(er)i(function)e(for)h(cr)l(e)l(ating)h
Ff(Matc)n(hAdapter)f Fg(functors.)275 4648 y Fk(\210)42
b Fp(std::string)27 b Fq(add)p 909 4648 29 4 v 35 w(slashes)f
Fp(\(const)i(std::string)f(&str\))275 4759 y Fk(\210)42
b Fp(std::string)27 b Fq(strip)p 951 4759 V 34 w(slashes)f
Fp(\(const)i(std::string)f(&str\))275 4871 y Fk(\210)42
b Fp(template)p Fo(<)p Fp(class)p 940 4871 25 4 v 56
w(Iterator)p Fo(>)26 b Fq(extractor)p Fo(<)p 1818 4871
V 58 w Fp(Iterator)h Fo(>)g Fq(extract)i Fp(\()p 2603
4871 V 30 w(Iterator)d(&Iter\))476 4999 y Fg(Constructs)k(and)e(r)l
(eturns)h(an)f(extr)l(actor)j(of)c(the)h(c)l(orr)l(e)l(ct)i(typ)l(e.)
275 5202 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)p
952 5202 V 68 w(InIt,)i(class)p 1394 5202 V 69 w(OutIt)p
Fo(>)p 1734 5202 V 70 w Fp(InIt)c Fq(cop)m(y)p 2133 5202
29 4 v 36 w(from)e Fp(\()p 2435 5202 25 4 v 31 w(OutIt)p
2711 5202 V 70 w(First,)p 2982 5202 V 73 w(OutIt)p 3257
5202 V 70 w(Last,)p 3512 5202 V 73 w(InIt)p 358 5302
V 382 5302 a(Src\))476 5430 y Fg(A)n(n)28 b(algorithm)g(similar)f(to)i
(c)l(opy,)g(but)f(wher)l(e)h(the)g(start)h(and)f(end)f(of)g(the)h(tar)l
(get)h(r)l(ange)f(is)f(sp)l(e)l(ci\014e)l(d)h(r)l(ather)476
5522 y(than)f(the)h(sour)l(c)l(e)g(r)l(ange.)p 150 5723
4034 4 v 150 5823 a Fn(Generated)d(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 62 70
62 69 bop -358 70 a Fq(62)211 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Namespace)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
275 333 a Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)p
946 333 25 4 v 62 w(OutIt)p Fo(>)33 b Fp(std::istream)g(&)h
Fq(cop)m(y)p 2028 333 29 4 v 35 w(from)p 2260 333 V 33
w(istream)e Fp(\()p 2668 333 25 4 v 30 w(OutIt)p 2937
333 V 64 w(First,)p 3200 333 V 65 w(OutIt)p 3469 333
V 64 w(Last,)358 432 y(std::istream)27 b(&in\))476 555
y Fg(A)n(lthough)33 b(extr)l(act)j(and)d(c)l(opy)p 1365
555 24 4 v 29 w(fr)l(om)g(should,)h(with)e(the)i(help)f(of)f(istr)l(e)l
(am)p 2654 555 V 30 w(iter)l(ator,)j(b)l(e)e(able)g(to)g(\014l)t(l)f(r)
l(anges)476 646 y(fr)l(om)j(input)h(str)l(e)l(ams,)j(c)l(ertain)e
(di\016culties)e(with)h(istr)l(e)l(ams)h(arise)f(which)g(make)g(the)h
(c)l(opy)p 3227 646 V 29 w(fr)l(om)p 3410 646 V 28 w(istr)l(e)l(am)476
738 y(function)28 b(useful.)275 935 y Fk(\210)42 b Fp(std::istream)27
b(&)g Fq(op)s(erator)p Fo(>>)g Fp(\(std::istream)g(&in,)h
Fq(switc)m(her)g Fp(s\))476 1058 y Fg(Input)g(op)l(er)l(ator)i(for)d
(the)h(switcher)h(help)l(er)g(obje)l(ct.)275 1255 y Fk(\210)42
b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)p 1123 1255
25 4 v 54 w(T)n(y)-7 b(,)26 b(t)n(yp)r(ename)p 1675 1255
V 55 w(Ax)p Fo(>)f Fp(std::ostream)f(&)h Fq(op)s(erator)p
Fo(<<)f Fp(\(std::ostream)g(&out,)358 1355 y(const)j(std::v)n(ector)p
Fo(<)p 1051 1355 V 56 w Fp(T)n(y)-7 b(,)p 1226 1355 V
57 w(Ax)28 b Fo(>)f Fp(&v\))476 1478 y Fg(A)33 b(generic)i(output)g(op)
l(er)l(ator)h(for)d(ve)l(ctors,)k(r)l(e)l(quir)l(es)f(the)e(ve)l
(ctor's)i(c)l(ontents)f(typ)l(e)g(to)f(have)h(its)f(own)g
Fc(<<)476 1569 y Fg(op)l(er)l(ator.)275 1766 y Fk(\210)42
b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)p 1134 1766
V 65 w(T)n(y)-7 b(,)38 b(t)n(yp)r(ename)p 1709 1766 V
65 w(Ax)p Fo(>)e Fp(std::istream)g(&)f Fq(op)s(erator)p
Fo(>>)g Fp(\(std::istream)h(&in,)358 1866 y(std::v)n(ector)p
Fo(<)p 834 1866 V 56 w Fp(T)n(y)-7 b(,)p 1009 1866 V
57 w(Ax)28 b Fo(>)f Fp(&v\))476 1989 y Fg(A)36 b(generic)h(input)f(op)l
(er)l(ator)j(for)d(ve)l(ctors,)k(r)l(e)l(quir)l(es)e(the)f(ve)l(ctor's)
h(c)l(ontents)h(typ)l(e)e(to)g(have)g(its)f(own)h Fc(>>)476
2080 y Fg(op)l(er)l(ator.)275 2278 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)p 1136 2278 V 67 w(T)n(y)-7
b(,)40 b(t)n(yp)r(ename)p 1715 2278 V 68 w(Pr,)f(t)n(yp)r(ename)p
2288 2278 V 68 w(Allo)r(c)p Fo(>)e Fp(std::ostream)g(&)h
Fq(op)s(erator)p Fo(<<)358 2377 y Fp(\(std::ostream)26
b(&out,)i(const)f(std::map)p Fo(<)g Fp(std::string,)p
2142 2377 V 57 w(T)n(y)-7 b(,)p 2317 2377 V 58 w(Pr,)p
2486 2377 V 56 w(Allo)r(c)28 b Fo(>)f Fp(&m\))476 2500
y Fg(A)d(sp)l(e)l(cialise)l(d)i(output)g(op)l(er)l(ator)h(for)d(maps)h
(with)g(key)g(typ)l(e)h(string,)g(which)e(uses)i(add)p
2966 2500 24 4 v 29 w(slashes)g(to)f(enc)l(o)l(de)h(the)476
2591 y(string.)275 2789 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)p 1138 2789 25 4 v 69 w(T)n(y)-7
b(,)43 b(t)n(yp)r(ename)p 1722 2789 V 70 w(Pr,)f(t)n(yp)r(ename)p
2300 2789 V 70 w(Allo)r(c)p Fo(>)e Fp(std::istream)f(&)h
Fq(op)s(erator)p Fo(>>)358 2888 y Fp(\(std::istream)27
b(&in,)g(const)h(std::map)p Fo(<)f Fp(std::string,)p
2072 2888 V 57 w(T)n(y)-7 b(,)p 2248 2888 V 57 w(Pr,)p
2417 2888 V 57 w(Allo)r(c)28 b Fo(>)f Fp(&m\))476 3011
y Fg(A)e(sp)l(e)l(cialise)l(d)h(input)g(op)l(er)l(ator)i(for)d(maps)h
(with)g(key)g(typ)l(e)h(string,)f(which)g(uses)g(strip)p
2971 3011 24 4 v 29 w(slashes)h(to)f(de)l(c)l(o)l(de)h(the)476
3102 y(string.)275 3300 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)p 1127 3300 25 4 v 58 w(Kt)n(y)-7
b(,)28 b(t)n(yp)r(ename)p 1721 3300 V 58 w(T)n(y)-7 b(,)28
b(t)n(yp)r(ename)p 2279 3300 V 59 w(Pr,)g(t)n(yp)r(ename)p
2831 3300 V 58 w(Allo)r(c)p Fo(>)g Fp(std::ostream)f(&)358
3399 y Fq(op)s(erator)p Fo(<<)f Fp(\(std::ostream)h(&out,)h(const)f
(std::map)p Fo(<)p 2239 3399 V 57 w Fp(Kt)n(y)-7 b(,)p
2451 3399 V 57 w(T)n(y)g(,)p 2626 3399 V 57 w(Pr,)p 2796
3399 V 57 w(Allo)r(c)28 b Fo(>)f Fp(&m\))476 3522 y Fg(A)g(generic)i
(output)g(op)l(er)l(ator)h(for)d(maps,)h(r)l(e)l(quir)l(es)h(the)f
(map's)g(c)l(ontents)i(to)e(have)g(its)g(own)g Fc(<<)f
Fg(op)l(er)l(ator.)275 3720 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)p 1129 3720 V 60 w(Kt)n(y)-7
b(,)30 b(t)n(yp)r(ename)p 1727 3720 V 60 w(T)n(y)-7 b(,)31
b(t)n(yp)r(ename)p 2289 3720 V 60 w(Pr,)f(t)n(yp)r(ename)p
2846 3720 V 60 w(Allo)r(c)p Fo(>)h Fp(std::istream)e(&)358
3819 y Fq(op)s(erator)p Fo(>>)d Fp(\(std::istream)i(&in,)f(std::map)p
Fo(<)p 1953 3819 V 58 w Fp(Kt)n(y)-7 b(,)p 2165 3819
V 57 w(T)n(y)g(,)p 2340 3819 V 57 w(Pr,)p 2510 3819 V
57 w(Allo)r(c)27 b Fo(>)h Fp(&m\))476 3942 y Fg(A)f(generic)i(input)f
(op)l(er)l(ator)i(for)d(maps,)h(r)l(e)l(quir)l(es)h(the)f(map's)g(c)l
(ontents)i(to)e(have)g(its)g(own)g Fc(>>)f Fg(op)l(er)l(ator.)275
4139 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(T1,)g(t)n(yp)r(ename)h(T2)p Fo(>)e Fp(T1)h(&)h Fq(stream)p
2360 4139 29 4 v 33 w(con)m(v)m(ert)h Fp(\(T2)f(&input\))476
4262 y Fg(A)n(n)f(inline)g(r)l(einterpr)l(et)j(c)l(ast)f(which)f(may)f
(b)l(e)h(helpful)f(in)h(outputting)h(enumer)l(ation)g(typ)l(es)g(to)f
(str)l(e)l(ams.)275 4460 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(class)p 938 4460 25 4 v 54 w(InIt,)26 b(class)p
1347 4460 V 54 w(T)n(y)-7 b(,)26 b(class)p 1713 4460
V 54 w(Fn1)p Fo(>)p 1975 4460 V 55 w Fp(T)n(y)f Fq(accum)m(ulate)p
2601 4460 29 4 v 34 w(fun)h Fp(\()p 2827 4460 25 4 v
30 w(InIt)p 3021 4460 V 56 w(First,)p 3275 4460 V 56
w(InIt)p 3469 4460 V 56 w(Last,)p 358 4559 V 382 4559
a(T)n(y)p 517 4559 V 57 w(V)-7 b(al,)p 717 4559 V 58
w(Fn1)p 917 4559 V 57 w(F)g(unc\))476 4682 y Fg(V)h(ersion)34
b(of)e(the)i(STL)f(ac)l(cumulate)h(algorithm)g(which)f(c)l(omputes)i(a)
e(sum)g(of)g(al)t(l)f(the)i(r)l(esults)g(of)f(a)g(unary)476
4773 y(function)p 782 4773 24 4 v 56 w(F)-6 b(unc)28
b(applie)l(d)g(to)g(the)g(values)h(b)l(etwe)l(en)p 1990
4773 V 57 w(First)f(and)p 2357 4773 V 57 w(L)l(ast.)275
4971 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)30
b(T,)i(t)n(yp)r(ename)f(M,)h(class)e(OP)p Fo(>)h Fq(call)p
2133 4971 29 4 v 34 w(on)p 2268 4971 V 34 w(mem)p 2508
4971 V 31 w(t)p Fo(<)h Fp(T,)f(M,)h(OP)f Fo(>)g Fq(call)p
3309 4971 V 34 w(on)p 3444 4971 V 34 w(mem)358 5070 y
Fp(\(M)d(T::)p Fh(\003)p Fp(m,)f(OP)g(op\))476 5193 y
Fg(Help)l(er)h(function)g(for)f(c)l(onstructing)k Ff(call)p
1712 5193 27 4 v 33 w(on)p 1838 5193 V 32 w(mem)p 2059
5193 V 31 w(t)c Fg(function)h(obje)l(cts.)275 5390 y
Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)p 945 5390
25 4 v 61 w(Class,)33 b(t)n(yp)r(ename)p 1608 5390 V
63 w(Return,)h(t)n(yp)r(ename)p 2335 5390 V 62 w(Arg)p
Fo(>)e Fq(b)s(ound)p 2863 5390 29 4 v 34 w(mem)p 3103
5390 V 31 w(fun)p 3269 5390 V 35 w(t)p Fo(<)p 3437 5390
25 4 v 62 w Fp(Class,)p 358 5490 V 382 5490 a(Return,)p
693 5490 V 58 w(Arg)27 b Fo(>)g Fq(b)s(ound)p 1243 5490
29 4 v 34 w(mem)p 1483 5490 V 32 w(fun)g Fp(\()p 1708
5490 25 4 v 31 w(Class)f(&c,)p 2109 5490 V 57 w(Return\()p
2425 5490 V 31 w(Class::)p Fh(\003)p Fp(memfun\)\()p
3091 5490 V 30 w(Arg\)\))476 5613 y Fg(A)h(help)l(er)i(function)e(for)h
(c)l(onstructing)i Ff(b)r(ound)p 1890 5613 27 4 v 33
w(mem)p 2112 5613 V 31 w(fun)p 2268 5613 V 32 w(t)e Fg(obje)l(cts.)p
-358 5723 4034 4 v -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 63 71
63 70 bop 150 70 a Fq(9.1)31 b(BEAST)h(Namespace)f(Reference)2519
b(63)p 150 103 4034 4 v 275 443 a Fk(\210)42 b Fp(template)p
Fo(<)p Fp(class)p 945 443 25 4 v 61 w(Class,)33 b(t)n(yp)r(ename)p
1608 443 V 63 w(Return,)h(t)n(yp)r(ename)p 2335 443 V
62 w(Arg)p Fo(>)e Fq(b)s(ound)p 2863 443 29 4 v 34 w(mem)p
3103 443 V 31 w(fun)p 3269 443 V 35 w(t)p Fo(<)p 3437
443 25 4 v 62 w Fp(Class,)p 358 543 V 382 543 a(Return,)p
693 543 V 58 w(Arg)27 b Fo(>)g Fq(b)s(ound)p 1243 543
29 4 v 34 w(mem)p 1483 543 V 32 w(fun)g Fp(\()p 1708
543 25 4 v 31 w(Class)f Fh(\003)p Fp(c,)p 2085 543 V
57 w(Return\()p 2402 543 V 31 w(Class::)p Fh(\003)p Fp(memfun\)\()p
3068 543 V 30 w(Arg\)\))476 670 y Fg(A)h(help)l(er)i(function)e(for)h
(c)l(onstructing)i Ff(b)r(ound)p 1890 670 27 4 v 33 w(mem)p
2112 670 V 31 w(fun)p 2268 670 V 32 w(t)e Fg(obje)l(cts.)275
871 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)p
1126 871 25 4 v 57 w(T)n(yp)r(e,)27 b(t)n(yp)r(ename)p
1774 871 V 58 w(Base)p Fo(>)f Fp(b)r(o)r(ol)h Fq(IsA)h
Fp(\()p 2456 871 V 30 w(Base)f Fh(\003)p Fp(in,)p 2845
871 V 57 w(T)n(yp)r(e)h Fh(\003)p Fp(&out\))476 998 y
Fg(A)h(wr)l(app)l(er)i(for)f(R)-6 b(TTI)28 b(\(R)n(unTime)i(T)-6
b(yp)l(e)30 b(Identi\014c)l(ation\))h(typ)l(eid,)g(which)e(che)l(cks)i
(if)e(two)h(p)l(ointers)h(ar)l(e)f(of)476 1090 y(identic)l(al)d(typ)l
(es.)275 1292 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)p
1125 1292 V 56 w(T)n(yp)r(e,)26 b(t)n(yp)r(ename)p 1771
1292 V 56 w(Base)p Fo(>)f Fp(b)r(o)r(ol)i Fq(IsKindOf)e
Fp(\()p 2685 1292 V 31 w(Base)g Fh(\003)p Fp(in,)p 3073
1292 V 56 w(T)n(yp)r(e)i Fh(\003)p Fp(&out\))476 1419
y Fg(A)22 b(wr)l(app)l(er)j(for)e(R)-6 b(TTI)22 b(\(R)n(unTime)h(T)-6
b(yp)l(e)23 b(Identi\014c)l(ation\))i(using)e(dynamic)p
2695 1419 24 4 v 28 w(c)l(ast)i(which)d(che)l(cks)j(if)d(an)h(obje)l
(ct)476 1510 y(is)k(of)g(the)i(same)f(typ)l(e)g(or)g(is)g(in)f(herite)l
(d)i(fr)l(om)e(an)h(obje)l(ct)g(of)f(the)i(same)f(typ)l(e)h(as)f(an)f
(input)h(p)l(ointer.)275 1712 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)27 b(T)p Fo(>)g Fp(T)h Fq(b)s(ound)f
Fp(\(T)h(L,)g(T)f(U,)h(T)g(n\))476 1839 y Fg(T)-6 b(akes)28
b(a)g(typ)l(e,)g(a)g(lower)g(and)g(an)f(upp)l(er)i(limit)d(and)i(b)l
(ounds)h(the)g(input)f(value)g(to)g(those)h(limits.)275
2040 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(T)p Fo(>)g Fp(v)n(oid)g Fq(rb)s(ound)h Fp(\(T)f(L,)h(T)g(U,)g(T)f
(&n\))476 2167 y Fg(A)g(version)i(of)e(b)l(ound)h(which)g(takes)h(a)f
(r)l(efer)l(enc)l(e)h(as)f(its)g(ar)l(gument.)275 2369
y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(T)p Fo(>)g Fp(T)h Fq(limit)d Fp(\(T)j(L,)f(T)h(U,)g(T)f(n\))476
2496 y Fg(Limits)g(the)h(input)g(value)g(to)g(the)h(sp)l(e)l(ci\014e)l
(d)g(r)l(ange,)f(clipping)f(at)h(either)h(extr)l(eme.)275
2698 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(T)p Fo(>)g Fp(v)n(oid)g Fq(rlimit)e Fp(\(T)j(L,)g(T)f(U,)h(T)g(&n\))
476 2825 y Fg(A)f(version)i(of)e(limit)f(which)i(takes)h(a)f(r)l(efer)l
(enc)l(e)h(as)f(its)g(ar)l(gument.)275 3027 y Fk(\210)42
b Fp(double)27 b Fq(deg2rad)h Fp(\(double\))476 3154
y Fg(Converts)h(de)l(gr)l(e)l(es)h(to)e(r)l(adians.)275
3355 y Fk(\210)42 b Fp(double)27 b Fq(rad2deg)h Fp(\(double\))476
3483 y Fg(Converts)h(r)l(adians)g(to)f(de)l(gr)l(e)l(es.)275
3684 y Fk(\210)42 b Fq(V)-8 b(ector2D)28 b(op)s(erator)k
Fh(\003)27 b Fp(\(double)h(l,)g(const)f Fq(V)-8 b(ector2D)28
b Fp(&v\))476 3811 y Fg(R)l(eturns)h(a)f(ve)l(ctor)h(multiplie)l(d)e
(by)h(a)f(double.)275 4013 y Fk(\210)42 b Fq(V)-8 b(ector2D)28
b(P)m(olarV)-8 b(ector)29 b Fp(\(double)e(l,)h(double)g(a\))476
4140 y Fg(Cr)l(e)l(ates)h(a)f Ff(V)-7 b(ector2D)27 b
Fg(obje)l(ct)i(using)f(old)f(PolarV)-6 b(e)l(ctor)30
b(syntax.)275 4342 y Fk(\210)42 b Fp(b)r(o)r(ol)22 b
Fq(LoadPlugin)f Fp(\(const)h(c)n(har)f Fh(\003)p Fp(plugin,)i(std::v)n
(ector)p Fo(<)e Fp(std::string)g Fo(>)h Fp(&names,)g(std::v)n(ector)p
Fo(<)f Fp(Get-)358 4441 y(Sim)n(ulationBase)26 b Fh(\003)h
Fo(>)g Fp(&funcs\))275 4552 y Fk(\210)42 b Fp(b)r(o)r(ol)23
b Fq(LoadPlugin)g Fp(\(const)h(c)n(har)e Fh(\003)p Fp(plugin,)i
(std::map)p Fo(<)f Fp(std::string,)h(GetSim)n(ulationBase)f
Fh(\003)g Fo(>)g Fp(&out-)358 4651 y(put\))275 4762 y
Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(UnloadPlugin)g Fp(\(const)h(c)n(har)
e Fh(\003)p Fp(plugin\))275 4872 y Fk(\210)42 b Fp(in)n(t)27
b Fq(UnloadPlugins)g Fp(\(\))275 4983 y Fk(\210)42 b
Fp(BEAST)p 647 4983 25 4 v 29 w(DLL)92 b(v)n(oid)f Fq(SetupSim)m
(ulationT)-8 b(able)89 b Fp(\(std::v)n(ector)p Fo(<)i
Fp(std::string)g Fo(>)g Fp(&names,)358 5082 y(std::v)n(ector)p
Fo(<)26 b Fp(GetSim)n(ulationBase)g Fh(\003)i Fo(>)f
Fp(&funcs\))275 5193 y Fk(\210)42 b Fp(b)r(o)r(ol)27
b Fq(ScreenGrab)i Fp(\()p Fq(W)-8 b(orld)27 b Fp(&theW)-7
b(orld,)27 b(std::string)h(\014lename\))275 5303 y Fk(\210)42
b Fp(template)p Fo(<)p Fp(class)26 b(T)p Fo(>)h Fq(Sensor)g
Fh(\003)h Fq(NearestSignalSensor)e Fp(\(in)n(t)i(highestSignal\))476
5430 y Fg(Constructs)d(and)d(r)l(eturns)i(a)f(p)l(ointer)g(to)g(a)f
(sensor)i(which)e(wil)t(l)f(r)l(eturn)j(the)f(signal)g(of)e(the)i(ne)l
(ar)l(est)i Ff(Signaller)476 5522 y Fg(of)i(the)h(sp)l(e)l(ci\014e)l(d)
h(typ)l(e.)p 150 5723 4034 4 v 150 5823 a Fn(Generated)d(on)e(Sun)h(F)
-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 64 72
64 71 bop -358 70 a Fq(64)211 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Namespace)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
150 333 a Fj(V)-9 b(ariables)275 520 y Fk(\210)42 b Fp(const)27
b(double)g Fq(ANIMA)-8 b(T)p 1252 520 29 4 v 35 w(RADIUS)28
b Fp(=)g(5.0)476 645 y Fg(A)n(nimat's)f(default)h(r)l(adius.)275
845 y Fk(\210)42 b Fp(const)27 b(double)g Fq(ANIMA)-8
b(T)p 1252 845 V 35 w(MAX)p 1522 845 V 34 w(SPEED)28
b Fp(=)f(100.0)476 970 y Fg(A)n(nimat's)g(default)h(maximum)f(sp)l(e)l
(e)l(d.)275 1170 y Fk(\210)42 b Fp(const)27 b(double)g
Fq(ANIMA)-8 b(T)p 1252 1170 V 35 w(MIN)p 1489 1170 V
34 w(SPEED)28 b Fp(=)f(-50.0)476 1295 y Fg(A)n(nimat's)g(default)h
(minimum)e(sp)l(e)l(e)l(d.)275 1495 y Fk(\210)42 b Fp(const)27
b(double)g Fq(ANIMA)-8 b(T)p 1252 1495 V 35 w(MAX)p 1522
1495 V 34 w(R)m(OT)g(A)g(TE)29 b Fp(=)e(TW)n(OPI)476
1620 y Fg(The)g(default)h(max)g(r)l(otation/fr)l(ame.)275
1820 y Fk(\210)42 b Fp(const)27 b(double)g Fq(ANIMA)-8
b(T)p 1252 1820 V 35 w(DRA)m(G)28 b Fp(=)f(50.0)476 1945
y Fg(A)n(n)g(arbitr)l(ary)j(friction)d(value.)275 2145
y Fk(\210)42 b Fp(const)27 b(double)g Fq(ANIMA)-8 b(T)p
1252 2145 V 35 w(A)m(CCEL)28 b Fp(=)g(5000.0)476 2270
y Fg(AN)f(arbitr)l(ary)j(ac)l(c)l(eler)l(ation)f(value.)275
2470 y Fk(\210)42 b Fp(const)27 b(double)g Fq(ANIMA)-8
b(T)p 1252 2470 V 35 w(TIMESTEP)28 b Fp(=)f(0.05)476
2595 y Fg(The)g(default)h(time)g(step.)275 2795 y Fk(\210)42
b Fp(const)27 b(in)n(t)h Fq(ANIMA)-8 b(T)p 1112 2795
V 34 w(P)g(AR)g(TS)29 b Fp(=)e(4)476 2921 y Fg(The)g(numb)l(er)i(of)e
(di\013er)l(ent)i(c)l(olours.)275 3120 y Fk(\210)42 b
Fp(const)27 b(in)n(t)h Fq(MONITOR)p 1192 3120 V 33 w(BARHEIGHT)f
Fp(=)h(25)275 3229 y Fk(\210)42 b Fp(const)27 b(unsigned)g(in)n(t)h
Fq(MAX)p 1289 3229 V 34 w(COLLISIONS)h Fp(=)e(200)275
3338 y Fk(\210)42 b Fp(const)27 b(\015oat)g Fq(ColourP)m(alette)g
Fp([)14 b(][4])476 3463 y Fg(A)27 b(glob)l(al)h(c)l(olour)g(p)l(al)t
(lete.)36 b(Could)27 b(pr)l(ob)l(ably)i(do)f(with)g(many)f(mor)l(e)h(c)
l(olours.)275 3663 y Fk(\210)42 b Fp(const)27 b(double)g
Fq(DRA)-11 b(W)g(ABLE)p 1402 3663 V 35 w(RADIUS)29 b
Fp(=)e(50.0)476 3788 y Fg(The)g(default)h(diameter)h(for)e(dr)l
(awables.)275 3988 y Fk(\210)42 b Fp(const)27 b(double)g
Fq(FFN)p 1043 3988 V 35 w(A)m(CTIV)-11 b(A)j(TION)p 1692
3988 V 36 w(RESPONSE)26 b Fp(=)i(1)476 4113 y Fg(This)f(value)h(de)l
(cides)h(the)f(curve)h(of)e(the)i(sigmoid)e(function.)275
4313 y Fk(\210)42 b Fp(const)27 b(in)n(t)h Fq(FFN)p 903
4313 V 34 w(COLSIZE)g Fp(=)f(6)476 4438 y Fg(The)g(width)h(of)f(c)l
(olumns)h(in)g(T)-6 b(oString)28 b(output.)275 4638 y
Fk(\210)42 b Fp(const)27 b(\015oat)g Fq(SENSOR)p 1158
4638 V 33 w(ALPHA)i Fp(=)e(0.1f)476 4763 y Fg(T)-6 b(r)l(ansp)l(ar)l
(ency)30 b(value)e(for)g(Sensors.)275 4963 y Fk(\210)42
b Fp(const)27 b(double)g Fq(BEAM)p 1142 4963 V 34 w(SENSOR)p
1564 4963 V 33 w(SCOPE)h Fp(=)f(PI/4)476 5088 y Fg(The)g(default)h(sc)l
(op)l(e)h(for)f Ff(BeamSensor)p Fg(.)275 5288 y Fk(\210)42
b Fp(const)27 b(double)g Fq(BEAM)p 1142 5288 V 34 w(SENSOR)p
1564 5288 V 33 w(RANGE)g Fp(=)h(250.0)476 5413 y Fg(The)f(default)h(r)l
(ange)h(for)f Ff(BeamSensor)p Fg(.)275 5613 y Fk(\210)42
b Fp(const)27 b(\015oat)g Fq(BEAM)p 1064 5613 V 34 w(DRA)-11
b(W)p 1403 5613 V 34 w(QUALITY)29 b Fp(=)f(0.1f)p -358
5723 4034 4 v -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 65 73
65 72 bop 150 70 a Fq(9.1)31 b(BEAST)h(Namespace)f(Reference)2519
b(65)p 150 103 4034 4 v 476 333 a Fg(The)27 b(default)h(dr)l(aw)h
(quality)f(for)f Ff(BeamSensor)p Fg(.)275 528 y Fk(\210)42
b Fp(const)27 b(unsigned)g(in)n(t)h Fq(TRAIL)p 1357 528
29 4 v 35 w(LENGTH)g Fp(=)f(30)275 632 y Fk(\210)42 b
Fp(const)27 b(double)g Fq(W)m(ORLD)p 1218 632 V 35 w(WIDTH)h
Fp(=)f(800.0)275 735 y Fk(\210)42 b Fp(const)27 b(double)g
Fq(W)m(ORLD)p 1218 735 V 35 w(HEIGHT)g Fp(=)g(600.0)150
1011 y Fj(9.1.1)112 b(Detailed)37 b(Description)150 1212
y Fp(The)28 b(namespace)e(for)h(ev)n(erything)g(in)h(the)g(sim)n
(ulation)f(en)n(vironmen)n(t.)150 1488 y Fj(9.1.2)112
b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150 1689 y
Fq(9.1.2.1)93 b(string)31 b(add)p 947 1689 V 35 w(slashes)g(\(const)h
(string)f(&)h Fe(str)p Fq(\))150 1889 y Fp(Replaces)27
b(spaces)f(with)i(underscores)d(and)i(adds)g(bac)n(kslashes)f(to)h
(other)g(c)n(haracters)e(whic)n(h)i(migh)n(t)g(b)r(e)h(in)n(ter-)150
1989 y(preted)g(as)e(white)i(space)f(b)n(y)h(an)f(input)h(stream.)142
2180 y Fq(See)j(also:)311 2280 y(strip)p 511 2280 V 34
w(slashes)150 2602 y(9.1.2.2)93 b(ostream&)31 b(op)s(erator)p
Fo(<<)g Fq(\(ostream)f(&)i Fe(out)p Fq(,)f(const)h(SimOb)5
b(ject)31 b(&)h Fe(obj)p Fq(\))70 b Fi([related])150
2802 y Fp(An)28 b(output)g(op)r(erator)e(for)h(all)g(classes)g(deriv)n
(ed)g(from)g Fq(SimOb)5 b(ject)p Fp(.)142 2993 y Fq(P)m(arameters:)311
3093 y Fe(out)42 b Fp(An)28 b(output)g(stream.)311 3218
y Fe(obj)42 b Fp(An)28 b(ob)5 b(ject)27 b(deriv)n(ed)g(from)g
Fq(SimOb)5 b(ject)p Fp(.)142 3409 y Fq(Returns:)311 3508
y Fp(A)28 b(reference)f(to)h(output)g(stream.)150 3830
y Fq(9.1.2.3)93 b(istream&)30 b(op)s(erator)p Fo(>>)i
Fq(\(istream)e(&)i Fe(in)p Fq(,)f(SimOb)5 b(ject)30 b(&)i
Fe(obj)p Fq(\))71 b Fi([related])150 4031 y Fp(An)28
b(input)g(op)r(erator)e(for)h(all)h(classes)e(deriv)n(ed)h(from)g
Fq(SimOb)5 b(ject)p Fp(.)142 4222 y Fq(P)m(arameters:)311
4321 y Fe(in)41 b Fp(An)28 b(input)h(stream.)311 4446
y Fe(obj)42 b Fp(An)28 b(ob)5 b(ject)27 b(deriv)n(ed)g(from)g
Fq(SimOb)5 b(ject)p Fp(.)142 4637 y Fq(Returns:)311 4737
y Fp(A)28 b(reference)f(to)h(input)g(stream.)150 5059
y Fq(9.1.2.4)93 b(string)31 b(strip)p 989 5059 V 34 w(slashes)g
(\(const)h(string)f(&)h Fe(str)p Fq(\))150 5259 y Fp(Remo)n(v)n(es)26
b(the)i(slashes)f(added)g(b)n(y)g(add)p 1410 5259 25
4 v 30 w(slashes)g(and)g(reinstates)g(the)h(original)e(string.)142
5451 y Fq(See)31 b(also:)311 5550 y(add)p 469 5550 29
4 v 35 w(slashes)p 150 5723 4034 4 v 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 66 74
66 73 bop -358 70 a Fq(66)211 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(Namespace)f(Do)s(cumen)m(tation)p -358 103 4034 4 v
-358 5723 V -192 5823 a Fn(Generated)c(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 67 75
67 74 bop 150 1003 a Fm(Chapter)65 b(10)150 1465 y Fr(BEAST)77
b(-)h(Bioinspired)150 1714 y(Ev)-6 b(olutionary)76 b(Agen)-6
b(t)78 b(Sim)-6 b(ulation)150 1963 y(T)-19 b(o)6 b(olkit)77
b(Class)f(Do)6 b(cumen)-6 b(tation)150 2492 y Fl(10.1)136
b(BEAST::Animat)44 b(Class)i(Reference)150 2907 y Fp(Animats)28
b(can)f(mo)n(v)n(e)g(around)f(and)i(in)n(teract)f(with)h(other)f(ob)5
b(jects)27 b(in)h(the)g(w)n(orld.)150 3054 y Fi(#include)40
b Fo(<)p Fi(animat.h)p Fo(>)150 3201 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Animat:)1024 4850 y @beginspecial
35 @llx 35 @lly 429 @urx 277 @ury 2132 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Animat__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 429 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 429 277
%%PageOrientation: Portrait
gsave
35 35 394 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node3
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 135 112 moveto
224 112 lineto
224 127 lineto
135 127 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 135 112 moveto
224 112 lineto
224 127 lineto
135 127 lineto
closepath
stroke
gsave 10 dict begin
179 115 moveto 79 -0.5 (BEAST::Animat) alignedtext
end grestore
end grestore

%	Node6
[ /Rect [ 0 61 102 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Bacterium.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
102 60 lineto
102 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
51 63 moveto 92 -0.5 (BEAST::Bacterium) alignedtext
end grestore
end grestore

%	Node3 -> Node6
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 152 109 moveto
128 99 92 84 70 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 150 111 moveto
160 112 lineto
152 106 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node7
[ /Rect [ 120 61 238 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1DNNAnimat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 120 60 moveto
238 60 lineto
238 75 lineto
120 75 lineto
closepath
stroke
gsave 10 dict begin
179 63 moveto 108 -0.5 (BEAST::DNNAnimat) alignedtext
end grestore
end grestore

%	Node3 -> Node7
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 179 103 moveto
179 94 179 83 179 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 102 moveto
179 112 lineto
182 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node9
[ /Rect [ 265 61 377 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1FFNAnimat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 265 60 moveto
377 60 lineto
377 75 lineto
265 75 lineto
closepath
stroke
gsave 10 dict begin
321 63 moveto 102 -0.5 (BEAST::FFNAnimat) alignedtext
end grestore
end grestore

%	Node3 -> Node9
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 209 109 moveto
236 99 276 84 300 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 209 106 moveto
200 112 lineto
210 111 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node4
[ /Rect [ 122 165 236 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 122 164 moveto
237 164 lineto
237 179 lineto
122 179 lineto
closepath
stroke
gsave 10 dict begin
179 167 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node4 -> Node3
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 179 155 moveto
179 146 179 135 179 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 154 moveto
179 164 lineto
182 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node5
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 130 216 moveto
229 216 lineto
229 231 lineto
130 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
179 219 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node5 -> Node4
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 179 207 moveto
179 198 179 187 179 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 206 moveto
179 216 lineto
182 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node8
[ /Rect [ 106 9 242 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvoDNNAnimat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 106 8 moveto
243 8 lineto
243 23 lineto
106 23 lineto
closepath
stroke
gsave 10 dict begin
174 11 moveto 127 -0.5 (BEAST::EvoDNNAnimat) alignedtext
end grestore
end grestore

%	Node7 -> Node8
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 51 moveto
176 42 176 31 175 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 174 50 moveto
178 60 lineto
179 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node10
[ /Rect [ 260 9 392 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvoFFNAnimat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 260 8 moveto
392 8 lineto
392 23 lineto
260 23 lineto
closepath
stroke
gsave 10 dict begin
326 11 moveto 122 -0.5 (BEAST::EvoFFNAnimat) alignedtext
end grestore
end grestore

%	Node9 -> Node10
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 323 51 moveto
324 42 324 31 325 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 321 50 moveto
322 60 lineto
326 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 5613 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::Animat:)p eop
%%Page: 68 76
68 75 bop -358 70 a Fq(68)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 169
1734 a @beginspecial 35 @llx 35 @lly 1073 @urx 477 @ury
4184 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Animat__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 1073 477
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 1073 477
%%PageOrientation: Portrait
gsave
35 35 1038 442 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node11
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 939 199 moveto
1028 199 lineto
1028 214 lineto
939 214 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 939 199 moveto
1028 199 lineto
1028 214 lineto
939 214 lineto
closepath
stroke
gsave 10 dict begin
983 202 moveto 79 -0.5 (BEAST::Animat) alignedtext
end grestore
end grestore

%	Node12
[ /Rect [ 514 342 628 356 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 514 341 moveto
629 341 lineto
629 356 lineto
514 356 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
571 344 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node12 -> Node11
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 638 351 moveto
728 353 882 350 920 311 curveto
943 287 930 271 936 239 curveto
938 232 936 230 939 225 curveto
942 221 947 217 951 215 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 639 349 moveto
629 351 lineto
639 354 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node18
[ /Rect [ 9 342 107 356 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Vector2D.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 9 341 moveto
108 341 lineto
108 356 lineto
9 356 lineto
closepath
stroke
gsave 10 dict begin
58 344 moveto 89 -0.5 (BEAST::Vector2D) alignedtext
end grestore
end grestore

%	Node18 -> Node11
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 116 362 moveto
119 364 121 366 126 368 curveto
209 391 234 368 320 368 curveto
536 367 591 388 804 365 curveto
857 359 881 374 920 340 curveto
937 325 932 315 936 294 curveto
940 278 935 273 938 258 curveto
942 241 942 234 953 222 curveto
956 219 959 217 963 215 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 117 360 moveto
107 357 lineto
115 364 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
571 411 moveto 78 -0.5 (collisionNormal) alignedtext
571 400 moveto 65 -0.5 (collisionPoint) alignedtext
571 389 moveto 64 -0.5 (startLocation) alignedtext
571 378 moveto 38 -0.5 (velocity) alignedtext
end grestore
end grestore

%	Node18 -> Node12
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 117 349 moveto
216 349 415 349 513 349 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 118 347 moveto
108 349 lineto
118 352 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
223 352 moveto 184 -0.5 (VECTOR2D_FAKE_REFERENCE) alignedtext
end grestore
end grestore

%	Node32
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 442 294 moveto
700 294 lineto
700 309 lineto
442 309 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
571 297 moveto 248 -0.5 (BEAST::auto_property< Vector2D, Vector2D & >) alignedtext
end grestore
end grestore

%	Node18 -> Node32
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 109 339 moveto
117 336 118 332 126 330 curveto
230 300 352 294 442 295 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 109 336 moveto
100 341 lineto
110 341 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
223 333 moveto 26 -0.5 (value) alignedtext
end grestore
end grestore

%	Node14
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 483 225 moveto
659 225 lineto
659 240 lineto
483 240 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
571 228 moveto 166 -0.5 (BEAST::auto_property< double >) alignedtext
end grestore
end grestore

%	Node14 -> Node11
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 667 231 moveto
738 228 835 224 920 215 curveto
926 214 932 214 938 213 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 669 229 moveto
659 231 lineto
669 234 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
871 247 moveto 49 -0.5 (MinSpeed) alignedtext
871 236 moveto 51 -0.5 (MaxSpeed) alignedtext
871 225 moveto 48 -0.5 (MaxTurn) alignedtext
end grestore
end grestore

%	Node28
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 354 174 moveto
788 174 lineto
788 189 lineto
354 189 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
571 177 moveto 424 -0.5 (BEAST::auto_indexed_property< ControlContainer, const ControlContainer &, void >) alignedtext
end grestore
end grestore

%	Node28 -> Node11
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 798 185 moveto
839 188 881 191 920 196 curveto
928 197 937 198 945 199 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 798 183 moveto
788 185 lineto
798 188 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
871 199 moveto 41 -0.5 (Controls) alignedtext
end grestore
end grestore

%	Node30
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 445 112 moveto
698 112 lineto
698 127 lineto
445 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
571 115 moveto 243 -0.5 (BEAST::auto_property< double, double, double >) alignedtext
end grestore
end grestore

%	Node30 -> Node11
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 707 120 moveto
790 123 887 131 920 156 curveto
934 166 926 178 938 190 curveto
943 194 948 197 954 199 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 708 118 moveto
698 120 lineto
708 123 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
871 170 moveto 56 -0.5 (PowerUsed) alignedtext
871 159 moveto 88 -0.5 (DistanceTravelled) alignedtext
end grestore
end grestore

%	Node31
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 534 61 moveto
608 61 lineto
608 76 lineto
534 76 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
571 64 moveto 64 -0.5 (BEAST::Trail) alignedtext
end grestore
end grestore

%	Node31 -> Node11
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 618 68 moveto
703 66 881 69 920 111 curveto
921 112 938 185 938 186 curveto
943 192 950 196 957 199 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 618 66 moveto
608 68 lineto
618 71 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
871 114 moveto 19 -0.5 (trail) alignedtext
end grestore
end grestore

%	Node32 -> Node11
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 708 302 moveto
792 299 889 290 920 263 curveto
937 248 922 231 938 217 curveto
939 216 940 215 942 215 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 710 300 moveto
700 302 lineto
710 305 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
871 295 moveto 41 -0.5 (Velocity) alignedtext
end grestore
end grestore

%	Node33
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 338 10 moveto
804 10 lineto
804 25 lineto
338 25 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
571 13 moveto 456 -0.5 (BEAST::auto_indexed_pointer_property< SensorContainer, const SensorContainer &, void >) alignedtext
end grestore
end grestore

%	Node33 -> Node11
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 812 24 moveto
862 30 904 41 920 60 curveto
921 61 938 183 938 184 curveto
942 191 949 196 956 199 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 814 22 moveto
804 23 lineto
814 27 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
871 63 moveto 36 -0.5 (Sensors) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2099 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2286 y Fk(\210)42 b Fq(Animat)26 b Fp(\(\))476
2411 y Fg(Constructor)k(for)e Ff(Animat)p Fg(,)f(sets)i(most)f(values)g
(to)h(0)e(or)h(default.)275 2611 y Fk(\210)42 b Fp(virtual)27
b Fh(\030)p Fq(Animat)f Fp(\(\))476 2737 y Fg(Destructor:)51
b(de)l(cr)l(ements)37 b(A)n(nimat::numA)n(nimats)d(and)h(deletes)g(al)t
(l)f(the)h(sensors)i(which)d(ar)l(e)h(owne)l(d)g(by)476
2828 y(this)28 b Ff(Animat)p Fg(.)275 3028 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(Init)i Fp(\(\))476 3153
y Fg(Sets)g(the)h(tr)l(ail)e(c)l(olour)i(to)f(match)g(the)h(animat)e
(and)h(c)l(al)t(ls)g Ff(W)-7 b(orldOb)5 b(ject::Init\(\))p
Fg(.)275 3353 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Add)i
Fp(\(std::string)g(name,)f Fq(Sensor)h Fh(\003)p Fp(s\))476
3479 y Fg(A)l(dds)g(name)l(d)g(sensors)i(to)e(the)g(A)n(nimat's)g
(sensor)h(c)l(ontainer,)f(and)g(sets)h(the)g(owner)f(to)g(this)g
Ff(Animat)p Fg(.)275 3679 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(Share)j Fp(\(std::string)e(name,)h Fq(Sensor)f Fh(\003)p
Fp(s\))476 3804 y Fg(A)n(l)t(lows)g(an)h Ff(Animat)f
Fg(to)i(have)f(ac)l(c)l(ess)h(to)g(a)e(sensor)i(without)g(taking)f
(ownership)h(of)e(it.)275 4004 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(Up)s(date)j Fp(\(\))476 4129 y Fg(Up)l(dates)i(the)g
(animat's)f(p)l(osition)g(ac)l(c)l(or)l(ding)h(to)g(velo)l(city)f(and)g
(p)l(erforms)h(up)l(dates)h(on)e(memb)l(ers)h(\(sensors)476
4220 y(and)d(tr)l(ail\).)275 4420 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(Con)m(trol)i Fp(\(\))476 4546 y Fg(Override)g(this)g
(metho)l(d)h(to)f(pr)l(ovide)h(your)f(own)g(c)l(ontr)l(ol)h(metho)l(d.)
275 4746 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(In)m(teract)k
Fp(\()p Fq(Animat)d Fh(\003)p Fp(\))476 4871 y Fg(Pr)l(o)l(c)l(esses)j
(c)l(ol)t(lisions)d(with)h(other)h(animats,)e(including)h(rudimentary)h
(physics)f(\(sticky)h(c)l(ol)t(lisions\).)275 5071 y
Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(In)m(teract)k
Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(\))476
5196 y Fg(Pr)l(o)l(c)l(esses)i(c)l(ol)t(lisions)d(with)h(non-animats,)g
(including)g(displac)l(ement,)g(sensors)h(and)f(c)l(ol)t(lision)f
(events.)275 5396 y Fk(\210)42 b Fp(virtual)27 b(b)r(o)r(ol)g
Fq(IsT)-8 b(ouc)m(hing)28 b Fp(\(const)g Fq(W)-8 b(orldOb)5
b(ject)27 b Fh(\003)p Fp(\))h(const)476 5522 y Fg(R)l(eturns)23
b(true)f(when)g(animat)g(is)f(touching)h(other,)i(and)e(Sets)g(the)g(c)
l(ol)t(lision)f(p)l(oint)h(to)g(a)f(p)l(oint)h(on)g(the)g(animat.)p
-358 5723 V -192 5823 a Fn(Generated)k(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 69 77
69 76 bop 150 70 a Fq(10.1)31 b(BEAST::Animat)f(Class)h(Reference)2354
b(69)p 150 103 4034 4 v 275 333 a Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(OnCollision)f Fp(\()p Fq(W)-8 b(orldOb)5
b(ject)28 b Fh(\003)p Fp(r\))275 450 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SensorIn)m(teract)j Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28
b Fh(\003)p Fp(other\))476 585 y Fg(Passes)h(a)e Ff(W)-7
b(orldOb)5 b(ject)30 b Fg(to)e(al)t(l)f(the)h(sensors)i(in)d(turn.)275
794 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Displa)m(y)i
Fp(\(\))476 928 y Fg(Displays)34 b(the)g Ff(Animat)h
Fg(along)f(with)g(its)g(sensors)h(and)g(tr)l(ail,)g(dep)l(ending)g(on)f
(the)g(c)l(on\014gur)l(ation)i(of)e(my-)476 1019 y(World.)275
1229 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Dra)m(w)j
Fp(\(\))476 1363 y Fg(Implementing)e(Dr)l(awable)h(-)g(dr)l(aws)h(the)f
Ff(Animat)g Fg(in)f(the)i(c)l(orr)l(e)l(ct)h(c)l(olour.)275
1572 y Fk(\210)42 b Fq(V)-8 b(ector2D)28 b(GetV)-8 b(elo)s(cit)m(y)27
b Fp(\(\))h(const)275 1690 y Fk(\210)42 b Fp(double)27
b Fq(GetMaxSp)s(eed)g Fp(\(\))i(const)275 1807 y Fk(\210)42
b Fp(double)27 b Fq(GetMinSp)s(eed)f Fp(\(\))i(const)275
1925 y Fk(\210)42 b Fp(double)27 b Fq(GetMaxRotateSp)s(eed)g
Fp(\(\))h(const)275 2043 y Fk(\210)42 b Fp(double)27
b Fq(GetTimeStep)f Fp(\(\))i(const)275 2161 y Fk(\210)42
b Fp(double)27 b Fq(GetDistanceT)-8 b(ra)m(v)m(elled)29
b Fp(\(\))f(const)275 2278 y Fk(\210)42 b Fp(double)27
b Fq(GetP)m(o)m(w)m(erUsed)i Fp(\(\))f(const)275 2396
y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetStartLo)s(cation)j
Fp(\(const)f Fq(V)-8 b(ector2D)28 b Fp(&l\))476 2531
y Fg(Sets)g(the)h(A)n(nimat's)e(starting)i(lo)l(c)l(ation.)275
2740 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetStartOrien)m(tation)j
Fp(\(double)f(o\))275 2857 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(Serialise)h Fp(\(std::ostream)g(&\))g(const)476
2992 y Fg(Outputs)i(the)f(A)n(nimat's)g(data)g(to)g(a)g(str)l(e)l(am.)
275 3201 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Unserialise)h
Fp(\(std::istream)g(&\))476 3335 y Fg(Inputs)h(the)g(A)n(nimat's)g
(data)g(fr)l(om)g(a)f(str)l(e)l(am.)275 3544 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetCollisionP)m(oin)m(t)g Fp(\(const)h
Fq(V)-8 b(ector2D)28 b Fp(&v\))g(const)275 3662 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetCollisionNormal)e Fp(\(const)j
Fq(V)-8 b(ector2D)28 b Fp(&v\))g(const)150 3963 y Fj(Static)36
b(Public)g(Mem)m(b)s(er)h(F)-9 b(unctions)275 4163 y
Fk(\210)42 b Fp(in)n(t)27 b Fq(GetNumAnimats)e Fp(\(\))476
4298 y Fg(R)l(eturns)k(the)f(glob)l(al)g Ff(Animat)g
Fg(c)l(ount,)g(A)n(nimat::numA)n(nimats.)275 4507 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetTimeStep)g Fp(\(double)i(t\))150
4807 y Fj(Public)36 b(A)m(ttributes)275 5008 y Fk(\210)42
b Fp(auto)p 525 5008 25 4 v 29 w(prop)r(ert)n(y)p Fo(<)26
b Fq(V)-8 b(ector2D)p Fp(,)28 b Fq(V)-8 b(ector2D)28
b Fp(&)g Fo(>)f Fq(V)-8 b(elo)s(cit)m(y)275 5126 y Fk(\210)42
b Fp(auto)p 525 5126 V 29 w(prop)r(ert)n(y)p Fo(<)26
b Fp(double)h Fo(>)h Fq(MinSp)s(eed)275 5243 y Fk(\210)42
b Fp(auto)p 525 5243 V 29 w(prop)r(ert)n(y)p Fo(<)26
b Fp(double)h Fo(>)h Fq(MaxSp)s(eed)275 5361 y Fk(\210)42
b Fp(auto)p 525 5361 V 29 w(prop)r(ert)n(y)p Fo(<)26
b Fp(double)h Fo(>)h Fq(MaxT)-8 b(urn)275 5479 y Fk(\210)42
b Fp(auto)p 525 5479 V 29 w(prop)r(ert)n(y)p Fo(<)26
b Fp(double,)h(double,)h(double)g Fo(>)f Fq(DistanceT)-8
b(ra)m(v)m(elled)275 5597 y Fk(\210)42 b Fp(auto)p 525
5597 V 29 w(prop)r(ert)n(y)p Fo(<)26 b Fp(double,)h(double,)h(double)g
Fo(>)f Fq(P)m(o)m(w)m(erUsed)p 150 5723 4034 4 v 150
5823 a Fn(Generated)f(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 70 78
70 77 bop -358 70 a Fq(70)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fj(Protected)36 b(T)m(yp)s(es)275 511 y Fk(\210)42
b Fp(t)n(yp)r(edef)28 b(std::map)p Fo(<)f Fp(std::string,)g
Fq(Sensor)h Fh(\003)f Fo(>)g Fq(SensorCon)m(tainer)476
628 y Fg(A)g(typ)l(e)l(def)i(for)e(the)i(A)n(nimat's)e(sensor)i(c)l
(ontainer,)g(sensors.)275 820 y Fk(\210)42 b Fp(t)n(yp)r(edef)28
b(SensorCon)n(tainer::iterator)c Fq(SensorIter)476 936
y Fg(A)j(typ)l(e)l(def)i(for)e(the)i(SensorContainer's)h(iter)l(ator.)
275 1128 y Fk(\210)42 b Fp(t)n(yp)r(edef)28 b(std::map)p
Fo(<)f Fp(std::string,)g(\015oat)g Fo(>)h Fq(Con)m(trolCon)m(tainer)476
1245 y Fg(A)f(typ)l(e)l(def)i(for)e(the)i(A)n(nimat's)e(c)l(ontr)l(ol)i
(c)l(ontainer,)g(c)l(ontr)l(ols.)275 1436 y Fk(\210)42
b Fp(t)n(yp)r(edef)28 b(Con)n(trolCon)n(tainer::iterator)23
b Fq(Con)m(trolIter)476 1553 y Fg(A)k(typ)l(e)l(def)i(for)e(the)i
(Contr)l(olContainer's)g(iter)l(ator.)150 1917 y Fj(Protected)36
b(Mem)m(b)s(er)i(F)-9 b(unctions)275 2096 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetV)-8 b(elo)s(cit)m(y)28 b Fp(\(const)f
Fq(V)-8 b(ector2D)29 b Fp(&p)n(v\))476 2212 y Fg(Sets)f(the)h(A)n
(nimat's)e(velo)l(city.)275 2404 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetV)-8 b(elo)s(cit)m(yX)28 b Fp(\(double)g(x\))476
2521 y Fg(Sets)g(the)h(X)e(c)l(omp)l(onent)i(of)f(the)g(A)n(nimat's)g
(velo)l(city.)275 2712 y Fk(\210)42 b Fp(v)n(oid)26 b
Fq(SetV)-8 b(elo)s(cit)m(yY)28 b Fp(\(double)g(y\))476
2829 y Fg(Sets)g(the)h(Y)e(c)l(omp)l(onent)i(of)f(the)g(A)n(nimat's)g
(velo)l(city.)275 3020 y Fk(\210)42 b Fp(v)n(oid)26 b
Fq(AddV)-8 b(elo)s(cit)m(y)28 b Fp(\(const)g Fq(V)-8
b(ector2D)28 b Fp(&v\))476 3137 y Fg(A)l(dds)g(a)g(value)g(\(p)l
(ossibly)g(ne)l(gative\))i(to)e(the)g(A)n(nimat's)g(velo)l(city.)275
3329 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetMaxSp)s(eed)i
Fp(\(double)g(s\))476 3445 y Fg(Sets)g(the)h(A)n(nimat's)e(maximum)g
(sp)l(e)l(e)l(d.)275 3637 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetMinSp)s(eed)h Fp(\(double)g(s\))476 3753 y Fg(Sets)h(the)h(A)n
(nimat's)e(minimum)f(sp)l(e)l(e)l(d.)275 3945 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetColour)h Fp(\()p Fq(AnimatP)m(artT)m(yp)s(e)p
Fp(,)i(const)f(\015oat)f Fh(\003)p Fp(\))476 4062 y Fg(Sets)h(the)h(c)l
(olour)f(of)f(the)i(sp)l(e)l(ci\014e)l(d.)275 4253 y
Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetColour)h Fp(\()p Fq(AnimatP)m(artT)m
(yp)s(e)p Fp(,)i(\015oat,)e(\015oat,)h(\015oat,)f(\015oat)g(a=1.0f)6
b(\))476 4370 y Fg(Sets)28 b(the)h(sp)l(e)l(ci\014e)l(d)g(p)l(art)g(of)
e(the)h Ff(Animat)g Fg(to)g(the)h(sp)l(e)l(ci\014e)l(d)f(c)l(olour.)275
4561 y Fk(\210)42 b Fp(const)27 b Fq(SensorCon)m(tainer)g
Fp(&)h Fq(GetSensors)e Fp(\(\))j(const)275 4662 y Fk(\210)42
b Fq(SensorCon)m(tainer)27 b Fp(&)g Fq(GetSensors)g Fp(\(\))275
4762 y Fk(\210)42 b Fp(const)27 b Fq(Con)m(trolCon)m(tainer)h
Fp(&)f Fq(GetCon)m(trols)g Fp(\(\))h(const)275 4862 y
Fk(\210)42 b Fq(Con)m(trolCon)m(tainer)27 b Fp(&)h Fq(GetCon)m(trols)f
Fp(\(\))150 5135 y Fj(Protected)36 b(A)m(ttributes)275
5313 y Fk(\210)42 b Fp(auto)p 525 5313 25 4 v 29 w(indexed)p
833 5313 V 30 w(p)r(oin)n(ter)p 1122 5313 V 29 w(prop)r(ert)n(y)p
Fo(<)f Fq(SensorCon)m(tainer)p Fp(,)k(const)d Fq(SensorCon)m(tainer)g
Fp(&,)j(v)n(oid)c Fo(>)358 5413 y Fq(Sensors)275 5513
y Fk(\210)h Fp(auto)p 525 5513 V 29 w(indexed)p 833 5513
V 30 w(prop)r(ert)n(y)p Fo(<)35 b Fq(Con)m(trolCon)m(tainer)p
Fp(,)k(const)d Fq(Con)m(trolCon)m(tainer)g Fp(&,)j(v)n(oid)c
Fo(>)h Fq(Con-)358 5613 y(trols)p -358 5723 4034 4 v
-192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 71 79
71 78 bop 150 70 a Fq(10.1)31 b(BEAST::Animat)f(Class)h(Reference)2354
b(71)p 150 103 4034 4 v 150 333 a Fj(F)-9 b(riends)275
540 y Fk(\210)42 b Fp(class)26 b Fq(AnimatMonitor)476
680 y Fg(T)-6 b(o)27 b(give)h(A)n(nimatMonitor)g(ac)l(c)l(ess)i(to)e
(sensor)h(output.)275 894 y Fk(\210)42 b Fp(class)26
b Fq(SelfSensor)476 1033 y Fg(T)-6 b(o)27 b(give)h Ff(SelfSensor)g
Fg(quick)g(ac)l(c)l(ess)i(to)e(al)t(l)f(info.)150 1436
y Fj(10.1.1)113 b(Detailed)36 b(Description)150 1643
y Fp(Animats)28 b(can)f(mo)n(v)n(e)g(around)f(and)i(in)n(teract)f(with)
h(other)f(ob)5 b(jects)27 b(in)h(the)g(w)n(orld.)150
1789 y(Unlik)n(e)19 b(a)h(plain)f Fq(W)-8 b(orldOb)5
b(ject)p Fp(,)21 b(Animats)f(ha)n(v)n(e)e(a)h(Con)n(trol)g(metho)r(d)h
(whic)n(h)f(allo)n(ws)f(them)i(to)g(b)r(e)f(customised)150
1889 y(with)25 b(new)f(con)n(trol)e(systems.)36 b(The)24
b Fq(Animat)f Fp(class)g(will)h(rarely)f(b)r(e)h(of)g(an)n(y)g(use)g
(on)f(its)i(o)n(wn,)f(rather)f(it)h(should)150 1989 y(b)r(e)35
b(used)g(as)f(a)h(base)f(class.)58 b(Examples)34 b(of)g(classes)g
(deriv)n(ed)g(from)h Fq(Animat)e Fp(include)j Fq(FFNAnimat)d
Fp(and)150 2088 y Fq(DNNAnimat)p Fp(.)142 2283 y Fq(See)e(also:)311
2382 y(Animat::Con)m(trol)311 2482 y(W)-8 b(orldOb)5
b(ject)311 2582 y(FFNAnimat)311 2681 y(DNNAnimat)150
2993 y Fj(10.1.2)113 b(Constructor)36 b(&)i(Destructor)e(Do)s(cumen)m
(tation)150 3199 y Fq(10.1.2.1)93 b(BEAST::Animat::Animat)28
b(\(\))150 3406 y Fp(Constructor)e(for)h Fq(Animat)p
Fp(,)g(sets)g(most)h(v)-5 b(alues)27 b(to)g(0)g(or)g(default.)150
3553 y(Sets)e(up)g(con)n(trols)e(for)i(motors,)f("left")g(and)h("righ)n
(t",)f(stores)f(the)j(start)e(lo)r(cation)g(and)h(incremen)n(ts)f(the)h
(global)150 3653 y Fq(Animat)i Fp(coun)n(ter,)f(Animat::n)n(umAnimats.)
38 b(Finally)-7 b(,)28 b(giv)n(es)e(the)i Fq(Animat)f
Fp(a)g(random)g(colour.)150 3964 y Fj(10.1.3)113 b(Mem)m(b)s(er)37
b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150 4171 y
Fq(10.1.3.1)93 b(v)m(oid)32 b(BEAST::Animat::Add)d(\(std::string)h
Fe(name)p Fq(,)i(Sensor)f Fh(\003)h Fe(s)p Fq(\))150
4378 y Fp(Adds)c(named)f(sensors)f(to)i(the)g(Animat's)g(sensor)e(con)n
(tainer,)g(and)i(sets)f(the)h(o)n(wner)f(to)g(this)h
Fq(Animat)p Fp(.)142 4612 y Fq(P)m(arameters:)311 4711
y Fe(name)43 b Fp(The)27 b(name)h(of)f(the)h(sensor)e(\(unique)i(to)g
(animat\).)311 4859 y Fe(s)42 b Fp(A)28 b(p)r(oin)n(ter)g(to)f(the)h
(sensor.)150 5259 y Fq(10.1.3.2)93 b(virtual)32 b(v)m(oid)g
(BEAST::Animat::Con)m(trol)d(\(\))71 b Fi([inline,)40
b(virtual])150 5466 y Fp(Ov)n(erride)26 b(this)i(metho)r(d)g(to)f(pro)n
(vide)g(y)n(our)f(o)n(wn)h(con)n(trol)f(metho)r(d.)150
5613 y(Reimplemen)n(ted)i(in)g Fq(BEAST::FFNAnimat)e
Fp(\(p.)14 b(134\),)27 b(and)g Fq(BEAST::DNNAnimat)f
Fp(\(p.)14 b(100\).)p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 72 80
72 79 bop -358 70 a Fq(72)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a(10.1.3.3)93 b(v)m(oid)32 b(BEAST::Animat::Displa)m(y)d(\(\))71
b Fi([virtual])150 541 y Fp(Displa)n(ys)21 b(the)i Fq(Animat)e
Fp(along)g(with)h(its)g(sensors)f(and)h(trail,)h(dep)r(ending)f(on)g
(the)g(con\014guration)f(of)h(m)n(yW)-7 b(orld.)142 782
y Fq(See)31 b(also:)311 882 y Fp(W)-7 b(orld::SetDispCon\014g)311
981 y Fq(W)f(orld::GetDispCon\014g)311 1081 y(W)g(orld::W)g(orldDispla)
m(yT)m(yp)s(e)150 1496 y(10.1.3.4)93 b(v)m(oid)32 b(BEAST::Animat::In)m
(teract)e(\(W)-8 b(orldOb)5 b(ject)32 b Fh(\003)g Fe(other)p
Fq(\))71 b Fi([virtual])150 1705 y Fp(Pro)r(cesses)25
b(collisions)i(with)h(non-animats,)f(including)g(displacemen)n(t,)h
(sensors)e(and)h(collision)g(ev)n(en)n(ts.)142 1945 y
Fq(P)m(arameters:)311 2044 y Fe(other)42 b Fp(A)28 b(p)r(oin)n(ter)f
(to)g(the)h Fq(W)-8 b(orldOb)5 b(ject)28 b Fp(w)n(e're)f(in)n
(teracting)f(with.)150 2303 y(Reimplemen)n(ted)i(from)f
Fq(BEAST::W)-8 b(orldOb)5 b(ject)27 b Fp(\(p.)15 b(215\).)150
2449 y(Reimplemen)n(ted)28 b(in)g Fq(BEAST::Bacterium)e
Fp(\(p.)14 b(75\).)150 2753 y Fq(10.1.3.5)93 b(v)m(oid)32
b(BEAST::Animat::In)m(teract)e(\(Animat)h Fh(\003)h Fe(other)p
Fq(\))70 b Fi([virtual])150 2962 y Fp(Pro)r(cesses)25
b(collisions)i(with)h(other)f(animats,)g(including)h(rudimen)n(tary)e
(ph)n(ysics)h(\(stic)n(ky)h(collisions\).)150 3109 y(Also)f(calls)g
(onCollide)g(ev)n(en)n(t)g(and)h(sensorIn)n(teract)d(on)i(b)r(oth)h
(animats.)142 3307 y Fq(P)m(arameters:)311 3406 y Fe(other)42
b Fp(A)28 b(p)r(oin)n(ter)f(to)g(the)h Fq(Animat)f Fp(w)n(e're)g(in)n
(teracting)f(with.)150 3795 y Fq(10.1.3.6)93 b(b)s(o)s(ol)33
b(BEAST::Animat::IsT)-8 b(ouc)m(hing)32 b(\(const)j(W)-8
b(orldOb)5 b(ject)35 b Fh(\003)f Fe(other)p Fq(\))h(const)564
3895 y Fi([virtual])150 4104 y Fp(Returns)24 b(true)f(when)h(animat)g
(is)f(touc)n(hing)g(other,)h(and)g(Sets)g(the)g(collision)f(p)r(oin)n
(t)h(to)f(a)h(p)r(oin)n(t)g(on)f(the)h(animat.)150 4250
y(Also)j(Sets)h(the)g(colision)f(normal)f(via)h(GetNearestP)n(oin)n(t.)
142 4448 y Fq(P)m(arameters:)311 4548 y Fe(other)42 b
Fp(A)28 b(p)r(oin)n(ter)f(to)g(the)h Fq(W)-8 b(orldOb)5
b(ject)28 b Fp(w)n(e're)f(c)n(hec)n(king.)150 4937 y
Fq(10.1.3.7)93 b(v)m(oid)32 b(BEAST::Animat::SensorIn)m(teract)e(\(W)-8
b(orldOb)5 b(ject)32 b Fh(\003)f Fe(other)p Fq(\))150
5146 y Fp(P)n(asses)26 b(a)h Fq(W)-8 b(orldOb)5 b(ject)27
b Fp(to)h(all)f(the)h(sensors)e(in)i(turn.)142 5386 y
Fq(P)m(arameters:)311 5485 y Fe(other)42 b Fp(A)28 b(p)r(oin)n(ter)f
(to)g(the)h Fq(W)-8 b(orldOb)5 b(ject)28 b Fp(b)r(eing)g(sensed.)p
-358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 73 81
73 80 bop 150 70 a Fq(10.1)31 b(BEAST::Animat)f(Class)h(Reference)2354
b(73)p 150 103 4034 4 v 150 333 a(10.1.3.8)93 b(v)m(oid)32
b(BEAST::Animat::Serialise)27 b(\(std::ostream)j(&)i
Fe(out)p Fq(\))f(const)71 b Fi([virtual])150 533 y Fp(Outputs)28
b(the)g(Animat's)g(data)f(to)g(a)h(stream.)142 745 y
Fq(P)m(arameters:)311 844 y Fe(out)42 b Fp(Reference)27
b(to)g(an)h(output)g(stream.)150 1074 y(Reimplemen)n(ted)g(from)f
Fq(BEAST::W)-8 b(orldOb)5 b(ject)27 b Fp(\(p.)15 b(216\).)150
1221 y(Reimplemen)n(ted)28 b(in)g Fq(BEAST::FFNAnimat)e
Fp(\(p.)14 b(135\),)27 b(and)g Fq(BEAST::DNNAnimat)f
Fp(\(p.)14 b(101\).)150 1484 y Fq(10.1.3.9)93 b(v)m(oid)32
b(BEAST::Animat::Share)d(\(std::string)h Fe(name)p Fq(,)i(Sensor)g
Fh(\003)f Fe(s)p Fq(\))72 b Fi([inline])150 1685 y Fp(Allo)n(ws)27
b(an)g Fq(Animat)g Fp(to)g(ha)n(v)n(e)g(access)f(to)i(a)f(sensor)f
(without)i(taking)f(o)n(wnership)f(of)i(it.)142 1896
y Fq(P)m(arameters:)311 1996 y Fe(name)43 b Fp(The)27
b(name)h(of)f(the)h(sensor)e(\(unique)i(to)g(this)g Fq(Animat)p
Fp(\).)311 2129 y Fe(s)42 b Fp(A)28 b(p)r(oin)n(ter)g(to)f(the)h
(sensor.)142 2341 y Fq(See)j(also:)311 2441 y(Animat::Add)150
2787 y(10.1.3.10)92 b(v)m(oid)32 b(BEAST::Animat::Unserialise)c
(\(std::istream)h(&)j Fe(in)p Fq(\))71 b Fi([virtual])150
2987 y Fp(Inputs)28 b(the)g(Animat's)g(data)f(from)g(a)h(stream.)142
3199 y Fq(P)m(arameters:)311 3299 y Fe(in)41 b Fp(Reference)28
b(to)f(an)g(input)i(stream.)150 3529 y(Reimplemen)n(ted)f(from)f
Fq(BEAST::W)-8 b(orldOb)5 b(ject)27 b Fp(\(p.)15 b(216\).)150
3675 y(Reimplemen)n(ted)28 b(in)g Fq(BEAST::FFNAnimat)e
Fp(\(p.)14 b(135\),)27 b(and)g Fq(BEAST::DNNAnimat)f
Fp(\(p.)14 b(101\).)150 3939 y Fq(10.1.3.11)92 b(v)m(oid)32
b(BEAST::Animat::Up)s(date)e(\(\))71 b Fi([virtual])150
4139 y Fp(Up)r(dates)32 b(the)f(animat's)g(p)r(osition)g(according)f
(to)h(v)n(elo)r(cit)n(y)f(and)h(p)r(erforms)g(up)r(dates)h(on)f(mem)n
(b)r(ers)f(\(sensors)150 4239 y(and)d(trail\).)150 4385
y(Note)d(that)g(the)g(recommended)g(w)n(a)n(y)f(of)g(in\015uencing)h
(the)h(b)r(eha)n(viour)d(of)i Fq(Animat)f Fp(sub)r(classes)g(is)h(to)g
(o)n(v)n(erload)150 4485 y(the)37 b(Con)n(trol)f(metho)r(d)i(of)f
Fq(Animat)p Fp(,)h(rather)e(than)h(Up)r(date)h(\(since)f(Con)n(trol)e
(is)i(called)g(at)g(an)f(opp)r(ortune)150 4585 y(momen)n(t)28
b(from)f(within)h(Up)r(date\).)150 4732 y(Reimplemen)n(ted)g(from)f
Fq(BEAST::W)-8 b(orldOb)5 b(ject)27 b Fp(\(p.)15 b(213\).)150
4878 y(Reimplemen)n(ted)28 b(in)g Fq(BEAST::Bacterium)e
Fp(\(p.)14 b(84\).)150 5025 y(The)28 b(do)r(cumen)n(tation)f(for)g
(this)h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)n(wing)e
(\014les:)275 5239 y Fk(\210)42 b Fq(animat.h)275 5347
y Fk(\210)g Fq(animat.cc)p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 74 82
74 81 bop -358 70 a Fq(74)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.2)136 b(BEAST::AreaSensor)44 b(Class)i(Reference)150
562 y Fp(Detects)28 b(ob)5 b(jects)27 b(within)i(an)e(area)f(sp)r
(eci\014ed)i(b)n(y)f(the)h(size)f(and)h(shap)r(e)f(of)h(the)g
Fq(AreaSensor)p Fp(.)150 709 y Fi(#include)40 b Fo(<)p
Fi(sensorbase.h)p Fo(>)150 855 y Fp(Inheritance)27 b(diagram)f(for)h
(BEAST::AreaSensor:)1601 1999 y @beginspecial 35 @llx
35 @lly 151 @urx 225 @ury 747 @rwi @setspecial
%%BeginDocument: classBEAST_1_1AreaSensor__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 151 225
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 151 225
%%PageOrientation: Portrait
gsave
35 35 116 190 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node35
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 4 8 moveto
111 8 lineto
111 23 lineto
4 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 4 8 moveto
111 8 lineto
111 23 lineto
4 23 lineto
closepath
stroke
gsave 10 dict begin
57 11 moveto 97 -0.5 (BEAST::AreaSensor) alignedtext
end grestore
end grestore

%	Node36
[ /Rect [ 16 61 98 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Sensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 16 60 moveto
99 60 lineto
99 75 lineto
16 75 lineto
closepath
stroke
gsave 10 dict begin
57 63 moveto 73 -0.5 (BEAST::Sensor) alignedtext
end grestore
end grestore

%	Node36 -> Node35
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 51 moveto
57 42 57 31 57 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 50 moveto
57 60 lineto
60 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node37
[ /Rect [ 0 113 114 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
115 112 lineto
115 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
57 115 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node37 -> Node36
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 103 moveto
57 94 57 83 57 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 102 moveto
57 112 lineto
60 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node38
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 8 164 moveto
107 164 lineto
107 179 lineto
8 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
57 167 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node38 -> Node37
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 155 moveto
57 146 57 135 57 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 154 moveto
57 164 lineto
60 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2329 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::AreaSensor:)1618 2922 y @beginspecial 35 @llx
35 @lly 143 @urx 121 @ury 707 @rwi @setspecial
%%BeginDocument: classBEAST_1_1AreaSensor__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 143 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 143 121
%%PageOrientation: Portrait
gsave
35 35 108 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node39
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
107 8 lineto
107 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
107 8 lineto
107 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
53 11 moveto 97 -0.5 (BEAST::AreaSensor) alignedtext
end grestore
end grestore

%	Node40
[ /Rect [ 12 61 94 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Sensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 12 60 moveto
95 60 lineto
95 75 lineto
12 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
53 63 moveto 73 -0.5 (BEAST::Sensor) alignedtext
end grestore
end grestore

%	Node40 -> Node39
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 53 51 moveto
53 42 53 31 53 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 51 50 moveto
53 60 lineto
56 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3285 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3472 y Fk(\210)42 b Fq(AreaSensor)27 b
Fp(\()p Fq(V)-8 b(ector2D)29 b Fp(l,)f(double)f(o\))275
3580 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(In)m(teract)k
Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(other\))476
3704 y Fg(Che)l(cks)37 b(if)d(the)j Ff(W)-7 b(orldOb)5
b(ject)38 b Fg(is)d(the)i(c)l(orr)l(e)l(ct)h(typ)l(e)f(using)f(MatchF)
-6 b(unc,)39 b(then)d(che)l(cks)i(if)c(the)j(obje)l(ct's)476
3795 y(c)l(entr)l(e)29 b(is)e(inside)h(the)g Ff(AreaSensor)g
Fg(and)g(c)l(al)t(ls)f(the)i(EvalF)-6 b(unc.)150 4166
y Fj(10.2.1)113 b(Detailed)36 b(Description)150 4367
y Fp(Detects)28 b(ob)5 b(jects)27 b(within)i(an)e(area)f(sp)r
(eci\014ed)i(b)n(y)f(the)h(size)f(and)h(shap)r(e)f(of)h(the)g
Fq(AreaSensor)p Fp(.)150 4514 y(Currenly)i(only)h(detects)g(ob)5
b(jects)30 b(when)i(their)f(lo)r(cation)f(is)h(within)h(the)f(area)f
(\(i.e.)47 b(just)32 b(touc)n(hing)e(the)i(area)150 4613
y(w)n(on't)27 b(trip)h(the)g(sensor\).)150 4760 y(The)g(do)r(cumen)n
(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)
n(wing)e(\014les:)275 4973 y Fk(\210)42 b Fq(sensorbase.h)275
5081 y Fk(\210)g Fp(sensor.cc)p -358 5723 V -192 5823
a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 75 83
75 82 bop 150 70 a Fq(10.3)31 b(BEAST::Bacterium)f(Class)h(Reference)
2233 b(75)p 150 103 4034 4 v 150 333 a Fl(10.3)136 b(BEAST::Bacterium)
44 b(Class)i(Reference)150 563 y Fi(#include)40 b Fo(<)p
Fi(bacterium.h)p Fo(>)150 710 y Fp(Inheritance)27 b(diagram)f(for)h
(BEAST::Bacterium:)1601 1857 y @beginspecial 35 @llx
35 @lly 151 @urx 225 @ury 747 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Bacterium__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 151 225
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 151 225
%%PageOrientation: Portrait
gsave
35 35 116 190 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node68
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 6 8 moveto
108 8 lineto
108 23 lineto
6 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 6 8 moveto
108 8 lineto
108 23 lineto
6 23 lineto
closepath
stroke
gsave 10 dict begin
57 11 moveto 92 -0.5 (BEAST::Bacterium) alignedtext
end grestore
end grestore

%	Node69
[ /Rect [ 13 61 101 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Animat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 13 60 moveto
102 60 lineto
102 75 lineto
13 75 lineto
closepath
stroke
gsave 10 dict begin
57 63 moveto 79 -0.5 (BEAST::Animat) alignedtext
end grestore
end grestore

%	Node69 -> Node68
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 51 moveto
57 42 57 31 57 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 50 moveto
57 60 lineto
60 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node70
[ /Rect [ 0 113 114 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
115 112 lineto
115 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
57 115 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node70 -> Node69
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 103 moveto
57 94 57 83 57 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 102 moveto
57 112 lineto
60 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node71
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 8 164 moveto
107 164 lineto
107 179 lineto
8 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
57 167 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node71 -> Node70
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 155 moveto
57 146 57 135 57 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 154 moveto
57 164 lineto
60 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2189 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::Bacterium:)1070 3425 y @beginspecial 35 @llx
35 @lly 406 @urx 279 @ury 2022 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Bacterium__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 406 279
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 406 279
%%PageOrientation: Portrait
gsave
35 35 371 244 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node72
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 125 8 moveto
227 8 lineto
227 23 lineto
125 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 125 8 moveto
227 8 lineto
227 23 lineto
125 23 lineto
closepath
stroke
gsave 10 dict begin
176 11 moveto 92 -0.5 (BEAST::Bacterium) alignedtext
end grestore
end grestore

%	Node73
[ /Rect [ 132 114 220 128 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Animat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 132 113 moveto
221 113 lineto
221 128 lineto
132 128 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
176 116 moveto 79 -0.5 (BEAST::Animat) alignedtext
end grestore
end grestore

%	Node73 -> Node72
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 176 105 moveto
176 83 176 41 176 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 174 103 moveto
176 113 lineto
179 103 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node80
[ /Rect [ 20 219 118 233 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Vector2D.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 20 218 moveto
119 218 lineto
119 233 lineto
20 233 lineto
closepath
stroke
gsave 10 dict begin
69 221 moveto 89 -0.5 (BEAST::Vector2D) alignedtext
end grestore
end grestore

%	Node80 -> Node72
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 56 211 moveto
38 189 7 142 27 108 curveto
53 61 114 35 149 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 54 212 moveto
62 218 lineto
57 209 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
75 122 moveto 76 -0.5 (swarmTotalVel) alignedtext
75 111 moveto 86 -0.5 (tumblingVelocity) alignedtext
end grestore
end grestore

%	Node80 -> Node73
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 84 211 moveto
106 189 150 146 168 129 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 82 209 moveto
77 218 lineto
86 213 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
188 188 moveto 78 -0.5 (collisionNormal) alignedtext
188 177 moveto 65 -0.5 (collisionPoint) alignedtext
188 166 moveto 64 -0.5 (startLocation) alignedtext
188 155 moveto 38 -0.5 (velocity) alignedtext
end grestore
end grestore

%	Node97
[ /Rect [ 238 114 348 128 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Distribution.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 238 113 moveto
348 113 lineto
348 128 lineto
238 128 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
293 116 moveto 100 -0.5 (BEAST::Distribution) alignedtext
end grestore
end grestore

%	Node97 -> Node72
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 278 107 moveto
253 85 204 41 185 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 276 108 moveto
285 113 lineto
279 105 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
296 78 moveto 59 -0.5 (nutrientDist) alignedtext
296 67 moveto 39 -0.5 (trailDist) alignedtext
296 56 moveto 66 -0.5 (attractantDist) alignedtext
296 45 moveto 61 -0.5 (repellentDist) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3794 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3984 y Fk(\210)42 b Fq(Bacterium)26 b
Fp(\(\))476 4112 y Fg(Sets)39 b(up)f(the)h Ff(Bacterium)g
Fg(with)g(a)f(series)h(of)f(standar)l(d)i(values)f(which)f(should)h(b)l
(e)g(overridden)g(by)g(the)476 4203 y(c)l(onstructors)31
b(of)c(inherite)l(d)i(classes.)275 4405 y Fk(\210)42
b Fp(virtual)27 b Fh(\030)p Fq(Bacterium)f Fp(\(\))476
4533 y Fg(Deletes)i(al)t(l)f(o\013spring)i(of)e(this)h
Ff(Bacterium)p Fg(.)275 4735 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(Up)s(date)j Fp(\(\))476 4862 y Fg(Up)l(dates)36
b(the)f(lo)l(c)l(ation)f(and)h(ener)l(gy)h(levels)e(of)g(the)h
Ff(Bacterium)p Fg(,)h(and)f(c)l(auses)g(various)h(changes)f(in)f(the)
476 4954 y(nutrient,)28 b(attr)l(actant)j(and)d(r)l(ep)l(el)t(lent)h
(distributions.)275 5156 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(Dra)m(w)j Fp(\(\))476 5283 y Fg(Override)f(the)h
Ff(Animat)e Fg(dr)l(awing)i(function)f(and)g(r)l(eturn)h(to)f(a)g
(simple)f(blob)h(shap)l(e.)275 5485 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(In)m(teract)k Fp(\()p Fq(W)-8 b(orldOb)5
b(ject)28 b Fh(\003)p Fp(\))476 5613 y Fg(Overlo)l(ade)l(d)h(to)f(stop)
h(b)l(acteria)g(fr)l(om)e(b)l(othering)i(to)f(che)l(ck)h(for)f(c)l(ol)t
(lisions)f(with)h(distribution)g(obje)l(cts.)p 150 5723
V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e
(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j
(Sim)n(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 76 84
76 83 bop -358 70 a Fq(76)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
441 a Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(UniIn)m(teract)k
Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(\))476
565 y Fg(Overlo)l(ade)l(d)g(to)g(ensur)l(e)g(that)g(b)l(acteria)h(ke)l
(ep)f(tr)l(ack)h(of)d(the)i(velo)l(cities)g(of)e(individuals)h(in)f
(their)i(lo)l(c)l(al)f(neigh-)476 656 y(b)l(ourho)l(o)l(d)i
(\(determine)l(d)h(by)e(swarmR)l(adius\).)275 856 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(Chec)m(kBoundary)k Fp(\(\))476 980
y Fg(Befor)l(e)24 b(we)g(do)g(any)g(che)l(cks,)h(ensur)l(e)h(that)f(b)l
(acteria)g(ar)l(e)f(al)t(l)f(within)g(b)l(oundaries)j(so)e(we)g(don)-8
b('t)24 b(end)g(up)g(trying)476 1072 y(to)k(r)l(e)l(ad)g(o\013)g(the)h
(e)l(dges)g(of)e(the)h(distribution.)275 1271 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(ReadDistributions)g Fp(\(\))476
1395 y Fg(Get)i(lo)l(c)l(al)g(information)f(fr)l(om)g(whichever)i
(distributions)g(ar)l(e)g(in)e(use.)275 1595 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(Up)s(dateDistributions)h Fp(\(\))476
1719 y Fg(Consumes)h(nutrient)h(and)f(r)l(ele)l(ases)i(attr)l(actant)g
(and)e(r)l(ep)l(el)t(lent)h(ac)l(c)l(or)l(ding)g(to)f(the)h(r)l
(elevant)g(variables.)275 1918 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(ReleaseA)m(ttractan)m(t)k Fp(\(\))476 2043 y Fg(R)l(ele)l(ases)24
b(a)f(quantity)i(of)d(attr)l(actant)27 b(dep)l(ending)d(on)f(the)h
(attr)l(actantR)l(ate,)k(attr)l(actantThr)l(eshold)f(and)d(avail-)476
2134 y(able)j(ener)l(gy.)275 2333 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(ReleaseRep)s(ellen)m(t)f Fp(\(\))476 2458 y Fg(R)l(ele)l(ases)i(a)
f(quantity)i(of)e(r)l(ep)l(el)t(lent)h(dep)l(ending)g(on)g(the)f(r)l
(ep)l(el)t(lentR)l(ate,)j(r)l(ep)l(el)t(lentThr)l(eshold)f(and)f
(available)476 2549 y(ener)l(gy.)275 2749 y Fk(\210)42
b Fq(V)-8 b(ector2D)28 b(GetSw)m(armV)-8 b(elo)s(cit)m(y)27
b Fp(\(\))476 2873 y Fg(Calculates)c(the)f(aver)l(age)i(velo)l(city)f
(of)e(the)i(individuals)f(within)f(swarmR)l(adius)i(of)f(the)h(curr)l
(ent)h Ff(Bacterium)p Fg(.)275 3072 y Fk(\210)42 b Fq(V)-8
b(ector2D)28 b(GetT)-8 b(um)m(blingV)g(elo)s(cit)m(y)25
b Fp(\(\))476 3197 y Fg(R)l(eturns)k(the)f(curr)l(ent)i(velo)l(city)e
(when)g(the)h(tumbling)e(movement)i(system)g(is)e(use)l(d.)275
3396 y Fk(\210)42 b Fq(V)-8 b(ector2D)28 b(GetNutrien)m(tGradien)m(t)g
Fp(\(\))476 3521 y Fg(R)l(eturns)h(the)f(lo)l(c)l(al)g(gr)l(adient)h
(of)e(the)h(nutrient)h(distribution.)275 3720 y Fk(\210)42
b Fq(V)-8 b(ector2D)28 b(GetA)m(ttractan)m(tGradien)m(t)j
Fp(\(\))476 3844 y Fg(R)l(eturns)e(the)f(lo)l(c)l(al)g(gr)l(adient)h
(of)e(the)h(attr)l(actant)j(distribution.)275 4044 y
Fk(\210)42 b Fq(V)-8 b(ector2D)28 b(GetRep)s(ellen)m(tGradien)m(t)e
Fp(\(\))476 4168 y Fg(R)l(eturns)j(the)f(lo)l(c)l(al)g(gr)l(adient)h
(of)e(the)h(r)l(ep)l(el)t(lent)h(distribution.)275 4368
y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Up)s(dateEnergy)j Fp(\(\))476
4492 y Fg(A)l(c)l(c)l(ounts)i(for)e(the)h(usual)g(ener)l(gy)h
(depletion)f(and)g(de)l(cides)g(whether)h(or)f(not)g(to)g(sp)l(orulate)
h(or)f(unsp)l(orulate)476 4583 y(dep)l(ending)e(on)g(the.)275
4783 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(FinishUp)s(date)h
Fp(\(\))476 4907 y Fg(This)20 b(should)h(b)l(e)f(c)l(al)t(le)l(d)h(at)g
(the)g(end)g(of)f(the)h(Up)l(date)g(metho)l(d)h(to)e(up)l(date)i(the)f
(lo)l(c)l(ation)g(b)l(ase)l(d)h(on)e(the)i(c)l(alculate)l(d)476
4998 y(velo)l(city.)275 5198 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetNextChec)m(k)j Fp(\(\))476 5322 y Fg(Use)l(d)22
b(with)f(the)h(T)-6 b(umbling)21 b(system)i(of)e(movement,)i(this)f
(metho)l(d)g(c)l(alculates)h(the)f(time)f(til)g(the)h(next)h(sampling)
476 5414 y(of)k(the)h(envir)l(onment.)275 5613 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(Repro)s(duce)i Fp(\(\))p -358 5723
V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 77 85
77 84 bop 150 70 a Fq(10.3)31 b(BEAST::Bacterium)f(Class)h(Reference)
2233 b(77)p 150 103 4034 4 v 476 333 a Fg(This)27 b(wil)t(l)f(c)l(ause)
j(a)f(duplic)l(ate)g(of)f(the)i(curr)l(ent)g Ff(Bacterium)g
Fg(to)f(b)l(e)g(adde)l(d)g(to)h(the)f Ff(W)-7 b(orld)p
Fg(.)275 532 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(GetO\013spring)h
Fp(\(std::list)p Fo(<)h Fq(Bacterium)f Fh(\003)g Fo(>)g
Fp(&\))h(const)476 656 y Fg(R)l(e)l(cursively)35 b(c)l(ompiles)f(a)f
(list)h(of)f(al)t(l)g(the)i(o\013spring)f(of)g(this)g
Ff(Bacterium)g Fg(and)g(its)g(o\013spring)h(-)f(a)g(whole)476
748 y(family)26 b(tr)l(e)l(e.)275 947 y Fk(\210)42 b
Fp(std::list)p Fo(<)27 b Fq(Bacterium)g Fh(\003)g Fo(>)g
Fq(GetO\013spring)g Fp(\(\))h(const)476 1072 y Fg(R)l(e)l(cursively)35
b(c)l(ompiles)f(a)f(list)h(of)f(al)t(l)g(the)i(o\013spring)f(of)g(this)
g Ff(Bacterium)g Fg(and)g(its)g(o\013spring)h(-)f(a)g(whole)476
1163 y(family)26 b(tr)l(e)l(e.)275 1362 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(GetO\013spring)h Fp(\(std::list)p
Fo(<)h Fq(Bacterium)f Fp(const)g Fh(\003)g Fo(>)g Fp(&\))h(const)476
1487 y Fg(R)l(e)l(cursively)35 b(c)l(ompiles)f(a)f(list)h(of)f(al)t(l)g
(the)i(o\013spring)f(of)g(this)g Ff(Bacterium)g Fg(and)g(its)g
(o\013spring)h(-)f(a)g(whole)476 1578 y(family)26 b(tr)l(e)l(e.)275
1777 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Reset)h Fp(\(\))275
1885 y Fk(\210)42 b Fp(virtual)27 b(std::string)g Fq(T)-8
b(oString)27 b Fp(\(\))i(const)476 2010 y Fg(Outputs)35
b(essential)f(information)f(ab)l(out)i(the)g Ff(Bacterium)p
Fg(,)g(N)e(-)h(curr)l(ent)h(nutrient)g(c)l(onc)l(entr)l(ation,)i(A)d(-)
476 2101 y(curr)l(ent)h(attr)l(actant)i(c)l(onc)l(entr)l(ation,)h(R)c
(-)g(curr)l(ent)i(r)l(ep)l(el)t(lent)e(c)l(onc)l(entr)l(ation,)k(E)c(-)
g(curr)l(ent)i(ener)l(gy,)g(T)e(-)476 2192 y(total)28
b(fo)l(o)l(d/ener)l(gy)i(c)l(onsume)l(d.)275 2392 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(OnClic)m(k)i Fp(\(\))476
2516 y Fg(Outputs)k(detaile)l(d)g(information)f(to)g(the)h(lo)l(g)f
(str)l(e)l(am)i(\(either)f(the)g(lo)l(g)f(window)g(in)f(the)i(GUI,)e
(or)i(standar)l(d)476 2607 y(out)c(in)f(b)l(atch)i(mo)l(de\).)275
2807 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetRepro)s(ductionCost)h
Fp(\(double)g(r\))275 2915 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetEnergyRate)i Fp(\(double)g(e\))275 3023 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetSp)s(oreEnergyRate)h Fp(\(double)h(s\))275
3130 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetA)m(ttractan)m(tCost)31
b Fp(\(double)c(a\))275 3238 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetRep)s(ellen)m(tCost)g Fp(\(double)h(r\))275 3346
y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetDeathThreshold)i
Fp(\(double)g(d\))275 3454 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetT)-8 b(um)m(bleTime)25 b Fp(\(double)j(t\))275
3562 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetT)-8 b(um)m(bleScale)27
b Fp(\(double)h(t\))275 3670 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetRepro)s(ductionThreshold)h Fp(\(double)g(r\))275
3778 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetSp)s(orulationThreshold)h
Fp(\(double)h(s\))275 3886 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetConsumptionRate)f Fp(\(double)j(c\))275 3994
y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetA)m(ttractan)m(tRate)31
b Fp(\(double)d(a\))275 4102 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetRep)s(ellen)m(tRate)g Fp(\(double)i(r\))275 4210
y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetSw)m(armRadius)h
Fp(\(double)h(s\))275 4318 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetSw)m(armIn\015uence)i Fp(\(double)g(s\))275 4426
y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetGradien)m(tIn\015uence)j
Fp(\(double)f(g\))275 4534 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetNutrien)m(tResp)s(onse)g Fp(\(double)i(n\))275
4641 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetA)m(ttractan)m(tResp)s(onse)j
Fp(\(double)f(a\))275 4749 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetRep)s(ellen)m(tResp)s(onse)e Fp(\(double)k(r\))275
4857 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetA)m(ttractan)m(tThreshold)31
b Fp(\(double)c(a\))275 4965 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetRep)s(ellen)m(tThreshold)g Fp(\(double)i(r\))275
5073 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetSp)s(eed)h
Fp(\(double)h(s\))275 5181 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetEnergy)i Fp(\(double)g(e\))275 5289 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetT)-8 b(otalEnergy)28 b Fp(\(double)g(e\))275
5397 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetNutrien)m(tDist)i
Fp(\()p Fq(Distribution)e Fh(\003)p Fp(dist\))275 5505
y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetA)m(ttractan)m(tDist)31
b Fp(\()p Fq(Distribution)26 b Fh(\003)p Fp(dist\))275
5613 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetRep)s(ellen)m(tDist)g
Fp(\()p Fq(Distribution)h Fh(\003)p Fp(dist\))p 150 5723
V 150 5823 a Fn(Generated)f(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e
(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j
(Sim)n(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 78 86
78 85 bop -358 70 a Fq(78)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
333 a Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetT)-8 b(railDist)28
b Fp(\()p Fq(Distribution)f Fh(\003)p Fp(dist\))275 440
y Fk(\210)42 b Fp(double)27 b Fq(GetRepro)s(ductionCost)f
Fp(\(\))i(const)275 546 y Fk(\210)42 b Fp(double)27 b
Fq(GetEnergyRate)h Fp(\(\))g(const)275 653 y Fk(\210)42
b Fp(double)27 b Fq(GetSp)s(oreEnergyRate)g Fp(\(\))h(const)275
760 y Fk(\210)42 b Fp(double)27 b Fq(GetA)m(ttractan)m(tCost)j
Fp(\(\))e(const)275 867 y Fk(\210)42 b Fp(double)27 b
Fq(GetRep)s(ellen)m(tCost)e Fp(\(\))k(const)275 974 y
Fk(\210)42 b Fp(double)27 b Fq(GetDeathThreshold)h Fp(\(\))g(const)275
1081 y Fk(\210)42 b Fp(double)27 b Fq(GetT)-8 b(um)m(bleTime)25
b Fp(\(\))j(const)275 1188 y Fk(\210)42 b Fp(double)27
b Fq(GetT)-8 b(um)m(bleScale)27 b Fp(\(\))h(const)275
1294 y Fk(\210)42 b Fp(double)27 b Fq(GetRepro)s(ductionThreshold)f
Fp(\(\))j(const)275 1401 y Fk(\210)42 b Fp(double)27
b Fq(GetSp)s(orulationThreshold)f Fp(\(\))j(const)275
1508 y Fk(\210)42 b Fp(double)27 b Fq(GetConsumptionRate)e
Fp(\(\))j(const)275 1615 y Fk(\210)42 b Fp(double)27
b Fq(GetA)m(ttractan)m(tRate)k Fp(\(\))d(const)275 1722
y Fk(\210)42 b Fp(double)27 b Fq(GetRep)s(ellen)m(tRate)f
Fp(\(\))i(const)275 1829 y Fk(\210)42 b Fp(double)27
b Fq(GetSw)m(armRadius)g Fp(\(\))h(const)275 1936 y Fk(\210)42
b Fp(double)27 b Fq(GetSw)m(armIn\015uence)h Fp(\(\))g(const)275
2042 y Fk(\210)42 b Fp(double)27 b Fq(GetGradien)m(tIn\015uence)i
Fp(\(\))f(const)275 2149 y Fk(\210)42 b Fp(double)27
b Fq(GetNutrien)m(tResp)s(onse)f Fp(\(\))i(const)275
2256 y Fk(\210)42 b Fp(double)27 b Fq(GetA)m(ttractan)m(tResp)s(onse)i
Fp(\(\))f(const)275 2363 y Fk(\210)42 b Fp(double)27
b Fq(GetRep)s(ellen)m(tResp)s(onse)d Fp(\(\))k(const)275
2470 y Fk(\210)42 b Fp(double)27 b Fq(GetA)m(ttractan)m(tThreshold)j
Fp(\(\))e(const)275 2577 y Fk(\210)42 b Fp(double)27
b Fq(GetRep)s(ellen)m(tThreshold)e Fp(\(\))k(const)275
2684 y Fk(\210)42 b Fp(double)27 b Fq(GetSp)s(eed)g Fp(\(\))h(const)275
2790 y Fk(\210)42 b Fp(double)27 b Fq(GetEnergy)h Fp(\(\))g(const)275
2897 y Fk(\210)42 b Fp(double)27 b Fq(GetT)-8 b(otalEnergy)28
b Fp(\(\))g(const)275 3004 y Fk(\210)42 b Fp(b)r(o)r(ol)27
b Fq(IsSp)s(ore)g Fp(\(\))h(const)150 3283 y Fj(Protected)36
b(A)m(ttributes)275 3468 y Fk(\210)42 b Fp(double)27
b Fq(repro)s(ductionCost)476 3592 y Fg(Cost)h(of)f(splitting)h(into)g
(two.)275 3790 y Fk(\210)42 b Fp(double)27 b Fq(energyRate)476
3913 y Fg(R)l(ate)h(of)f(ener)l(gy)i(r)l(e)l(duction)h(\(subtr)l(acte)l
(d)h(e)l(ach)d(fr)l(ame\).)275 4111 y Fk(\210)42 b Fp(double)27
b Fq(sp)s(oreEnergyRate)476 4235 y Fg(R)l(ate)h(of)f(ener)l(gy)i(r)l(e)
l(duction)h(when)e(sp)l(orulate)l(d)h(\(subtr)l(acte)l(d)i(e)l(ach)e
(fr)l(ame\).)275 4433 y Fk(\210)42 b Fp(double)27 b Fq(attractan)m
(tCost)476 4557 y Fg(Cost)h(to)g(r)l(ele)l(ase)h(one)f(unit)g(of)f
(attr)l(actant.)275 4755 y Fk(\210)42 b Fp(double)27
b Fq(rep)s(ellen)m(tCost)476 4878 y Fg(Cost)h(to)g(r)l(ele)l(ase)h(one)
f(unit)g(of)f(r)l(ep)l(el)t(lent.)275 5076 y Fk(\210)42
b Fp(double)27 b Fq(deathThreshold)476 5200 y Fg(L)l(owest)i(ener)l(gy)
g(level)e(b)l(efor)l(e)i Ff(Bacterium)f Fg(dies.)275
5398 y Fk(\210)42 b Fp(double)27 b Fq(tum)m(bleTime)476
5522 y Fg(Default)g(time)h(p)l(erio)l(d)g(b)l(etwe)l(en)h(tumbles.)p
-358 5723 V -192 5823 a Fn(Generated)d(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 79 87
79 86 bop 150 70 a Fq(10.3)31 b(BEAST::Bacterium)f(Class)h(Reference)
2233 b(79)p 150 103 4034 4 v 275 333 a Fk(\210)42 b Fp(double)27
b Fq(tum)m(bleScale)476 456 y Fg(Sc)l(aling)g(factor)i(for)e(tumble)h
(fr)l(e)l(quency.)275 655 y Fk(\210)42 b Fp(double)27
b Fq(repro)s(ductionThreshold)476 779 y Fg(Ener)l(gy)i(level)e(b)l
(efor)l(e)i(r)l(epr)l(o)l(duction)h(o)l(c)l(curs.)275
977 y Fk(\210)42 b Fp(double)27 b Fq(sp)s(orulationThreshold)476
1101 y Fg(Ener)l(gy)i(level)e(b)l(efor)l(e)i(sp)l(orulation.)275
1299 y Fk(\210)42 b Fp(double)27 b Fq(consumptionRate)476
1423 y Fg(R)l(ate)h(of)f(nutrient)i(c)l(onsumption.)275
1622 y Fk(\210)42 b Fp(double)27 b Fq(attractan)m(tRate)476
1746 y Fg(R)l(ate)h(of)f(attr)l(actant)k(r)l(ele)l(ase.)275
1944 y Fk(\210)42 b Fp(double)27 b Fq(rep)s(ellen)m(tRate)476
2068 y Fg(R)l(ate)h(of)f(r)l(ep)l(el)t(lent)i(r)l(ele)l(ase.)275
2266 y Fk(\210)42 b Fp(double)27 b Fq(sw)m(armRadius)476
2390 y Fg(Neighb)l(ourho)l(o)l(d)i(r)l(adius)g(for)e(lo)l(c)l(al)h
(swarm.)275 2589 y Fk(\210)42 b Fp(double)27 b Fq(sw)m(armIn\015uence)
476 2712 y Fg(De)l(gr)l(e)l(e)i(of)e(dir)l(e)l(ction)h(in\015uenc)l(e)h
(taken)g(fr)l(om)e(swarm.)275 2911 y Fk(\210)42 b Fp(double)27
b Fq(gradien)m(tIn\015uence)476 3035 y Fg(De)l(gr)l(e)l(e)i(of)e(dir)l
(e)l(ction)h(in\015uenc)l(e)h(taken)g(fr)l(om)e(gr)l(adients.)275
3233 y Fk(\210)42 b Fp(double)27 b Fq(n)m(utrien)m(tResp)s(onse)476
3357 y Fg(De)l(gr)l(e)l(e)i(of)e(r)l(esp)l(onse)j(to)e(nutrient)h(gr)l
(adient.)275 3555 y Fk(\210)42 b Fp(double)27 b Fq(attractan)m(tResp)s
(onse)476 3679 y Fg(De)l(gr)l(e)l(e)i(of)e(r)l(esp)l(onse)j(to)e(attr)l
(actant)j(gr)l(adient.)275 3878 y Fk(\210)42 b Fp(double)27
b Fq(rep)s(ellen)m(tResp)s(onse)476 4001 y Fg(De)l(gr)l(e)l(e)i(of)e(r)
l(esp)l(onse)j(to)e(r)l(ep)l(el)t(lent)h(gr)l(adient.)275
4200 y Fk(\210)42 b Fp(double)27 b Fq(attractan)m(tThreshold)476
4324 y Fg(L)l(evel)h(of)f(nutrient)i(which)f(must)g(b)l(e)g(pr)l(esent)
h(for)f(attr)l(actant)j(to)d(b)l(e)g(r)l(ele)l(ase)l(d.)275
4522 y Fk(\210)42 b Fp(double)27 b Fq(rep)s(ellen)m(tThreshold)476
4646 y Fg(L)l(evel)h(of)f(nutrient)i(which)f(must)g(b)l(e)g(pr)l(esent)
h(for)f(r)l(ep)l(el)t(lent)h(to)f(b)l(e)g(r)l(ele)l(ase)l(d.)275
4845 y Fk(\210)42 b Fq(Distribution)26 b Fh(\003)h Fq(n)m(utrien)m
(tDist)476 4968 y Fg(Pointer)h(to)g(the)h(nutrient)g(distribution.)275
5167 y Fk(\210)42 b Fq(Distribution)26 b Fh(\003)h Fq(attractan)m
(tDist)476 5291 y Fg(Pointer)h(to)g(the)h(attr)l(actant)h
(distribution.)275 5489 y Fk(\210)42 b Fq(Distribution)26
b Fh(\003)h Fq(rep)s(ellen)m(tDist)476 5613 y Fg(Pointer)h(to)g(the)h
(r)l(ep)l(el)t(lent)f(distribution.)p 150 5723 V 150
5823 a Fn(Generated)e(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 80 88
80 87 bop -358 70 a Fq(80)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
455 a Fk(\210)42 b Fq(Distribution)26 b Fh(\003)h Fq(trailDist)476
593 y Fg(Pointer)h(to)g(the)h(tr)l(ail)e(distribution.)275
807 y Fk(\210)42 b Fp(std::list)p Fo(<)27 b Fq(Bacterium)g
Fh(\003)g Fo(>)g Fq(o\013spring)476 945 y Fg(List)h(of)f(p)l(ointers)i
(to)f(o\013spring)g(b)l(acteria.)275 1159 y Fk(\210)42
b Fp(double)27 b Fq(energy)476 1297 y Fg(Internal)h(ener)l(gy)h(level.)
275 1511 y Fk(\210)42 b Fp(double)27 b Fq(totalEnergy)476
1649 y Fg(Glob)l(al)g(ener)l(gy)j(total.)275 1863 y Fk(\210)42
b Fp(double)27 b Fq(lastNutrien)m(t)476 2001 y Fg(L)l(ast)h(r)l(e)l(c)l
(or)l(de)l(d)i(nutrient)f(level.)275 2215 y Fk(\210)42
b Fp(double)27 b Fq(lastA)m(ttractan)m(t)476 2353 y Fg(L)l(ast)h(r)l(e)
l(c)l(or)l(de)l(d)i(attr)l(actant)h(level.)275 2567 y
Fk(\210)42 b Fp(double)27 b Fq(lastRep)s(ellen)m(t)476
2705 y Fg(L)l(ast)h(r)l(e)l(c)l(or)l(de)l(d)i(r)l(ep)l(el)t(lent)f
(level.)275 2919 y Fk(\210)42 b Fp(double)27 b Fq(curren)m(tNutrien)m
(t)476 3057 y Fg(Nutrient)i(level)e(at)h(curr)l(ent)i(lo)l(c)l(ation.)
275 3271 y Fk(\210)42 b Fp(double)27 b Fq(curren)m(tA)m(ttractan)m(t)
476 3409 y Fg(A)n(ttr)l(actant)j(level)e(at)g(curr)l(ent)i(lo)l(c)l
(ation.)275 3623 y Fk(\210)42 b Fp(double)27 b Fq(curren)m(tRep)s
(ellen)m(t)476 3761 y Fg(R)l(ep)l(el)t(lent)h(level)g(at)g(curr)l(ent)h
(lo)l(c)l(ation.)275 3975 y Fk(\210)42 b Fp(in)n(t)27
b Fq(nextChec)m(k)476 4113 y Fg(F)-6 b(r)l(ames)28 b(til)f(next)i
(nutrient)g(sampling.)275 4327 y Fk(\210)42 b Fq(V)-8
b(ector2D)28 b(tum)m(blingV)-8 b(elo)s(cit)m(y)476 4465
y Fg(T)i(umbling)27 b(velo)l(city.)275 4679 y Fk(\210)42
b Fq(V)-8 b(ector2D)28 b(sw)m(armT)-8 b(otalV)g(el)476
4817 y Fg(T)i(otal)28 b(neighb)l(ourho)l(o)l(d)i(velo)l(city.)275
5031 y Fk(\210)42 b Fp(in)n(t)27 b Fq(sw)m(armSize)476
5170 y Fg(Numb)l(er)h(of)f(individuals)g(in)g(neighb)l(ourho)l(o)l(d.)
275 5383 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(isSp)s(ore)476
5522 y Fg(T)-6 b(rue)28 b(if)e(the)j(b)l(acterium)g(has)f(sp)l(orulate)
l(d.)p -358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 81 89
81 88 bop 150 70 a Fq(10.3)31 b(BEAST::Bacterium)f(Class)h(Reference)
2233 b(81)p 150 103 4034 4 v 150 333 a Fj(10.3.1)113
b(Detailed)36 b(Description)311 525 y Fp(A)28 b(simpli\014ed)g(mo)r
(del)g(of)g(a)f(bacteria)f(strain)h(capable)g(of)h(self-organising)d
(through)i(c)n(hemotaxis.)311 818 y(In)i(fact,)h(this)f(class)e
(represen)n(ts,)h(in)h(sim)n(ulation,)f(a)h(large)e(n)n(um)n(b)r(er)i
(of)f(bacteria)g(with)h(a)f(global)g(a)n(v)n(erage)311
917 y(v)n(elo)r(cit)n(y)-7 b(.)37 b(The)28 b Fq(Bacterium)f
Fp(tak)n(es)f(n)n(utrien)n(ts)i(from)f(a)g(n)n(utrien)n(t)h
Fq(Distribution)f Fp(ob)5 b(ject,)27 b(and)h(releases)311
1017 y(c)n(hemoattractan)n(t)21 b(and)h(c)n(hemorep)r(ellen)n(t)f(in)n
(to)h(t)n(w)n(o)g(other)f Fq(Distribution)h Fp(ob)5 b(jects.)34
b(The)22 b(precise)g(mo)r(del)311 1116 y(of)30 b(the)g(dynamics)f(dep)r
(ends)h(on)f(a)h(range)e(of)h(co)r(e\016cien)n(ts,)h(some)f(of)h(whic)n
(h)f(migh)n(t)h(b)r(e)g(optimised)f(using)311 1216 y(a)f(GA.)311
1485 y(A)n(t)33 b(the)g(Up)r(date)h(stage,)f(the)g Fq(Bacterium)f
Fp(c)n(hec)n(ks)f(the)i(lev)n(el)f(of)h(n)n(utrien)n(t,)h(attractan)n
(t)e(and)g(rep)r(ellen)n(t)311 1584 y(in)38 b(its)g(lo)r(cal)e(en)n
(vironmen)n(t.)66 b(It)37 b(adjusts)h(its)f(direction)g(according)f(to)
h(the)h(lo)r(cal)f(gradien)n(ts)f(of)h(these)311 1684
y(three)30 b(quan)n(tities,)f(their)h(in\015uence)g(determined)f(b)n(y)
h([n)n(utrien)n(tResp)r(onse],)f([attractan)n(tResp)r(onse])f(and)311
1783 y([rep)r(ellen)n(tResp)r(onse].)36 b(This)26 b(new)g(direction)f
(in\015uences)h(the)g(o)n(v)n(erall)e(v)n(elo)r(cit)n(y)h(according)f
(to)i([gradien)n(t-)311 1883 y(In\015uence],)39 b(whic)n(h)d(ranges)e
(b)r(et)n(w)n(een)i(0)g(\(no)f(in\015uence\))i(and)f(1)f(\(full)i
(in\015uence,)i(original)34 b(v)n(elo)r(cit)n(y)h(is)311
1983 y(forgotten\).)311 2280 y(The)f(v)n(elo)r(cit)n(y)e(is)h(also)g
(in\015uenced)g(b)n(y)g([sw)n(armIn\015uence])g(\(ranging)f(b)r(et)n(w)
n(een)h(0)g(and)g(1)g(again\))f(of)i(the)311 2380 y(a)n(v)n(erage)25
b(v)n(elo)r(cit)n(y)i(of)g(bacteria)g(in)h(the)g(lo)r(cal)f(neigh)n(b)r
(ourho)r(o)r(d,)f(dictated)i(b)n(y)g([sw)n(armRadius].)311
2677 y(The)e Fq(Bacterium)e Fp(will)h(absorb)f(a)g(quan)n(tit)n(y)h(of)
g(n)n(utrien)n(t)g(from)f(the)i(lo)r(cal)e(en)n(vironmen)n(t,)h(dep)r
(ending)g(on)311 2777 y(its)33 b([consumptionRate])f(and)g(the)h(amoun)
n(t)f(presen)n(t)g(-)g(it)h(will)g(tak)n(e)e(all)i(it)f(can)h(eac)n(h)e
(timestep,)j(up)f(to)311 2877 y([consumptionRate].)49
b(Nutrien)n(ts)32 b(are)f(con)n(v)n(erted)f(directly)i(in)n(to)f
(energy)-7 b(,)32 b(so)f(the)h(amoun)n(t)f(of)h(n)n(utrien)n(t)311
2976 y(consumed)c(is)f(simply)h(added)f(to)h(the)g([energy])e(lev)n
(el.)311 3274 y(The)39 b Fq(Bacterium)f Fp(ma)n(y)h(release)e
(attractan)n(t)h(or)g(rep)r(ellen)n(t,)k(dep)r(ending)d(on)g
([attractan)n(tThreshold],)311 3373 y([rep)r(ellen)n(tThreshold])31
b(and)g(the)h(amoun)n(t)f(of)h(n)n(utrien)n(t)f(presen)n(t.)48
b(If)32 b(it)g(do)r(es)f(so,)h(the)g(amoun)n(t)f(released)311
3473 y(is)38 b(dictated)g(b)n(y)f(the)h(pro)r(duct)g(of)f(lo)r(cal)g(n)
n(utrien)n(t)h(with)g([attractan)n(tRate])e(or)h([rep)r(ellen)n
(tRate].)67 b(The)311 3573 y(Bacterium's)32 b(energy)f(is)h(reduced)g
(according)f(to)h([attractan)n(tCost])f(or)g([rep)r(ellen)n(tCost].)51
b(Normal)31 b(cell)311 3672 y(pro)r(cesses)21 b(and)h(the)g(cost)g(of)g
(mo)n(ving)f(around)g(deplete)i(the)f(Bacterium's)g(energy)f(lev)n(el,)
h(this)h(is)f(mo)r(delled)311 3772 y(b)n(y)28 b(simply)f(subtracting)g
([energyRate])g(eac)n(h)f(timestep.)311 4069 y(Eac)n(h)39
b(timestep)i(eac)n(h)e Fq(Bacterium)g Fp(loses)h(sp)r(oreEnergyRate)d
(energy)-7 b(.)73 b(If)41 b(it)f(is)g(mo)n(ving)f(\(i.e.)75
b(not)311 4169 y(sp)r(orulated\),)42 b(it)d(also)f(loses)g(its)h(v)n
(elo)r(cit)n(y)f Fh(\003)g Fp(energyRate.)69 b(When)40
b(sp)r(orulated,)h(it)e(will)g(con)n(tin)n(ue)f(to)311
4269 y(absorb)27 b(n)n(utrien)n(ts)g(but)h(will)g(not)f(mo)n(v)n(e)g
(or)g(release)f(rep)r(ellen)n(ts)h(or)g(attractan)n(ts.)311
4562 y(If)d(the)g(lo)r(cal)f(n)n(utrien)n(t)h(lev)n(el)f(go)r(es)f(up,)
j(the)f Fq(Bacterium)f Fp(will)g(start)g(mo)n(ving)g(again.)34
b(If)24 b(the)g(Bacterium's)311 4661 y([energy])c(lev)n(el)h(go)r(es)f
(ab)r(o)n(v)n(e)g(the)h([repro)r(ductionThreshold],)g(the)g
Fq(Bacterium)g Fp(will)g(lose)f([repro)r(duction-)311
4761 y(Cost])j(energy)-7 b(,)23 b(and)g(then)h(split)g(in)n(to)f(t)n(w)
n(o.)34 b(The)24 b(new)f('o\013spring')g Fq(Bacterium)f
Fp(will)h(b)r(e)h(the)g(same)e(colour)311 4861 y(and)28
b(ha)n(v)n(e)e(the)i(same)f(constan)n(ts)g(and)g(co)r(e\016cien)n(ts.)
37 b(The)27 b(energy)g(of)g(the)h(original)e Fq(Bacterium)h
Fp(is)h(split)311 4960 y(b)r(et)n(w)n(een)g(the)g(t)n(w)n(o.)311
5229 y(If)k(the)f(Bacterium's)f(energy)g(lev)n(el)g(drops)g(b)r(elo)n
(w)h([deathThreshold],)g(the)g Fq(Bacterium)f Fp(will)h(die,)h(and)311
5328 y(is)c(then)g(remo)n(v)n(ed)e(from)h(the)h(sim)n(ulation.)311
5597 y(F)-7 b(or)27 b(more)g(detailed)h(information)f(on)g(ho)n(w)g
(bacteria)g(actually)f(mo)n(v)n(e,)h(go)g(to)g(this)h(address:)p
150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 82 90
82 89 bop -358 70 a Fq(82)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fj(10.3.2)113 b(Mem)m(b)s(er)37 b(F)-9 b(unction)37
b(Do)s(cumen)m(tation)150 533 y Fq(10.3.2.1)93 b(v)m(oid)32
b(BEAST::Bacterium::FinishUp)s(date)c(\(\))150 734 y
Fp(This)39 b(should)f(b)r(e)h(called)f(at)h(the)f(end)h(of)g(the)g(Up)r
(date)g(metho)r(d)g(to)f(up)r(date)h(the)g(lo)r(cation)f(based)g(on)h
(the)150 833 y(calculated)27 b(v)n(elo)r(cit)n(y)-7 b(.)150
980 y(Also,)27 b(the)h(sw)n(arm)f(pro)r(cess)f(v)-5 b(ariables)26
b(are)h(reset.)150 1242 y Fq(10.3.2.2)93 b(V)-8 b(ector2D)32
b(BEAST::Bacterium::GetA)m(ttractan)m(tGradien)m(t)h(\(\))150
1442 y Fp(Returns)27 b(the)h(lo)r(cal)f(gradien)n(t)g(of)g(the)h
(attractan)n(t)f(distribution.)142 1645 y Fq(Returns:)311
1745 y Fp(A)h(normalised)f(v)n(ector)f(represen)n(ting)g(the)i
(direction)f(of)h(the)g(gradien)n(t.)150 2080 y Fq(10.3.2.3)93
b(V)-8 b(ector2D)32 b(BEAST::Bacterium::GetNutrien)m(tGradien)m(t)e
(\(\))150 2281 y Fp(Returns)d(the)h(lo)r(cal)f(gradien)n(t)g(of)g(the)h
(n)n(utrien)n(t)g(distribution.)142 2484 y Fq(Returns:)311
2583 y Fp(A)g(normalised)f(v)n(ector)f(represen)n(ting)g(the)i
(direction)f(of)h(the)g(gradien)n(t.)150 2919 y Fq(10.3.2.4)93
b(v)m(oid)32 b(BEAST::Bacterium::GetO\013spring)d(\(std::list)p
Fo(<)h Fq(Bacterium)i(const)g Fh(\003)h Fo(>)f Fq(&)564
3019 y Fe(b)-5 b(abies)p Fq(\))32 b(const)150 3219 y
Fp(Recursiv)n(ely)22 b(compiles)g(a)h(list)g(of)g(all)g(the)g
(o\013spring)f(of)h(this)h Fq(Bacterium)e Fp(and)h(its)g(o\013spring)f
(-)h(a)f(whole)h(family)150 3319 y(tree.)150 3466 y(Because)28
b(the)i(list)f(to)g(b)r(e)h(\014lled)g(is)f(passed)f(in)i(b)n(y)f
(reference,)f(this)i(is)f(the)h(fastest)f(v)n(ersion)f(of)h(the)g
(metho)r(d)h(to)150 3565 y(use.)142 3737 y Fq(P)m(arameters:)311
3837 y Fe(b)-5 b(abies)43 b Fp(The)27 b(list)h(to)g(b)r(e)g(\014lled)g
(with)g(p)r(oin)n(ters)f(to)g(const)g(Bacteriums,)g(passed)g(b)n(y)g
(reference.)150 4158 y Fq(10.3.2.5)93 b(std::list)p Fo(<)29
b Fq(Bacterium)i Fh(\003)g Fo(>)g Fq(BEAST::Bacterium::GetO\013spring)d
(\(\))33 b(const)150 4358 y Fp(Recursiv)n(ely)22 b(compiles)g(a)h(list)
g(of)g(all)g(the)g(o\013spring)f(of)h(this)h Fq(Bacterium)e
Fp(and)h(its)g(o\013spring)f(-)h(a)f(whole)h(family)150
4458 y(tree.)150 4605 y(Because)k(the)h(resulting)f(list)g(is)h
(returned,)f(this)h(is)f(a)h(sligh)n(tly)f(slo)n(w)n(er)e(v)n(ersion)h
(of)i(the)g(metho)r(d.)142 4793 y Fq(Returns:)311 4892
y Fp(A)g(list)g(of)g(p)r(oin)n(ters)f(to)g(Bacteriums.)150
5213 y Fq(10.3.2.6)93 b(v)m(oid)31 b(BEAST::Bacterium::GetO\013spring)d
(\(std::list)p Fo(<)h Fq(Bacterium)h Fh(\003)h Fo(>)g
Fq(&)h Fe(b)-5 b(abies)p Fq(\))564 5313 y(const)150 5513
y Fp(Recursiv)n(ely)22 b(compiles)g(a)h(list)g(of)g(all)g(the)g
(o\013spring)f(of)h(this)h Fq(Bacterium)e Fp(and)h(its)g(o\013spring)f
(-)h(a)f(whole)h(family)150 5613 y(tree.)p -358 5723
V -192 5823 a Fn(Generated)j(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 83 91
83 90 bop 150 70 a Fq(10.3)31 b(BEAST::Bacterium)f(Class)h(Reference)
2233 b(83)p 150 103 4034 4 v 150 333 a Fp(Because)28
b(the)i(list)f(to)g(b)r(e)h(\014lled)g(is)f(passed)f(in)i(b)n(y)f
(reference,)f(this)i(is)f(the)h(fastest)f(v)n(ersion)f(of)h(the)g
(metho)r(d)h(to)150 432 y(use.)142 624 y Fq(P)m(arameters:)311
723 y Fe(b)-5 b(abies)43 b Fp(The)27 b(list)h(to)g(b)r(e)g(\014lled)g
(with)g(p)r(oin)n(ters)f(to)g(Bacteriums,)g(passed)g(b)n(y)g
(reference.)150 1092 y Fq(10.3.2.7)93 b(V)-8 b(ector2D)32
b(BEAST::Bacterium::GetRep)s(ellen)m(tGradien)m(t)c(\(\))150
1298 y Fp(Returns)f(the)h(lo)r(cal)f(gradien)n(t)g(of)g(the)h(rep)r
(ellen)n(t)g(distribution.)142 1528 y Fq(Returns:)311
1627 y Fp(A)g(normalised)f(v)n(ector)f(represen)n(ting)g(the)i
(direction)f(of)h(the)g(gradien)n(t.)150 2019 y Fq(10.3.2.8)93
b(v)m(oid)32 b(BEAST::Bacterium::ReleaseA)m(ttractan)m(t)e(\(\))150
2224 y Fp(Releases)21 b(a)h(quan)n(tit)n(y)g(of)g(attractan)n(t)g(dep)r
(ending)h(on)f(the)g(attractan)n(tRate,)h(attractan)n(tThreshold)d(and)
i(a)n(v)-5 b(ail-)150 2324 y(able)27 b(energy)-7 b(.)150
2471 y(The)28 b(attractan)n(t)e(is)i(added)f(to)h(the)g(attractan)n(t)e
(distribution.)142 2663 y Fq(W)-8 b(arning:)311 2763
y Fp(Do)r(es)23 b(not)g(c)n(hec)n(k)f(whether)g(the)h(n)n(utrien)n(t)g
(is)f(ab)r(o)n(v)n(e)g(the)h(attractan)n(t)f(threshold,)h(this)g(is)f
(done)h(in)g(Up)r(date-)311 2862 y(Distributions.)150
3231 y Fq(10.3.2.9)93 b(v)m(oid)32 b(BEAST::Bacterium::ReleaseRep)s
(ell)o(en)m(t)26 b(\(\))150 3437 y Fp(Releases)f(a)h(quan)n(tit)n(y)f
(of)h(rep)r(ellen)n(t)g(dep)r(ending)g(on)g(the)g(rep)r(ellen)n(tRate,)
h(rep)r(ellen)n(tThreshold)e(and)g(a)n(v)-5 b(ailable)150
3536 y(energy)e(.)150 3683 y(The)28 b(rep)r(ellen)n(t)f(is)h(added)f
(to)h(the)g(rep)r(ellen)n(t)f(distribution.)142 3891
y Fq(W)-8 b(arning:)311 3991 y Fp(Do)r(es)27 b(not)f(c)n(hec)n(k)f
(whether)i(the)f(n)n(utrien)n(t)g(is)h(b)r(elo)n(w)e(the)i(rep)r(ellen)
n(t)f(threshold,)g(this)h(is)f(done)g(in)h(Up)r(date-)311
4090 y(Distributions.)150 4459 y Fq(10.3.2.10)92 b(v)m(oid)32
b(BEAST::Bacterium::Repro)s(duce)d(\(\))150 4665 y Fp(This)f(will)f
(cause)g(a)g(duplicate)h(of)g(the)g(curren)n(t)e Fq(Bacterium)h
Fp(to)h(b)r(e)g(added)f(to)h(the)g Fq(W)-8 b(orld)p Fp(.)150
4812 y(The)31 b(Bacterium's)f(energy)f(is)i(reduced)f(b)n(y)h(repro)r
(ductionCost)e(and)h(the)h(remaining)f(energy)g(is)g(divided)h(b)n(y)
150 4911 y(t)n(w)n(o)25 b(o)n(v)n(er)g(the)h(t)n(w)n(o)g(resulting)f
(individuals.)36 b(The)27 b(o\013spring's)e(lo)r(cation)g(is)h
(immediately)g(b)r(ehind)h(the)g(paren)n(t.)150 5011
y(A)h(p)r(oin)n(ter)f(to)h(the)g(new)f(individual)h(is)f(added)h(to)f
(the)h(paren)n(t's)f(o\013spring)g(list.)142 5219 y Fq(W)-8
b(arning:)311 5319 y Fp(This)28 b(metho)r(d)g(do)r(es)f(not)h(c)n(hec)n
(k)f(whether)g(the)h Fq(Bacterium)f Fp(has)g(enough)g(energy)f(to)i
(repro)r(duce.)311 5418 y(This)f(metho)r(d)h(causes)e(only)g
Fq(Bacterium)g Fp(ob)5 b(jects)27 b(to)g(b)r(e)g(added)g(to)g(the)g
Fq(W)-8 b(orld)p Fp(,)27 b(if)g(y)n(ou)f(require)g(c)n(hild)311
5518 y(classes)h(of)g Fq(Bacterium)g Fp(to)h(b)r(e)g(pro)r(duced)f(in)h
(repro)r(duction,)e(o)n(v)n(erload)f(this)j(metho)r(d.)p
150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 84 92
84 91 bop -358 70 a Fq(84)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a(10.3.2.11)92 b(v)m(oid)32 b(BEAST::Bacterium::SetNextChec)m(k)e
(\(\))150 533 y Fp(Used)20 b(with)h(the)g(T)-7 b(um)n(bling)20
b(system)g(of)g(mo)n(v)n(emen)n(t,)g(this)h(metho)r(d)g(calculates)e
(the)h(time)h(til)g(the)f(next)h(sampling)150 633 y(of)28
b(the)g(en)n(vironmen)n(t.)150 780 y(This)f(dep)r(ends)g(on)g(the)g
(comparativ)n(e)f(gradien)n(ts)f(of)i(the)g(n)n(utrien)n(t,)g(rep)r
(ellen)n(t)g(and)g(attractan)n(t)f(distributions)150
879 y(and)h(the)h(tum)n(bleTime)h(and)e(tum)n(bleScale)h(v)-5
b(ariables.)150 1142 y Fq(10.3.2.12)92 b(string)32 b
(BEAST::Bacterium::T)-8 b(oString)29 b(\(\))j(const)71
b Fi([virtual])150 1343 y Fp(Outputs)39 b(essen)n(tial)f(information)f
(ab)r(out)i(the)g Fq(Bacterium)p Fp(,)h(N)f(-)f(curren)n(t)g(n)n
(utrien)n(t)h(concen)n(tration,)g(A)g(-)150 1442 y(curren)n(t)24
b(attractan)n(t)f(concen)n(tration,)h(R)h(-)f(curren)n(t)g(rep)r(ellen)
n(t)g(concen)n(tration,)g(E)g(-)h(curren)n(t)e(energy)-7
b(,)24 b(T)h(-)f(total)150 1542 y(fo)r(o)r(d/energy)i(consumed.)142
1758 y Fq(Returns:)311 1858 y Fp(A)i(string)f(con)n(taining)g(the)h(sp)
r(eci\014ed)g(info.)142 2070 y Fq(See)j(also:)311 2170
y Fp(W)-7 b(orldOb)5 b(ject::OnSelect)27 b(for)h(an)f(opp)r(ortunit)n
(y)g(to)g(pass)g(more)g(information.)311 2270 y(W)-7
b(orldOb)5 b(ject::GetLogStream)26 b(for)h(a)h(means)f(of)g(outputting)
h(more)f(info.)150 2499 y(Reimplemen)n(ted)h(from)f Fq(BEAST::W)-8
b(orldOb)5 b(ject)27 b Fp(\(p.)15 b(214\).)150 2763 y
Fq(10.3.2.13)92 b(v)m(oid)32 b(BEAST::Bacterium::Up)s(date)e(\(\))71
b Fi([virtual])150 2963 y Fp(Up)r(dates)38 b(the)g(lo)r(cation)f(and)h
(energy)f(lev)n(els)g(of)h(the)g Fq(Bacterium)p Fp(,)h(and)f(causes)f
(v)-5 b(arious)36 b(c)n(hanges)h(in)h(the)150 3063 y(n)n(utrien)n(t,)28
b(attractan)n(t)e(and)i(rep)r(ellen)n(t)f(distributions.)150
3209 y(F)-7 b(or)27 b(a)g(full)h(explanation)f(of)h(what)f(is)h(going)e
(on)h(here,)h(see)f(the)h Fq(Bacterium)f Fp(class)f(do)r(cumen)n
(tation.)150 3356 y(Reimplemen)n(ted)i(from)f Fq(BEAST::Animat)f
Fp(\(p.)15 b(73\).)150 3619 y Fq(10.3.2.14)92 b(v)m(oid)32
b(BEAST::Bacterium::Up)s(dateDistributions)d(\(\))150
3820 y Fp(Consumes)e(n)n(utrien)n(t)g(and)h(releases)e(attractan)n(t)g
(and)i(rep)r(ellen)n(t)f(according)f(to)i(the)g(relev)-5
b(an)n(t)27 b(v)-5 b(ariables.)150 3967 y(Sp)r(ores)27
b(do)g(not)h(release)e(attractan)n(ts)g(or)h(relellan)n(ts.)150
4114 y(The)h(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f
(generated)h(from)g(the)h(follo)n(wing)e(\014les:)275
4327 y Fk(\210)42 b Fq(bacterium.h)275 4435 y Fk(\210)g
Fp(bacterium.cc)p -358 5723 V -192 5823 a Fn(Generated)26
b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 85 93
85 92 bop 150 70 a Fq(10.4)31 b(BEAST::BeamSensor)e(Class)i(Reference)
2157 b(85)p 150 103 4034 4 v 150 333 a Fl(10.4)136 b(BEAST::BeamSensor)
44 b(Class)i(Reference)150 563 y Fp(BeamSensors)36 b(can)i(really)g(b)r
(e)g(three)h(distinct)g(kinds)f(of)g(sensor:)57 b(Lasers,)40
b(whic)n(h)e(just)h(detect)g(ob)5 b(jects)37 b(a)150
662 y(certain)27 b(distance)g(a)n(w)n(a)n(y)f(in)i(a)f(straigh)n(t)f
(line)i(from)f(the)h(sensor's)e(origin.)150 809 y Fi(#include)40
b Fo(<)p Fi(sensorbase.h)p Fo(>)150 956 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::BeamSensor:)1601 2102 y @beginspecial
35 @llx 35 @lly 151 @urx 225 @ury 747 @rwi @setspecial
%%BeginDocument: classBEAST_1_1BeamSensor__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 151 225
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 151 225
%%PageOrientation: Portrait
gsave
35 35 116 190 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node99
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 1 8 moveto
113 8 lineto
113 23 lineto
1 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 1 8 moveto
113 8 lineto
113 23 lineto
1 23 lineto
closepath
stroke
gsave 10 dict begin
57 11 moveto 102 -0.5 (BEAST::BeamSensor) alignedtext
end grestore
end grestore

%	Node100
[ /Rect [ 16 61 98 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Sensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 16 60 moveto
99 60 lineto
99 75 lineto
16 75 lineto
closepath
stroke
gsave 10 dict begin
57 63 moveto 73 -0.5 (BEAST::Sensor) alignedtext
end grestore
end grestore

%	Node100 -> Node99
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 51 moveto
57 42 57 31 57 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 50 moveto
57 60 lineto
60 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node101
[ /Rect [ 0 113 114 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
115 112 lineto
115 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
57 115 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node101 -> Node100
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 103 moveto
57 94 57 83 57 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 102 moveto
57 112 lineto
60 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node102
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 8 164 moveto
107 164 lineto
107 179 lineto
8 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
57 167 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node102 -> Node101
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 155 moveto
57 146 57 135 57 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 154 moveto
57 164 lineto
60 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2434 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::BeamSensor:)1605 3023 y @beginspecial 35 @llx
35 @lly 149 @urx 121 @ury 737 @rwi @setspecial
%%BeginDocument: classBEAST_1_1BeamSensor__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 149 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 149 121
%%PageOrientation: Portrait
gsave
35 35 114 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node103
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
112 8 lineto
112 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
112 8 lineto
112 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
56 11 moveto 102 -0.5 (BEAST::BeamSensor) alignedtext
end grestore
end grestore

%	Node104
[ /Rect [ 15 61 97 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Sensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 15 60 moveto
98 60 lineto
98 75 lineto
15 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
56 63 moveto 73 -0.5 (BEAST::Sensor) alignedtext
end grestore
end grestore

%	Node104 -> Node103
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 56 51 moveto
56 42 56 31 56 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 54 50 moveto
56 60 lineto
59 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3391 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3580 y Fk(\210)42 b Fq(BeamSensor)54 b
Fp(\(double)i(s=)p Fq(BEAM)p 1652 3580 29 4 v 33 w(SENSOR)p
2073 3580 V 33 w(SCOPE)p Fp(,)g(double)g(r=)p Fq(BEAM)p
3195 3580 V 33 w(SENSOR)p 3616 3580 V 33 w(-)358 3680
y(RANGE)p Fp(,)27 b Fq(V)-8 b(ector2D)28 b Fp(l=)p Fq(V)-8
b(ector2D)p Fp(\(0.0,)27 b(0.0\),)g(double)h(o=0,)e Fq(Animat)h
Fh(\003)p Fp(o)n(wner=NULL\))275 3790 y Fk(\210)42 b
Fp(virtual)27 b(v)n(oid)f Fq(Up)s(date)j Fp(\(\))476
3917 y Fg(Che)l(cks)f(if)f(the)h(sensor)i(is)d(wr)l(apping,)h(then)g
(sets)h(wr)l(ap)g(lo)l(c)l(ations)f(ac)l(c)l(or)l(dingly.)275
4118 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(In)m(teract)k
Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(other\))476
4245 y Fg(A)f(wr)l(app)l(er)i(for)p 975 4245 24 4 v 56
w(Inter)l(act)g(\(the)g(r)l(e)l(al)f(inter)l(action)h(metho)l(d\))g
(for)f(hand)t(ling)f(wr)l(apping.)275 4446 y Fk(\210)42
b Fp(v)n(oid)p 543 4446 29 4 v 61 w Fq(In)m(teract)29
b Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(other\))476
4573 y Fg(Uses)e(a)g(numb)l(er)h(of)f(c)l(ol)t(lision)f(dete)l(ction)j
(functions)e(to)h(lo)l(c)l(ate)g(the)g(ne)l(ar)l(est)h(p)l(oint)e(of)g
(the)g(ne)l(ar)l(est)i(obje)l(ct)f(in)476 4664 y(sc)l(op)l(e.)275
4865 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Displa)m(y)i
Fp(\(\))476 4992 y Fg(A)f(wr)l(app)l(er)i(for)p 975 4992
24 4 v 56 w(Display)f(\(the)g(r)l(e)l(al)g(display)g(metho)l(d\))h(for)
f(hand)t(ling)f(wr)l(apping.)275 5193 y Fk(\210)42 b
Fp(v)n(oid)p 543 5193 29 4 v 61 w Fq(Displa)m(y)28 b
Fp(\(\))476 5320 y Fg(Positions)23 b(the)h(matrix)g(ac)l(c)l(or)l(ding)
g(to)g(the)f(lo)l(c)l(ation)h(of)f(the)g(ownerA)n(nimat)h(and)g(dr)l
(aws)f(the)h(sensor's)h(display)476 5411 y(list.)275
5613 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Dra)m(w)j
Fp(\(\))p 150 5723 4034 4 v 150 5823 a Fn(Generated)d(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 86 94
86 93 bop -358 70 a Fq(86)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 476
333 a Fg(Dr)l(aws)d(an)g(alpha-blende)l(d)h(line,)e(se)l(gment)i(or)f
(cir)l(cle)g(dep)l(ending)g(on)g(the)h(sc)l(op)l(e)f(of)g(the)g
(sensor.)275 527 y Fk(\210)42 b Fp(double)27 b Fq(GetScop)s(e)g
Fp(\(\))i(const)275 630 y Fk(\210)42 b Fp(double)27 b
Fq(GetRange)g Fp(\(\))i(const)275 733 y Fk(\210)42 b
Fp(v)n(oid)26 b Fq(SetDra)m(wScale)j Fp(\(\015oat)f(d\))275
836 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetDra)m(wFixed)j
Fp(\(b)r(o)r(ol)f(f)6 b(\))275 939 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetW)-8 b(rapping)28 b Fp(\(b)r(o)r(ol)g(w\))150
1214 y Fj(Protected)36 b(Mem)m(b)s(er)i(F)-9 b(unctions)275
1396 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(InScop)s(e)h
Fp(\(const)f Fq(V)-8 b(ector2D)28 b Fp(&v)n(ec\))476
1515 y Fg(Che)l(cks)g(to)h(se)l(e)f(if)f(a)g(p)l(oint)h(is)g(within)f
(the)h(curr)l(ent)i(testing)f(angle)f(of)f(the)h(sensor.)150
1882 y Fj(Protected)36 b(A)m(ttributes)275 2064 y Fk(\210)42
b Fp(double)27 b Fq(scop)s(e)476 2183 y Fg(width)g(of)h(the)g(b)l(e)l
(am)g(in)f(r)l(adians)275 2377 y Fk(\210)42 b Fp(double)27
b Fq(range)476 2497 y Fg(Sets)h(maximum)f(distanc)l(e.)275
2691 y Fk(\210)42 b Fp(\015oat)27 b Fq(dra)m(wScale)476
2811 y Fg(Sc)l(aling)g(factor)i(use)l(d)f(in)f(Display.)275
3005 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(dra)m(wFixed)476
3125 y Fg(Whether)i(to)f(sc)l(ale)g(display)g(ac)l(c)l(or)l(ding)h(to)f
(output.)150 3491 y Fj(10.4.1)113 b(Detailed)36 b(Description)150
3692 y Fp(BeamSensors)g(can)i(really)g(b)r(e)g(three)h(distinct)g
(kinds)f(of)g(sensor:)57 b(Lasers,)40 b(whic)n(h)e(just)h(detect)g(ob)5
b(jects)37 b(a)150 3792 y(certain)27 b(distance)g(a)n(w)n(a)n(y)f(in)i
(a)f(straigh)n(t)f(line)i(from)f(the)h(sensor's)e(origin.)275
3997 y Fk(\210)42 b Fh(\003)27 b Fp(-)g(Scop)r(ed)h(sensors,)e(whic)n
(h)h(detect)h(ob)5 b(jects)27 b(a)h(within)g(a)f(certain)g(range)f(and)
i(a)f(sp)r(eci\014ed)h(angle.)275 4153 y Fk(\210)42 b
Fp(Unidirectional)f(sensors)e(whic)n(h)j(detect)g(ob)5
b(jects)41 b(a)g(certain)g(distance)g(a)n(w)n(a)n(y)e(at)j(an)n(y)e
(angle.)78 b(The)358 4252 y(three)36 b(t)n(yp)r(es)h(of)f(sensor)g(are)
f(ac)n(hiev)n(ed)h(b)n(y)g(sp)r(ecifying)h(scop)r(es)f(of)g(0,)j([0)d
Fo(<)h Fp(TW)n(OPI])e(and)i(TW)n(OPI)358 4352 y(resp)r(ectiv)n(ely)-7
b(.)41 b(Note)30 b(that)g(BeamSensors)d(are)i(the)h(most)f
(computationally)f(exp)r(ensiv)n(e)h(sensors,)g(so)g(if)358
4452 y(y)n(ou)d(can)i(substitute)g(another)f(kind)g(of)h
Fq(Sensor)p Fp(,)f(do)h(so.)349 4590 y Fq(See)k(also:)519
4690 y(Sensor)150 4965 y Fj(10.4.2)113 b(Mem)m(b)s(er)37
b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150 5166 y
Fq(10.4.2.1)93 b(v)m(oid)32 b(BEAST::BeamSensor::)p 1721
5166 29 4 v 31 w(In)m(teract)h(\(W)-8 b(orldOb)5 b(ject)32
b Fh(\003)f Fe(other)p Fq(\))150 5366 y Fp(Uses)c(a)g(n)n(um)n(b)r(er)g
(of)g(collision)g(detection)g(functions)h(to)f(lo)r(cate)g(the)h
(nearest)e(p)r(oin)n(t)h(of)h(the)f(nearest)g(ob)5 b(ject)27
b(in)150 5466 y(scop)r(e.)150 5613 y(Automatic)h(optimisation)f(in)h
(the)g(case)f(of)g(360)f(degree)h(scop)r(e.)p -358 5723
4034 4 v -192 5823 a Fn(Generated)f(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 87 95
87 94 bop 150 70 a Fq(10.4)31 b(BEAST::BeamSensor)e(Class)i(Reference)
2157 b(87)p 150 103 4034 4 v 150 333 a(10.4.2.2)93 b(v)m(oid)32
b(BEAST::BeamSensor::Dra)m(w)d(\(\))71 b Fi([virtual])150
533 y Fp(Dra)n(ws)27 b(an)g(alpha-blended)g(line,)h(segmen)n(t)f(or)f
(circle)h(dep)r(ending)h(on)g(the)g(scop)r(e)f(of)g(the)h(sensor.)150
680 y(The)g(n)n(um)n(b)r(er)f(of)h(p)r(oin)n(ts)f(in)h(the)g(circle)f
(is)g(determined)h(b)n(y)g(the)f(scop)r(e)h(and)f(range)f(of)i(the)g
(sensor.)150 827 y(The)g(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n
(as)f(generated)h(from)g(the)h(follo)n(wing)e(\014les:)275
1040 y Fk(\210)42 b Fq(sensorbase.h)275 1148 y Fk(\210)g
Fp(sensor.cc)p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 88 96
88 95 bop -358 70 a Fq(88)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.5)136 b(BEAST::b)t(ound)p 1432 333 41 4 v
46 w(mem)p 1763 333 V 49 w(fun)p 2003 333 V 48 w(t)p
Fb(<)p 2251 333 V 105 w Fl(Class,)p 2701 333 V 108 w(Return,)p
3264 333 V 108 w(Arg)56 b Fb(>)524 482 y Fl(Struct)44
b(T)-11 b(emplate)46 b(Reference)150 711 y Fp(A)30 b(functor)f(whic)n
(h)g(creates)f(a)h(unary)f(function)i(from)e(a)h(unary)g(mem)n(b)r(er)g
(function,)h(binding)f(an)g(instance)g(of)150 811 y(the)f(class)f(to)g
(whic)n(h)h(the)g(function)g(b)r(elongs.)150 958 y Fi(#include)40
b Fo(<)p Fi(utilities.h)p Fo(>)150 1105 y Fp(Collab)r(oration)26
b(diagram)g(for)h(BEAST::b)r(ound)p 1687 1105 25 4 v
30 w(mem)p 1892 1105 V 30 w(fun)p 2039 1105 V 31 w(t)p
Fo(<)p 2194 1105 V 57 w Fp(Class,)p 2465 1105 V 57 w(Return,)p
2800 1105 V 57 w(Arg)g Fo(>)p Fp(:)1248 1702 y @beginspecial
35 @llx 35 @lly 321 @urx 137 @ury 1594 @rwi @setspecial
%%BeginDocument: structBEAST_1_1bound__mem__fun__t__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 321 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 321 137
%%PageOrientation: Portrait
gsave
35 35 286 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node133
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
284 8 lineto
284 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
284 8 lineto
284 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
142 11 moveto 274 -0.5 (BEAST::bound_mem_fun_t< _Class, _Return, _Arg >) alignedtext
end grestore
end grestore

%	Node134
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 71 76 moveto
123 76 lineto
123 91 lineto
71 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
97 79 moveto 42 -0.5 (_Return) alignedtext
end grestore
end grestore

%	Node134 -> Node133
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 100 68 moveto
102 60 106 50 111 42 curveto
116 35 124 28 130 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 98 66 moveto
98 76 lineto
103 67 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
138 46 moveto 44 -0.5 (memfun) alignedtext
end grestore
end grestore

%	Node135
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 167 76 moveto
208 76 lineto
208 91 lineto
167 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
187 79 moveto 31 -0.5 (_Class) alignedtext
end grestore
end grestore

%	Node135 -> Node133
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 182 68 moveto
179 60 174 50 169 42 curveto
164 35 157 28 151 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 179 68 moveto
185 76 lineto
184 66 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
191 46 moveto 19 -0.5 (that) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2065 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2251 y Fk(\210)42 b Fq(b)s(ound)p 627
2251 29 4 v 33 w(mem)p 866 2251 V 32 w(fun)p 1033 2251
V 34 w(t)28 b Fp(\()p 1163 2251 25 4 v 30 w(Class)f(&t,)p
1559 2251 V 58 w(Return\()p 1876 2251 V 30 w(Class::)p
Fh(\003)p Fp(m\)\()p 2318 2251 V 29 w(Arg\)\))275 2359
y Fk(\210)p 363 2359 V 71 w Fp(Return)h Fq(op)s(erator\(\))g
Fp(\()p 1166 2359 V 30 w(Arg)f(a\))150 2639 y Fj(Public)36
b(A)m(ttributes)275 2826 y Fk(\210)p 363 2826 V 71 w
Fp(Return\()p 679 2826 V 31 w(Class::)p Fh(\003)26 b
Fq(memfun)f Fp(\)\()p 1445 2826 V 30 w(Arg\))275 2933
y Fk(\210)p 363 2933 V 71 w Fp(Class)i(&)g Fq(that)150
3213 y Fj(10.5.1)113 b(Detailed)36 b(Description)150
3414 y Fq(template)p Fo(<)p Fq(class)p 813 3414 29 4
v 66 w(Class,)e(t)m(yp)s(ename)p 1567 3414 V 68 w(Return,)h(t)m(yp)s
(ename)p 2403 3414 V 68 w(Arg)p Fo(>)f Fq(struct)h(BEAST::b)s(ound)p
3616 3414 V 33 w(-)150 3513 y(mem)p 362 3513 V 31 w(fun)p
528 3513 V 35 w(t)p Fo(<)p 696 3513 V 66 w Fq(Class,)p
1006 3513 V 65 w(Return,)p 1397 3513 V 65 w(Arg)d Fo(>)150
3714 y Fp(A)e(functor)f(whic)n(h)g(creates)f(a)h(unary)f(function)i
(from)e(a)h(unary)g(mem)n(b)r(er)g(function,)h(binding)f(an)g(instance)
g(of)150 3813 y(the)f(class)f(to)g(whic)n(h)h(the)g(function)g(b)r
(elongs.)150 3960 y(Equiv)-5 b(alen)n(t)27 b(to)g(bind1st\(mem)p
1145 3960 25 4 v 31 w(fun\(class::fun\)\))i(whic)n(h)e(is)h(not)f(v)-5
b(alid)28 b(in)g(standard)e(C++.)150 4107 y(The)i(do)r(cumen)n(tation)f
(for)g(this)h(struct)f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e
(\014le:)275 4320 y Fk(\210)42 b Fq(utilities.h)p -358
5723 4034 4 v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 89 97
89 96 bop 150 70 a Fq(10.6)31 b(BEAST::call)p 876 70
29 4 v 33 w(on)p 1010 70 V 34 w(mem)p 1250 70 V 32 w(t)p
Fo(<)g Fq(T,)h(M,)f(OP)h Fo(>)f Fq(Class)g(T)-8 b(emplate)31
b(Reference)1059 b(89)p 150 103 4034 4 v 150 333 a Fl(10.6)136
b(BEAST::call)p 1260 333 41 4 v 48 w(on)p 1450 333 V
49 w(mem)p 1784 333 V 49 w(t)p Fb(<)46 b Fl(T,)f(M,)h(OP)g
Fb(>)f Fl(Class)i(T)-11 b(emplate)524 482 y(Reference)150
711 y Fp(Allo)n(ws)32 b(us)g(to)h(bind)g(functors)f(so)g(that)h(they)g
(w)n(ork)e(on)h(particular)f(mem)n(b)r(ers)h(of)h(classes,)f(useful)h
(for)f(using)150 811 y(for)p 255 811 25 4 v 29 w(eac)n(h)27
b(on)g(maps.)150 958 y Fi(#include)40 b Fo(<)p Fi(utilities.h)p
Fo(>)150 1105 y Fp(Collab)r(oration)26 b(diagram)g(for)h(BEAST::call)p
1584 1105 V 29 w(on)p 1701 1105 V 30 w(mem)p 1906 1105
V 30 w(t)p Fo(<)g Fp(T,)h(M,)g(OP)f Fo(>)p Fp(:)1431
1725 y @beginspecial 35 @llx 35 @lly 233 @urx 137 @ury
1155 @rwi @setspecial
%%BeginDocument: classBEAST_1_1call__on__mem__t__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 233 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 233 137
%%PageOrientation: Portrait
gsave
35 35 198 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node137
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
196 8 lineto
196 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
196 8 lineto
196 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
98 11 moveto 186 -0.5 (BEAST::call_on_mem_t< T, M, OP >) alignedtext
end grestore
end grestore

%	Node138
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 52 76 moveto
81 76 lineto
81 91 lineto
52 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
66 79 moveto 15 -0.5 (OP) alignedtext
end grestore
end grestore

%	Node138 -> Node137
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 70 68 moveto
73 60 76 50 80 42 curveto
83 35 88 29 92 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 68 66 moveto
68 76 lineto
73 67 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
94 46 moveto 19 -0.5 (op_) alignedtext
end grestore
end grestore

%	Node139
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 117 76 moveto
146 76 lineto
146 91 lineto
117 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
131 79 moveto 11 -0.5 (M) alignedtext
end grestore
end grestore

%	Node139 -> Node137
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 125 68 moveto
122 61 117 51 113 42 curveto
110 36 106 29 103 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 122 68 moveto
128 76 lineto
127 66 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
133 46 moveto 17 -0.5 (m_) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2087 a Fj(Public)36 b(T)m(yp)s(es)275
2274 y Fk(\210)42 b Fp(t)n(yp)r(edef)28 b(M)g Fq(argumen)m(t)p
1161 2274 29 4 v 33 w(t)m(yp)s(e)275 2382 y Fk(\210)42
b Fp(t)n(yp)r(edef)28 b(OP::result)p 1030 2382 25 4 v
28 w(t)n(yp)r(e)g Fq(result)p 1484 2382 29 4 v 34 w(t)m(yp)s(e)150
2661 y Fj(Public)36 b(Mem)m(b)s(er)h(F)-9 b(unctions)275
2848 y Fk(\210)42 b Fq(call)p 506 2848 V 34 w(on)p 641
2848 V 34 w(mem)p 881 2848 V 31 w(t)28 b Fp(\(M)g(T::)p
Fh(\003)p Fp(m,)g(OP)e(op\))275 2956 y Fk(\210)42 b Fp(result)p
567 2956 25 4 v 29 w(t)n(yp)r(e)28 b Fq(op)s(erator\(\))g
Fp(\(T)g(&v)-5 b(al\))150 3235 y Fj(10.6.1)113 b(Detailed)36
b(Description)150 3436 y Fq(template)p Fo(<)p Fq(class)31
b(T,)h(t)m(yp)s(ename)g(M,)h(class)f(OP)p Fo(>)h Fq(class)f
(BEAST::call)p 2727 3436 29 4 v 34 w(on)p 2862 3436 V
34 w(mem)p 3102 3436 V 31 w(t)p Fo(<)h Fq(T,)g(M,)f(OP)150
3536 y Fo(>)150 3736 y Fp(Allo)n(ws)g(us)g(to)h(bind)g(functors)f(so)g
(that)h(they)g(w)n(ork)e(on)h(particular)f(mem)n(b)r(ers)h(of)h
(classes,)f(useful)h(for)f(using)150 3836 y(for)p 255
3836 25 4 v 29 w(eac)n(h)27 b(on)g(maps.)150 3983 y(The)h(do)r(cumen)n
(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)
n(wing)e(\014le:)275 4196 y Fk(\210)42 b Fq(utilities.h)p
150 5723 4034 4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 90 98
90 97 bop -358 70 a Fq(90)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.7)136 b(BEAST::creator)p Fb(<)45 b Fl(T)f
Fb(>)h Fl(Struct)g(T)-11 b(emplate)45 b(Reference)150
562 y Fp(A)30 b(functor)f(for)f(use)h(with)h(the)g(for)p
1246 562 25 4 v 29 w(eac)n(h)e(algorithm)g(whic)n(h)i(can)e(p)r(erform)
h(creation)f(of)h(ob)5 b(jects)29 b(when)g(called)150
661 y(on)e(a)g(con)n(tainer)g(of)g(p)r(oin)n(ters.)150
808 y Fi(#include)40 b Fo(<)p Fi(utilities.h)p Fo(>)150
1088 y Fj(Public)c(Mem)m(b)s(er)h(F)-9 b(unctions)275
1274 y Fk(\210)42 b Fp(T)27 b Fh(\003)g Fq(op)s(erator\(\))h
Fp(\(\))150 1554 y Fj(10.7.1)113 b(Detailed)36 b(Description)150
1754 y Fq(template)p Fo(<)p Fq(t)m(yp)s(ename)29 b(T)p
Fo(>)j Fq(struct)g(BEAST::creator)p Fo(<)g Fq(T)g Fo(>)150
1955 y Fp(A)e(functor)f(for)f(use)h(with)h(the)g(for)p
1246 1955 V 29 w(eac)n(h)e(algorithm)g(whic)n(h)i(can)e(p)r(erform)h
(creation)f(of)h(ob)5 b(jects)29 b(when)g(called)150
2055 y(on)e(a)g(con)n(tainer)g(of)g(p)r(oin)n(ters.)150
2201 y(The)h(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g
(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
2415 y Fk(\210)42 b Fq(utilities.h)p -358 5723 4034 4
v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 91 99
91 98 bop 150 70 a Fq(10.8)31 b(BEAST::deleter)p Fo(<)f
Fq(T)i Fo(>)f Fq(Struct)i(T)-8 b(emplate)31 b(Reference)1657
b(91)p 150 103 4034 4 v 150 333 a Fl(10.8)136 b(BEAST::deleter)p
Fb(<)45 b Fl(T)g Fb(>)g Fl(Struct)f(T)-11 b(emplate)46
b(Reference)150 562 y Fp(A)30 b(functor)f(for)g(use)h(with)g(the)g(for)
p 1248 562 25 4 v 29 w(eac)n(h)f(algorithm)f(whic)n(h)h(can)h(p)r
(erform)f(deletion)g(of)h(ob)5 b(jects)29 b(when)g(called)150
661 y(on)e(a)g(con)n(tainer)g(of)g(p)r(oin)n(ters.)150
808 y Fi(#include)40 b Fo(<)p Fi(utilities.h)p Fo(>)150
1088 y Fj(Public)c(Mem)m(b)s(er)h(F)-9 b(unctions)275
1274 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(op)s(erator\(\))i
Fp(\(T)g Fh(\003)p Fp(ob)5 b(j\))150 1554 y Fj(10.8.1)113
b(Detailed)36 b(Description)150 1754 y Fq(template)p
Fo(<)p Fq(t)m(yp)s(ename)29 b(T)p Fo(>)j Fq(struct)g(BEAST::deleter)p
Fo(<)e Fq(T)i Fo(>)150 1955 y Fp(A)e(functor)f(for)g(use)h(with)g(the)g
(for)p 1248 1955 V 29 w(eac)n(h)f(algorithm)f(whic)n(h)h(can)h(p)r
(erform)f(deletion)g(of)h(ob)5 b(jects)29 b(when)g(called)150
2055 y(on)e(a)g(con)n(tainer)g(of)g(p)r(oin)n(ters.)150
2201 y(The)h(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g
(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
2415 y Fk(\210)42 b Fq(utilities.h)p 150 5723 4034 4
v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 92 100
92 99 bop -358 70 a Fq(92)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.9)136 b(BEAST::Distribution)45 b(Class)h(Reference)150
563 y Fp(Implemen)n(ts)28 b(a)f(grid)g(whic)n(h)g(stores)g(spatial)g
(densit)n(y)g(information)g(to)h(a)f(sp)r(eci\014ed)h(resolution,)e
(e.g.)150 710 y Fi(#include)40 b Fo(<)p Fi(distribution.h)p
Fo(>)150 857 y Fp(Inheritance)27 b(diagram)f(for)h
(BEAST::Distribution:)1601 1724 y @beginspecial 35 @llx
35 @lly 151 @urx 173 @ury 747 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Distribution__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 151 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 151 173
%%PageOrientation: Portrait
gsave
35 35 116 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node144
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 2 8 moveto
112 8 lineto
112 23 lineto
2 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 2 8 moveto
112 8 lineto
112 23 lineto
2 23 lineto
closepath
stroke
gsave 10 dict begin
57 11 moveto 100 -0.5 (BEAST::Distribution) alignedtext
end grestore
end grestore

%	Node145
[ /Rect [ 0 61 114 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
115 60 lineto
115 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
57 63 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node145 -> Node144
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 51 moveto
57 42 57 31 57 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 50 moveto
57 60 lineto
60 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node146
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 8 112 moveto
107 112 lineto
107 127 lineto
8 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
57 115 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node146 -> Node145
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 103 moveto
57 94 57 83 57 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 102 moveto
57 112 lineto
60 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2056 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::Distribution:)1261 2658 y @beginspecial 35 @llx
35 @lly 315 @urx 137 @ury 1564 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Distribution__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 315 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 315 137
%%PageOrientation: Portrait
gsave
35 35 280 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node147
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 76 8 moveto
186 8 lineto
186 23 lineto
76 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 76 8 moveto
186 8 lineto
186 23 lineto
76 23 lineto
closepath
stroke
gsave 10 dict begin
131 11 moveto 100 -0.5 (BEAST::Distribution) alignedtext
end grestore
end grestore

%	Node148
[ /Rect [ 0 77 114 91 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 0 76 moveto
115 76 lineto
115 91 lineto
0 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
57 79 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node148 -> Node147
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 71 71 moveto
86 57 110 35 122 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 71 68 moveto
65 76 lineto
74 72 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node164
[ /Rect [ 132 77 278 91 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1Distribution_1_1Kernel.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 132 76 moveto
279 76 lineto
279 91 lineto
132 91 lineto
closepath
stroke
gsave 10 dict begin
205 79 moveto 137 -0.5 (BEAST::Distribution::Kernel) alignedtext
end grestore
end grestore

%	Node164 -> Node147
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 191 71 moveto
176 57 152 35 140 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 188 72 moveto
197 76 lineto
191 68 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
197 46 moveto 31 -0.5 (kernel) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3027 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3217 y Fk(\210)42 b Fq(Distribution)26
b Fp(\(in)n(t)i(c,)g(in)n(t)g(r,)f(in)n(t)h(b=1\))476
3344 y Fg(Sets)g(up)g(the)h Ff(Distribution)h Fg(with)e(sp)l(e)l
(ci\014e)l(d)h(width,)e(height)i(and)f(kernel)g(r)l(adius.)275
3546 y Fk(\210)42 b Fp(virtual)27 b Fh(\030)p Fq(Distribution)f
Fp(\(\))476 3673 y Fg(Deletes)i(the)h(dynamic)f(arr)l(ays)h(and)f
(kernel)g(use)l(d)h(by)f(the)g Ff(Distribution)p Fg(.)275
3875 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Init)i
Fp(\(\))476 4003 y Fg(Sets)f(the)g Ff(Distribution)j
Fg(up)c(so)h(that)h(it's)e(dete)l(ctable)j(\(with)d(the)i(c)l(orr)l(e)l
(ct)g(e)l(dge)g(ve)l(ctor\))g(and)f(has)g(the)g(same)476
4094 y(width)g(and)h(height)h(as)f(the)g(world.)275 4296
y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Up)s(date)j
Fp(\(\))476 4423 y Fg(Filters)f(the)g(distribution)h(every)g(n)e(fr)l
(ames,)h(wher)l(e)g(n)g(is)f(sp)l(e)l(ci\014e)l(d)i(by)f(the)h
(di\013usion)e(sp)l(e)l(e)l(d.)275 4625 y Fk(\210)42
b Fq(Kernel)26 b Fp(&)i Fq(GetKernel)f Fp(\(\))h(const)476
4752 y Fg(Pr)l(ovides)g(ac)l(c)l(ess)i(to)e(the)g(kernel)h(so)f(new)g
(c)l(onvolutions)h(c)l(an)f(b)l(e)g(plotte)l(d.)275 4954
y Fk(\210)42 b Fq(DistReal)26 b Fp(&)h Fq(V)-8 b(alueA)m(t)29
b Fp(\(in)n(t)f(x,)f(in)n(t)h(y\))g(const)476 5082 y
Fg(Pr)l(ovides)g(dir)l(e)l(ct)h(ac)l(c)l(ess)h(to)e(distribution)g
(data)h(by)f(c)l(olumn)g(and)f(r)l(ow.)275 5284 y Fk(\210)42
b Fq(DistReal)26 b(GetDensit)m(y)i Fp(\(in)n(t)g(x,)f(in)n(t)h(y\))g
(const)476 5411 y Fg(R)l(eturns)h(the)f(density)h(at)f(the)h(sp)l(e)l
(ci\014e)l(d)g(c)l(olumn)e(and)h(r)l(ow.)275 5613 y Fk(\210)42
b Fq(DistReal)26 b(GetDensit)m(y)i Fp(\(const)f Fq(V)-8
b(ector2D)29 b Fp(&v\))e(const)p -358 5723 V -192 5823
a Fn(Generated)f(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 93 101
93 100 bop 150 70 a Fq(10.9)31 b(BEAST::Distribution)f(Class)h
(Reference)2158 b(93)p 150 103 4034 4 v 476 333 a Fg(R)l(eturns)29
b(the)f(density)h(at)f(the)h(sp)l(e)l(ci\014e)l(d)g(p)l(oint.)275
532 y Fk(\210)42 b Fq(DistReal)26 b(GetGradien)m(t)i
Fp(\(const)g Fq(V)-8 b(ector2D)28 b Fp(&v,)f(double)h(o\))f(const)275
639 y Fk(\210)42 b Fq(V)-8 b(ector2D)28 b(GetGradien)m(t)g
Fp(\(in)n(t)g(x,)g(in)n(t)g(y\))f(const)275 747 y Fk(\210)42
b Fq(V)-8 b(ector2D)28 b(GetGradien)m(t)g Fp(\(const)g
Fq(V)-8 b(ector2D)28 b Fp(&v\))f(const)275 854 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetDensit)m(y)i Fp(\(in)n(t)g(x,)g(in)n(t)g(y)-7
b(,)27 b(\015oat)g(d\))275 962 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetDensit)m(y)i Fp(\(const)g Fq(V)-8 b(ector2D)28
b Fp(&v,)f(\015oat)g(d\))476 1086 y Fg(Sets)h(the)h(density)f(to)h(the)
f(sp)l(e)l(ci\014e)l(d)h(value)f(at)g(the)h(given)e(lo)l(c)l(ation.)275
1285 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(AddDensit)m(y)i
Fp(\(in)n(t)h(x,)e(in)n(t)h(y)-7 b(,)28 b(\015oat)f(d\))275
1393 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(AddDensit)m(y)i
Fp(\(const)g Fq(V)-8 b(ector2D)28 b Fp(&v,)f(\015oat)g(d\))476
1517 y Fg(A)l(dds)h(the)g(sp)l(e)l(ci\014e)l(d)h(value)f(to)g(the)h
(distribution)g(at)f(the)g(sp)l(e)l(ci\014e)l(d)h(p)l(oint.)275
1716 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetDi\013usionSp)s(eed)g
Fp(\(in)n(t)i(s\))476 1840 y Fg(Sets)g(the)h(interval)f(for)g(c)l(al)t
(ling)f(di\013usion,)g(e.g.)275 2039 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetDeca)m(yRate)k Fp(\()p Fq(DistReal)c Fp(r\))476
2164 y Fg(Sp)l(e)l(ci\014es)35 b(the)g(r)l(ate)g(at)g(which)f(the)h
(distribution)g(de)l(c)l(ays:)49 b(1.0)34 b(for)g(no)g(de)l(c)l(ay,)j
(0.5)d(to)g(r)l(e)l(duc)l(e)i(by)e(half)g(on)476 2255
y(every)29 b(di\013usion.)275 2454 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetMaxConc)j Fp(\(\015oat)e(f)6 b(\))476 2578 y
Fg(Sp)l(e)l(ci\014es)28 b(the)h(maximum)e(exp)l(e)l(cte)l(d)j(c)l(onc)l
(entr)l(ation)g(for)e(purp)l(oses)h(of)f(display.)275
2777 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Render)i
Fp(\(\))476 2901 y Fg(Displays)38 b(the)i(distribution)f(with)f(tr)l
(ansp)l(ar)l(ency)k(ac)l(c)l(or)l(ding)e(to)f(density,)j(up)c(to)h
(maxConc)g(density)h(\(=)476 2993 y(op)l(aque\).)275
3192 y Fk(\210)i Fp(v)n(oid)26 b Fq(Plot)i Fp(\(double)g(v)-5
b(al\))476 3316 y Fg(Sets)28 b(every)h(p)l(oint)f(on)g(the)h
(distribution)f(to)g(the)h(sp)l(e)l(ci\014e)l(d)g(value.)275
3515 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)p 940
3515 25 4 v 56 w(F)-7 b(unc)p Fo(>)28 b Fp(v)n(oid)e
Fq(Plot)i Fp(\()p 1655 3515 V 30 w(F)-7 b(unc)28 b(func\))476
3639 y Fg(Plots)g(the)g(sp)l(e)l(ci\014e)l(d)h(function)f(so)g(the)g
(value)g(at)h(e)l(ach)f(c)l(o)l(or)l(dinate)i(x,)d(y)h(b)l(e)l(c)l
(omes)h(func\(x,)f(y\).)275 3838 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(class)p 940 3838 V 56 w(Op,)27 b(class)p 1326
3838 V 57 w(F)-7 b(unc)p Fo(>)28 b Fp(v)n(oid)e Fq(Filter)h
Fp(\()p 2097 3838 V 31 w(Op)g(op,)p 2404 3838 V 57 w(F)-7
b(unc)28 b(func\))476 3962 y Fg(R)l(eplac)l(es)g(the)h(value)f(at)g(e)l
(ach)g(c)l(o)l(or)l(dinate)i(with)e(op\(oldval,)g(func\(x,)f(y\).)275
4161 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(class)p 940
4161 V 56 w(Op)p Fo(>)27 b Fp(v)n(oid)g Fq(Filter)g Fp(\()p
1646 4161 V 30 w(Op)g(op\))476 4285 y Fg(R)l(eplac)l(es)h(e)l(ach)h
(value)f(of)f(the)i(distribution)f(with)g(op\(oldval\).)150
4656 y Fj(Protected)36 b(A)m(ttributes)275 4842 y Fk(\210)42
b Fp(double)27 b Fq(width)476 4966 y Fg(The)g(r)l(e)l(al-value)l(d)j
(width)e(\(same)g(as)g Ff(W)-7 b(orld)p Fg(\).)275 5165
y Fk(\210)42 b Fp(double)27 b Fq(heigh)m(t)476 5290 y
Fg(The)g(r)l(e)l(al-value)l(d)j(height)e(\(same)h(as)f
Ff(W)-7 b(orld)p Fg(\).)275 5489 y Fk(\210)42 b Fp(double)27
b Fq(colSize)476 5613 y Fg(The)g(r)l(e)l(al-value)l(d)j(width)e(of)f(e)
l(ach)h(c)l(olumn.)p 150 5723 4034 4 v 150 5823 a Fn(Generated)e(on)e
(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 94 102
94 101 bop -358 70 a Fq(94)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
455 a Fk(\210)42 b Fp(double)27 b Fq(ro)m(wSize)476 594
y Fg(The)g(r)l(e)l(al-value)l(d)j(height)e(of)f(e)l(ach)i(r)l(ow.)275
807 y Fk(\210)42 b Fp(in)n(t)27 b Fq(ro)m(ws)476 946
y Fg(The)g(numb)l(er)i(of)e(ac)l(c)l(essible)i(r)l(ows.)275
1160 y Fk(\210)42 b Fp(in)n(t)27 b Fq(cols)476 1299 y
Fg(The)g(numb)l(er)i(of)e(ac)l(c)l(essible)i(c)l(olumns.)275
1512 y Fk(\210)42 b Fp(in)n(t)27 b Fq(tRo)m(ws)476 1651
y Fg(The)g(total)i(r)l(ows)f(including)g(c)l(onvolution)g(b)l(or)l
(der.)275 1865 y Fk(\210)42 b Fp(in)n(t)27 b Fq(tCols)476
2004 y Fg(The)g(total)i(c)l(olumns)f(including)f(c)l(onvolution)i(b)l
(or)l(der.)275 2217 y Fk(\210)42 b Fp(in)n(t)27 b Fq(b)s(order)476
2356 y Fg(The)g(size)h(of)g(the)g(c)l(onvolution)h(b)l(or)l(der)g
(\(use)l(d)g(to)f(make)g(neighb)l(ourho)l(o)l(d)i(op)l(er)l(ations)g
(work\).)275 2570 y Fk(\210)42 b Fp(\015oat)27 b Fq(maxConc)476
2708 y Fg(The)g(maximum)g(c)l(onc)l(entr)l(ation,)j(for)e(display)g
(purp)l(oses.)275 2922 y Fk(\210)42 b Fp(in)n(t)27 b
Fq(di\013usionSp)s(eed)476 3061 y Fg(How)g(often)h(\(in)g(timesteps\))h
(the)g(di\013usion)e(kernel)i(is)e(use)l(d.)275 3274
y Fk(\210)42 b Fp(in)n(t)27 b Fq(nextDi\013usion)476
3413 y Fg(Timesteps)h(left)g(til)f(the)h(next)h(di\013usion.)275
3627 y Fk(\210)42 b Fp(DistT)n(yp)r(e)28 b Fq(distribution)275
3749 y Fk(\210)42 b Fp(DistT)n(yp)r(e)28 b Fq(sw)m(apbu\013er)476
3888 y Fg(Dynamic)f(arr)l(ays)i(c)l(ontaining)g(distribution)f(data.)
275 4102 y Fk(\210)42 b Fq(Kernel)26 b Fh(\003)i Fq(k)m(ernel)476
4240 y Fg(Use)l(d)g(for)g(di\013usion.)150 4642 y Fj(F)-9
b(riends)275 4849 y Fk(\210)42 b Fp(struct)27 b Fq(Kernel)150
5160 y Fj(10.9.1)113 b(Detailed)36 b(Description)150
5366 y Fp(Implemen)n(ts)28 b(a)f(grid)g(whic)n(h)g(stores)g(spatial)g
(densit)n(y)g(information)g(to)h(a)f(sp)r(eci\014ed)h(resolution,)e
(e.g.)150 5513 y(n)n(utrien)n(ts)39 b(in)g(an)g(agar)e(dish.)72
b(Di\013usion)40 b(is)f(made)g(p)r(ossible)g(using)f(a)h(fast)g(con)n
(v)n(olution)f(function.)72 b(The)150 5613 y(distribution)28
b(can)f(b)r(e)h(accessed)e(directly)i(or)e(through)h(a)g(n)n(um)n(b)r
(er)h(of)f(sensors.)p -358 5723 V -192 5823 a Fn(Generated)f(on)f(Sun)f
(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 95 103
95 102 bop 150 70 a Fq(10.9)31 b(BEAST::Distribution)f(Class)h
(Reference)2158 b(95)p 150 103 4034 4 v 150 333 a Fj(10.9.2)113
b(Constructor)36 b(&)i(Destructor)e(Do)s(cumen)m(tation)150
533 y Fq(10.9.2.1)93 b(BEAST::Distribution::Distribution)28
b(\(in)m(t)k Fe(c)p Fq(,)f(in)m(t)h Fe(r)p Fq(,)f(in)m(t)h
Fe(b)g Fq(=)g(1\))150 734 y Fp(Sets)c(up)g(the)g Fq(Distribution)e
Fp(with)i(sp)r(eci\014ed)g(width,)g(heigh)n(t)g(and)f(k)n(ernel)g
(radius.)150 880 y(The)38 b(p)r(osition)f(is)g(set)h(to)f(0,0)g(and)g
(the)h Fq(Distribution)f Fp(resizes)f(to)h(the)h(\014t)g(the)g(w)n
(orld)f(\(main)n(taining)g(the)150 980 y(same)g(resolution)f(sp)r
(eci\014ed)h(b)n(y)g(c)h(and)f(r\).)66 b(The)37 b(k)n(ernel)f(is)h
(initialised)h(as)e(a)h(gaussian)f(distribution)h(and)150
1080 y(normalised.)142 1233 y Fq(P)m(arameters:)311 1333
y Fe(c)42 b Fp(The)28 b(n)n(um)n(b)r(er)f(of)h(columns)f(in)h(the)g
Fq(Distribution)e Fp(grid.)311 1453 y Fe(r)42 b Fp(The)27
b(n)n(um)n(b)r(er)h(of)f(ro)n(ws)f(in)i(the)g Fq(Distribution)f
Fp(grid.)311 1572 y Fe(b)42 b Fp(The)28 b(radius)f(of)g(the)h
(di\013usion)g(k)n(ernel,)f(so)g(the)h(width)g(and)f(heigh)n(t)h(are)e
(2)h Fh(\003)h Fp(b)f(+)h(1.)150 1847 y Fj(10.9.3)113
b(Mem)m(b)s(er)37 b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150
2047 y Fq(10.9.3.1)93 b(v)m(oid)32 b(BEAST::Distribution::AddDensit)m
(y)d(\(const)j(V)-8 b(ector2D)32 b(&)g Fe(v)p Fq(,)g(\015oat)g
Fe(d)p Fq(\))150 2248 y Fp(Adds)c(the)g(sp)r(eci\014ed)g(v)-5
b(alue)27 b(to)h(the)g(distribution)f(at)h(the)g(sp)r(eci\014ed)g(p)r
(oin)n(t.)142 2427 y Fq(P)m(arameters:)311 2527 y Fe(v)42
b Fp(The)28 b(lo)r(cation)f(to)g(alter,)g(in)h Fq(W)-8
b(orld)27 b Fp(co)r(ordinates/scale.)311 2647 y Fe(d)42
b Fp(The)28 b(amoun)n(t)f(to)g(add.)150 2955 y Fq(10.9.3.2)93
b(template)p Fo(<)p Fq(class)p 1224 2955 29 4 v 63 w(Op)p
Fo(>)32 b Fq(v)m(oid)g(BEAST::Distribution::Filter)c(\()p
2928 2955 V 34 w(Op)k Fe(op)p Fq(\))71 b Fi([inline])150
3155 y Fp(Replaces)27 b(eac)n(h)g(v)-5 b(alue)27 b(of)h(the)g
(distribution)f(with)i(op\(oldv)-5 b(al\).)142 3340 y
Fq(P)m(arameters:)311 3439 y Fe(op)42 b Fp(A)28 b(unary)f(op)r(erator)f
(with)i(input)g(and)g(output)g(\015oat.)150 3747 y Fq(10.9.3.3)93
b(template)p Fo(<)p Fq(class)p 1225 3747 V 64 w(Op,)33
b(class)p 1667 3747 V 67 w(F)-8 b(unc)p Fo(>)33 b Fq(v)m(oid)f
(BEAST::Distribution::Filter)e(\()p 3450 3747 V 34 w(Op)564
3847 y Fe(op)p Fq(,)p 726 3847 V 66 w(F)-8 b(unc)32 b
Fe(func)p Fq(\))71 b Fi([inline])150 4048 y Fp(Replaces)27
b(the)h(v)-5 b(alue)27 b(at)h(eac)n(h)f(co)r(ordinate)f(with)i
(op\(oldv)-5 b(al,)27 b(func\(x,)i(y\).)150 4194 y(This)f(allo)n(ws)e
(functions)i(to)f(b)r(e)h(added)g(and)f(subtracted)g(from)h(the)f
(distribution,)h(e.g.)185 4371 y Fd(dist.Filter\(plus<doubl)q(e>\(\))q
(,)41 b(GaussianNoise\(0.0,)g(1.5\)\))142 4549 y Fq(P)m(arameters:)311
4649 y Fe(func)h Fp(An)n(y)27 b(function)i(with)f(input)g(\(in)n(t,)g
(in)n(t\))g(output)h(\015oat.)150 4957 y Fq(10.9.3.4)93
b(template)p Fo(<)p Fq(class)p 1227 4957 V 67 w(F)-8
b(unc)p Fo(>)35 b Fq(v)m(oid)g(BEAST::Distribution::Plot)d(\()p
2960 4957 V 34 w(F)-8 b(unc)36 b Fe(func)p Fq(\))564
5057 y Fi([inline])150 5258 y Fp(Plots)27 b(the)h(sp)r(eci\014ed)g
(function)g(so)f(the)h(v)-5 b(alue)27 b(at)h(eac)n(h)e(co)r(ordinate)h
(x,)g(y)h(b)r(ecomes)f(func\(x,)i(y\).)142 5442 y Fq(P)m(arameters:)311
5541 y Fe(func)42 b Fp(An)n(y)27 b(function)i(with)f(input)g(\(in)n(t,)
g(in)n(t\))g(output)h(\015oat.)p 150 5723 4034 4 v 150
5823 a Fn(Generated)d(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 96 104
96 103 bop -358 70 a Fq(96)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a(10.9.3.5)93 b(v)m(oid)32 b(BEAST::Distribution::Render)c(\(\))71
b Fi([virtual])150 533 y Fp(Displa)n(ys)40 b(the)h(distribution)g(with)
h(transparency)d(according)g(to)h(densit)n(y)-7 b(,)45
b(up)c(to)g(maxConc)e(densit)n(y)i(\(=)150 633 y(opaque\).)142
850 y Fq(See)31 b(also:)311 949 y(SetMaxConc)150 1295
y(10.9.3.6)93 b(v)m(oid)32 b(BEAST::Distribution::SetDeca)m(yRate)e
(\(DistReal)h Fe(r)p Fq(\))70 b Fi([inline])150 1496
y Fp(Sp)r(eci\014es)24 b(the)h(rate)e(at)h(whic)n(h)g(the)g
(distribution)h(deca)n(ys:)33 b(1.0)24 b(for)f(no)h(deca)n(y)-7
b(,)24 b(0.5)f(to)h(reduce)g(b)n(y)f(half)i(on)e(ev)n(ery)150
1596 y(di\013usion.)150 1859 y Fq(10.9.3.7)93 b(v)m(oid)32
b(BEAST::Distribution::SetDensit)m(y)d(\(const)j(V)-8
b(ector2D)32 b(&)g Fe(v)p Fq(,)g(\015oat)g Fe(d)p Fq(\))150
2059 y Fp(Sets)c(the)g(densit)n(y)f(to)h(the)g(sp)r(eci\014ed)f(v)-5
b(alue)28 b(at)f(the)h(giv)n(en)f(lo)r(cation.)142 2271
y Fq(P)m(arameters:)311 2370 y Fe(v)42 b Fp(Where)28
b(in)f(the)h(distribution)g(to)g(up)r(date.)311 2503
y Fe(d)42 b Fp(The)28 b(new)f(densit)n(y)h(v)-5 b(alue.)150
2849 y Fq(10.9.3.8)93 b(v)m(oid)32 b
(BEAST::Distribution::SetDi\013usionSp)s(eed)26 b(\(in)m(t)32
b Fe(s)p Fq(\))72 b Fi([inline])150 3050 y Fp(Sets)28
b(the)g(in)n(terv)-5 b(al)27 b(for)g(calling)g(di\013usion,)h(e.g.)150
3197 y(ev)n(ery)e(2)i(timesteps.)37 b(0)27 b(disables)g(di\013usion)h
(altogether.)150 3460 y Fq(10.9.3.9)93 b(v)m(oid)32 b
(BEAST::Distribution::SetMaxConc)d(\(\015oat)j Fe(f)p
Fq(\))72 b Fi([inline])150 3660 y Fp(Sp)r(eci\014es)28
b(the)g(maxim)n(um)f(exp)r(ected)h(concen)n(tration)e(for)h(purp)r
(oses)g(of)h(displa)n(y)-7 b(.)150 3923 y Fq(10.9.3.10)92
b(virtual)33 b(v)m(oid)e(BEAST::Distribution::Up)s(date)f(\(\))71
b Fi([inline,)40 b(virtual])150 4124 y Fp(Filters)27
b(the)h(distribution)g(ev)n(ery)e(n)i(frames,)f(where)g(n)h(is)g(sp)r
(eci\014ed)f(b)n(y)h(the)g(di\013usion)g(sp)r(eed.)142
4336 y Fq(See)j(also:)311 4436 y(SetDi\013usionSp)s(eed)150
4666 y Fp(Reimplemen)n(ted)d(from)f Fq(BEAST::W)-8 b(orldOb)5
b(ject)27 b Fp(\(p.)15 b(213\).)150 4812 y(The)28 b(do)r(cumen)n
(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)
n(wing)e(\014les:)275 5026 y Fk(\210)42 b Fq(distribution.h)275
5134 y Fk(\210)g Fq(distribution.cc)p -358 5723 V -192
5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 97 105
97 104 bop 150 70 a Fq(10.10)30 b(BEAST::Distribution::Kernel)f(Struct)
k(Reference)1731 b(97)p 150 103 4034 4 v 150 333 a Fl(10.10)136
b(BEAST::Distribution::Kernel)47 b(Struct)e(Reference)150
570 y Fp(Implemen)n(ts)28 b(di\013usion)g(and)f(other)g(neigh)n(b)r
(ourho)r(o)r(d)g(op)r(erations.)150 717 y Fi(#include)40
b Fo(<)p Fi(distribution.h)p Fo(>)150 1036 y Fj(Public)c(Mem)m(b)s(er)h
(F)-9 b(unctions)275 1249 y Fk(\210)42 b Fq(Kernel)26
b Fp(\(in)n(t)j(w,)e(in)n(t)h(h\))275 1376 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetDistribution)h Fp(\()p Fq(Distribution)g
Fh(\003)p Fp(\))476 1519 y Fg(Sets)h(the)h Ff(Kernel)f
Fg(up)g(so)g(that)g(it)g(c)l(an)g(b)l(e)g(use)l(d)h(on)e(the)i(sp)l(e)l
(ci\014e)l(d)g Ff(Distribution)p Fg(.)275 1736 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(Set)i Fp(\(in)n(t)g(x,)g(in)n(t)g(y)-7
b(,)27 b Fq(DistReal)g Fp(v\))275 1863 y Fk(\210)42 b
Fp(v)n(oid)26 b Fq(SetDivisor)h Fp(\()p Fq(DistReal)g
Fp(d\))476 2006 y Fg(Sets)h(the)h(divisor)f(of)f(the)h(kernel)h(by)f
(dividing)f(e)l(ach)h(value)g(by)g(the)h(new)e(divisor.)275
2224 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Normalise)f Fp(\(\))476
2367 y Fg(Ensur)l(es)k(that)g(the)f(values)g(in)g(the)g(kernel)g(sum)g
(to)g(1)g(so)g(that)h(no)e(density)i(is)e(lost.)275 2585
y Fk(\210)42 b Fp(\015oat)27 b Fq(Get)g Fp(\(in)n(t)h(x,)g(in)n(t)g
(y\))476 2728 y Fg(R)l(eturns)h(the)f(value)g(at)g(c)l(o)l(or)l(dinate)
i(x,)d(y)h(of)f(the)i Ff(Kernel)p Fg(.)275 2945 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(Filter)h Fp(\()p Fq(Distribution)g
Fh(\003)p Fp(\))h(const)476 3088 y Fg(Performs)g(one)g(p)l(ass)h(of)e
(the)h Ff(Kernel)g Fg(over)h(the)f(sp)l(e)l(ci\014e)l(d)h
Ff(Distribution)p Fg(.)275 3306 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(class)p 940 3306 25 4 v 56 w(F)-7 b(unc)p Fo(>)28
b Fp(v)n(oid)e Fq(Plot)i Fp(\()p 1655 3306 V 30 w(F)-7
b(unc)28 b(func\))476 3449 y Fg(Plots)g(the)g(sp)l(e)l(ci\014e)l(d)h
(function)f(\(e.g.)150 3860 y Fj(Public)36 b(A)m(ttributes)275
4073 y Fk(\210)42 b Fp(in)n(t)27 b Fq(width)275 4200
y Fk(\210)42 b Fp(in)n(t)27 b Fq(heigh)m(t)275 4326 y
Fk(\210)42 b Fp(in)n(t)27 b Fq(widthjump)275 4453 y Fk(\210)42
b Fp(in)n(t)27 b Fq(corner)275 4579 y Fk(\210)42 b Fq(DistReal)26
b Fh(\003)h Fq(k)m(ernel)275 4705 y Fk(\210)42 b Fq(DistReal)26
b Fp(const)h Fh(\003)g Fq(k)275 4832 y Fk(\210)42 b Fq(DistReal)26
b Fh(\003)h Fq(d)275 4958 y Fk(\210)42 b Fp(in)n(t)27
b Fq(i)275 5085 y Fk(\210)42 b Fp(in)n(t)27 b Fq(j)150
5404 y Fj(10.10.1)113 b(Detailed)36 b(Description)150
5613 y Fp(Implemen)n(ts)28 b(di\013usion)g(and)f(other)g(neigh)n(b)r
(ourho)r(o)r(d)g(op)r(erations.)p 150 5723 4034 4 v 150
5823 a Fn(Generated)f(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 98 106
98 105 bop -358 70 a Fq(98)462 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fj(10.10.2)113 b(Mem)m(b)s(er)37 b(F)-9 b(unction)37
b(Do)s(cumen)m(tation)150 533 y Fq(10.10.2.1)92 b(v)m(oid)32
b(BEAST::Distribution::Kernel::Filter)27 b(\(Distribution)k
Fh(\003)g Fe(dist)p Fq(\))h(const)150 734 y Fp(P)n(erforms)26
b(one)h(pass)g(of)g(the)h Fq(Kernel)f Fp(o)n(v)n(er)f(the)i(sp)r
(eci\014ed)g Fq(Distribution)p Fp(.)150 880 y Fq(Kernel)e
Fp(op)r(erations)g(are)g(p)r(erformed)g(b)n(y)h(sliding)g(the)g
Fq(Kernel)f Fp(along)g(the)h(cells)g(of)g(the)g Fq(Distribution)f
Fp(and)150 980 y(replacing)20 b(eac)n(h)g(v)-5 b(alue)22
b(with)f(the)h(w)n(eigh)n(ted)f(sum)g(of)g(the)h(surrounding)e(pixels,)
i(corresp)r(onding)d(to)i(the)h(w)n(eigh)n(ts)150 1080
y(of)27 b(the)h Fq(Kernel)p Fp(.)36 b(That)27 b(probably)f(do)r(esn't)i
(mak)n(e)e(sense,)h(so)f(read)h(ab)r(out)g(neigh)n(b)r(ourho)r(o)r(d)f
(op)r(erations)g(\(e.g.)150 1179 y(blur\))i(in)g(a)f(go)r(o)r(d)g
(image)g(pro)r(cessing)f(b)r(o)r(ok.)142 1379 y Fq(P)m(arameters:)311
1479 y Fe(dist)42 b Fp(The)28 b Fq(Distribution)e Fp(to)i(apply)f(the)h
(\014lter)f(to.)150 1808 y Fq(10.10.2.2)92 b(template)p
Fo(<)p Fq(class)p 1273 1808 29 4 v 66 w(F)-8 b(unc)p
Fo(>)33 b Fq(v)m(oid)h(BEAST::Distribution::Kernel::Plot)28
b(\()p 3335 1808 V 35 w(F)-8 b(unc)611 1908 y Fe(func)p
Fq(\))71 b Fi([inline])150 2108 y Fp(Plots)27 b(the)h(sp)r(eci\014ed)g
(function)g(\(e.g.)150 2255 y Fq(Gaussian2D)p Fp(\))g(in)g(the)g(k)n
(ernel.)142 2455 y Fq(P)m(arameters:)311 2554 y Fe(func)42
b Fp(F)-7 b(unction)28 b(with)g(\(in)n(t,)g(in)n(t\))g(input)h(and)e
(\015oat)g(output.)150 2884 y Fq(10.10.2.3)92 b(v)m(oid)32
b(BEAST::Distribution::Kernel::SetDistribution)26 b(\(Distribution)31
b Fh(\003)h Fe(d)p Fq(\))150 3084 y Fp(Sets)c(the)g Fq(Kernel)f
Fp(up)h(so)e(that)i(it)g(can)g(b)r(e)g(used)f(on)g(the)h(sp)r
(eci\014ed)g Fq(Distribution)p Fp(.)142 3296 y Fq(P)m(arameters:)311
3396 y Fe(d)42 b Fp(The)28 b Fq(Distribution)e Fp(this)i
Fq(Kernel)f Fp(will)h(b)r(e)g(used)f(on.)150 3626 y(The)h(do)r(cumen)n
(tation)f(for)g(this)h(struct)f(w)n(as)g(generated)g(from)g(the)h
(follo)n(wing)e(\014les:)275 3839 y Fk(\210)42 b Fq(distribution.h)275
3947 y Fk(\210)g Fq(distribution.cc)p -358 5723 4034
4 v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 99 107
99 106 bop 150 70 a Fq(10.11)30 b(BEAST::DNNAnimat)g(Class)h(Reference)
2084 b(99)p 150 103 4034 4 v 150 333 a Fl(10.11)136 b(BEAST::DNNAnimat)
45 b(Class)h(Reference)150 562 y Fp(An)32 b Fq(Animat)e
Fp(with)i(a)f(built-in)h(dynamical)f(net)n(w)n(ork)f(whic)n(h)h(is)g
(automatically)f(con\014gured)h(dep)r(ending)g(on)150
661 y(the)d(Animat's)g(sensor)e(and)i(con)n(trol)e(con\014guration.)150
808 y Fi(#include)40 b Fo(<)p Fi(neuralanimat.h)p Fo(>)150
955 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::DNNAnimat:)1556
2326 y @beginspecial 35 @llx 35 @lly 173 @urx 277 @ury
856 @rwi @setspecial
%%BeginDocument: classBEAST_1_1DNNAnimat__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 173 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 173 277
%%PageOrientation: Portrait
gsave
35 35 138 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node169
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 9 60 moveto
127 60 lineto
127 75 lineto
9 75 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 9 60 moveto
127 60 lineto
127 75 lineto
9 75 lineto
closepath
stroke
gsave 10 dict begin
68 63 moveto 108 -0.5 (BEAST::DNNAnimat) alignedtext
end grestore
end grestore

%	Node173
[ /Rect [ 0 9 136 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvoDNNAnimat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 8 moveto
137 8 lineto
137 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
68 11 moveto 127 -0.5 (BEAST::EvoDNNAnimat) alignedtext
end grestore
end grestore

%	Node169 -> Node173
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 68 51 moveto
68 42 68 31 68 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 50 moveto
68 60 lineto
71 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node170
[ /Rect [ 24 113 112 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Animat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 24 112 moveto
113 112 lineto
113 127 lineto
24 127 lineto
closepath
stroke
gsave 10 dict begin
68 115 moveto 79 -0.5 (BEAST::Animat) alignedtext
end grestore
end grestore

%	Node170 -> Node169
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 68 103 moveto
68 94 68 83 68 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 102 moveto
68 112 lineto
71 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node171
[ /Rect [ 11 165 125 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 11 164 moveto
126 164 lineto
126 179 lineto
11 179 lineto
closepath
stroke
gsave 10 dict begin
68 167 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node171 -> Node170
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 68 155 moveto
68 146 68 135 68 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 154 moveto
68 164 lineto
71 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node172
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 19 216 moveto
118 216 lineto
118 231 lineto
19 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
68 219 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node172 -> Node171
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 68 207 moveto
68 198 68 187 68 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 206 moveto
68 216 lineto
71 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2651 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::DNNAnimat:)862 3571 y @beginspecial 35 @llx 35
@lly 507 @urx 215 @ury 2520 @rwi @setspecial
%%BeginDocument: classBEAST_1_1DNNAnimat__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 507 215
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 507 215
%%PageOrientation: Portrait
gsave
35 35 472 180 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node174
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 245 86 moveto
363 86 lineto
363 101 lineto
245 101 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 245 86 moveto
363 86 lineto
363 101 lineto
245 101 lineto
closepath
stroke
gsave 10 dict begin
304 89 moveto 108 -0.5 (BEAST::DNNAnimat) alignedtext
end grestore
end grestore

%	Node202
[ /Rect [ 0 9 470 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1property.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 8 moveto
470 8 lineto
470 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
235 11 moveto 460 -0.5 (BEAST::property< DNNAnimat, DynamicalNet, DynamicalNet &, const DynamicalNet & >) alignedtext
end grestore
end grestore

%	Node174 -> Node202
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 303 78 moveto
302 67 299 52 290 42 curveto
283 33 272 28 262 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 300 76 moveto
304 86 lineto
305 76 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
316 56 moveto 21 -0.5 (_Set) alignedtext
316 45 moveto 19 -0.5 (that) alignedtext
end grestore
end grestore

%	Node175
[ /Rect [ 273 155 361 169 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Animat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 273 154 moveto
362 154 lineto
362 169 lineto
273 169 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
317 157 moveto 79 -0.5 (BEAST::Animat) alignedtext
end grestore
end grestore

%	Node175 -> Node174
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 314 146 moveto
311 132 307 113 305 102 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 311 145 moveto
316 154 lineto
316 144 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node199
[ /Rect [ 129 155 253 169 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1DynamicalNet.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 129 154 moveto
253 154 lineto
253 169 lineto
129 169 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
191 157 moveto 114 -0.5 (BEAST::DynamicalNet) alignedtext
end grestore
end grestore

%	Node199 -> Node174
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 207 149 moveto
219 140 235 129 250 120 curveto
261 113 275 106 286 102 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 207 146 moveto
201 154 lineto
210 150 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
277 124 moveto 44 -0.5 (myBrain) alignedtext
end grestore
end grestore

%	Node199 -> Node202
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 192 147 moveto
193 131 196 107 202 86 curveto
208 62 223 36 230 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 190 144 moveto
191 154 lineto
195 144 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
219 90 moveto 24 -0.5 (_Get) alignedtext
end grestore
end grestore

%	Node202 -> Node174
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 277 86 moveto
267 82 256 76 249 68 curveto
240 58 237 43 235 32 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 238 34 moveto
235 24 lineto
233 34 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
267 51 moveto 27 -0.5 (Brain) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3932 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 4116 y Fk(\210)42 b Fp(virtual)27 b Fh(\030)p
Fq(DNNAnimat)e Fp(\(\))476 4238 y Fg(Destructor)30 b(for)d
Ff(DNNAnimat)p Fg(,)h(if)e(the)j Ff(DynamicalNet)f Fg(has)g(b)l(e)l(en)
h(initialise)l(d,)d(it)h(is)h(delete)l(d)h(her)l(e.)275
4435 y Fk(\210)42 b Fp(v)n(oid)25 b Fq(InitDNN)i Fp(\(in)n(t)g
(hidden=-1,)f(in)n(t)h(inputs=-1,)f(in)n(t)h(outputs=-1,)f(b)r(o)r(ol)g
(m)n(ultiInputs=true,)h(b)r(o)r(ol)358 4534 y(m)n(ultiOutputs=false\))
476 4656 y Fg(This)g(metho)l(d)i(is)e(r)l(esp)l(onsible)i(for)f
(initialising)e(the)i(DNNA)n(nimat's)g(neur)l(al)g(network.)275
4853 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Con)m(trol)i
Fp(\(\))476 4975 y Fg(The)f(DNNA)n(nimat's)h(neur)l(al)g(net)g(is)g
(linke)l(d)f(to)h(its)g(sensors)i(and)e(c)l(ontr)l(ols)h(her)l(e.)275
5172 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Serialise)h
Fp(\(std::ostream)g(&\))g(const)476 5294 y Fg(Outputs)i(the)f(DNNA)n
(nimat's)g(data)g(to)g(a)g(str)l(e)l(am.)275 5491 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(Unserialise)h Fp(\(std::istream)g(&\))
476 5613 y Fg(Inputs)h(the)g(DNNA)n(nimat's)g(data)g(fr)l(om)g(a)f(str)
l(e)l(am.)p 150 5723 V 150 5823 a Fn(Generated)f(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 100 108
100 107 bop -358 70 a Fq(100)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
437 a Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetBrain)i Fp(\()p
Fq(DynamicalNet)f Fp(&brain\))275 542 y Fk(\210)42 b
Fp(const)27 b Fq(DynamicalNet)g Fp(&)g Fq(GetBrain)h
Fp(\(\))g(const)275 647 y Fk(\210)42 b Fp(b)r(o)r(ol)27
b Fq(IsOwnBrain)h Fp(\(\))g(const)150 923 y Fj(Public)36
b(A)m(ttributes)275 1107 y Fk(\210)42 b Fq(prop)s(ert)m(y)p
Fo(<)23 b Fq(DNNAnimat)p Fp(,)f Fq(DynamicalNet)p Fp(,)h
Fq(DynamicalNet)f Fp(&,)i(const)e Fq(DynamicalNet)g Fp(&)358
1206 y Fo(>)27 b Fq(Brain)150 1483 y Fj(Protected)36
b(Mem)m(b)s(er)i(F)-9 b(unctions)275 1666 y Fk(\210)42
b Fq(DynamicalNet)26 b Fp(&)i Fq(GetBrain)f Fp(\(\))150
1943 y Fj(10.11.1)113 b(Detailed)36 b(Description)150
2144 y Fp(An)c Fq(Animat)e Fp(with)i(a)f(built-in)h(dynamical)f(net)n
(w)n(ork)f(whic)n(h)h(is)g(automatically)f(con\014gured)h(dep)r(ending)
g(on)150 2243 y(the)d(Animat's)g(sensor)e(and)i(con)n(trol)e
(con\014guration.)142 2439 y Fq(See)31 b(also:)311 2539
y(Ev)m(oDNNAnimat)c Fp(for)g(an)g(ev)n(olv)-5 b(able)27
b(v)n(ersion.)142 2719 y Fq(T)-8 b(o)s(do)311 2819 y
Fp(Review)28 b(brain)f(o)n(wnership/destructor)150 3095
y Fj(10.11.2)113 b(Mem)m(b)s(er)37 b(F)-9 b(unction)37
b(Do)s(cumen)m(tation)150 3296 y Fq(10.11.2.1)92 b(v)m(oid)32
b(BEAST::DNNAnimat::Con)m(trol)d(\(\))71 b Fi([virtual])150
3496 y Fp(The)28 b(DNNAnimat's)h(neural)d(net)i(is)g(link)n(ed)f(to)h
(its)g(sensors)e(and)h(con)n(trols)f(here.)150 3643 y(All)h(sensor)f
(inputs)h(are)f(fed)i(to)e(the)i(neural)e(net)n(w)n(ork)f(and)i(all)g
(con)n(trol)e(outputs)i(are)f(tak)n(en)h(from)f(the)h(ANN's)150
3743 y(output)h(v)-5 b(alues.)142 3926 y Fq(W)d(arning:)311
4025 y Fp(It)29 b(is)e(assumed)h(that)g(there)f(are)g(at)h(least)f(as)g
(man)n(y)h(input)g(c)n(hannels)f(as)h(sensors)e(and)h(at)h(least)g(as)f
(man)n(y)311 4125 y(output)k(c)n(hannels)e(as)g(con)n(trols.)42
b(If)30 b(y)n(our)f Fq(Animat)f Fp(is)i(not)g(set)g(up)g(in)g(this)g(w)
n(a)n(y)f(y)n(our)f(needs)i(are)f(lik)n(ely)311 4224
y(greater)d(than)i(can)f(b)r(e)h(pro)n(vided)f(for)g(b)n(y)g
Fq(DNNAnimat)p Fp(.)150 4425 y(Reimplemen)n(ted)h(from)f
Fq(BEAST::Animat)f Fp(\(p.)15 b(71\).)150 4685 y Fq(10.11.2.2)92
b(v)m(oid)33 b(BEAST::DNNAnimat::InitDNN)c(\(in)m(t)j
Fe(total)g Fq(=)h(-1,)e(in)m(t)i Fe(inputs)f Fq(=)g(-1,)g(in)m(t)611
4785 y Fe(outputs)g Fq(=)g(-1,)f(b)s(o)s(ol)f Fe(multiInput)h
Fq(=)h(true,)f(b)s(o)s(ol)f Fe(multiOutput)g Fq(=)i(false\))150
4985 y Fp(This)c(metho)r(d)g(is)f(resp)r(onsible)g(for)g(initialising)g
(the)h(DNNAnimat's)h(neural)e(net)n(w)n(ork.)150 5132
y(It)32 b(should)g(usually)g(b)r(e)g(called)g(in)g(the)h(constructor)d
(of)i(a)g(deriv)n(ed)f(class,)h(after)g(the)g(sensors)f(ha)n(v)n(e)g(b)
r(een)h(set)150 5232 y(up.)37 b(Also)27 b(randomises)g(the)h(neural)e
(net)n(w)n(ork)h(for)g(use)g(in)h(ev)n(olutionary)e(sim)n(ulations.)142
5414 y Fq(P)m(arameters:)311 5513 y Fe(hidden)42 b Fp(The)e(n)n(um)n(b)
r(er)g(of)g(no)r(des,)j(defaults)d(to)g(b)r(e)h(the)f(same)g(as)f(the)i
(n)n(um)n(b)r(er)e(of)h(sensors)f(on)h(the)494 5613 y
Fq(Animat)p Fp(.)p -358 5723 V -192 5823 a Fn(Generated)26
b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 101 109
101 108 bop 150 70 a Fq(10.11)30 b(BEAST::DNNAnimat)g(Class)h
(Reference)2036 b(101)p 150 103 4034 4 v 311 333 a Fe(inputs)41
b Fp(The)f(n)n(um)n(b)r(er)g(of)g(inputs,)k(defaults)c(to)g(b)r(e)g
(the)g(same)g(as)f(the)h(n)n(um)n(b)r(er)g(of)g(sensors)e(on)i(the)494
432 y Fq(Animat)p Fp(.)311 565 y Fe(outputs)h Fp(The)32
b(n)n(um)n(b)r(er)f(of)h(outputs,)g(defaults)g(to)g(b)r(e)f(the)h(same)
f(as)g(the)h(n)n(um)n(b)r(er)f(of)h(con)n(trols)d(on)j(the)494
665 y Fq(Animat)p Fp(.)311 798 y Fe(multiInput)41 b Fp(Set)28
b(to)f(true)h(if)g(all)f(inputs)h(go)f(to)g(all)h(no)r(des,)f(false)g
(if)h(not,)g(defaults)g(to)f(true.)311 930 y Fe(multiOutput)40
b Fp(Set)28 b(to)f(true)h(if)g(all)f(outputs)h(come)f(from)h(all)f(no)r
(des,)g(false)h(if)g(not,)f(defaults)h(to)g(false.)150
1260 y Fq(10.11.2.3)92 b(v)m(oid)37 b(BEAST::DNNAnimat::Serialise)c
(\(std::ostream)h(&)k Fe(out)p Fq(\))e(const)611 1359
y Fi([virtual])150 1560 y Fp(Outputs)28 b(the)g(DNNAnimat's)h(data)e
(to)g(a)h(stream.)142 1772 y Fq(P)m(arameters:)311 1871
y Fe(out)42 b Fp(A)27 b(reference)g(to)h(an)f(output)h(stream.)150
2101 y(Reimplemen)n(ted)g(from)f Fq(BEAST::Animat)f Fp(\(p.)15
b(73\).)150 2364 y Fq(10.11.2.4)92 b(v)m(oid)32 b
(BEAST::DNNAnimat::Unserialise)c(\(std::istream)h(&)j
Fe(in)p Fq(\))70 b Fi([virtual])150 2565 y Fp(Inputs)28
b(the)g(DNNAnimat's)h(data)e(from)g(a)g(stream.)142 2776
y Fq(P)m(arameters:)311 2876 y Fe(in)41 b Fp(A)28 b(reference)f(to)h
(an)f(input)h(stream.)150 3106 y(Reimplemen)n(ted)g(from)f
Fq(BEAST::Animat)f Fp(\(p.)15 b(73\).)150 3253 y(The)28
b(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h(from)
g(the)h(follo)n(wing)e(\014les:)275 3466 y Fk(\210)42
b Fq(neuralanimat.h)275 3574 y Fk(\210)g Fp(neuralanimat.cc)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 102 110
102 109 bop -358 70 a Fq(102)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.12)136 b(BEAST::DynamicalNet)46 b(Class)g(Reference)150
562 y Fp(This)28 b(class)e(implemen)n(ts)i(a)f(fully)h(recurren)n(t)f
(con)n(tin)n(uous)f(\(or)h(dynamical\))g(neural)g(net)n(w)n(ork.)150
709 y Fi(#include)40 b Fo(<)p Fi(dynamicalnet.h)p Fo(>)150
855 y Fp(Collab)r(oration)26 b(diagram)g(for)h(BEAST::DynamicalNet:)
1356 1571 y @beginspecial 35 @llx 35 @lly 268 @urx 159
@ury 1335 @rwi @setspecial
%%BeginDocument: classBEAST_1_1DynamicalNet__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 268 159
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 268 159
%%PageOrientation: Portrait
gsave
35 35 233 124 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node204
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 41 8 moveto
165 8 lineto
165 23 lineto
41 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 41 8 moveto
165 8 lineto
165 23 lineto
41 23 lineto
closepath
stroke
gsave 10 dict begin
103 11 moveto 114 -0.5 (BEAST::DynamicalNet) alignedtext
end grestore
end grestore

%	Node205
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 0 98 moveto
99 98 lineto
99 113 lineto
0 113 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
49 101 moveto 89 -0.5 (vector< Neuron >) alignedtext
end grestore
end grestore

%	Node205 -> Node204
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 57 92 moveto
65 79 77 59 87 42 curveto
91 36 95 29 98 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 56 88 moveto
53 98 lineto
61 91 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
111 57 moveto 39 -0.5 (neurons) alignedtext
end grestore
end grestore

%	Node206
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 116 98 moveto
200 98 lineto
200 113 lineto
116 113 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
158 101 moveto 74 -0.5 (vector< float >) alignedtext
end grestore
end grestore

%	Node206 -> Node204
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 156 91 moveto
154 77 150 56 140 42 curveto
134 34 126 28 119 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 153 88 moveto
157 98 lineto
158 88 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
190 68 moveto 36 -0.5 (outputs) alignedtext
190 57 moveto 63 -0.5 (neuronStates) alignedtext
190 46 moveto 30 -0.5 (inputs) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1933 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2119 y Fk(\210)42 b Fq(DynamicalNet)25
b Fp(\(in)n(t)h(inputs,)h(in)n(t)f(outputs,)h(in)n(t)f(total,)g(b)r(o)r
(ol)g(m)n(ultiInputNo)r(des=true,)h(b)r(o)r(ol)f(m)n(ulti-)358
2218 y(OutputNo)r(des=false\))476 2342 y Fg(Constructor,)41
b(al)t(lows)36 b(a)h Ff(DynamicalNet)g Fg(to)h(b)l(e)f(c)l(on\014gur)l
(e)l(d)i(with)d(the)i(fol)t(lowing)e(fe)l(atur)l(es:)54
b(V)-6 b(ariable)476 2434 y(numb)l(er)28 b(of)f(input)h(channels.)275
2633 y Fk(\210)42 b Fh(\030)p Fq(DynamicalNet)26 b Fp(\(\))476
2757 y Fg(The)h(destructor,)k(do)l(es)d(nothing)h(at)f(al)t(l.)275
2955 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Init)i Fp(\(in)n(t)g(inputs,)g
(in)n(t)g(outputs,)g(in)n(t)g(total,)f(b)r(o)r(ol)h(m)n(ultIn,)g(b)r(o)
r(ol)g(m)n(ultOut\))476 3079 y Fg(F)-6 b(or)26 b(unserialisation)i
(purp)l(oses,)g(the)f(initialisation)e(metho)l(d)j(is)e(actual)t(ly)g
(r)l(esp)l(onsible)i(for)e(c)l(on\014guring)i(the)476
3171 y(network,)g(and)g(is)g(c)l(al)t(le)l(d)f(by)h(the)h(c)l
(onstructor.)275 3369 y Fk(\210)42 b Fp(v)n(oid)26 b
Fq(Reset)h Fp(\(\))476 3493 y Fg(Sets)h(the)h(output)g(value)f(of)f(e)l
(ach)i(neur)l(on)f(\(i.e.)275 3692 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetInputChannel)i Fp(\(in)n(t)g(neuron,)f(in)n(t)h(c)n(hannel\))
476 3816 y Fg(Con\014gur)l(es)h(the)f(network)i(to)e(channel)g(inputs)g
(to)g(di\013er)l(ent)h(no)l(des.)275 4015 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetOutputChannel)i Fp(\(in)n(t)g(neuron,)f(in)n(t)
h(c)n(hannel\))476 4139 y Fg(Con\014gur)l(es)h(the)f(network)i(to)e
(channel)g(output)h(fr)l(om)e(di\013er)l(ent)i(no)l(des.)275
4338 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Randomise)f Fp(\(\))476
4462 y Fg(F)-6 b(or)l(c)l(es)31 b(e)l(ach)f Ff(Neuron)g
Fg(in)f(the)h(network)h(to)g(r)l(andomise)f(itself,)f(by)h(c)l(al)t
(ling)f(its)h(own)f(R)l(andomise)h(memb)l(er)476 4553
y(function.)275 4752 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetInput)j
Fp(\(in)n(t)f(n,)f(\015oat)h(f)6 b(\))476 4876 y Fg(Sets)28
b(the)h(input)f(value)g(for)f(channel)i(n)e(to)h(f.)275
5075 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetInput)j Fp(\(const)e(std::v)n
(ector)p Fo(<)f Fp(\015oat)h Fo(>)h Fp(&v\))476 5199
y Fg(Sets)g(al)t(l)f(the)i(input)f(values)g(at)g(onc)l(e)g(fr)l(om)g(a)
f(ve)l(ctor)j(of)d(\015o)l(ats.)275 5397 y Fk(\210)42
b Fp(\015oat)27 b Fq(GetOutput)g Fp(\(in)n(t)i(n\))f(const)476
5522 y Fg(R)l(eturns)h(the)f(output)h(value)f(for)g(the)g(sp)l(e)l
(ci\014e)l(d)h(output)h(channel.)p -358 5723 V -192 5823
a Fn(Generated)c(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 103 111
103 110 bop 150 70 a Fq(10.12)30 b(BEAST::DynamicalNet)h(Class)g
(Reference)1973 b(103)p 150 103 4034 4 v 275 333 a Fk(\210)42
b Fp(const)27 b(std::v)n(ector)p Fo(<)f Fp(\015oat)h
Fo(>)g Fp(&)h Fq(GetOutputs)f Fp(\(\))h(const)476 451
y Fg(R)l(eturns)h(al)t(l)e(the)h(outputs)i(at)e(onc)l(e)g(as)g(a)g(ve)l
(ctor)h(of)e(\015o)l(ats.)275 645 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(Fire)i Fp(\(\))476 763 y Fg(This)c(is)h(wher)l(e)g(it)g(al)t(l)f
(happ)l(ens,)i(although)g(al)t(l)e(the)i Ff(DynamicalNet)f
Fg(class)g(r)l(e)l(al)t(ly)g(has)h(to)f(do)g(is:)33 b(Cle)l(ar)25
b(the)476 855 y(outputs.)275 1048 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetCon\014guration)i Fp(\(const)f(std::v)n(ector)p
Fo(<)f Fp(\015oat)i Fo(>)f Fp(&\))476 1167 y Fg(Sets)i(the)h(c)l
(on\014gur)l(ation)g(of)f(the)g(network)h(ac)l(c)l(or)l(ding)g(to)f(a)g
(pr)l(ovide)l(d)h(ve)l(ctor)g(of)e(weights,)i(biases)f(and)g(time)476
1258 y(c)l(onstants.)275 1452 y Fk(\210)42 b Fp(std::v)n(ector)p
Fo(<)26 b Fp(\015oat)h Fo(>)g Fq(GetCon\014guration)g
Fp(\(\))i(const)476 1570 y Fg(R)l(eturns)f(al)t(l)d(the)i(weights)g
(and)g(biases)g(in)f(the)h(network,)h(in)e(a)g(long)g(list)g(suitable)i
(for)e(pr)l(o)l(c)l(essing)i(by)f(a)f(GA.)275 1764 y
Fk(\210)42 b Fp(std::string)27 b Fq(T)-8 b(oString)27
b Fp(\(\))i(const)476 1883 y Fg(Prints)f(al)t(l)f(the)h(data)h(in)e
(this)h(network)h(in)e(a)h(pr)l(etty)h(format)f(and)g(r)l(eturns)i(it)d
(as)h(a)g(string.)275 2076 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(Serialise)h Fp(\(std::ostream)g(&\))g(const)476
2195 y Fg(Outputs)i(al)t(l)e(setup)i(and)e(c)l(on\014gur)l(ation)j
(data)f(for)e(this)h(network)h(to)g(a)e(str)l(e)l(am.)275
2388 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Unserialise)h
Fp(\(std::istream)g(&\))476 2507 y Fg(T)-6 b(akes)28
b(a)g(string)g(pr)l(o)l(duc)l(e)l(d)i(by)e Ff(DynamicalNet::Serialise)h
Fg(and)f(turns)g(it)g(b)l(ack)g(into)g(a)g(DNN.)150 2873
y Fj(Protected)36 b(Mem)m(b)s(er)i(F)-9 b(unctions)275
3053 y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)26 b Fq(Neuron)h
Fo(>)g Fp(&)g Fq(GetNeurons)g Fp(\(\))275 3155 y Fk(\210)42
b Fp(std::v)n(ector)p Fo(<)26 b Fp(\015oat)h Fo(>)g Fp(&)g
Fq(GetInputs)h Fp(\(\))275 3258 y Fk(\210)42 b Fp(std::v)n(ector)p
Fo(<)26 b Fp(\015oat)h Fo(>)g Fp(&)g Fq(GetOutputs)h
Fp(\(\))275 3360 y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)26
b Fp(\015oat)h Fo(>)g Fp(&)g Fq(GetNeuronStates)h Fp(\(\))275
3462 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(IsMultiInputNo)s(des)e
Fp(\(\))275 3564 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(IsMultiOutputNo)s
(des)e Fp(\(\))150 3838 y Fj(F)-9 b(riends)275 4019 y
Fk(\210)42 b Fp(struct)27 b Fq(Neuron)150 4294 y Fj(10.12.1)113
b(Detailed)36 b(Description)150 4494 y Fp(This)28 b(class)e(implemen)n
(ts)i(a)f(fully)h(recurren)n(t)f(con)n(tin)n(uous)f(\(or)h(dynamical\))
g(neural)g(net)n(w)n(ork.)150 4641 y(The)20 b(net)n(w)n(ork)e(is)h
(con\014gured)f(with)i(a)f(n)n(um)n(b)r(er)h(of)f(no)r(des,)i(some)e
(or)g(all)g(of)g(whic)n(h)h(ma)n(y)e(also)h(act)g(as)g(input)h(no)r
(des,)150 4741 y(and)32 b(some)h(or)e(all)i(of)f(whic)n(h)h(ma)n(y)f
(act)g(as)g(output)h(no)r(des.)52 b(Ev)n(ery)31 b(no)r(de)i(on)f
(\014ring)g(tak)n(es)g(a)g(w)n(eigh)n(ted)g(sum)150 4840
y(of)27 b(the)g(activ)-5 b(ation)27 b(states)f(of)h(ev)n(ery)f(other)g
(no)r(de,)h(including)h(itself.)37 b(This)27 b(approac)n(h)e(allo)n(ws)
g(the)j(net)n(w)n(ork)d(to)150 4940 y(store)g(information)g(and)h(p)r
(erform)g(far)f(more)h(complex)f(tasks)h(than)g(a)f(feed-forw)n(ard)g
(net)h(migh)n(t.)36 b(The)27 b(actual)150 5040 y(design)e(of)h
(dynamical)f(net)n(w)n(orks)f(has)h(man)n(y)g(in)n(terpretations,)f
(but)j(for)e(reference,)g(this)h(one)f(corresp)r(onds)f(as)150
5139 y(closely)g(as)f(p)r(ossible)i(to)f(the)h(net)n(w)n(ork)e(describ)
r(ed)h(in)h(Y)-7 b(amauc)n(hi,)25 b(B.)f(M.,)i(&)e(Beer,)g(R.)h(D.)g
(\(1994\).)34 b(Sequen)n(tial)150 5239 y(b)r(eha)n(vior)d(and)h
(learning)f(in)h(ev)n(olv)n(ed)f(dynamical)h(neural)f(net)n(w)n(orks.)
49 b(Adaptiv)n(e)32 b(Beha)n(vior)e(2\(3\),)j(219{246.)150
5338 y Fi(http://citeseer.)o(nj.)o(ne)o(c.)o(com)o(/y)o(ama)o(uc)o(hi9)
o(4s)o(eq)o(uen)o(ti)o(al.)o(ht)o(ml)142 5513 y Fq(See)e(also:)311
5613 y(F)-8 b(eedF)g(orw)m(ardNet)p 150 5723 V 150 5823
a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 104 112
104 111 bop -358 70 a Fq(104)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fj(10.12.2)113 b(Constructor)36 b(&)i(Destructor)e(Do)s(cumen)m
(tation)150 533 y Fq(10.12.2.1)92 b(BEAST::DynamicalNet::DynamicalNet)
27 b(\(in)m(t)k Fe(i)p Fq(,)e(in)m(t)i Fe(o)p Fq(,)f(in)m(t)g
Fe(t)p Fq(,)g(b)s(o)s(ol)f Fe(mi)h Fq(=)g(true,)611 633
y(b)s(o)s(ol)h Fe(mo)h Fq(=)g(false\))150 833 y Fp(Constructor,)42
b(allo)n(ws)c(a)i Fq(DynamicalNet)f Fp(to)h(b)r(e)h(con\014gured)e
(with)h(the)h(follo)n(wing)e(features:)61 b(V)-7 b(ariable)150
933 y(n)n(um)n(b)r(er)27 b(of)h(input)g(c)n(hannels.)275
1143 y Fk(\210)42 b Fh(\003)27 b Fp(-)g(V)-7 b(ariable)27
b(n)n(um)n(b)r(er)g(of)h(output)g(c)n(hannels.)275 1301
y Fk(\210)42 b Fp(V)-7 b(ariable)26 b(total)i(n)n(um)n(b)r(er)f(of)g
(no)r(des.)275 1459 y Fk(\210)42 b Fp(Option)26 b(of)h(all)f(input)h(c)
n(hannels)f(going)g(to)g(all)h(no)r(des,)f(in)h(whic)n(h)g(case)f(eac)n
(h)g(no)r(de)g(receiv)n(es)f(a)i(w)n(eigh)n(ted)358 1558
y(sum)g(of)h(the)g(inputs.)37 b(This)28 b(defaults)g(to)f(T)-7
b(rue.)275 1716 y Fk(\210)42 b Fp(Option)27 b(of)g(all)g(output)g(c)n
(hannels)g(coming)f(from)h(all)g(no)r(des,)g(in)h(whic)n(h)f(case)f
(eac)n(h)h(no)r(de)g(con)n(tributes)f(a)358 1816 y(w)n(eigh)n(ted)h(v)
-5 b(alue)28 b(to)g(eac)n(h)g(output.)39 b(This)28 b(defaults)g(to)g
(false.)38 b(Input)29 b(no)r(des)f(are)f(en)n(umerated)h(starting)358
1915 y(at)k(the)h(\014rst)g(no)r(de,)h(although)e(they)h(can)f(b)r(e)i
(altered)e(to)g(p)r(oin)n(t)h(to)g(di\013eren)n(t)g(no)r(des.)52
b(Output)33 b(no)r(des)358 2015 y(are)24 b(en)n(umerated)g(from)h(the)h
(last)f(no)r(de)g(and)g(ma)n(y)g(also)f(b)r(e)i(altered)e(to)h(p)r(oin)
n(t)h(to)f(di\013eren)n(t)g(c)n(hannels.)36 b(If)358
2115 y(inputs)26 b(+)g(outputs)h Fo(>)f Fp(total,)g(the)g(net)n(w)n
(ork)f(will)i(b)r(e)f(con\014gured)g(with)g(the)h(di\013erence)f(of)g
(no)r(des)g(in)h(the)358 2214 y(middle)h(acting)f(as)g(b)r(oth)h
(inputs)g(and)f(outputs.)349 2354 y Fq(P)m(arameters:)519
2454 y Fe(i)41 b Fp(The)28 b(n)n(um)n(b)r(er)f(of)h(input)g(no)r(des.)
519 2566 y Fe(o)42 b Fp(The)27 b(n)n(um)n(b)r(er)h(of)f(output)h(no)r
(des.)519 2678 y Fe(t)41 b Fp(The)28 b(total)f(n)n(um)n(b)r(er)h(of)f
(no)r(des.)519 2790 y Fe(mi)41 b Fp(T)-7 b(rue)28 b(if)g(m)n(ultiple)g
(inputs)g(p)r(er)g(no)r(de)f(\(default)i(true\).)519
2903 y Fe(mo)42 b Fp(T)-7 b(rue)27 b(if)h(m)n(ultiple)h(outputs)e(p)r
(er)h(no)r(de)g(\(default)g(false\).)349 3060 y Fq(See)k(also:)519
3160 y(DynamicalNet::Init)519 3260 y(DynamicalNet::SetInputChannel)519
3359 y(DynamicalNet::SetOutputChannel)150 3635 y Fj(10.12.3)113
b(Mem)m(b)s(er)37 b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150
3836 y Fq(10.12.3.1)92 b(v)m(oid)32 b(BEAST::DynamicalNet::Fire)d(\(\))
150 4036 y Fp(This)e(is)g(where)g(it)g(all)g(happ)r(ens,)g(although)g
(all)g(the)g Fq(DynamicalNet)f Fp(class)h(really)f(has)g(to)h(do)g(is:)
37 b(Clear)26 b(the)150 4136 y(outputs.)275 4346 y Fk(\210)42
b Fh(\003)27 b Fp(-)g(Fire)g(ev)n(ery)g Fq(Neuron)p Fp(.)275
4504 y Fk(\210)42 b Fp(Retriev)n(e)26 b(and)i(store)e(ev)n(ery)h
(Neuron's)g(output.)349 4644 y Fq(See)32 b(also:)519
4744 y(DynamicalNet::Neuron::Fire)150 5066 y(10.12.3.2)92
b(v)m(ector)p Fo(<)33 b Fq(\015oat)f Fo(>)g Fq
(BEAST::DynamicalNet::GetCon\014guration)c(\(\))33 b(const)150
5267 y Fp(Returns)27 b(all)h(the)g(w)n(eigh)n(ts)e(and)i(biases)f(in)g
(the)h(net)n(w)n(ork,)f(in)h(a)f(long)g(list)g(suitable)h(for)f(pro)r
(cessing)f(b)n(y)h(a)h(GA.)150 5414 y(Note)35 b(that)g(nearly)e(all)h
(the)h(v)-5 b(alues)35 b(are)e(initialised)i(in)g(the)g(range)e
([-1,1],)i(except)g(for)f(the)h(time)g(constan)n(ts)150
5513 y(whic)n(h)25 b(range)g(b)r(et)n(w)n(een)g(1)g(and)g(70.)36
b(The)25 b(time)h(constan)n(ts)f(are)f(therefore)h(stored)f(as)h(their)
h(natural)e(log)h(in)h(the)150 5613 y(con\014guration)g(output)i(whic)n
(h)g(mak)n(es)e(for)h(more)g(sensible)g(alteration)g(b)n(y)g(the)h(GA.)
p -358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 105 113
105 112 bop 150 70 a Fq(10.12)30 b(BEAST::DynamicalNet)h(Class)g
(Reference)1973 b(105)p 150 103 4034 4 v 142 307 a(Returns:)311
406 y Fp(An)28 b(ordered)f(v)n(ector)f(of)i(\015oats)e(describing)h
(the)h(w)n(eigh)n(ts,)f(biases)g(and)g(time)h(constan)n(ts.)142
623 y Fq(See)j(also:)311 723 y
(DynamicalNet::Neuron::GetCon\014guration)311 822 y
(DynamicalNet::SetCon\014guration)150 1179 y(10.12.3.3)92
b(v)m(oid)32 b(BEAST::DynamicalNet::Init)e(\(in)m(t)i
Fe(i)p Fq(,)e(in)m(t)i Fe(o)p Fq(,)g(in)m(t)g Fe(t)p
Fq(,)f(b)s(o)s(ol)f Fe(mi)p Fq(,)h(b)s(o)s(ol)f Fe(mo)p
Fq(\))150 1381 y Fp(F)-7 b(or)30 b(unserialisation)f(purp)r(oses,)i
(the)g(initialisation)f(metho)r(d)h(is)g(actually)f(resp)r(onsible)f
(for)h(con\014guring)g(the)150 1481 y(net)n(w)n(ork,)c(and)i(is)f
(called)g(b)n(y)h(the)g(constructor.)150 1627 y(Init)g(also)f(calls)g
(Reset.)142 1809 y Fq(P)m(arameters:)311 1909 y Fe(i)41
b Fp(The)28 b(n)n(um)n(b)r(er)f(of)h(input)g(no)r(des.)311
2045 y Fe(o)42 b Fp(The)28 b(n)n(um)n(b)r(er)f(of)h(output)g(no)r(des.)
311 2181 y Fe(t)42 b Fp(The)28 b(total)f(n)n(um)n(b)r(er)g(of)h(no)r
(des.)311 2316 y Fe(mi)42 b Fp(T)-7 b(rue)27 b(if)h(m)n(ultiple)g
(inputs)h(p)r(er)e(no)r(de)h(\(default)g(true\).)311
2452 y Fe(mo)42 b Fp(T)-7 b(rue)28 b(if)g(m)n(ultiple)g(outputs)g(p)r
(er)f(no)r(de)h(\(default)g(false\).)142 2674 y Fq(See)j(also:)311
2773 y(DynamicalNet::Reset)150 3130 y(10.12.3.4)92 b(v)m(oid)32
b(BEAST::DynamicalNet::Randomise)27 b(\(\))150 3332 y
Fp(F)-7 b(orces)32 b(eac)n(h)h Fq(Neuron)g Fp(in)g(the)h(net)n(w)n(ork)
e(to)h(randomise)f(itself,)j(b)n(y)e(calling)g(its)g(o)n(wn)g
(Randomise)f(mem)n(b)r(er)150 3432 y(function.)142 3632
y Fq(See)f(also:)311 3732 y(Neuron::Randomise)150 4089
y(10.12.3.5)92 b(v)m(oid)32 b(BEAST::DynamicalNet::Reset)d(\(\))150
4291 y Fp(Sets)f(the)g(output)g(v)-5 b(alue)27 b(of)h(eac)n(h)f(neuron)
g(\(i.e.)150 4437 y(its)h(curren)n(t)f(output\))h(to)f(0.)37
b(This)27 b(is)h(alw)n(a)n(ys)e(done)h(on)g(initialisation)g(of)h(the)g
(net)n(w)n(ork.)142 4641 y Fq(See)j(also:)311 4740 y
(DynamicalNet::Init)150 5079 y(10.12.3.6)92 b(v)m(oid)32
b(BEAST::DynamicalNet::Serialise)c(\(std::ostream)i(&)i
Fe(out)p Fq(\))f(const)150 5281 y Fp(Outputs)d(all)f(setup)h(and)g
(con\014guration)e(data)h(for)g(this)h(net)n(w)n(ork)e(to)h(a)g
(stream.)142 5497 y Fq(P)m(arameters:)311 5597 y Fe(out)42
b Fp(An)28 b(output)g(stream.)p 150 5723 V 150 5823 a
Fn(Generated)e(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d
(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 106 114
106 113 bop -358 70 a Fq(106)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 142
307 a(See)g(also:)311 407 y(DynamicalNet::Unserialise)142
594 y(T)-8 b(o)s(do)311 694 y Fp(Serialise)27 b(input/output)h(c)n
(hannel/no)r(de)f(con\014g)150 1011 y Fq(10.12.3.7)92
b(v)m(oid)33 b(BEAST::DynamicalNet::SetCon\014guration)d(\(const)j
(std::v)m(ector)p Fo(<)g Fq(\015oat)611 1111 y Fo(>)f
Fq(&)g Fe(c)-5 b(on\014g)p Fq(\))150 1311 y Fp(Sets)30
b(the)h(con\014guration)d(of)i(the)g(net)n(w)n(ork)f(according)f(to)i
(a)g(pro)n(vided)f(v)n(ector)g(of)h(w)n(eigh)n(ts,)f(biases)h(and)g
(time)150 1411 y(constan)n(ts.)142 1582 y Fq(P)m(arameters:)311
1681 y Fe(c)-5 b(on\014g)42 b Fp(An)29 b(ordered)d(v)n(ector)g(of)i
(\015oats)e(con)n(taining)h(w)n(eigh)n(ts,)g(biases)g(and)g(time)h
(constan)n(ts.)142 1869 y Fq(See)j(also:)311 1968 y
(DynamicalNet::Neuron::SetCon\014guration)311 2068 y
(DynamicalNet::GetCon\014guration)150 2385 y(10.12.3.8)92
b(v)m(oid)32 b(BEAST::DynamicalNet::SetInputChannel)e(\(in)m(t)i
Fe(neur)-5 b(on)p Fq(,)31 b(in)m(t)g Fe(channel)p Fq(\))150
2586 y Fp(Con\014gures)26 b(the)i(net)n(w)n(ork)e(to)i(c)n(hannel)f
(inputs)h(to)g(di\013eren)n(t)f(no)r(des.)150 2732 y(Has)g(no)h
(e\013ect)g(if)g(the)g(net)g(is)f(con\014gured)g(with)h(m)n(ultiple)g
(input)g(no)r(des)g(p)r(er)f(c)n(hannel.)142 2908 y Fq(P)m(arameters:)
311 3007 y Fe(neur)-5 b(on)41 b Fp(The)28 b(n)n(um)n(b)r(er)f(of)h(the)
g(no)r(de)g(to)f(direct)h(the)f(input)i(to.)311 3130
y Fe(channel)42 b Fp(The)28 b(n)n(um)n(b)r(er)f(of)h(the)g(c)n(hannel)f
(to)g(b)r(e)h(redirected.)142 3302 y Fq(See)j(also:)311
3401 y(DynamicalNet::SetOutputChannel)150 3718 y(10.12.3.9)92
b(v)m(oid)28 b(BEAST::DynamicalNet::SetOutputChannel)d(\(in)m(t)j
Fe(neur)-5 b(on)p Fq(,)27 b(in)m(t)h Fe(channel)p Fq(\))150
3919 y Fp(Con\014gures)e(the)i(net)n(w)n(ork)e(to)i(c)n(hannel)f
(output)h(from)f(di\013eren)n(t)h(no)r(des.)150 4066
y(Has)f(no)h(e\013ect)g(if)g(the)g(net)g(is)f(con\014gured)g(with)h(m)n
(ultiple)g(output)g(no)r(des)f(p)r(er)h(c)n(hannel.)142
4241 y Fq(P)m(arameters:)311 4340 y Fe(neur)-5 b(on)41
b Fp(The)28 b(n)n(um)n(b)r(er)f(of)h(the)g(no)r(de)g(to)f(b)r(e)h
(redirected.)311 4463 y Fe(channel)42 b Fp(The)28 b(n)n(um)n(b)r(er)f
(of)h(the)g(c)n(hannel)f(to)g(redirect)g(it)h(to.)142
4635 y Fq(See)j(also:)311 4734 y(DynamicalNet::SetInputChannel)150
5051 y(10.12.3.10)92 b(string)31 b(BEAST::DynamicalNet::T)-8
b(oString)30 b(\(\))i(const)150 5252 y Fp(Prin)n(ts)27
b(all)g(the)h(data)f(in)h(this)g(net)n(w)n(ork)e(in)i(a)f(prett)n(y)g
(format)g(and)h(returns)f(it)h(as)f(a)g(string.)142 5439
y Fq(Returns:)311 5538 y Fp(An)h(STL)g(string.)p -358
5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 107 115
107 114 bop 150 70 a Fq(10.12)30 b(BEAST::DynamicalNet)h(Class)g
(Reference)1973 b(107)p 150 103 4034 4 v 150 333 a(10.12.3.11)92
b(v)m(oid)32 b(BEAST::DynamicalNet::Unserialise)c(\(std::istream)h(&)j
Fe(in)p Fq(\))150 533 y Fp(T)-7 b(ak)n(es)26 b(a)i(string)e(pro)r
(duced)i(b)n(y)f Fq(DynamicalNet::Serialise)d Fp(and)k(turns)f(it)h
(bac)n(k)f(in)n(to)g(a)h(DNN.)142 745 y Fq(P)m(arameters:)311
844 y Fe(input)41 b Fp(The)28 b(input)g(string.)142 1057
y Fq(See)j(also:)311 1156 y(DynamicalNet::Serialise)142
1369 y(T)-8 b(o)s(do)311 1468 y Fp(Unserialise)27 b(input/output)h(c)n
(hannel/no)r(de)f(con\014g)150 1698 y(The)h(do)r(cumen)n(tation)f(for)g
(this)h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)n(wing)e
(\014les:)275 1912 y Fk(\210)42 b Fq(dynamicalnet.h)275
2020 y Fk(\210)g Fq(dynamicalnet.cc)p 150 5723 V 150
5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 108 116
108 115 bop -358 70 a Fq(108)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.13)136 b(BEAST::DynamicalNet::Neuron)47 b(Struct)e
(Reference)150 562 y Fp(Unlik)n(e)25 b(the)h Fq(F)-8
b(eedF)g(orw)m(ardNet)p Fp(,)26 b(the)g Fq(Neuron)f Fp(in)g
Fq(DynamicalNet)g Fp(is)g(more)f(w)n(orth)n(y)g(of)h(its)h(name,)f
(since)150 661 y(nearly)i(all)g(the)h(pro)r(cessing)e(of)i(the)g(DNN's)
g(\014ring)f(algorithm)f(o)r(ccurs)h(here.)150 808 y
Fi(#include)40 b Fo(<)p Fi(dynamicalnet.h)p Fo(>)150
955 y Fp(Collab)r(oration)26 b(diagram)g(for)h
(BEAST::DynamicalNet::Neuron:)1178 2061 y @beginspecial
35 @llx 35 @lly 355 @urx 249 @ury 1763 @rwi @setspecial
%%BeginDocument: structBEAST_1_1DynamicalNet_1_1Neuron__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 355 249
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 355 249
%%PageOrientation: Portrait
gsave
35 35 320 214 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node213
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 118 8 moveto
283 8 lineto
283 23 lineto
118 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 118 8 moveto
283 8 lineto
283 23 lineto
118 23 lineto
closepath
stroke
gsave 10 dict begin
200 11 moveto 155 -0.5 (BEAST::DynamicalNet::Neuron) alignedtext
end grestore
end grestore

%	Node214
[ /Rect [ 72 88 196 102 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1DynamicalNet.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 72 87 moveto
196 87 lineto
196 102 lineto
72 102 lineto
closepath
stroke
gsave 10 dict begin
134 90 moveto 114 -0.5 (BEAST::DynamicalNet) alignedtext
end grestore
end grestore

%	Node214 -> Node213
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 145 81 moveto
160 65 182 37 193 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 144 78 moveto
140 87 lineto
148 81 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
198 46 moveto 31 -0.5 (parent) alignedtext
end grestore
end grestore

%	Node215
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 0 188 moveto
99 188 lineto
99 203 lineto
0 203 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
49 191 moveto 89 -0.5 (vector< Neuron >) alignedtext
end grestore
end grestore

%	Node215 -> Node214
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 55 181 moveto
61 167 71 146 84 132 curveto
95 120 110 109 121 103 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 54 178 moveto
52 188 lineto
58 180 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
108 147 moveto 39 -0.5 (neurons) alignedtext
end grestore
end grestore

%	Node216
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 154 188 moveto
238 188 lineto
238 203 lineto
154 203 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
196 191 moveto 74 -0.5 (vector< float >) alignedtext
end grestore
end grestore

%	Node216 -> Node213
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 215 182 moveto
219 178 223 174 225 170 curveto
232 153 237 79 223 42 curveto
220 35 215 28 210 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 214 180 moveto
208 188 lineto
217 183 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
272 102 moveto 66 -0.5 (inputWeights) alignedtext
272 91 moveto 37 -0.5 (weights) alignedtext
272 80 moveto 73 -0.5 (outputWeights) alignedtext
end grestore
end grestore

%	Node216 -> Node214
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 165 184 moveto
159 180 153 176 148 170 curveto
134 149 133 117 134 103 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 164 186 moveto
174 188 lineto
166 182 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
187 158 moveto 36 -0.5 (outputs) alignedtext
187 147 moveto 63 -0.5 (neuronStates) alignedtext
187 136 moveto 30 -0.5 (inputs) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2423 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2608 y Fk(\210)42 b Fq(Neuron)27 b Fp(\(in)n(t)h(i,)g
(in)n(t)g(o,)f(in)n(t)h(t,)g(in)n(t)g(inCh,)g(in)n(t)f(outCh,)h
Fq(DynamicalNet)f Fh(\003)p Fp(p\))476 2732 y Fg(Constructor:)47
b(sets)34 b(the)f(numb)l(er)g(of)f(inputs,)i(outputs)g(and)f(weights)h
(for)e(this)h(neur)l(on,)h(as)f(wel)t(l)f(as)g(input)476
2824 y(and)c(output)h(channels.)275 3022 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(Randomise)f Fp(\(\))476 3146 y Fg(Fil)t(ls)h(al)t
(l)h(input,)g(output)j(and)e(internal)g(weights)g(with)g(r)l(andom)g
(numb)l(ers)h(in)e(the)i(r)l(ange)f([-1,1].)275 3345
y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Fire)i Fp(\(\))476
3469 y Fg(This)k(is)g(wher)l(e)h(everything)h(/actual)t(ly/)f(happ)l
(ens)h(-)f(this)f(metho)l(d)h(c)l(alculates)h(the)f(amount)g(by)g
(which)f(the)476 3560 y(activation)c(value)g(changes.)275
3759 y Fk(\210)42 b Fp(\015oat)27 b Fq(GetOutput)g Fp(\(\))i(const)275
3866 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(GetCon\014guration)i
Fp(\(std::v)n(ector)p Fo(<)e Fp(\015oat)h Fo(>)h Fp(&con\014g\))e
(const)476 3990 y Fg(Copies)i(al)t(l)e(weights,)i(bias)g(and)g(time)g
(c)l(onstant)i(into)d(the)i(pr)l(ovide)l(d)g(ve)l(ctor.)275
4188 y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)25 b Fp(\015oat)i
Fo(>)p Fp(::const)p 1323 4188 25 4 v 29 w(iterator)e
Fq(SetCon\014guration)i Fp(\(std::v)n(ector)p Fo(<)f
Fp(\015oat)g Fo(>)p Fp(::const)p 3378 4188 V 29 w(iterator)358
4288 y(con\014g\))476 4412 y Fg(Sets)i(the)g(Neur)l(on)-8
b('s)28 b(c)l(on\014gur)l(ation)h(ac)l(c)l(or)l(ding)g(to)e(the)h
(input,)f(which)h(is)e(an)i(iter)l(ator)h(of)d(a)h(ve)l(ctor)i(of)e
(\015o)l(ats.)275 4610 y Fk(\210)42 b Fp(std::string)27
b Fq(T)-8 b(oString)27 b Fp(\(\))i(const)476 4734 y Fg(Prints)f(al)t(l)
f(the)h(data)h(in)e(this)h Ff(Neuron)g Fg(in)f(a)h(pr)l(etty)h(format)f
(and)g(r)l(eturns)i(it)d(as)h(a)g(string.)150 5105 y
Fj(Static)36 b(Public)g(Mem)m(b)s(er)h(F)-9 b(unctions)275
5290 y Fk(\210)42 b Fp(\015oat)27 b Fq(RandomNum)d Fp(\(\))476
5414 y Fg(R)l(eturns)29 b(a)f(r)l(andom)g(numb)l(er)g(in)f(the)i(r)l
(ange)g([-1,1].)275 5613 y Fk(\210)42 b Fp(\015oat)27
b Fq(Sigmoid)d Fp(\(\015oat)k(y\))p -358 5723 4034 4
v -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 109 117
109 116 bop 150 70 a Fq(10.13)30 b(BEAST::DynamicalNet::Neuron)f
(Struct)k(Reference)1564 b(109)p 150 103 4034 4 v 476
333 a Fg(The)27 b(standar)l(d)j(ANN)e(squashing)h(function.)150
726 y Fj(Public)36 b(A)m(ttributes)275 927 y Fk(\210)42
b Fp(in)n(t)27 b Fq(inputChannel)476 1062 y Fg(This)g(neur)l(on)-8
b('s)29 b(input)f(channel,)g(or)g(-1)g(for)f(al)t(l.)275
1272 y Fk(\210)42 b Fp(in)n(t)27 b Fq(outputChannel)476
1407 y Fg(This)g(neur)l(on)-8 b('s)29 b(output)g(channel,)f(or)g(-1)g
(for)f(al)t(l.)275 1616 y Fk(\210)42 b Fp(\015oat)27
b Fq(output)476 1751 y Fg(The)g(neur)l(on)-8 b('s)29
b(curr)l(ent)h(output.)275 1961 y Fk(\210)42 b Fp(\015oat)27
b Fq(activ)-5 b(ation)476 2096 y Fg(The)27 b(neur)l(on)-8
b('s)29 b(curr)l(ent)h(activation.)275 2306 y Fk(\210)42
b Fp(std::v)n(ector)p Fo(<)26 b Fp(\015oat)h Fo(>)g Fq(inputW)-8
b(eigh)m(ts)476 2441 y Fg(The)27 b(input)h(weights.)275
2650 y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)26 b Fp(\015oat)h
Fo(>)g Fq(outputW)-8 b(eigh)m(ts)476 2785 y Fg(The)27
b(output)j(weights.)275 2995 y Fk(\210)42 b Fp(std::v)n(ector)p
Fo(<)26 b Fp(\015oat)h Fo(>)g Fq(w)m(eigh)m(ts)476 3130
y Fg(Weights)h(for)f(every)i(neur)l(on,)g(bias)e(and)h(time)g(c)l
(onstant.)275 3339 y Fk(\210)42 b Fq(DynamicalNet)26
b Fh(\003)i Fq(paren)m(t)476 3474 y Fg(The)f(net)i(this)f(neur)l(on)h
(b)l(elongs)f(to.)275 3684 y Fk(\210)42 b Fp(\015oat)27
b Fq(bias)476 3819 y Fg(The)g(bias,)h(taken)h(fr)l(om)e
(weights.end\(\))i(-)f(2.)275 4028 y Fk(\210)42 b Fp(\015oat)27
b Fq(timeConstan)m(t)476 4163 y Fg(T)-6 b(aken)28 b(fr)l(om)f
(weights.end\(\))j(-)e(1.)150 4557 y Fj(10.13.1)113 b(Detailed)36
b(Description)150 4762 y Fp(Unlik)n(e)25 b(the)h Fq(F)-8
b(eedF)g(orw)m(ardNet)p Fp(,)26 b(the)g Fq(Neuron)f Fp(in)g
Fq(DynamicalNet)g Fp(is)g(more)f(w)n(orth)n(y)g(of)h(its)h(name,)f
(since)150 4861 y(nearly)i(all)g(the)h(pro)r(cessing)e(of)i(the)g
(DNN's)g(\014ring)f(algorithm)f(o)r(ccurs)h(here.)150
5008 y(Eac)n(h)g Fq(Neuron)g Fp(con)n(tains)g(a)h(w)n(eigh)n(t)f(for)g
(eac)n(h)g(other)h(neuron)f(\(and)h(one)g(for)f(itself)6
b(\),)29 b(one)f(or)f(m)n(ultiple)h(input)150 5108 y(c)n(hannels)34
b(and)h(one)f(or)g(m)n(ultiple)h(output)g(c)n(hannels,)h(with)f(a)f
(series)g(of)h(w)n(eigh)n(ts)f(in)h(eac)n(h)e(case)h(if)i(m)n(ultiple)
150 5207 y(c)n(hannels)g(are)f(in)i(use.)64 b(The)36
b(neuron)g(also)g(k)n(eeps)g(trac)n(k)f(of)i(its)f(activ)-5
b(ation)36 b(v)-5 b(alue)37 b(and)f(its)h(output)g(v)-5
b(alue,)150 5307 y(whic)n(h)28 b(is)f(simply)h(the)g(biased,)f
(squashed)g(activ)-5 b(ation)27 b(v)-5 b(alue.)142 5513
y Fq(See)31 b(also:)311 5613 y(F)-8 b(eedF)g(orw)m(ardNet::Neuron)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 110 118
110 117 bop -358 70 a Fq(110)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fj(10.13.2)113 b(Constructor)36 b(&)i(Destructor)e(Do)s(cumen)m
(tation)150 533 y Fq(10.13.2.1)92 b
(BEAST::DynamicalNet::Neuron::Neuron)29 b(\(in)m(t)j
Fe(i)p Fq(,)g(in)m(t)g Fe(o)p Fq(,)g(in)m(t)h Fe(t)p
Fq(,)f(in)m(t)g Fe(inCh)p Fq(,)f(in)m(t)611 633 y Fe(outCh)p
Fq(,)g(DynamicalNet)g Fh(\003)g Fe(p)p Fq(\))71 b Fi([inline])150
833 y Fp(Constructor:)35 b(sets)25 b(the)h(n)n(um)n(b)r(er)g(of)g
(inputs,)g(outputs)g(and)g(w)n(eigh)n(ts)f(for)g(this)h(neuron,)g(as)f
(w)n(ell)h(as)f(input)h(and)150 933 y(output)i(c)n(hannels.)142
1132 y Fq(P)m(arameters:)311 1232 y Fe(i)41 b Fp(The)28
b(n)n(um)n(b)r(er)f(of)h(input)g(w)n(eigh)n(ts.)311 1360
y Fe(o)42 b Fp(The)28 b(n)n(um)n(b)r(er)f(of)h(output)g(w)n(eigh)n(ts.)
311 1488 y Fe(t)42 b Fp(The)28 b(total)f(n)n(um)n(b)r(er)g(of)h(in)n
(ternal)f(w)n(eigh)n(ts.)311 1616 y Fe(inCh)41 b Fp(The)28
b(n)n(um)n(b)r(er)f(of)h(input)g(c)n(hannels.)311 1744
y Fe(outCh)41 b Fp(The)28 b(n)n(um)n(b)r(er)f(of)h(output)g(c)n
(hannels.)311 1872 y Fe(p)42 b Fp(A)28 b(p)r(oin)n(ter)f(to)h(the)g
(paren)n(t)e Fq(DynamicalNet)150 2149 y Fj(10.13.3)113
b(Mem)m(b)s(er)37 b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150
2350 y Fq(10.13.3.1)92 b(v)m(oid)32 b
(BEAST::DynamicalNet::Neuron::Fire)c(\(\))150 2550 y
Fp(This)k(is)h(where)f(ev)n(erything)f(/actually/)g(happ)r(ens)h(-)g
(this)h(metho)r(d)g(calculates)e(the)i(amoun)n(t)f(b)n(y)g(whic)n(h)h
(the)150 2650 y(activ)-5 b(ation)27 b(v)-5 b(alue)28
b(c)n(hanges.)150 2797 y(The)g(co)r(de)f(of)h(the)g(Firing)f(metho)r(d)
h(has)f(b)r(een)h(carefully)f(commen)n(ted,)g(here)h(is)f(a)g(summary:)
275 3000 y Fk(\210)42 b Fp(W)-7 b(e)28 b(start)f(b)n(y)g(subtracting)g
(the)h(last)f(round's)g(activ)-5 b(ation.)275 3161 y
Fk(\210)42 b Fp(A)27 b(w)n(eigh)n(ted)g(sum)h(of)g(the)g(previous)e
(neuron)h(outputs)h(is)f(tak)n(en.)275 3322 y Fk(\210)42
b Fp(Inputs)28 b(are)e(applied,)i(either)f(as)g(a)g(w)n(eigh)n(ted)g
(sum)h(from)f(all)h(c)n(hannels)f(or)f(as)h(an)g(individual)h(input.)
275 3483 y Fk(\210)42 b Fp(The)27 b(total)h(is)f(divided)h(b)n(y)f(the)
h(time)g(constan)n(t...)275 3644 y Fk(\210)42 b Fp(...)37
b(and)27 b(added)h(bac)n(k)e(to)i(the)g(previous)e(activ)-5
b(ation.)275 3806 y Fk(\210)42 b Fp(The)27 b(new)h(activ)-5
b(ation)27 b(is)g(then)i(biased)e(and)g(squashed)g(to)g(pro)r(duce)h
(the)g(output.)275 3967 y Fk(\210)42 b Fp(The)27 b(output)h(is)g
(applied)f(to)h(the)g(relev)-5 b(an)n(t)27 b(output)h(c)n(hannels.)349
4110 y Fq(See)k(also:)519 4210 y(Sigmoid)150 4528 y(10.13.3.2)92
b(v)m(oid)34 b(BEAST::DynamicalNet::Neuron::GetCon\014guration)c
(\(std::v)m(ector)p Fo(<)611 4627 y Fq(\015oat)j Fo(>)e
Fq(&)h Fe(c)-5 b(on\014g)p Fq(\))33 b(const)150 4828
y Fp(Copies)27 b(all)g(w)n(eigh)n(ts,)g(bias)g(and)h(time)g(constan)n
(t)f(in)n(to)g(the)h(pro)n(vided)e(v)n(ector.)142 5027
y Fq(P)m(arameters:)311 5127 y Fe(c)-5 b(on\014g)42 b
Fp(A)28 b(reference)f(to)h(the)g(v)n(ector)e(in)n(to)h(whic)n(h)h(the)g
(con\014guration)e(m)n(ust)h(b)r(e)h(copied.)142 5327
y Fq(See)j(also:)311 5426 y(DynamicalNet::GetCon\014guration)311
5526 y(DynamicalNet::Neuron::SetCon\014guration)p -358
5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 111 119
111 118 bop 150 70 a Fq(10.13)30 b(BEAST::DynamicalNet::Neuron)f
(Struct)k(Reference)1564 b(111)p 150 103 4034 4 v 150
333 a(10.13.3.3)92 b(v)m(oid)32 b
(BEAST::DynamicalNet::Neuron::Randomise)26 b(\(\))150
533 y Fp(Fills)i(all)f(input,)i(output)f(and)f(in)n(ternal)g(w)n(eigh)n
(ts)g(with)h(random)e(n)n(um)n(b)r(ers)i(in)f(the)h(range)f([-1,1].)150
680 y(The)h(time)g(constan)n(t)f(is)g(also)g(randomised)f(with)i(a)f(v)
-5 b(alue)28 b(b)r(et)n(w)n(een)f(1)h(and)f(70.)150 943
y Fq(10.13.3.4)92 b(v)m(ector)p Fo(<)45 b Fq(\015oat)f
Fo(>)p Fq(::const)p 1549 943 29 4 v 33 w(iterator)g(BEAST::Dynamical-)
611 1043 y(Net::Neuron::SetCon\014guration)33 b(\(std::v)m(ector)p
Fo(<)i Fq(\015oat)h Fo(>)p Fq(::const)p 3067 1043 V 33
w(iterator)611 1142 y Fe(c)-5 b(on\014g)p Fq(\))150 1343
y Fp(Sets)28 b(the)g(Neuron's)f(con\014guration)f(according)f(to)j(the)
g(input,)g(whic)n(h)g(is)f(an)h(iterator)e(of)h(a)h(v)n(ector)e(of)i
(\015oats.)150 1490 y(This)35 b(has)g(b)r(een)h(done)f(to)g(enable)g
(easy)g(con\014guration)f(b)n(y)h(a)g Fq(DynamicalNet)f
Fp(of)i(its)f(neurons,)i(without)150 1589 y(kno)n(wing)27
b(ho)n(w)g(man)n(y)g(v)-5 b(alues)28 b(are)e(required)h(for)g(eac)n(h)g
Fq(Neuron)p Fp(.)38 b(The)28 b Fq(Neuron)f Fp(ma)n(y)g(therefore)g(tak)
n(e)g(what)150 1689 y(it)h(needs)f(and)h(return)f(an)g(iterator)g(p)r
(oin)n(ting)g(to)h(the)g(rest)f(of)g(the)h(con\014guration)e(data.)142
1884 y Fq(P)m(arameters:)311 1984 y Fe(c)-5 b(on\014g)42
b Fp(An)29 b(iterator)d(p)r(oin)n(ting)h(to)h(the)g(curren)n(t)e(p)r
(osition)i(in)g(the)g(con\014guration)e(data.)142 2195
y Fq(Returns:)311 2295 y Fp(An)i(iterator)f(p)r(oin)n(ting)g(to)h(the)g
(next)f(place)h(after)f(this)h(Neuron's)f(data)g(\014nishes.)150
2641 y Fq(10.13.3.5)92 b(string)32 b(BEAST::DynamicalNet::Neuron::T)-8
b(oString)28 b(\(\))k(const)150 2841 y Fp(Prin)n(ts)27
b(all)g(the)h(data)f(in)h(this)g Fq(Neuron)f Fp(in)h(a)f(prett)n(y)g
(format)g(and)h(returns)f(it)h(as)f(a)g(string.)142 3053
y Fq(Returns:)311 3153 y Fp(An)h(STL)g(string.)150 3383
y(The)g(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g(generated)
g(from)g(the)h(follo)n(wing)e(\014les:)275 3596 y Fk(\210)42
b Fq(dynamicalnet.h)275 3704 y Fk(\210)g Fq(dynamicalnet.cc)p
150 5723 4034 4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 112 120
112 119 bop -358 70 a Fq(112)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.14)136 b(BEAST::Ev)-7 b(alNearest)46 b(Class)g(Reference)
150 562 y Fp(Keeps)27 b(a)g(tally)h(of)f(the)h(nearest)f(p)r(oin)n(t)g
(passed)g(in)h(and)g(returns)e(it)j(with)f(GetOutput.)150
709 y Fi(#include)40 b Fo(<)p Fi(sensorfunctors.h)o Fo(>)150
855 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::Ev)-5
b(alNearest:)551 1746 y @beginspecial 35 @llx 35 @lly
657 @urx 211 @ury 3267 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearest__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 657 211
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 657 211
%%PageOrientation: Portrait
gsave
35 35 622 176 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node217
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 195 79 moveto
306 79 lineto
306 94 lineto
195 94 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 195 79 moveto
306 79 lineto
306 94 lineto
195 94 lineto
closepath
stroke
gsave 10 dict begin
250 82 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node219
[ /Rect [ 407 160 547 174 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearestAbsX.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 407 159 moveto
547 159 lineto
547 174 lineto
407 174 lineto
closepath
stroke
gsave 10 dict begin
477 162 moveto 130 -0.5 (BEAST::EvalNearestAbsX) alignedtext
end grestore
end grestore

%	Node217 -> Node219
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 313 101 moveto
330 118 318 142 342 158 curveto
353 165 380 167 407 168 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 315 100 moveto
306 95 lineto
312 103 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node220
[ /Rect [ 407 128 547 142 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearestAbsY.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 407 127 moveto
547 127 lineto
547 142 lineto
407 142 lineto
closepath
stroke
gsave 10 dict begin
477 130 moveto 130 -0.5 (BEAST::EvalNearestAbsY) alignedtext
end grestore
end grestore

%	Node217 -> Node220
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 314 99 moveto
326 107 326 118 342 126 curveto
362 134 385 137 407 138 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 315 97 moveto
305 95 lineto
313 101 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node221
[ /Rect [ 407 96 547 110 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearestAngle.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 407 95 moveto
548 95 lineto
548 110 lineto
407 110 lineto
closepath
stroke
gsave 10 dict begin
477 98 moveto 131 -0.5 (BEAST::EvalNearestAngle) alignedtext
end grestore
end grestore

%	Node217 -> Node221
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 316 92 moveto
325 93 333 93 342 94 curveto
363 95 386 97 406 98 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 316 90 moveto
306 91 lineto
316 94 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node222
[ /Rect [ 343 64 611 78 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearestSignal.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 343 63 moveto
612 63 lineto
612 78 lineto
343 78 lineto
closepath
stroke
gsave 10 dict begin
477 66 moveto 259 -0.5 (BEAST::EvalNearestSignal< _State, _Signal, _Cost >) alignedtext
end grestore
end grestore

%	Node217 -> Node222
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 316 81 moveto
325 80 333 80 342 79 curveto
344 79 347 79 349 79 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 316 79 moveto
306 82 lineto
316 83 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node223
[ /Rect [ 407 32 547 46 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearestXDist.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 407 31 moveto
547 31 lineto
547 46 lineto
407 46 lineto
closepath
stroke
gsave 10 dict begin
477 34 moveto 130 -0.5 (BEAST::EvalNearestXDist) alignedtext
end grestore
end grestore

%	Node217 -> Node223
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 314 74 moveto
326 66 326 55 342 47 curveto
362 39 385 35 407 34 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 313 72 moveto
305 79 lineto
315 76 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node224
[ /Rect [ 407 0 547 14 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearestYDist.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 407 -1 moveto
547 -1 lineto
547 14 lineto
407 14 lineto
closepath
stroke
gsave 10 dict begin
477 2 moveto 130 -0.5 (BEAST::EvalNearestYDist) alignedtext
end grestore
end grestore

%	Node217 -> Node224
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 313 73 moveto
330 55 318 31 342 15 curveto
353 8 380 6 407 6 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 312 71 moveto
306 79 lineto
315 74 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node218
[ /Rect [ 9 80 157 94 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 9 79 moveto
158 79 lineto
158 94 lineto
9 94 lineto
closepath
stroke
gsave 10 dict begin
83 82 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node218 -> Node217
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 167 87 moveto
176 87 186 87 194 87 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 168 85 moveto
158 87 lineto
168 90 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2071 a(Collab)r(oration)26 b(diagram)g(for)h
(BEAST::Ev)-5 b(alNearest:)825 2992 y @beginspecial 35
@llx 35 @lly 524 @urx 215 @ury 2610 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearest__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 524 215
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 524 215
%%PageOrientation: Portrait
gsave
35 35 489 180 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node225
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 129 8 moveto
240 8 lineto
240 23 lineto
129 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 129 8 moveto
240 8 lineto
240 23 lineto
129 23 lineto
closepath
stroke
gsave 10 dict begin
184 11 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node226
[ /Rect [ 0 87 148 101 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 86 moveto
149 86 lineto
149 101 lineto
0 101 lineto
closepath
stroke
gsave 10 dict begin
74 89 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node226 -> Node225
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 81 moveto
115 65 155 37 173 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 78 moveto
85 86 lineto
95 82 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node227
[ /Rect [ 300 87 414 101 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 300 86 moveto
415 86 lineto
415 101 lineto
300 101 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
357 89 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node227 -> Node225
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 331 82 moveto
295 67 231 37 201 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 330 84 moveto
340 86 lineto
332 80 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
342 56 moveto 68 -0.5 (bestCandidate) alignedtext
342 45 moveto 31 -0.5 (owner) alignedtext
end grestore
end grestore

%	Node233
[ /Rect [ 189 155 287 169 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Vector2D.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 189 154 moveto
288 154 lineto
288 169 lineto
189 169 lineto
closepath
stroke
gsave 10 dict begin
238 157 moveto 89 -0.5 (BEAST::Vector2D) alignedtext
end grestore
end grestore

%	Node233 -> Node225
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 225 149 moveto
215 138 201 120 193 102 curveto
182 75 183 39 183 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 221 149 moveto
230 154 lineto
225 145 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
245 90 moveto 88 -0.5 (bestCandidateVec) alignedtext
end grestore
end grestore

%	Node233 -> Node227
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 253 149 moveto
264 140 279 128 293 120 curveto
305 112 321 106 333 102 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 253 146 moveto
247 154 lineto
256 150 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
390 124 moveto 184 -0.5 (VECTOR2D_FAKE_REFERENCE) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3353 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3538 y Fk(\210)42 b Fq(Ev)-5 b(alNearest)27
b Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(o,)e(double)i
(range\))275 3643 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(Reset)h Fp(\(\))275 3749 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(op)s(erator\(\))j Fp(\()p Fq(W)-8 b(orldOb)5
b(ject)27 b Fh(\003)p Fp(ob)5 b(j,)27 b(const)h Fq(V)-8
b(ector2D)28 b Fp(&lo)r(c\))275 3855 y Fk(\210)42 b Fp(virtual)27
b(double)g Fq(GetOutput)h Fp(\(\))g(const)150 4133 y
Fj(Public)36 b(A)m(ttributes)275 4318 y Fk(\210)42 b
Fq(W)-8 b(orldOb)5 b(ject)27 b Fh(\003)g Fq(o)m(wner)275
4423 y Fk(\210)42 b Fp(double)27 b Fq(range)275 4529
y Fk(\210)42 b Fp(double)27 b Fq(nearestSoF)-8 b(ar)275
4635 y Fk(\210)42 b Fq(W)-8 b(orldOb)5 b(ject)27 b Fh(\003)g
Fq(b)s(estCandidate)275 4741 y Fk(\210)42 b Fq(V)-8 b(ector2D)28
b(b)s(estCandidateV)-8 b(ec)150 5019 y Fj(10.14.1)113
b(Detailed)36 b(Description)150 5219 y Fp(Keeps)27 b(a)g(tally)h(of)f
(the)h(nearest)f(p)r(oin)n(t)g(passed)g(in)h(and)g(returns)e(it)j(with)
f(GetOutput.)150 5366 y(Also)g(k)n(eeps)g(a)g(p)r(oin)n(ter)h(to)f(the)
h(nearest)f(candidate)g(and)g(a)g(cop)n(y)g(of)h(the)g(nearest)e(p)r
(oin)n(t)i(on)g(that)f(candidate,)150 5466 y(this)g(data)f(can)g(b)r(e)
h(accessed)f(b)n(y)g(an)g(adapter)g(suc)n(h)g(as)g(Ev)-5
b(alXDist)28 b(and)f(Ev)-5 b(alAngle.)150 5613 y(The)28
b(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h(from)
g(the)h(follo)n(wing)e(\014le:)p -358 5723 V -192 5823
a Fn(Generated)g(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 113 121
113 120 bop 150 70 a Fq(10.14)30 b(BEAST::Ev)-5 b(alNearest)31
b(Class)g(Reference)2070 b(113)p 150 103 4034 4 v 275
333 a Fk(\210)42 b Fp(sensorfunctors.h)p 150 5723 V 150
5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 114 122
114 121 bop -358 70 a Fq(114)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.15)136 b(BEAST::Ev)-7 b(alNearestAbsX)45
b(Class)h(Reference)150 562 y Fp(Returns)27 b(the)h(absolute)f(x)h(p)r
(osition)f(of)h(the)g(nearest)e(target.)150 709 y Fi(#include)40
b Fo(<)p Fi(sensorfunctors.h)o Fo(>)150 855 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Ev)-5 b(alNearestAbsX:)1531
1682 y @beginspecial 35 @llx 35 @lly 185 @urx 173 @ury
916 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearestAbsX__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 185 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 185 173
%%PageOrientation: Portrait
gsave
35 35 150 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node243
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 4 8 moveto
144 8 lineto
144 23 lineto
4 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 4 8 moveto
144 8 lineto
144 23 lineto
4 23 lineto
closepath
stroke
gsave 10 dict begin
74 11 moveto 130 -0.5 (BEAST::EvalNearestAbsX) alignedtext
end grestore
end grestore

%	Node244
[ /Rect [ 19 61 129 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 19 60 moveto
130 60 lineto
130 75 lineto
19 75 lineto
closepath
stroke
gsave 10 dict begin
74 63 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node244 -> Node243
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 51 moveto
74 42 74 31 74 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 50 moveto
74 60 lineto
77 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node245
[ /Rect [ 0 113 148 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
149 112 lineto
149 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
74 115 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node245 -> Node244
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 103 moveto
74 94 74 83 74 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 102 moveto
74 112 lineto
77 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2012 a(Collab)r(oration)26 b(diagram)g(for)h
(BEAST::Ev)-5 b(alNearestAbsX:)825 3177 y @beginspecial
35 @llx 35 @lly 524 @urx 269 @ury 2610 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearestAbsX__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 524 269
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 524 269
%%PageOrientation: Portrait
gsave
35 35 489 234 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node246
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 114 8 moveto
254 8 lineto
254 23 lineto
114 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 114 8 moveto
254 8 lineto
254 23 lineto
114 23 lineto
closepath
stroke
gsave 10 dict begin
184 11 moveto 130 -0.5 (BEAST::EvalNearestAbsX) alignedtext
end grestore
end grestore

%	Node247
[ /Rect [ 129 63 239 77 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 129 62 moveto
240 62 lineto
240 77 lineto
129 77 lineto
closepath
stroke
gsave 10 dict begin
184 65 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node247 -> Node246
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 184 53 moveto
184 43 184 31 184 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 182 52 moveto
184 62 lineto
187 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node248
[ /Rect [ 0 141 148 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 140 moveto
149 140 lineto
149 155 lineto
0 155 lineto
closepath
stroke
gsave 10 dict begin
74 143 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node248 -> Node247
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 135 moveto
115 119 155 91 173 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 132 moveto
85 140 lineto
95 136 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node249
[ /Rect [ 300 141 414 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 300 140 moveto
415 140 lineto
415 155 lineto
300 155 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
357 143 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node249 -> Node247
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 331 136 moveto
295 121 231 91 201 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 330 138 moveto
340 140 lineto
332 134 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
342 110 moveto 68 -0.5 (bestCandidate) alignedtext
342 99 moveto 31 -0.5 (owner) alignedtext
end grestore
end grestore

%	Node255
[ /Rect [ 189 209 287 223 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Vector2D.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 189 208 moveto
288 208 lineto
288 223 lineto
189 223 lineto
closepath
stroke
gsave 10 dict begin
238 211 moveto 89 -0.5 (BEAST::Vector2D) alignedtext
end grestore
end grestore

%	Node255 -> Node247
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 225 203 moveto
215 192 201 174 193 156 curveto
182 129 183 93 183 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 221 203 moveto
230 208 lineto
225 199 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
245 144 moveto 88 -0.5 (bestCandidateVec) alignedtext
end grestore
end grestore

%	Node255 -> Node249
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 253 203 moveto
264 194 279 182 293 174 curveto
305 166 321 160 333 156 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 253 200 moveto
247 208 lineto
256 204 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
390 178 moveto 184 -0.5 (VECTOR2D_FAKE_REFERENCE) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3539 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3726 y Fk(\210)42 b Fq(Ev)-5 b(alNearestAbsX)27
b Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(o,)e(double)i
(range\))275 3834 y Fk(\210)42 b Fp(virtual)27 b(double)g
Fq(GetOutput)h Fp(\(\))g(const)150 4113 y Fj(10.15.1)113
b(Detailed)36 b(Description)150 4314 y Fp(Returns)27
b(the)h(absolute)f(x)h(p)r(osition)f(of)h(the)g(nearest)e(target.)150
4461 y(Most)h(e\013ectiv)n(e)h(when)g(coupled)f(with)h
Fq(Ev)-5 b(alNearestAbsY)p Fp(.)150 4608 y(The)28 b(do)r(cumen)n
(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)
n(wing)e(\014le:)275 4821 y Fk(\210)42 b Fp(sensorfunctors.h)p
-358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 115 123
115 122 bop 150 70 a Fq(10.16)30 b(BEAST::Ev)-5 b(alNearestAbsY)31
b(Class)g(Reference)1835 b(115)p 150 103 4034 4 v 150
333 a Fl(10.16)136 b(BEAST::Ev)-7 b(alNearestAbsY)45
b(Class)h(Reference)150 562 y Fp(Returns)27 b(the)h(absolute)f(y)h(p)r
(osition)f(of)h(the)g(nearest)e(target.)150 709 y Fi(#include)40
b Fo(<)p Fi(sensorfunctors.h)o Fo(>)150 855 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Ev)-5 b(alNearestAbsY:)1531
1682 y @beginspecial 35 @llx 35 @lly 185 @urx 173 @ury
916 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearestAbsY__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 185 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 185 173
%%PageOrientation: Portrait
gsave
35 35 150 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node265
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 4 8 moveto
144 8 lineto
144 23 lineto
4 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 4 8 moveto
144 8 lineto
144 23 lineto
4 23 lineto
closepath
stroke
gsave 10 dict begin
74 11 moveto 130 -0.5 (BEAST::EvalNearestAbsY) alignedtext
end grestore
end grestore

%	Node266
[ /Rect [ 19 61 129 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 19 60 moveto
130 60 lineto
130 75 lineto
19 75 lineto
closepath
stroke
gsave 10 dict begin
74 63 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node266 -> Node265
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 51 moveto
74 42 74 31 74 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 50 moveto
74 60 lineto
77 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node267
[ /Rect [ 0 113 148 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
149 112 lineto
149 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
74 115 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node267 -> Node266
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 103 moveto
74 94 74 83 74 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 102 moveto
74 112 lineto
77 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2012 a(Collab)r(oration)26 b(diagram)g(for)h
(BEAST::Ev)-5 b(alNearestAbsY:)825 3177 y @beginspecial
35 @llx 35 @lly 524 @urx 269 @ury 2610 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearestAbsY__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 524 269
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 524 269
%%PageOrientation: Portrait
gsave
35 35 489 234 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node268
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 114 8 moveto
254 8 lineto
254 23 lineto
114 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 114 8 moveto
254 8 lineto
254 23 lineto
114 23 lineto
closepath
stroke
gsave 10 dict begin
184 11 moveto 130 -0.5 (BEAST::EvalNearestAbsY) alignedtext
end grestore
end grestore

%	Node269
[ /Rect [ 129 63 239 77 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 129 62 moveto
240 62 lineto
240 77 lineto
129 77 lineto
closepath
stroke
gsave 10 dict begin
184 65 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node269 -> Node268
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 184 53 moveto
184 43 184 31 184 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 182 52 moveto
184 62 lineto
187 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node270
[ /Rect [ 0 141 148 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 140 moveto
149 140 lineto
149 155 lineto
0 155 lineto
closepath
stroke
gsave 10 dict begin
74 143 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node270 -> Node269
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 135 moveto
115 119 155 91 173 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 132 moveto
85 140 lineto
95 136 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node271
[ /Rect [ 300 141 414 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 300 140 moveto
415 140 lineto
415 155 lineto
300 155 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
357 143 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node271 -> Node269
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 331 136 moveto
295 121 231 91 201 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 330 138 moveto
340 140 lineto
332 134 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
342 110 moveto 68 -0.5 (bestCandidate) alignedtext
342 99 moveto 31 -0.5 (owner) alignedtext
end grestore
end grestore

%	Node277
[ /Rect [ 189 209 287 223 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Vector2D.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 189 208 moveto
288 208 lineto
288 223 lineto
189 223 lineto
closepath
stroke
gsave 10 dict begin
238 211 moveto 89 -0.5 (BEAST::Vector2D) alignedtext
end grestore
end grestore

%	Node277 -> Node269
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 225 203 moveto
215 192 201 174 193 156 curveto
182 129 183 93 183 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 221 203 moveto
230 208 lineto
225 199 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
245 144 moveto 88 -0.5 (bestCandidateVec) alignedtext
end grestore
end grestore

%	Node277 -> Node271
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 253 203 moveto
264 194 279 182 293 174 curveto
305 166 321 160 333 156 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 253 200 moveto
247 208 lineto
256 204 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
390 178 moveto 184 -0.5 (VECTOR2D_FAKE_REFERENCE) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3539 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3726 y Fk(\210)42 b Fq(Ev)-5 b(alNearestAbsY)27
b Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(o,)e(double)i
(range\))275 3834 y Fk(\210)42 b Fp(virtual)27 b(double)g
Fq(GetOutput)h Fp(\(\))g(const)150 4113 y Fj(10.16.1)113
b(Detailed)36 b(Description)150 4314 y Fp(Returns)27
b(the)h(absolute)f(y)h(p)r(osition)f(of)h(the)g(nearest)e(target.)150
4461 y(Most)h(e\013ectiv)n(e)h(when)g(coupled)f(with)h
Fq(Ev)-5 b(alNearestAbsX)p Fp(.)150 4608 y(The)28 b(do)r(cumen)n
(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)
n(wing)e(\014le:)275 4821 y Fk(\210)42 b Fp(sensorfunctors.h)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 116 124
116 123 bop -358 70 a Fq(116)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.17)136 b(BEAST::Ev)-7 b(alNearestAngle)46
b(Class)g(Reference)150 562 y Fp(Returns)27 b(the)h(normalised)f(angle)
g(to)g(the)h(nearest)f(target.)150 709 y Fi(#include)40
b Fo(<)p Fi(sensorfunctors.h)o Fo(>)150 855 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Ev)-5 b(alNearestAngle:)1531
1682 y @beginspecial 35 @llx 35 @lly 185 @urx 173 @ury
916 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearestAngle__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 185 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 185 173
%%PageOrientation: Portrait
gsave
35 35 150 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node287
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 4 8 moveto
145 8 lineto
145 23 lineto
4 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 4 8 moveto
145 8 lineto
145 23 lineto
4 23 lineto
closepath
stroke
gsave 10 dict begin
74 11 moveto 131 -0.5 (BEAST::EvalNearestAngle) alignedtext
end grestore
end grestore

%	Node288
[ /Rect [ 19 61 129 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 19 60 moveto
130 60 lineto
130 75 lineto
19 75 lineto
closepath
stroke
gsave 10 dict begin
74 63 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node288 -> Node287
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 51 moveto
74 42 74 31 74 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 50 moveto
74 60 lineto
77 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node289
[ /Rect [ 0 113 148 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
149 112 lineto
149 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
74 115 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node289 -> Node288
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 103 moveto
74 94 74 83 74 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 102 moveto
74 112 lineto
77 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2012 a(Collab)r(oration)26 b(diagram)g(for)h
(BEAST::Ev)-5 b(alNearestAngle:)825 3177 y @beginspecial
35 @llx 35 @lly 524 @urx 269 @ury 2610 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearestAngle__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 524 269
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 524 269
%%PageOrientation: Portrait
gsave
35 35 489 234 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node290
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 114 8 moveto
255 8 lineto
255 23 lineto
114 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 114 8 moveto
255 8 lineto
255 23 lineto
114 23 lineto
closepath
stroke
gsave 10 dict begin
184 11 moveto 131 -0.5 (BEAST::EvalNearestAngle) alignedtext
end grestore
end grestore

%	Node291
[ /Rect [ 129 63 239 77 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 129 62 moveto
240 62 lineto
240 77 lineto
129 77 lineto
closepath
stroke
gsave 10 dict begin
184 65 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node291 -> Node290
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 184 53 moveto
184 43 184 31 184 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 182 52 moveto
184 62 lineto
187 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node292
[ /Rect [ 0 141 148 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 140 moveto
149 140 lineto
149 155 lineto
0 155 lineto
closepath
stroke
gsave 10 dict begin
74 143 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node292 -> Node291
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 135 moveto
115 119 155 91 173 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 132 moveto
85 140 lineto
95 136 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node293
[ /Rect [ 300 141 414 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 300 140 moveto
415 140 lineto
415 155 lineto
300 155 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
357 143 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node293 -> Node291
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 331 136 moveto
295 121 231 91 201 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 330 138 moveto
340 140 lineto
332 134 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
342 110 moveto 68 -0.5 (bestCandidate) alignedtext
342 99 moveto 31 -0.5 (owner) alignedtext
end grestore
end grestore

%	Node299
[ /Rect [ 189 209 287 223 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Vector2D.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 189 208 moveto
288 208 lineto
288 223 lineto
189 223 lineto
closepath
stroke
gsave 10 dict begin
238 211 moveto 89 -0.5 (BEAST::Vector2D) alignedtext
end grestore
end grestore

%	Node299 -> Node291
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 225 203 moveto
215 192 201 174 193 156 curveto
182 129 183 93 183 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 221 203 moveto
230 208 lineto
225 199 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
245 144 moveto 88 -0.5 (bestCandidateVec) alignedtext
end grestore
end grestore

%	Node299 -> Node293
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 253 203 moveto
264 194 279 182 293 174 curveto
305 166 321 160 333 156 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 253 200 moveto
247 208 lineto
256 204 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
390 178 moveto 184 -0.5 (VECTOR2D_FAKE_REFERENCE) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3539 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3726 y Fk(\210)42 b Fq(Ev)-5 b(alNearestAngle)26
b Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(o,)f(double)g
(range\))275 3834 y Fk(\210)42 b Fp(virtual)27 b(double)g
Fq(GetOutput)h Fp(\(\))g(const)150 4113 y Fj(10.17.1)113
b(Detailed)36 b(Description)150 4314 y Fp(Returns)27
b(the)h(normalised)f(angle)g(to)g(the)h(nearest)f(target.)150
4461 y(The)h(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f
(generated)h(from)g(the)h(follo)n(wing)e(\014le:)275
4674 y Fk(\210)42 b Fp(sensorfunctors.h)p -358 5723 V
-192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 117 125
117 124 bop 150 70 a Fq(10.18)30 b(BEAST::Ev)-5 b(alNearestSignal)p
Fo(<)p 1634 70 29 4 v 64 w Fq(State,)p 1944 70 V 66 w(Signal,)p
2290 70 V 65 w(Cost)32 b Fo(>)f Fq(Class)g(T)-8 b(emplate)31
b(Reference)321 b(117)p 150 103 4034 4 v 150 333 a Fl(10.18)136
b(BEAST::Ev)-7 b(alNearestSignal)p Fb(<)p 2322 333 41
4 v 89 w Fl(State,)p 2753 333 V 90 w(Signal,)p 3235 333
V 89 w(Cost)39 b Fb(>)591 482 y Fl(Class)46 b(T)-11 b(emplate)45
b(Reference)150 711 y Fq(Sensor)27 b Fp(ev)-5 b(aluation)27
b(functor:)37 b(returns)27 b(the)h(signal)f(of)g(the)h(nearest)f
(individual.)150 858 y Fi(#include)40 b Fo(<)p Fi(signaller.h)p
Fo(>)150 1005 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::Ev)-5
b(alNearestSignal)p Fo(<)p 2120 1005 25 4 v 55 w Fp(State,)p
2390 1005 V 58 w(Signal,)p 2692 1005 V 57 w(Cost)27 b
Fo(>)p Fp(:)1282 1774 y @beginspecial 35 @llx 35 @lly
305 @urx 173 @ury 1514 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearestSignal__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 305 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 305 173
%%PageOrientation: Portrait
gsave
35 35 270 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node309
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
269 8 lineto
269 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
269 8 lineto
269 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
134 11 moveto 259 -0.5 (BEAST::EvalNearestSignal< _State, _Signal, _Cost >) alignedtext
end grestore
end grestore

%	Node310
[ /Rect [ 79 61 189 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 79 60 moveto
190 60 lineto
190 75 lineto
79 75 lineto
closepath
stroke
gsave 10 dict begin
134 63 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node310 -> Node309
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 51 moveto
134 42 134 31 134 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 132 50 moveto
134 60 lineto
137 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node311
[ /Rect [ 60 113 208 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 60 112 moveto
209 112 lineto
209 127 lineto
60 127 lineto
closepath
stroke
gsave 10 dict begin
134 115 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node311 -> Node310
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 103 moveto
134 94 134 83 134 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 132 102 moveto
134 112 lineto
137 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2104 a(Collab)r(oration)f(diagram)g(for)h(BEAST::Ev)-5
b(alNearestSignal)p Fo(<)p 2208 2104 V 55 w Fp(State,)p
2477 2104 V 57 w(Signal,)p 2779 2104 V 57 w(Cost)28 b
Fo(>)p Fp(:)825 3268 y @beginspecial 35 @llx 35 @lly
524 @urx 269 @ury 2610 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearestSignal__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 524 269
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 524 269
%%PageOrientation: Portrait
gsave
35 35 489 234 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node312
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 50 8 moveto
319 8 lineto
319 23 lineto
50 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 50 8 moveto
319 8 lineto
319 23 lineto
50 23 lineto
closepath
stroke
gsave 10 dict begin
184 11 moveto 259 -0.5 (BEAST::EvalNearestSignal< _State, _Signal, _Cost >) alignedtext
end grestore
end grestore

%	Node313
[ /Rect [ 129 63 239 77 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 129 62 moveto
240 62 lineto
240 77 lineto
129 77 lineto
closepath
stroke
gsave 10 dict begin
184 65 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node313 -> Node312
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 184 53 moveto
184 43 184 31 184 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 182 52 moveto
184 62 lineto
187 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node314
[ /Rect [ 0 141 148 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 140 moveto
149 140 lineto
149 155 lineto
0 155 lineto
closepath
stroke
gsave 10 dict begin
74 143 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node314 -> Node313
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 135 moveto
115 119 155 91 173 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 132 moveto
85 140 lineto
95 136 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node315
[ /Rect [ 300 141 414 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 300 140 moveto
415 140 lineto
415 155 lineto
300 155 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
357 143 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node315 -> Node313
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 331 136 moveto
295 121 231 91 201 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 330 138 moveto
340 140 lineto
332 134 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
342 110 moveto 68 -0.5 (bestCandidate) alignedtext
342 99 moveto 31 -0.5 (owner) alignedtext
end grestore
end grestore

%	Node321
[ /Rect [ 189 209 287 223 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Vector2D.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 189 208 moveto
288 208 lineto
288 223 lineto
189 223 lineto
closepath
stroke
gsave 10 dict begin
238 211 moveto 89 -0.5 (BEAST::Vector2D) alignedtext
end grestore
end grestore

%	Node321 -> Node313
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 225 203 moveto
215 192 201 174 193 156 curveto
182 129 183 93 183 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 221 203 moveto
230 208 lineto
225 199 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
245 144 moveto 88 -0.5 (bestCandidateVec) alignedtext
end grestore
end grestore

%	Node321 -> Node315
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 253 203 moveto
264 194 279 182 293 174 curveto
305 166 321 160 333 156 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 253 200 moveto
247 208 lineto
256 204 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
390 178 moveto 184 -0.5 (VECTOR2D_FAKE_REFERENCE) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3631 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3818 y Fk(\210)42 b Fq(Ev)-5 b(alNearestSignal)26
b Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(o,)f(double)g
(range\))275 3926 y Fk(\210)42 b Fp(virtual)27 b(double)g
Fq(GetOutput)h Fp(\(\))g(const)476 4050 y Fg(R)l(eturns)e(the)g(signal)
f(numb)l(er)g(\(as)h(a)f(double\))h(of)e(the)i(ne)l(ar)l(est)h(signal)t
(ler,)e(or)g(0.0)g(if)f(no)h(signal)t(ler)g(was)g(found)476
4141 y(\(or)j(the)g(signal)t(ler)g(is)f(signal)t(ling)g(0\).)150
4512 y Fj(10.18.1)113 b(Detailed)36 b(Description)150
4713 y Fq(template)p Fo(<)p Fq(t)m(yp)s(ename)p 1060
4713 29 4 v 97 w(State,)73 b(t)m(yp)s(ename)p 1885 4713
V 99 w(Signal,)g(t)m(yp)s(ename)p 2745 4713 V 99 w(Cost)64
b(=)i(\015oat)p Fo(>)f Fq(class)150 4812 y(BEAST::Ev)-5
b(alNearestSignal)p Fo(<)p 1384 4812 V 64 w Fq(State,)p
1694 4812 V 66 w(Signal,)p 2040 4812 V 65 w(Cost)31 b
Fo(>)150 5013 y Fq(Sensor)c Fp(ev)-5 b(aluation)27 b(functor:)37
b(returns)27 b(the)h(signal)f(of)g(the)h(nearest)f(individual.)150
5160 y(The)h(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f
(generated)h(from)g(the)h(follo)n(wing)e(\014le:)275
5373 y Fk(\210)42 b Fq(signaller.h)p 150 5723 4034 4
v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 118 126
118 125 bop -358 70 a Fq(118)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.19)136 b(BEAST::Ev)-7 b(alNearestXDist)47
b(Class)e(Reference)150 562 y Fp(Returns)27 b(the)h(v)n(ertical)f
(distance)g(to)h(the)g(nearest)e(target.)150 709 y Fi(#include)40
b Fo(<)p Fi(sensorfunctors.h)o Fo(>)150 855 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Ev)-5 b(alNearestXDist:)1531
1682 y @beginspecial 35 @llx 35 @lly 185 @urx 173 @ury
916 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearestXDist__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 185 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 185 173
%%PageOrientation: Portrait
gsave
35 35 150 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node331
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 4 8 moveto
144 8 lineto
144 23 lineto
4 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 4 8 moveto
144 8 lineto
144 23 lineto
4 23 lineto
closepath
stroke
gsave 10 dict begin
74 11 moveto 130 -0.5 (BEAST::EvalNearestXDist) alignedtext
end grestore
end grestore

%	Node332
[ /Rect [ 19 61 129 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 19 60 moveto
130 60 lineto
130 75 lineto
19 75 lineto
closepath
stroke
gsave 10 dict begin
74 63 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node332 -> Node331
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 51 moveto
74 42 74 31 74 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 50 moveto
74 60 lineto
77 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node333
[ /Rect [ 0 113 148 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
149 112 lineto
149 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
74 115 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node333 -> Node332
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 103 moveto
74 94 74 83 74 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 102 moveto
74 112 lineto
77 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2012 a(Collab)r(oration)26 b(diagram)g(for)h
(BEAST::Ev)-5 b(alNearestXDist:)825 3177 y @beginspecial
35 @llx 35 @lly 524 @urx 269 @ury 2610 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearestXDist__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 524 269
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 524 269
%%PageOrientation: Portrait
gsave
35 35 489 234 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node334
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 114 8 moveto
254 8 lineto
254 23 lineto
114 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 114 8 moveto
254 8 lineto
254 23 lineto
114 23 lineto
closepath
stroke
gsave 10 dict begin
184 11 moveto 130 -0.5 (BEAST::EvalNearestXDist) alignedtext
end grestore
end grestore

%	Node335
[ /Rect [ 129 63 239 77 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 129 62 moveto
240 62 lineto
240 77 lineto
129 77 lineto
closepath
stroke
gsave 10 dict begin
184 65 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node335 -> Node334
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 184 53 moveto
184 43 184 31 184 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 182 52 moveto
184 62 lineto
187 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node336
[ /Rect [ 0 141 148 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 140 moveto
149 140 lineto
149 155 lineto
0 155 lineto
closepath
stroke
gsave 10 dict begin
74 143 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node336 -> Node335
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 135 moveto
115 119 155 91 173 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 132 moveto
85 140 lineto
95 136 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node337
[ /Rect [ 300 141 414 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 300 140 moveto
415 140 lineto
415 155 lineto
300 155 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
357 143 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node337 -> Node335
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 331 136 moveto
295 121 231 91 201 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 330 138 moveto
340 140 lineto
332 134 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
342 110 moveto 68 -0.5 (bestCandidate) alignedtext
342 99 moveto 31 -0.5 (owner) alignedtext
end grestore
end grestore

%	Node343
[ /Rect [ 189 209 287 223 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Vector2D.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 189 208 moveto
288 208 lineto
288 223 lineto
189 223 lineto
closepath
stroke
gsave 10 dict begin
238 211 moveto 89 -0.5 (BEAST::Vector2D) alignedtext
end grestore
end grestore

%	Node343 -> Node335
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 225 203 moveto
215 192 201 174 193 156 curveto
182 129 183 93 183 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 221 203 moveto
230 208 lineto
225 199 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
245 144 moveto 88 -0.5 (bestCandidateVec) alignedtext
end grestore
end grestore

%	Node343 -> Node337
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 253 203 moveto
264 194 279 182 293 174 curveto
305 166 321 160 333 156 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 253 200 moveto
247 208 lineto
256 204 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
390 178 moveto 184 -0.5 (VECTOR2D_FAKE_REFERENCE) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3539 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3726 y Fk(\210)42 b Fq(Ev)-5 b(alNearestXDist)26
b Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(o,)f(double)h
(range\))275 3834 y Fk(\210)42 b Fp(virtual)27 b(double)g
Fq(GetOutput)h Fp(\(\))g(const)150 4113 y Fj(10.19.1)113
b(Detailed)36 b(Description)150 4314 y Fp(Returns)27
b(the)h(v)n(ertical)f(distance)g(to)h(the)g(nearest)e(target.)150
4461 y(Most)h(e\013ectiv)n(e)h(when)g(coupled)f(with)h
Fq(Ev)-5 b(alNearestYDist)p Fp(.)150 4608 y(The)28 b(do)r(cumen)n
(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)
n(wing)e(\014le:)275 4821 y Fk(\210)42 b Fp(sensorfunctors.h)p
-358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 119 127
119 126 bop 150 70 a Fq(10.20)30 b(BEAST::Ev)-5 b(alNearestYDist)31
b(Class)g(Reference)1823 b(119)p 150 103 4034 4 v 150
333 a Fl(10.20)136 b(BEAST::Ev)-7 b(alNearestYDist)47
b(Class)e(Reference)150 562 y Fp(Returns)27 b(the)h(horizon)n(tal)e
(distance)i(to)f(the)h(nearest)f(target.)150 709 y Fi(#include)40
b Fo(<)p Fi(sensorfunctors.h)o Fo(>)150 855 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Ev)-5 b(alNearestYDist:)1531
1682 y @beginspecial 35 @llx 35 @lly 185 @urx 173 @ury
916 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearestYDist__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 185 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 185 173
%%PageOrientation: Portrait
gsave
35 35 150 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node353
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 4 8 moveto
144 8 lineto
144 23 lineto
4 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 4 8 moveto
144 8 lineto
144 23 lineto
4 23 lineto
closepath
stroke
gsave 10 dict begin
74 11 moveto 130 -0.5 (BEAST::EvalNearestYDist) alignedtext
end grestore
end grestore

%	Node354
[ /Rect [ 19 61 129 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 19 60 moveto
130 60 lineto
130 75 lineto
19 75 lineto
closepath
stroke
gsave 10 dict begin
74 63 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node354 -> Node353
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 51 moveto
74 42 74 31 74 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 50 moveto
74 60 lineto
77 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node355
[ /Rect [ 0 113 148 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
149 112 lineto
149 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
74 115 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node355 -> Node354
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 103 moveto
74 94 74 83 74 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 102 moveto
74 112 lineto
77 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2012 a(Collab)r(oration)26 b(diagram)g(for)h
(BEAST::Ev)-5 b(alNearestYDist:)825 3177 y @beginspecial
35 @llx 35 @lly 524 @urx 269 @ury 2610 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvalNearestYDist__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 524 269
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 524 269
%%PageOrientation: Portrait
gsave
35 35 489 234 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node356
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 114 8 moveto
254 8 lineto
254 23 lineto
114 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 114 8 moveto
254 8 lineto
254 23 lineto
114 23 lineto
closepath
stroke
gsave 10 dict begin
184 11 moveto 130 -0.5 (BEAST::EvalNearestYDist) alignedtext
end grestore
end grestore

%	Node357
[ /Rect [ 129 63 239 77 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 129 62 moveto
240 62 lineto
240 77 lineto
129 77 lineto
closepath
stroke
gsave 10 dict begin
184 65 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node357 -> Node356
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 184 53 moveto
184 43 184 31 184 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 182 52 moveto
184 62 lineto
187 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node358
[ /Rect [ 0 141 148 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 140 moveto
149 140 lineto
149 155 lineto
0 155 lineto
closepath
stroke
gsave 10 dict begin
74 143 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node358 -> Node357
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 135 moveto
115 119 155 91 173 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 132 moveto
85 140 lineto
95 136 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node359
[ /Rect [ 300 141 414 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 300 140 moveto
415 140 lineto
415 155 lineto
300 155 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
357 143 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node359 -> Node357
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 331 136 moveto
295 121 231 91 201 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 330 138 moveto
340 140 lineto
332 134 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
342 110 moveto 68 -0.5 (bestCandidate) alignedtext
342 99 moveto 31 -0.5 (owner) alignedtext
end grestore
end grestore

%	Node365
[ /Rect [ 189 209 287 223 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Vector2D.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 189 208 moveto
288 208 lineto
288 223 lineto
189 223 lineto
closepath
stroke
gsave 10 dict begin
238 211 moveto 89 -0.5 (BEAST::Vector2D) alignedtext
end grestore
end grestore

%	Node365 -> Node357
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 225 203 moveto
215 192 201 174 193 156 curveto
182 129 183 93 183 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 221 203 moveto
230 208 lineto
225 199 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
245 144 moveto 88 -0.5 (bestCandidateVec) alignedtext
end grestore
end grestore

%	Node365 -> Node359
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 253 203 moveto
264 194 279 182 293 174 curveto
305 166 321 160 333 156 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 253 200 moveto
247 208 lineto
256 204 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
390 178 moveto 184 -0.5 (VECTOR2D_FAKE_REFERENCE) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3539 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3726 y Fk(\210)42 b Fq(Ev)-5 b(alNearestYDist)26
b Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(o,)f(double)h
(range\))275 3834 y Fk(\210)42 b Fp(virtual)27 b(double)g
Fq(GetOutput)h Fp(\(\))g(const)150 4113 y Fj(10.20.1)113
b(Detailed)36 b(Description)150 4314 y Fp(Returns)27
b(the)h(horizon)n(tal)e(distance)i(to)f(the)h(nearest)f(target.)150
4461 y(Most)g(e\013ectiv)n(e)h(when)g(coupled)f(with)h
Fq(Ev)-5 b(alNearestXDist)p Fp(.)150 4608 y(The)28 b(do)r(cumen)n
(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)
n(wing)e(\014le:)275 4821 y Fk(\210)42 b Fp(sensorfunctors.h)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 120 128
120 127 bop -358 70 a Fq(120)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.21)136 b(BEAST::Ev)l(oDNNAnimat)46 b(Class)g(Reference)150
562 y Fp(An)28 b(ev)n(olv)-5 b(able)27 b(v)n(ersion)f(of)h
Fq(DNNAnimat)f Fp(with)i(GetGenot)n(yp)r(e/SetGenot)n(yp)r(e)g(metho)r
(ds)g(already)e(set)h(up.)150 709 y Fi(#include)40 b
Fo(<)p Fi(neuralanimat.h)p Fo(>)150 855 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Ev)n(oDNNAnimat:)1277 2110 y
@beginspecial 35 @llx 35 @lly 307 @urx 277 @ury 1524
@rwi @setspecial
%%BeginDocument: classBEAST_1_1EvoDNNAnimat__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 307 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 307 277
%%PageOrientation: Portrait
gsave
35 35 272 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node375
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 63 8 moveto
200 8 lineto
200 23 lineto
63 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 63 8 moveto
200 8 lineto
200 23 lineto
63 23 lineto
closepath
stroke
gsave 10 dict begin
131 11 moveto 127 -0.5 (BEAST::EvoDNNAnimat) alignedtext
end grestore
end grestore

%	Node376
[ /Rect [ 0 61 118 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1DNNAnimat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
118 60 lineto
118 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
59 63 moveto 108 -0.5 (BEAST::DNNAnimat) alignedtext
end grestore
end grestore

%	Node376 -> Node375
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 77 55 moveto
91 45 109 32 120 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 77 52 moveto
70 60 lineto
80 56 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node377
[ /Rect [ 15 113 103 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Animat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 15 112 moveto
104 112 lineto
104 127 lineto
15 127 lineto
closepath
stroke
gsave 10 dict begin
59 115 moveto 79 -0.5 (BEAST::Animat) alignedtext
end grestore
end grestore

%	Node377 -> Node376
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 59 103 moveto
59 94 59 83 59 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 102 moveto
59 112 lineto
62 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node378
[ /Rect [ 2 165 116 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 2 164 moveto
117 164 lineto
117 179 lineto
2 179 lineto
closepath
stroke
gsave 10 dict begin
59 167 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node378 -> Node377
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 59 155 moveto
59 146 59 135 59 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 154 moveto
59 164 lineto
62 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node379
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 10 216 moveto
109 216 lineto
109 231 lineto
10 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
59 219 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node379 -> Node378
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 59 207 moveto
59 198 59 187 59 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 206 moveto
59 216 lineto
62 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node380
[ /Rect [ 136 61 270 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Evolver.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 136 60 moveto
270 60 lineto
270 75 lineto
136 75 lineto
closepath
stroke
gsave 10 dict begin
203 63 moveto 124 -0.5 (BEAST::Evolver< float >) alignedtext
end grestore
end grestore

%	Node380 -> Node375
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 185 55 moveto
171 45 153 32 142 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 182 56 moveto
192 60 lineto
185 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2439 a(Collab)r(oration)f(diagram)g(for)h(BEAST::Ev)n
(oDNNAnimat:)1277 2965 y @beginspecial 35 @llx 35 @lly
307 @urx 121 @ury 1524 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvoDNNAnimat__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 307 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 307 121
%%PageOrientation: Portrait
gsave
35 35 272 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node381
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 63 8 moveto
200 8 lineto
200 23 lineto
63 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 63 8 moveto
200 8 lineto
200 23 lineto
63 23 lineto
closepath
stroke
gsave 10 dict begin
131 11 moveto 127 -0.5 (BEAST::EvoDNNAnimat) alignedtext
end grestore
end grestore

%	Node382
[ /Rect [ 0 61 118 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1DNNAnimat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 0 60 moveto
118 60 lineto
118 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
59 63 moveto 108 -0.5 (BEAST::DNNAnimat) alignedtext
end grestore
end grestore

%	Node382 -> Node381
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 77 55 moveto
91 45 109 32 120 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 77 52 moveto
70 60 lineto
80 56 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node411
[ /Rect [ 136 61 270 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Evolver.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 136 60 moveto
270 60 lineto
270 75 lineto
136 75 lineto
closepath
stroke
gsave 10 dict begin
203 63 moveto 124 -0.5 (BEAST::Evolver< float >) alignedtext
end grestore
end grestore

%	Node411 -> Node381
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 185 55 moveto
171 45 153 32 142 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 182 56 moveto
192 60 lineto
185 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3328 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3514 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(SetGenot)m(yp)s(e)i Fp(\(const)g(std::v)n(ector)p
Fo(<)e Fp(\015oat)h Fo(>)g Fp(&g\))275 3622 y Fk(\210)42
b Fp(virtual)27 b(genot)n(yp)r(e)p 959 3622 25 4 v 29
w(t)n(yp)r(e)g Fq(GetGenot)m(yp)s(e)h Fp(\(\))g(const)476
3746 y Fg(R)l(eturns)h(the)f(genotyp)l(e.)150 4117 y
Fj(10.21.1)113 b(Detailed)36 b(Description)150 4318 y
Fp(An)28 b(ev)n(olv)-5 b(able)27 b(v)n(ersion)f(of)h
Fq(DNNAnimat)f Fp(with)i(GetGenot)n(yp)r(e/SetGenot)n(yp)r(e)g(metho)r
(ds)g(already)e(set)h(up.)142 4535 y Fq(See)k(also:)311
4635 y(DNNAnimat)150 4864 y Fp(The)d(do)r(cumen)n(tation)f(for)g(this)h
(class)f(w)n(as)f(generated)h(from)g(the)h(follo)n(wing)e(\014le:)275
5078 y Fk(\210)42 b Fq(neuralanimat.h)p -358 5723 4034
4 v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 121 129
121 128 bop 150 70 a Fq(10.22)30 b(BEAST::Ev)m(oFFNAnimat)g(Class)h
(Reference)1906 b(121)p 150 103 4034 4 v 150 333 a Fl(10.22)136
b(BEAST::Ev)l(oFFNAnimat)45 b(Class)g(Reference)150 562
y Fp(An)28 b(ev)n(olv)-5 b(able)27 b(v)n(ersion)f(of)h
Fq(FFNAnimat)g Fp(with)h(GetGenot)n(yp)r(e/SetGenot)n(yp)r(e)f(metho)r
(ds)h(already)e(set)i(up.)150 709 y Fi(#include)40 b
Fo(<)p Fi(neuralanimat.h)p Fo(>)150 855 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Ev)n(oFFNAnimat:)1286 2116 y
@beginspecial 35 @llx 35 @lly 302 @urx 277 @ury 1504
@rwi @setspecial
%%BeginDocument: classBEAST_1_1EvoFFNAnimat__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 302 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 302 277
%%PageOrientation: Portrait
gsave
35 35 267 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node412
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 61 8 moveto
193 8 lineto
193 23 lineto
61 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 61 8 moveto
193 8 lineto
193 23 lineto
61 23 lineto
closepath
stroke
gsave 10 dict begin
127 11 moveto 122 -0.5 (BEAST::EvoFFNAnimat) alignedtext
end grestore
end grestore

%	Node413
[ /Rect [ 1 61 113 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1FFNAnimat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 1 60 moveto
113 60 lineto
113 75 lineto
1 75 lineto
closepath
stroke
gsave 10 dict begin
57 63 moveto 102 -0.5 (BEAST::FFNAnimat) alignedtext
end grestore
end grestore

%	Node413 -> Node412
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 55 moveto
88 45 105 32 117 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 52 moveto
67 60 lineto
77 56 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node414
[ /Rect [ 13 113 101 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Animat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 13 112 moveto
102 112 lineto
102 127 lineto
13 127 lineto
closepath
stroke
gsave 10 dict begin
57 115 moveto 79 -0.5 (BEAST::Animat) alignedtext
end grestore
end grestore

%	Node414 -> Node413
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 103 moveto
57 94 57 83 57 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 102 moveto
57 112 lineto
60 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node415
[ /Rect [ 0 165 114 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 164 moveto
115 164 lineto
115 179 lineto
0 179 lineto
closepath
stroke
gsave 10 dict begin
57 167 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node415 -> Node414
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 155 moveto
57 146 57 135 57 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 154 moveto
57 164 lineto
60 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node416
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 8 216 moveto
107 216 lineto
107 231 lineto
8 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
57 219 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node416 -> Node415
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 207 moveto
57 198 57 187 57 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 206 moveto
57 216 lineto
60 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node417
[ /Rect [ 131 61 265 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Evolver.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 131 60 moveto
265 60 lineto
265 75 lineto
131 75 lineto
closepath
stroke
gsave 10 dict begin
198 63 moveto 124 -0.5 (BEAST::Evolver< float >) alignedtext
end grestore
end grestore

%	Node417 -> Node412
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 181 55 moveto
167 45 149 32 138 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 56 moveto
188 60 lineto
181 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2445 a(Collab)r(oration)f(diagram)g(for)h(BEAST::Ev)n
(oFFNAnimat:)1290 2972 y @beginspecial 35 @llx 35 @lly
301 @urx 121 @ury 1494 @rwi @setspecial
%%BeginDocument: classBEAST_1_1EvoFFNAnimat__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 301 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 301 121
%%PageOrientation: Portrait
gsave
35 35 266 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node418
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 60 8 moveto
192 8 lineto
192 23 lineto
60 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 60 8 moveto
192 8 lineto
192 23 lineto
60 23 lineto
closepath
stroke
gsave 10 dict begin
126 11 moveto 122 -0.5 (BEAST::EvoFFNAnimat) alignedtext
end grestore
end grestore

%	Node419
[ /Rect [ 0 61 112 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1FFNAnimat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 0 60 moveto
112 60 lineto
112 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
56 63 moveto 102 -0.5 (BEAST::FFNAnimat) alignedtext
end grestore
end grestore

%	Node419 -> Node418
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 55 moveto
87 45 104 32 116 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 52 moveto
66 60 lineto
76 56 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node448
[ /Rect [ 130 61 264 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Evolver.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 130 60 moveto
264 60 lineto
264 75 lineto
130 75 lineto
closepath
stroke
gsave 10 dict begin
197 63 moveto 124 -0.5 (BEAST::Evolver< float >) alignedtext
end grestore
end grestore

%	Node448 -> Node418
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 180 55 moveto
166 45 148 32 137 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 56 moveto
187 60 lineto
180 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3335 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3521 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(SetGenot)m(yp)s(e)i Fp(\(const)g(std::v)n(ector)p
Fo(<)e Fp(\015oat)h Fo(>)g Fp(&g\))275 3629 y Fk(\210)42
b Fp(virtual)27 b(genot)n(yp)r(e)p 959 3629 25 4 v 29
w(t)n(yp)r(e)g Fq(GetGenot)m(yp)s(e)h Fp(\(\))g(const)476
3754 y Fg(R)l(eturns)h(the)f(genotyp)l(e.)150 4125 y
Fj(10.22.1)113 b(Detailed)36 b(Description)150 4325 y
Fp(An)28 b(ev)n(olv)-5 b(able)27 b(v)n(ersion)f(of)h
Fq(FFNAnimat)g Fp(with)h(GetGenot)n(yp)r(e/SetGenot)n(yp)r(e)f(metho)r
(ds)h(already)e(set)i(up.)142 4542 y Fq(See)j(also:)311
4642 y(FFNAnimat)150 4872 y Fp(The)d(do)r(cumen)n(tation)f(for)g(this)h
(class)f(w)n(as)f(generated)h(from)g(the)h(follo)n(wing)e(\014le:)275
5085 y Fk(\210)42 b Fq(neuralanimat.h)p 150 5723 4034
4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 122 130
122 129 bop -358 70 a Fq(122)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.23)136 b(BEAST::Ev)l(olv)l(er)p Fb(<)46 b
Fl(T)e Fb(>)h Fl(Class)h(T)-11 b(emplate)46 b(Reference)150
567 y Fi(#include)40 b Fo(<)p Fi(geneticalgorithm)o(.h)o
Fo(>)150 714 y Fp(Collab)r(oration)26 b(diagram)g(for)h(BEAST::Ev)n
(olv)n(er)p Fo(<)d Fp(T)k Fo(>)p Fp(:)1522 1369 y @beginspecial
35 @llx 35 @lly 188 @urx 137 @ury 936 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Evolver__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 188 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 188 137
%%PageOrientation: Portrait
gsave
35 35 153 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node450
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
118 8 lineto
118 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
118 8 lineto
118 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
59 11 moveto 108 -0.5 (BEAST::Evolver< T >) alignedtext
end grestore
end grestore

%	Node451
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 17 76 moveto
101 76 lineto
101 91 lineto
17 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
59 79 moveto 74 -0.5 (vector< float >) alignedtext
end grestore
end grestore

%	Node451 -> Node450
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 59 68 moveto
59 54 59 35 59 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 57 66 moveto
59 76 lineto
62 66 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
105 46 moveto 82 -0.5 (GAFitnessScores) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1757 a Fj(Public)36 b(T)m(yp)s(es)275
1960 y Fk(\210)42 b Fp(t)n(yp)r(edef)28 b(T)f Fq(gene)p
935 1960 29 4 v 34 w(t)m(yp)s(e)275 2079 y Fk(\210)42
b Fp(t)n(yp)r(edef)28 b(std::v)n(ector)p Fo(<)e Fp(T)i
Fo(>)f Fq(genot)m(yp)s(e)p 1687 2079 V 34 w(t)m(yp)s(e)150
2384 y Fj(Public)36 b(Mem)m(b)s(er)h(F)-9 b(unctions)275
2587 y Fk(\210)42 b Fp(virtual)27 b(genot)n(yp)r(e)p
959 2587 25 4 v 29 w(t)n(yp)r(e)g Fq(GetGenot)m(yp)s(e)h
Fp(\(\))g(const=0)476 2723 y Fg(R)l(eturns)h(the)f(genotyp)l(e.)275
2933 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(SetGenot)m(yp)s(e)i
Fp(\(const)g(genot)n(yp)r(e)p 1954 2933 V 29 w(t)n(yp)r(e)f(&\)=0)476
3069 y Fg(Sets)h(the)h(genotyp)l(e.)275 3280 y Fk(\210)42
b Fp(virtual)27 b(\015oat)g Fq(GetFitness)f Fp(\(\))i(const=0)476
3416 y Fg(R)l(eturns)h(the)f(\014tness.)275 3627 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(StoreFitness)h Fp(\(\))476
3763 y Fg(Stor)l(es)32 b(curr)l(ent)g(\014tness,)f(overlo)l(ad)h(this)e
(for)g(one)h(way)f(of)g(r)l(esetting)i(individuals')e(internal)g
(\014tness)i(sc)l(or)l(es)476 3854 y(e)l(ach)c(assessment)i(\(another)g
(way)e(might)f(b)l(e)h(e.g.)150 4250 y Fj(Public)36 b(A)m(ttributes)275
4453 y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)26 b Fp(\015oat)h
Fo(>)g Fq(GAFitnessScores)476 4589 y Fg(A)g(list)h(of)f(pr)l(evious)i
(sc)l(or)l(es.)275 4800 y Fk(\210)42 b Fp(\015oat)27
b Fq(GAProbabilit)m(y)476 4936 y Fg(Use)l(d)h(by)g Ff(GeneticAlgorithm)
p Fg(.)275 5147 y Fk(\210)42 b Fp(\015oat)27 b Fq(GAFixedFitness)476
5283 y Fg(Use)l(d)h(by)g Ff(GeneticAlgorithm)p Fg(.)275
5493 y Fk(\210)42 b Fp(genot)n(yp)r(e)p 689 5493 V 29
w(t)n(yp)r(e)27 b Fq(PSOBestSolution)275 5613 y Fk(\210)42
b Fp(\015oat)27 b Fq(PSOBestFitness)p -358 5723 4034
4 v -192 5823 a Fn(Generated)f(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 123 131
123 130 bop 150 70 a Fq(10.23)30 b(BEAST::Ev)m(olv)m(er)p
Fo(<)i Fq(T)g Fo(>)f Fq(Class)g(T)-8 b(emplate)31 b(Reference)1578
b(123)p 150 103 4034 4 v 150 333 a Fj(10.23.1)113 b(Detailed)36
b(Description)150 533 y Fq(template)p Fo(<)p Fq(t)m(yp)s(ename)29
b(T)p Fo(>)j Fq(class)f(BEAST::Ev)m(olv)m(er)p Fo(<)g
Fq(T)i Fo(>)311 711 y Fp(The)i Fq(Ev)m(olv)m(er)g Fp(class)e(is)h(an)g
(abstract)g(base)f(class)h(from)g(whic)n(h)g(y)n(ou)g(ma)n(y)f(deriv)n
(e)h(the)g(ob)5 b(jects)34 b(whic)n(h)311 810 y(will)e(comprise)e(y)n
(our)g(p)r(opulation.)47 b(The)32 b(b)r(est)f(approac)n(h)e(is)i(to)g
(use)h(m)n(ultiple)f(inheritance)g(and)g(create)311 910
y(an)d(ev)n(olv)-5 b(able)26 b(sub)r(class)h(of)h(whatev)n(er)e(it)i
(is)g(y)n(ou)e(w)n(an)n(t)h(to)h(use)f(the)h(GA)g(on.)311
1164 y(The)d(t)n(yp)r(e)h(sp)r(eci\014ed)f(m)n(ust)g(matc)n(h)g(the)g
(t)n(yp)r(e)g(sp)r(eci\014ed)h(in)f(the)g(\014rst)g(template)g
(parameter)f(of)h(y)n(our)f(GA,)311 1264 y(otherwise)j(it)h(w)n(on't)g
(w)n(ork.)35 b(Y)-7 b(ou)28 b(are)f(not)h(limited)g(to)g(basic)f(t)n
(yp)r(es)g(for)h(y)n(our)e(genes,)h(an)n(y)g(class)g(ma)n(y)g(b)r(e)311
1364 y(used,)h(but)g(y)n(ou)f(will)h(need)g(to)f(pro)n(vide)g(a)g
(suitable)g(m)n(utation)h(op)r(erator)e(for)h(that)g(class.)150
1643 y Fj(10.23.2)113 b(Mem)m(b)s(er)37 b(F)-9 b(unction)37
b(Do)s(cumen)m(tation)150 1844 y Fq(10.23.2.1)92 b(template)p
Fo(<)p Fq(t)m(yp)s(ename)28 b(T)p Fo(>)i Fq(virtual)h(v)m(oid)g
(BEAST::Ev)m(olv)m(er)p Fo(<)f Fq(T)h Fo(>)p Fq(::StoreFitness)611
1943 y(\(\))72 b Fi([inline,)40 b(virtual])150 2144 y
Fp(Stores)21 b(curren)n(t)h(\014tness,)h(o)n(v)n(erload)d(this)i(for)g
(one)g(w)n(a)n(y)f(of)h(resetting)f(individuals')i(in)n(ternal)e
(\014tness)h(scores)f(eac)n(h)150 2244 y(assessmen)n(t)26
b(\(another)h(w)n(a)n(y)g(migh)n(t)g(b)r(e)h(e.g.)150
2390 y(to)f(o)n(v)n(erload)e(Init\).)142 2590 y Fq(Note:)311
2690 y Fp(If)h(y)n(ou)e(are)g(using)g(only)h(one)f(\014tness)h(score)f
(p)r(er)h(individual)g(y)n(ou)f(do)g(not)h(need)g(to)g(call)g
(StoreFitness,)g(the)311 2789 y(GA)k(will)e(simply)h(get)f(the)h
(\014tness)g(from)f(the)h(\014tness)g(function)150 3003
y(The)g(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h
(from)g(the)h(follo)n(wing)e(\014le:)275 3216 y Fk(\210)42
b Fq(geneticalgorithm.h)p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 124 132
124 131 bop -358 70 a Fq(124)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.24)136 b(BEAST::extractor)p Fb(<)p 1790 333
41 4 v 82 w Fl(Iterator)34 b Fb(>)f Fl(Struct)g(T)-11
b(emplate)33 b(Ref-)591 482 y(erence)150 711 y Fp(This)23
b(is)g(a)g(function)h(ob)5 b(ject)23 b(whic)n(h)g(can)f(b)r(e)i(used)f
(for)g(cop)n(ying)f(from)h(an)g(iterator)e(when)j(the)f(n)n(um)n(b)r
(er)g(of)g(input)150 811 y(v)-5 b(alues)27 b(is)h(unkno)n(wn.)150
958 y Fi(#include)40 b Fo(<)p Fi(serialfuncs.h)p Fo(>)150
1105 y Fp(Collab)r(oration)26 b(diagram)g(for)h(BEAST::extractor)p
Fo(<)p 1881 1105 25 4 v 55 w Fp(Iterator)f Fo(>)p Fp(:)1510
1742 y @beginspecial 35 @llx 35 @lly 195 @urx 137 @ury
966 @rwi @setspecial
%%BeginDocument: structBEAST_1_1extractor__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 195 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 195 137
%%PageOrientation: Portrait
gsave
35 35 160 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node453
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
159 8 lineto
159 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
159 8 lineto
159 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
79 11 moveto 149 -0.5 (BEAST::extractor< _Iterator >) alignedtext
end grestore
end grestore

%	Node454
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 53 76 moveto
106 76 lineto
106 91 lineto
53 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
79 79 moveto 43 -0.5 (_Iterator) alignedtext
end grestore
end grestore

%	Node454 -> Node453
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 79 68 moveto
79 54 79 35 79 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 77 66 moveto
79 76 lineto
82 66 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
92 46 moveto 16 -0.5 (iter) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2105 a Fj(Public)36 b(T)m(yp)s(es)275
2291 y Fk(\210)42 b Fp(t)n(yp)r(edef)p 658 2291 V 58
w(Iterator::v)-5 b(alue)p 1202 2291 V 28 w(t)n(yp)r(e)p
1417 2291 29 4 v 62 w Fq(V)d(alueT)m(yp)s(e)150 2571
y Fj(Public)36 b(Mem)m(b)s(er)h(F)-9 b(unctions)275 2757
y Fk(\210)42 b Fq(extractor)29 b Fp(\()p 806 2757 25
4 v 30 w(Iterator)d(&Iter\))275 2865 y Fk(\210)p 363
2865 V 71 w Fp(V)-7 b(alueT)n(yp)r(e)28 b Fq(op)s(erator\(\))g
Fp(\(\))150 3145 y Fj(Public)36 b(A)m(ttributes)275 3331
y Fk(\210)p 363 3331 V 71 w Fp(Iterator)27 b Fq(iter)275
3439 y Fk(\210)p 363 3439 V 71 w Fp(V)-7 b(alueT)n(yp)r(e)28
b Fq(tempV)-8 b(al)150 3719 y Fj(10.24.1)113 b(Detailed)36
b(Description)150 3919 y Fq(template)p Fo(<)p Fq(class)p
810 3919 29 4 v 64 w(Iterator)p Fo(>)c Fq(struct)h(BEAST::extractor)p
Fo(<)p 2402 3919 V 66 w Fq(Iterator)g Fo(>)150 4120 y
Fp(This)23 b(is)g(a)g(function)h(ob)5 b(ject)23 b(whic)n(h)g(can)f(b)r
(e)i(used)f(for)g(cop)n(ying)f(from)h(an)g(iterator)e(when)j(the)f(n)n
(um)n(b)r(er)g(of)g(input)150 4219 y(v)-5 b(alues)27
b(is)h(unkno)n(wn.)150 4366 y(Best)f(constructed)h(using)f(the)h
(extract)f(help)r(er)g(function)142 4562 y Fq(See)k(also:)311
4662 y(extract)150 4875 y Fp(The)d(do)r(cumen)n(tation)f(for)g(this)h
(struct)f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
5088 y Fk(\210)42 b Fq(serialfuncs.h)p -358 5723 4034
4 v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 125 133
125 132 bop 150 70 a Fq(10.25)30 b(BEAST::F)-8 b(eedF)g(orw)m(ardNet)32
b(Class)f(Reference)1881 b(125)p 150 103 4034 4 v 150
333 a Fl(10.25)136 b(BEAST::F)-11 b(eedF)g(orw)l(ardNet)45
b(Class)g(Reference)150 562 y Fp(This)28 b(is)f(an)g(implemen)n(tation)
h(of)g(a)f(simple)h(t)n(w)n(o-la)n(y)n(er)c(feed-forw)n(ard)i(neural)h
(net)n(w)n(ork.)150 709 y Fi(#include)40 b Fo(<)p Fi(feedforwardnet.h)o
Fo(>)150 856 y Fp(Collab)r(oration)26 b(diagram)g(for)h(BEAST::F)-7
b(eedF)g(orw)n(ardNet:)1352 1514 y @beginspecial 35 @llx
35 @lly 271 @urx 147 @ury 1344 @rwi @setspecial
%%BeginDocument: classBEAST_1_1FeedForwardNet__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 271 147
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 271 147
%%PageOrientation: Portrait
gsave
35 35 236 112 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node456
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 36 8 moveto
171 8 lineto
171 23 lineto
36 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 36 8 moveto
171 8 lineto
171 23 lineto
36 23 lineto
closepath
stroke
gsave 10 dict begin
103 11 moveto 125 -0.5 (BEAST::FeedForwardNet) alignedtext
end grestore
end grestore

%	Node457
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 0 86 moveto
99 86 lineto
99 101 lineto
0 101 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
49 89 moveto 89 -0.5 (vector< Neuron >) alignedtext
end grestore
end grestore

%	Node457 -> Node456
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 50 78 moveto
52 67 55 52 63 42 curveto
68 34 77 28 85 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 48 76 moveto
49 86 lineto
53 76 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
99 56 moveto 61 -0.5 (outputLayer) alignedtext
99 45 moveto 63 -0.5 (hiddenLayer) alignedtext
end grestore
end grestore

%	Node458
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 116 86 moveto
200 86 lineto
200 101 lineto
116 101 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
158 89 moveto 74 -0.5 (vector< float >) alignedtext
end grestore
end grestore

%	Node458 -> Node456
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 155 78 moveto
153 67 148 52 140 42 curveto
134 34 126 28 118 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 152 77 moveto
157 86 lineto
157 76 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
189 56 moveto 66 -0.5 (outputValues) alignedtext
189 45 moveto 60 -0.5 (inputValues) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1880 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2069 y Fk(\210)42 b Fq(F)-8 b(eedF)g(orw)m(ardNet)24
b Fp(\(in)n(t)g(inputs,)h(in)n(t)f(outputs,)h(in)n(t)f(hidden=0,)h(b)r
(o)r(ol)e(sig=true,)h(b)r(o)r(ol)f(bias=true\))476 2195
y Fg(The)33 b(c)l(onstructor)j(for)d Ff(F)-7 b(eedF)g(orw)n(ardNet)p
Fg(,)32 b(which)h(c)l(on\014gur)l(es)j(an)d(empty)h(network)g(with)g
(the)f(sp)l(e)l(ci\014e)l(d)476 2286 y(dimensions)28
b(and)g(fe)l(atur)l(es.)275 2487 y Fk(\210)42 b Fp(virtual)27
b Fh(\030)p Fq(F)-8 b(eedF)g(orw)m(ardNet)27 b Fp(\(\))476
2613 y Fg(The)g(destructor)k(for)d Ff(F)-7 b(eedF)g(orw)n(ardNet)p
Fg(,)25 b(do)l(esn)-8 b('t)29 b(do)f(very)g(much)g(at)g(al)t(l.)275
2814 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Init)i Fp(\(in)n(t)g(in,)g(in)n
(t)g(out,)g(in)n(t)f(hid,)h(b)r(o)r(ol)g(sig,)f(b)r(o)r(ol)g(bias\))476
2940 y Fg(Initialises)g(the)h Ff(F)-7 b(eedF)g(orw)n(ardNet)26
b Fg(with)h(the)i(sp)l(e)l(ci\014e)l(d)g(dimensions)f(and)g(fe)l(atur)l
(es.)275 3141 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Randomise)f
Fp(\(\))476 3267 y Fg(Initialises)i(every)i(weight)f(and)g(bias)g(in)f
(the)h(net)g(with)g(a)g(r)l(andom)g(numb)l(er)g(in)g(the)g(r)l(ange)h
([-1,1].)275 3468 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetInput)j
Fp(\(in)n(t)f(n,)f(\015oat)h(f)6 b(\))476 3594 y Fg(Sets)28
b(the)h(curr)l(ent)g(value)f(of)g(the)g(sp)l(e)l(ci\014e)l(d)h(input.)
275 3795 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetInput)j
Fp(\(const)e(std::v)n(ector)p Fo(<)f Fp(\015oat)h Fo(>)h
Fp(&v\))275 3905 y Fk(\210)42 b Fp(\015oat)27 b Fq(GetOutput)g
Fp(\(in)n(t)i(n\))f(const)476 4031 y Fg(R)l(eturns)h(the)f(curr)l(ent)i
(value)e(of)f(the)h(sp)l(e)l(ci\014e)l(d)h(output.)275
4232 y Fk(\210)42 b Fp(const)27 b(std::v)n(ector)p Fo(<)f
Fp(\015oat)h Fo(>)g Fp(&)h Fq(GetOutput)f Fp(\(\))i(const)476
4358 y Fg(R)l(eturns)g(the)f(outputs)i(of)d(the)h(neur)l(al)h(net)f(as)
g(a)g(ve)l(ctor)h(of)e(\015o)l(ats.)275 4559 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(Fire)i Fp(\(\))476 4685 y Fg(This)g(is)g(the)h
(main)f(metho)l(d)h(of)f(the)h(F)-6 b(e)l(e)l(d)30 b(F)-6
b(orwar)l(d)29 b(Network,)h(wher)l(e)f(inputs)g(ar)l(e)h(pr)l(o)l(c)l
(esse)l(d)h(to)e(c)l(alculate)l(d)476 4776 y(the)f(output)h(values.)275
4977 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetCon\014guration)i
Fp(\(const)f(std::v)n(ector)p Fo(<)f Fp(\015oat)i Fo(>)f
Fp(&\))476 5103 y Fg(T)-6 b(akes)31 b(the)g(output)h(of)e
(GetCon\014gur)l(ation)k(and)c(c)l(on\014gur)l(es)j(the)e(weights)h
(and)e(biases)i(of)e(the)h(network)h(ac-)476 5195 y(c)l(or)l(dingly.)
275 5395 y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)26 b
Fp(\015oat)h Fo(>)g Fq(GetCon\014guration)g Fp(\(\))i(const)476
5522 y Fg(R)l(eturns)f(al)t(l)d(the)i(weights)h(and)f(biases)g(in)f
(the)h(network)h(as)f(a)f(ve)l(ctor)i(of)e(\015o)l(ats,)i(ide)l(al)e
(for)g(r)l(epr)l(esenting)j(the)476 5613 y(network)g(in)e(an)h
(evolutionary)h(algorithm.)p 150 5723 V 150 5823 a Fn(Generated)d(on)e
(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 126 134
126 133 bop -358 70 a Fq(126)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
459 a Fk(\210)42 b Fp(std::string)27 b Fq(T)-8 b(oString)27
b Fp(\(\))i(const)476 602 y Fg(Outputs)g(the)f(network's)h(data)g(in)e
(a)h(pr)l(etty)h(format.)275 819 y Fk(\210)42 b Fp(in)n(t)27
b Fq(GetInputs)h Fp(\(\))g(const)476 962 y Fg(R)l(eturns)h(the)f(numb)l
(er)h(of)e(inputs)h(on)g(this)g(network.)275 1180 y Fk(\210)42
b Fp(in)n(t)27 b Fq(GetOutputs)h Fp(\(\))g(const)476
1323 y Fg(R)l(eturns)h(the)f(numb)l(er)h(of)e(outputs)i(on)f(this)g
(network.)275 1540 y Fk(\210)42 b Fp(in)n(t)27 b Fq(GetHidden)g
Fp(\(\))h(const)476 1683 y Fg(R)l(eturns)h(the)f(numb)l(er)h(of)e
(hidden)h(no)l(des)h(on)e(this)h(network.)275 1900 y
Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(IsSigmoid)e Fp(\(\))j(const)476
2043 y Fg(R)l(eturns)h(true)g(if)d(a)i(sigmoid)f(activation)i(function)
f(is)f(in)g(use.)275 2261 y Fk(\210)42 b Fp(b)r(o)r(ol)27
b Fq(IsBiasNo)s(de)f Fp(\(\))i(const)476 2404 y Fg(R)l(eturns)h(true)g
(if)d(a)i(bias)g(term)g(is)f(adde)l(d)i(to)f(e)l(ach)g(no)l(de.)275
2621 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Serialise)h Fp(\(std::ostream)g
(&\))g(const)476 2764 y Fg(Outputs)i(al)t(l)e(the)h(data)h(for)e(the)h
(net)h(to)f(the)g(sp)l(e)l(ci\014e)l(d)h(output)g(str)l(e)l(am.)275
2982 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Unserialise)h
Fp(\(std::istream)g(&\))476 3124 y Fg(R)l(e)l(c)l(onstructs)k(the)d
(network)h(fr)l(om)f(an)f(input)h(str)l(e)l(am.)150 3535
y Fj(Protected)36 b(Mem)m(b)s(er)i(F)-9 b(unctions)275
3748 y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)26 b Fp(\015oat)h
Fo(>)g Fp(&)g Fq(GetInputV)-8 b(alues)28 b Fp(\(\))275
3874 y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)26 b Fp(\015oat)h
Fo(>)g Fp(&)g Fq(GetOutputV)-8 b(alues)28 b Fp(\(\))275
4000 y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)26 b Fq(Neuron)h
Fo(>)g Fp(&)g Fq(GetHiddenLa)m(y)m(er)i Fp(\(\))275 4126
y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)26 b Fq(Neuron)h
Fo(>)g Fp(&)g Fq(GetOutputLa)m(y)m(er)j Fp(\(\))275 4252
y Fk(\210)42 b Fp(\015oat)27 b Fq(Activ)-5 b(ationF)d(unction)28
b Fp(\(\015oat)f(n\))476 4395 y Fg(The)g(squashing)i(function)f(for)g
(the)g(network,)h(either)g(a)e(sigmoid)g(or)h(thr)l(eshold)i(function.)
275 4613 y Fk(\210)42 b Fp(in)n(t)27 b Fq(GetCon\014gurationLength)h
Fp(\(\))g(const)476 4756 y Fg(Calculates)g(the)h(exp)l(e)l(cte)l(d)h
(length)e(of)f(the)i(c)l(on\014gur)l(ation)g(data)g(for)e(the)i
(network.)150 5166 y Fj(Static)36 b(Protected)h(Mem)m(b)s(er)g(F)-9
b(unctions)275 5379 y Fk(\210)42 b Fp(\015oat)27 b Fq(RandomNum)d
Fp(\(\))476 5522 y Fg(R)l(eturns)29 b(a)f(numb)l(er)g(b)l(etwe)l(en)h
(-1)f(and)g(1.)p -358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 127 135
127 134 bop 150 70 a Fq(10.25)30 b(BEAST::F)-8 b(eedF)g(orw)m(ardNet)32
b(Class)f(Reference)1881 b(127)p 150 103 4034 4 v 150
333 a Fj(10.25.1)113 b(Detailed)36 b(Description)150
533 y Fp(This)28 b(is)f(an)g(implemen)n(tation)h(of)g(a)f(simple)h(t)n
(w)n(o-la)n(y)n(er)c(feed-forw)n(ard)i(neural)h(net)n(w)n(ork.)150
680 y(Y)-7 b(ou)29 b(ma)n(y)f(sp)r(ecify)g(the)h(n)n(um)n(b)r(er)g(of)f
(inputs,)i(the)f(n)n(um)n(b)r(er)f(of)h(no)r(des)f(in)h(the)g(output)g
(la)n(y)n(er)e(and)h(the)h(n)n(um)n(b)r(er)150 780 y(of)39
b(no)r(des)h(in)f(the)h(hidden)g(la)n(y)n(er.)71 b(Ev)n(ery)37
b(no)r(de)j(has)f(an)g(asso)r(ciated)f(bias)h(term,)j(although)d(this)h
(can)f(b)r(e)150 879 y(switc)n(hed)31 b(o\013.)49 b(The)32
b(default)g(activ)-5 b(ation)31 b(function)h(is)f(sigmoid,)h(although)f
(it)h(ma)n(y)f(b)r(e)h(swtic)n(hed)f(o\013)h(and)f(is)150
979 y(then)26 b(replaced)f(b)n(y)g(a)g(simple)g(threshold)g(function.)
37 b(It)26 b(is)f(also)g(p)r(ossible)g(to)g(con\014gure)f(a)h
Fq(F)-8 b(eedF)g(orw)m(ardNet)150 1079 y Fp(with)31 b(a)f(hidden)g(la)n
(y)n(er)f(size)h(of)g(0,)h(in)f(whic)n(h)g(case)g(the)g(net)h(b)r
(ecomes)f(a)g(p)r(erceptron,)g(b)n(ypassing)f(the)i(hidden)150
1178 y(la)n(y)n(er)26 b(en)n(tirely)-7 b(.)142 1370 y
Fq(See)31 b(also:)311 1470 y(DynamicalNet)150 1748 y
Fj(10.25.2)113 b(Constructor)36 b(&)i(Destructor)e(Do)s(cumen)m(tation)
150 1949 y Fq(10.25.2.1)92 b(BEAST::F)-8 b(eedF)g(orw)m(ardNet::F)g
(eedF)g(orw)m(ardNet)33 b(\(in)m(t)f Fe(in)p Fq(,)g(in)m(t)h
Fe(out)p Fq(,)f(in)m(t)h Fe(hid)f Fq(=)h(0,)611 2049
y(b)s(o)s(ol)e Fe(sig)h Fq(=)g(true,)f(b)s(o)s(ol)f Fe(bias)i
Fq(=)h(true\))150 2249 y Fp(The)j(constructor)f(for)g
Fq(F)-8 b(eedF)g(orw)m(ardNet)p Fp(,)39 b(whic)n(h)d(con\014gures)e(an)
i(empt)n(y)g(net)n(w)n(ork)f(with)h(the)h(sp)r(eci\014ed)150
2349 y(dimensions)27 b(and)h(features.)142 2539 y Fq(P)m(arameters:)311
2639 y Fe(in)41 b Fp(The)28 b(n)n(um)n(b)r(er)f(of)h(inputs.)311
2770 y Fe(out)42 b Fp(The)27 b(n)n(um)n(b)r(er)g(of)h(outputs.)311
2901 y Fe(hig)42 b Fp(The)27 b(size)h(of)f(the)h(hidden)g(la)n(y)n(er.)
35 b(If)28 b(hid)g(is)g(0)f(then)h(the)g(FFN)h(acts)e(as)g(a)g(p)r
(erceptron.)311 3032 y Fe(sig)42 b Fp(Whether)28 b(or)f(not)g(the)h
(net)g(will)g(use)f(a)h(sigmoid)f(activ)-5 b(ation)27
b(function,)h(defaults)g(to)f(true.)311 3163 y Fe(bias)42
b Fp(Whether)28 b(of)g(not)f(eac)n(h)g(no)r(de)h(has)f(a)g(bias)g(v)-5
b(alue,)27 b(defaults)h(to)g(true.)150 3441 y Fj(10.25.3)113
b(Mem)m(b)s(er)37 b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150
3642 y Fq(10.25.3.1)92 b(\015oat)33 b(BEAST::F)-8 b(eedF)g(orw)m
(ardNet::Activ)j(ationF)d(unction)31 b(\(\015oat)h Fe(n)p
Fq(\))71 b Fi([protected])150 3842 y Fp(The)28 b(squashing)e(function)i
(for)f(the)h(net)n(w)n(ork,)f(either)g(a)g(sigmoid)g(or)g(threshold)g
(function.)142 4049 y Fq(P)m(arameters:)311 4149 y Fe(n)42
b Fp(The)28 b(input)g(v)-5 b(alue.)142 4356 y Fq(Returns:)311
4455 y Fp(The)28 b(output)g(v)-5 b(alue.)150 4796 y Fq(10.25.3.2)92
b(v)m(oid)32 b(BEAST::F)-8 b(eedF)g(orw)m(ardNet::Fire)31
b(\(\))150 4996 y Fp(This)d(is)h(the)g(main)f(metho)r(d)h(of)g(the)f(F)
-7 b(eed)29 b(F)-7 b(orw)n(ard)27 b(Net)n(w)n(ork,)g(where)h(inputs)h
(are)f(pro)r(cessed)f(to)i(calculated)150 5096 y(the)f(output)g(v)-5
b(alues.)150 5243 y(The)28 b(Fire)f(metho)r(d)h(assumes)f(that)h
(inputs)g(ha)n(v)n(e)e(previously)h(b)r(een)h(set)f(using)g(SetInput.)
142 5435 y Fq(See)k(also:)311 5534 y(F)-8 b(eedF)g(orw)m
(ardNet::SetInput)p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 128 136
128 135 bop -358 70 a Fq(128)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a(10.25.3.3)92 b(v)m(ector)p Fo(<)33 b Fq(\015oat)f
Fo(>)g Fq(BEAST::F)-8 b(eedF)g(orw)m(ardNet::GetCon\014guration)30
b(\(\))i(const)150 536 y Fp(Returns)d(all)g(the)h(w)n(eigh)n(ts)e(and)h
(biases)f(in)i(the)f(net)n(w)n(ork)f(as)h(a)f(v)n(ector)g(of)h
(\015oats,)g(ideal)g(for)g(represen)n(ting)f(the)150
635 y(net)n(w)n(ork)e(in)i(an)f(ev)n(olutionary)f(algorithm.)150
782 y(No)41 b(information)f(ab)r(out)h(the)g(dimensions)g(of)g(the)g
(net)n(w)n(ork)f(is)h(returned)f(b)n(y)h(this)g(metho)r(d)h(-)f(to)g
(return)150 882 y(complete)28 b(con\014guration)e(data)h(use)g
(Serialise.)142 1082 y Fq(Returns:)311 1182 y Fp(A)h(v)n(ector)f(con)n
(taining)f(the)i(w)n(eigh)n(ts)f(and)g(biases)g(of)h(the)g(net)n(w)n
(ork.)142 1403 y Fq(See)j(also:)311 1502 y(F)-8 b(eedF)g(orw)m
(ardNet::SetCon\014guration)311 1602 y(F)g(eedF)g(orw)m
(ardNet::Serialise)150 1968 y(10.25.3.4)92 b(in)m(t)38
b(BEAST::F)-8 b(eedF)g(orw)m(ardNet::GetCon\014gurationLength)36
b(\(\))h(const)611 2068 y Fi([protected])150 2271 y Fp(Calculates)27
b(the)h(exp)r(ected)g(length)f(of)h(the)g(con\014guration)e(data)h(for)
g(the)h(net)n(w)n(ork.)142 2491 y Fq(Returns:)311 2590
y Fp(The)g(con\014guration)e(length.)142 2811 y Fq(See)31
b(also:)311 2911 y(F)-8 b(eedF)g(orw)m(ardNet::GetCon\014guration)150
3277 y(10.25.3.5)92 b(const)33 b(std::v)m(ector)p Fo(<)p
Fq(\015oat)p Fo(>)p Fq(&)e(BEAST::F)-8 b(eedF)g(orw)m
(ardNet::GetOutput)31 b(\(\))i(const)611 3377 y Fi([inline])150
3580 y Fp(Returns)27 b(the)h(outputs)g(of)g(the)g(neural)f(net)h(as)f
(a)g(v)n(ector)f(of)i(\015oats.)150 3855 y Fq(10.25.3.6)92
b(\015oat)33 b(BEAST::F)-8 b(eedF)g(orw)m(ardNet::GetOutput)30
b(\(in)m(t)i Fe(n)p Fq(\))g(const)71 b Fi([inline])150
4057 y Fp(Returns)27 b(the)h(curren)n(t)f(v)-5 b(alue)28
b(of)f(the)h(sp)r(eci\014ed)g(output.)142 4278 y Fq(P)m(arameters:)311
4377 y Fe(n)42 b Fp(The)28 b(n)n(um)n(b)r(er)f(of)g(the)h(output)h(to)e
(return.)142 4598 y Fq(W)-8 b(arning:)311 4697 y Fp(This)38
b(metho)r(d)h(do)r(es)e(not)h(c)n(hec)n(k)f(if)h(the)h(output)f(sp)r
(eci\014ed)g(exists,)i(if)e(y)n(ou)g(are)e(unsure,)k(c)n(hec)n(k)d
(using)311 4797 y(GetOutputs)29 b(\014rst.)150 5163 y
Fq(10.25.3.7)92 b(v)m(oid)32 b(BEAST::F)-8 b(eedF)g(orw)m(ardNet::Init)
29 b(\(in)m(t)j Fe(in)p Fq(,)e(in)m(t)h Fe(out)p Fq(,)f(in)m(t)h
Fe(hid)p Fq(,)f(b)s(o)s(ol)g Fe(sig)p Fq(,)h(b)s(o)s(ol)611
5263 y Fe(bias)p Fq(\))150 5466 y Fp(Initialises)c(the)h
Fq(F)-8 b(eedF)g(orw)m(ardNet)28 b Fp(with)h(the)e(sp)r(eci\014ed)h
(dimensions)g(and)f(features.)150 5613 y(After)h(this)g(metho)r(d)g(is)
f(called,)h(all)f(w)n(eigh)n(ts)g(in)h(the)g(net)g(will)f(b)r(e)h(set)g
(to)f(0.)p -358 5723 V -192 5823 a Fn(Generated)f(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 129 137
129 136 bop 150 70 a Fq(10.25)30 b(BEAST::F)-8 b(eedF)g(orw)m(ardNet)32
b(Class)f(Reference)1881 b(129)p 150 103 4034 4 v 142
307 a(P)m(arameters:)311 406 y Fe(in)41 b Fp(The)28 b(n)n(um)n(b)r(er)f
(of)h(inputs.)311 539 y Fe(out)42 b Fp(The)27 b(n)n(um)n(b)r(er)g(of)h
(outputs.)311 672 y Fe(hig)42 b Fp(The)27 b(size)h(of)f(the)h(hidden)g
(la)n(y)n(er.)35 b(If)28 b(hid)g(is)g(0)f(then)h(the)g(FFN)h(acts)e(as)
g(a)g(p)r(erceptron.)311 805 y Fe(sig)42 b Fp(Whether)28
b(or)f(not)g(the)h(net)g(will)g(use)f(a)h(sigmoid)f(activ)-5
b(ation)27 b(function,)h(defaults)g(to)f(true.)311 938
y Fe(bias)42 b Fp(Whether)28 b(of)g(not)f(eac)n(h)g(no)r(de)h(has)f(a)g
(bias)g(v)-5 b(alue,)27 b(defaults)h(to)g(true.)150 1268
y Fq(10.25.3.8)92 b(v)m(oid)32 b(BEAST::F)-8 b(eedF)g(orw)m
(ardNet::Serialise)30 b(\(std::ostream)f(&)j Fe(out)p
Fq(\))g(const)150 1469 y Fp(Outputs)c(all)f(the)h(data)f(for)g(the)h
(net)g(to)g(the)g(sp)r(eci\014ed)g(output)g(stream.)142
1681 y Fq(P)m(arameters:)311 1780 y Fe(out)42 b Fp(The)27
b(output)h(stream.)150 2127 y Fq(10.25.3.9)92 b(v)m(oid)35
b(BEAST::F)-8 b(eedF)g(orw)m(ardNet::SetCon\014guration)33
b(\(const)i(std::v)m(ector)p Fo(<)611 2226 y Fq(\015oat)e
Fo(>)e Fq(&)h Fe(c)-5 b(on\014g)p Fq(\))150 2427 y Fp(T)e(ak)n(es)31
b(the)j(output)f(of)f(GetCon\014guration)g(and)g(con\014gures)g(the)h
(w)n(eigh)n(ts)f(and)g(biases)g(of)h(the)g(net)n(w)n(ork)e(ac-)150
2527 y(cordingly)-7 b(.)150 2673 y(Note)38 b(that)g(since)g(no)g(data)f
(ab)r(out)h(the)g(dimensions)g(of)g(the)g(net)n(w)n(ork)e(is)i(stored)f
(in)h(the)h(output)f(of)g(Get-)150 2773 y(Con\014guration,)c(this)g
(metho)r(d)g(assumes)e(that)i(the)g(net)n(w)n(ork)e(has)i(already)e(b)r
(een)i(set)f(up)h(with)g(dimensions)150 2873 y(matc)n(hing)27
b(those)g(of)h(the)g(input)g(con\014guration.)36 b(A)27
b(v)n(ector)g(con)n(taining)f(w)n(eigh)n(ts)h(and)g(biases.)142
3069 y Fq(See)k(also:)311 3168 y(F)-8 b(eedF)g(orw)m
(ardNet::GetCon\014guration)311 3268 y(F)g(eedF)g(orw)m
(ardNet::Unserialise)150 3598 y(10.25.3.10)92 b(v)m(oid)32
b(BEAST::F)-8 b(eedF)g(orw)m(ardNet::SetInput)31 b(\(in)m(t)h
Fe(n)p Fq(,)f(\015oat)i Fe(f)p Fq(\))71 b Fi([inline])150
3798 y Fp(Sets)28 b(the)g(curren)n(t)e(v)-5 b(alue)28
b(of)f(the)h(sp)r(eci\014ed)g(input.)142 4010 y Fq(P)m(arameters:)311
4110 y Fe(n)42 b Fp(The)28 b(n)n(um)n(b)r(er)f(of)g(the)h(input)h(to)e
(set.)311 4243 y Fe(f)42 b Fp(The)28 b(v)-5 b(alue)27
b(to)h(set)f(it)h(to.)142 4456 y Fq(W)-8 b(arning:)311
4555 y Fp(This)29 b(metho)r(d)h(do)r(es)e(not)h(c)n(hec)n(k)f(if)h(the)
g(input)h(sp)r(eci\014ed)f(exists,)g(if)g(y)n(ou)f(are)g(unsure,)h(c)n
(hec)n(k)f(using)g(Get-)311 4655 y(Inputs)g(\014rst.)150
5001 y Fq(10.25.3.11)92 b(string)31 b(BEAST::F)-8 b(eedF)g(orw)m
(ardNet::T)g(oString)31 b(\(\))h(const)150 5202 y Fp(Outputs)c(the)g
(net)n(w)n(ork's)e(data)h(in)h(a)f(prett)n(y)g(format.)142
5414 y Fq(Returns:)311 5513 y Fp(An)h(STL)g(string.)p
150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 130 138
130 137 bop -358 70 a Fq(130)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a(10.25.3.12)92 b(v)m(oid)32 b(BEAST::F)-8 b(eedF)g(orw)m
(ardNet::Unserialise)29 b(\(std::istream)h(&)i Fe(in)p
Fq(\))150 533 y Fp(Reconstructs)27 b(the)h(net)n(w)n(ork)e(from)h(an)h
(input)g(stream.)142 745 y Fq(P)m(arameters:)311 844
y Fe(in)41 b Fp(The)28 b(input)g(stream.)150 1074 y(The)g(do)r(cumen)n
(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)
n(wing)e(\014les:)275 1288 y Fk(\210)42 b Fq(feedforw)m(ardnet.h)275
1396 y Fk(\210)g Fp(feedforw)n(ardnet.cc)p -358 5723
V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 131 139
131 138 bop 150 70 a Fq(10.26)30 b(BEAST::F)-8 b(eedF)g(orw)m
(ardNet::Neuron)31 b(Struct)i(Reference)1471 b(131)p
150 103 4034 4 v 150 333 a Fl(10.26)136 b(BEAST::F)-11
b(eedF)g(orw)l(ardNet::Neuron)46 b(Struct)e(Reference)150
571 y Fp(This)24 b(mem)n(b)r(er)h(struct)f(simply)h(encapsulates)e(the)
i(w)n(eigh)n(ted)f(sum)g(function)h(whic)n(h)f(has)g(to)h(b)r(e)f(p)r
(erformed)g(on)150 671 y(the)k(w)n(eigh)n(ts)f(of)g(eac)n(h)g(no)r(de)h
(when)f(the)h(net)g(\014res.)150 818 y Fi(#include)40
b Fo(<)p Fi(feedforwardnet.h)o Fo(>)150 965 y Fp(Collab)r(oration)26
b(diagram)g(for)h(BEAST::F)-7 b(eedF)g(orw)n(ardNet::Neuron:)1472
1615 y @beginspecial 35 @llx 35 @lly 213 @urx 137 @ury
1056 @rwi @setspecial
%%BeginDocument: structBEAST_1_1FeedForwardNet_1_1Neuron__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 213 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 213 137
%%PageOrientation: Portrait
gsave
35 35 178 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node463
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
176 8 lineto
176 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
176 8 lineto
176 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
88 11 moveto 166 -0.5 (BEAST::FeedForwardNet::Neuron) alignedtext
end grestore
end grestore

%	Node464
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 46 76 moveto
130 76 lineto
130 91 lineto
46 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
88 79 moveto 74 -0.5 (vector< float >) alignedtext
end grestore
end grestore

%	Node464 -> Node463
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 88 68 moveto
88 54 88 35 88 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 86 66 moveto
88 76 lineto
91 66 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
112 46 moveto 37 -0.5 (weights) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2026 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2245 y Fk(\210)42 b Fq(Neuron)27 b Fp(\(in)n(t)h(n\))476
2392 y Fg(Constructor,)i(simply)d(sp)l(e)l(ci\014es)i(the)f(numb)l(er)h
(of)e(weights)h(for)g(the)g Ff(Neuron)p Fg(.)275 2613
y Fk(\210)42 b Fq(Neuron)27 b Fp(\(std::v)n(ector)p Fo(<)f
Fp(\015oat)h Fo(>)h Fp(w\))476 2760 y Fg(Constructor,)i(initialises)c
(the)j(neur)l(on)g(with)e(a)h(ve)l(ctor)h(c)l(ontaining)g(its)f
(weights.)275 2982 y Fk(\210)42 b Fp(\015oat)27 b Fq(W)-8
b(eigh)m(tedSum)25 b Fp(\(std::v)n(ector)p Fo(<)i Fp(\015oat)g
Fo(>)g Fp(&\))g(const)476 3129 y Fg(R)l(eturns)32 b(the)f(sum)f(of)g(e)
l(ach)h(value)f(of)g(the)h(input)g(ve)l(ctor,)h(multiplie)l(d)e(by)g
(the)h(Neur)l(on)-8 b('s)32 b(r)l(esp)l(e)l(ctive)g(weight)476
3220 y(values.)150 3639 y Fj(Public)k(A)m(ttributes)275
3858 y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)26 b Fp(\015oat)h
Fo(>)g Fq(w)m(eigh)m(ts)476 4005 y Fg(The)g(weight)i(values)f(for)g
(this)g(neur)l(on)g(\(including)g(bias\).)150 4424 y
Fj(10.26.1)113 b(Detailed)36 b(Description)150 4634 y
Fp(This)24 b(mem)n(b)r(er)h(struct)f(simply)h(encapsulates)e(the)i(w)n
(eigh)n(ted)f(sum)g(function)h(whic)n(h)f(has)g(to)h(b)r(e)f(p)r
(erformed)g(on)150 4734 y(the)k(w)n(eigh)n(ts)f(of)g(eac)n(h)g(no)r(de)
h(when)f(the)h(net)g(\014res.)150 4880 y(Note)k(that)g
Fq(Neuron)f Fp(is)h(an)f(inaccurate)g(term)h(for)f(this)h(class)f
(since)g(it)h(do)r(esn't)g(actually)f(do)h(ev)n(erything)e(a)150
4980 y(neuron)g(in)g(a)g("real")e(net)j(migh)n(t)f(-)g(biasing)g(and)g
(squashing)f(\(via)h(the)h(activ)-5 b(ation)30 b(function\))h(o)r(ccur)
e(outside)150 5080 y Fq(Neuron)p Fp(,)e(in)h(the)g(net's)g(main)g
(\014ring)f(function.)37 b(This)28 b(has)f(b)r(een)h(done)f(for)g
(optimisation.)142 5298 y Fq(See)k(also:)311 5397 y(Fire)311
5497 y(Activ)-5 b(ationF)d(unction)311 5597 y(DynamicalNet::Neuron)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 132 140
132 139 bop -358 70 a Fq(132)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fj(10.26.2)113 b(Mem)m(b)s(er)37 b(F)-9 b(unction)37
b(Do)s(cumen)m(tation)150 533 y Fq(10.26.2.1)92 b(\015oat)31
b(BEAST::F)-8 b(eedF)g(orw)m(ardNet::Neuron::W)g(eigh)m(tedSum)25
b(\(std::v)m(ector)p Fo(<)30 b Fq(\015oat)611 633 y Fo(>)i
Fq(&)g Fe(input)p Fq(\))f(const)150 833 y Fp(Returns)f(the)h(sum)f(of)h
(eac)n(h)e(v)-5 b(alue)30 b(of)g(the)h(input)g(v)n(ector,)f(m)n
(ultiplied)h(b)n(y)f(the)h(Neuron's)e(resp)r(ectiv)n(e)h(w)n(eigh)n(t)
150 933 y(v)-5 b(alues.)142 1128 y Fq(P)m(arameters:)311
1228 y Fe(input)41 b Fp(A)28 b(v)n(ector)e(of)i(\015oats.)150
1458 y(The)g(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g
(generated)g(from)g(the)h(follo)n(wing)e(\014les:)275
1671 y Fk(\210)42 b Fq(feedforw)m(ardnet.h)275 1779 y
Fk(\210)g Fp(feedforw)n(ardnet.cc)p -358 5723 V -192
5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 133 141
133 140 bop 150 70 a Fq(10.27)30 b(BEAST::FFNAnimat)g(Class)h
(Reference)2064 b(133)p 150 103 4034 4 v 150 333 a Fl(10.27)136
b(BEAST::FFNAnimat)44 b(Class)i(Reference)150 563 y Fp(An)25
b Fq(Animat)f Fp(with)h(a)g(built-in)g(feed-forw)n(ard)e(net)n(w)n(ork)
g(whic)n(h)i(is)g(automatically)f(con\014gured)f(dep)r(ending)i(on)150
663 y(the)j(Animat's)g(sensor)e(and)i(con)n(trol)e(con\014guration.)150
810 y Fi(#include)40 b Fo(<)p Fi(neuralanimat.h)p Fo(>)150
957 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::FFNAnimat:)1564
2343 y @beginspecial 35 @llx 35 @lly 169 @urx 277 @ury
836 @rwi @setspecial
%%BeginDocument: classBEAST_1_1FFNAnimat__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 169 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 169 277
%%PageOrientation: Portrait
gsave
35 35 134 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node465
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 10 60 moveto
122 60 lineto
122 75 lineto
10 75 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 10 60 moveto
122 60 lineto
122 75 lineto
10 75 lineto
closepath
stroke
gsave 10 dict begin
66 63 moveto 102 -0.5 (BEAST::FFNAnimat) alignedtext
end grestore
end grestore

%	Node469
[ /Rect [ 0 9 132 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvoFFNAnimat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 8 moveto
132 8 lineto
132 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
66 11 moveto 122 -0.5 (BEAST::EvoFFNAnimat) alignedtext
end grestore
end grestore

%	Node465 -> Node469
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 51 moveto
66 42 66 31 66 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 64 50 moveto
66 60 lineto
69 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node466
[ /Rect [ 22 113 110 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Animat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 22 112 moveto
111 112 lineto
111 127 lineto
22 127 lineto
closepath
stroke
gsave 10 dict begin
66 115 moveto 79 -0.5 (BEAST::Animat) alignedtext
end grestore
end grestore

%	Node466 -> Node465
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 103 moveto
66 94 66 83 66 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 64 102 moveto
66 112 lineto
69 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node467
[ /Rect [ 9 165 123 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 9 164 moveto
124 164 lineto
124 179 lineto
9 179 lineto
closepath
stroke
gsave 10 dict begin
66 167 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node467 -> Node466
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 155 moveto
66 146 66 135 66 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 64 154 moveto
66 164 lineto
69 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node468
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 17 216 moveto
116 216 lineto
116 231 lineto
17 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
66 219 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node468 -> Node467
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 207 moveto
66 198 66 187 66 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 64 206 moveto
66 216 lineto
69 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2676 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::FFNAnimat:)804 3602 y @beginspecial 35 @llx 35
@lly 535 @urx 215 @ury 2660 @rwi @setspecial
%%BeginDocument: classBEAST_1_1FFNAnimat__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 535 215
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 535 215
%%PageOrientation: Portrait
gsave
35 35 500 180 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node470
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 260 86 moveto
372 86 lineto
372 101 lineto
260 101 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 260 86 moveto
372 86 lineto
372 101 lineto
260 101 lineto
closepath
stroke
gsave 10 dict begin
316 89 moveto 102 -0.5 (BEAST::FFNAnimat) alignedtext
end grestore
end grestore

%	Node495
[ /Rect [ 0 9 498 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1property.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 8 moveto
498 8 lineto
498 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
249 11 moveto 488 -0.5 (BEAST::property< FFNAnimat, FeedForwardNet, FeedForwardNet &, const FeedForwardNet & >) alignedtext
end grestore
end grestore

%	Node470 -> Node495
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 316 78 moveto
315 67 312 52 304 42 curveto
297 33 287 27 278 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 314 76 moveto
316 86 lineto
319 76 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
329 56 moveto 21 -0.5 (_Set) alignedtext
329 45 moveto 19 -0.5 (that) alignedtext
end grestore
end grestore

%	Node471
[ /Rect [ 288 155 376 169 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Animat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 288 154 moveto
377 154 lineto
377 169 lineto
288 169 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
332 157 moveto 79 -0.5 (BEAST::Animat) alignedtext
end grestore
end grestore

%	Node471 -> Node470
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 328 146 moveto
325 132 320 113 318 102 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 325 145 moveto
330 154 lineto
330 144 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node495 -> Node470
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 290 86 moveto
280 82 270 76 263 68 curveto
254 58 251 43 249 32 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 252 34 moveto
249 24 lineto
247 34 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
281 51 moveto 27 -0.5 (Brain) alignedtext
end grestore
end grestore

%	Node496
[ /Rect [ 136 155 270 169 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1FeedForwardNet.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 136 154 moveto
271 154 lineto
271 169 lineto
136 169 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
203 157 moveto 125 -0.5 (BEAST::FeedForwardNet) alignedtext
end grestore
end grestore

%	Node496 -> Node470
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 219 149 moveto
231 140 247 129 263 120 curveto
274 113 288 106 298 102 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 219 146 moveto
213 154 lineto
222 150 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
290 124 moveto 44 -0.5 (myBrain) alignedtext
end grestore
end grestore

%	Node496 -> Node495
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 205 147 moveto
206 132 210 107 217 86 curveto
224 62 238 36 245 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 203 144 moveto
204 154 lineto
208 144 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
234 90 moveto 24 -0.5 (_Get) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3972 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 4163 y Fk(\210)42 b Fq(FFNAnimat)26 b
Fp(\(\))476 4291 y Fg(Constructor.)275 4493 y Fk(\210)42
b Fp(virtual)27 b Fh(\030)p Fq(FFNAnimat)f Fp(\(\))476
4621 y Fg(Destructor)k(for)d Ff(FFNAnimat)p Fg(,)g(if)g(the)h
Ff(F)-7 b(eedF)g(orw)n(ardNet)26 b Fg(has)i(b)l(e)l(en)h(initialise)l
(d,)d(it)h(is)h(delete)l(d)h(her)l(e.)275 4824 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(InitFFN)i Fp(\(in)n(t)g(hidden=-1,)f(in)n(t)h
(inputs=-1,)f(in)n(t)h(outputs=-1\))476 4952 y Fg(This)f(metho)l(d)i
(is)e(r)l(esp)l(onsible)i(for)f(initialising)e(the)i(FFNA)n(nimat's)g
(neur)l(al)g(network.)275 5154 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(Con)m(trol)i Fp(\(\))476 5282 y Fg(The)f(FFNA)n(nimat's)
h(neur)l(al)g(net)h(is)e(linke)l(d)h(to)g(its)f(sensors)j(and)e(c)l
(ontr)l(ols)h(her)l(e.)275 5485 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(Serialise)h Fp(\(std::ostream)g(&\))g(const)476
5613 y Fg(Outputs)i(the)f(FFNA)n(nimat's)g(data)g(to)g(a)g(str)l(e)l
(am.)p 150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 134 142
134 141 bop -358 70 a Fq(134)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
440 a Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Unserialise)h
Fp(\(std::istream)g(&\))476 563 y Fg(Inputs)h(the)g(FFNA)n(nimat's)g
(data)h(fr)l(om)e(a)h(str)l(e)l(am.)275 761 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetBrain)i Fp(\()p Fq(F)-8 b(eedF)g(orw)m(ardNet)
29 b Fp(&\))275 868 y Fk(\210)42 b Fp(const)27 b Fq(F)-8
b(eedF)g(orw)m(ardNet)28 b Fp(&)f Fq(GetBrain)h Fp(\(\))g(const)275
975 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(IsOwnBrain)h
Fp(\(\))g(const)150 1254 y Fj(Public)36 b(A)m(ttributes)275
1439 y Fk(\210)42 b Fq(prop)s(ert)m(y)p Fo(<)69 b Fq(FFNAnimat)p
Fp(,)78 b Fq(F)-8 b(eedF)g(orw)m(ardNet)p Fp(,)81 b Fq(F)-8
b(eedF)g(orw)m(ardNet)69 b Fp(&,)80 b(const)68 b Fq(F)-8
b(eed-)358 1539 y(F)g(orw)m(ardNet)28 b Fp(&)f Fo(>)h
Fq(Brain)150 1817 y Fj(Protected)36 b(Mem)m(b)s(er)i(F)-9
b(unctions)275 2003 y Fk(\210)42 b Fq(F)-8 b(eedF)g(orw)m(ardNet)28
b Fp(&)f Fq(GetBrain)h Fp(\(\))150 2281 y Fj(10.27.1)113
b(Detailed)36 b(Description)150 2482 y Fp(An)25 b Fq(Animat)f
Fp(with)h(a)g(built-in)g(feed-forw)n(ard)e(net)n(w)n(ork)g(whic)n(h)i
(is)g(automatically)f(con\014gured)f(dep)r(ending)i(on)150
2582 y(the)j(Animat's)g(sensor)e(and)i(con)n(trol)e(con\014guration.)
142 2789 y Fq(See)31 b(also:)311 2888 y(Ev)m(oFFNAnimat)c
Fp(for)g(an)g(ev)n(olv)-5 b(able)27 b(v)n(ersion.)150
3167 y Fj(10.27.2)113 b(Mem)m(b)s(er)37 b(F)-9 b(unction)37
b(Do)s(cumen)m(tation)150 3367 y Fq(10.27.2.1)92 b(v)m(oid)32
b(BEAST::FFNAnimat::Con)m(trol)d(\(\))71 b Fi([virtual])150
3568 y Fp(The)28 b(FFNAnimat's)g(neural)f(net)h(is)g(link)n(ed)f(to)h
(its)f(sensors)f(and)i(con)n(trols)e(here.)150 3715 y(All)h(sensor)f
(inputs)h(are)f(fed)i(to)e(the)i(neural)e(net)n(w)n(ork)f(and)i(all)g
(con)n(trol)e(outputs)i(are)f(tak)n(en)h(from)f(the)h(ANN's)150
3814 y(output)h(v)-5 b(alues.)142 4006 y Fq(W)d(arning:)311
4105 y Fp(It)34 b(is)g(assumed)e(that)i(there)f(are)g(at)g(least)g(as)g
(man)n(y)g(input)h(no)r(des)g(as)e(sensors)g(and)h(at)h(least)f(as)g
(man)n(y)311 4205 y(output)j(no)r(des)f(as)g(con)n(trols.)57
b(If)36 b(y)n(our)e Fq(Animat)g Fp(is)h(not)g(set)g(up)h(in)f(this)h(w)
n(a)n(y)e(y)n(our)f(needs)i(are)g(lik)n(ely)311 4305
y(greater)26 b(than)i(can)f(b)r(e)h(pro)n(vided)f(for)g(b)n(y)g
Fq(FFNAnimat)p Fp(.)150 4514 y(Reimplemen)n(ted)h(from)f
Fq(BEAST::Animat)f Fp(\(p.)15 b(71\).)150 4776 y Fq(10.27.2.2)92
b(v)m(oid)32 b(BEAST::FFNAnimat::InitFFN)d(\(in)m(t)j
Fe(hidden)g Fq(=)h(-1,)e(in)m(t)h Fe(inputs)f Fq(=)h(-1,)f(in)m(t)611
4875 y Fe(outputs)h Fq(=)g(-1\))150 5076 y Fp(This)c(metho)r(d)g(is)f
(resp)r(onsible)g(for)g(initialising)g(the)h(FFNAnimat's)h(neural)e
(net)n(w)n(ork.)150 5223 y(It)32 b(should)g(usually)g(b)r(e)g(called)g
(in)g(the)h(constructor)d(of)i(a)g(deriv)n(ed)f(class,)h(after)g(the)g
(sensors)f(ha)n(v)n(e)g(b)r(een)h(set)150 5322 y(up.)37
b(Also)27 b(randomises)g(the)h(neural)e(net)n(w)n(ork)h(for)g(use)g(in)
h(ev)n(olutionary)e(sim)n(ulations.)142 5513 y Fq(P)m(arameters:)311
5613 y Fe(hidden)42 b Fp(The)27 b(n)n(um)n(b)r(er)h(of)f(hidden)i(no)r
(des,)e(defaults)h(to)f(b)r(e)h(the)g(same)f(as)g(the)h(n)n(um)n(b)r
(er)f(of)h(inputs.)p -358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f
(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 135 143
135 142 bop 150 70 a Fq(10.27)30 b(BEAST::FFNAnimat)g(Class)h
(Reference)2064 b(135)p 150 103 4034 4 v 311 333 a Fe(inputs)41
b Fp(The)f(n)n(um)n(b)r(er)g(of)g(inputs,)k(defaults)c(to)g(b)r(e)g
(the)g(same)g(as)f(the)h(n)n(um)n(b)r(er)g(of)g(sensors)e(on)i(the)494
432 y Fq(Animat)p Fp(.)311 565 y Fe(outputs)h Fp(The)32
b(n)n(um)n(b)r(er)f(of)h(outputs,)g(defaults)g(to)g(b)r(e)f(the)h(same)
f(as)g(the)h(n)n(um)n(b)r(er)f(of)h(con)n(trols)d(on)j(the)494
665 y Fq(Animat)p Fp(.)150 994 y Fq(10.27.2.3)92 b(v)m(oid)38
b(BEAST::FFNAnimat::Serialise)33 b(\(std::ostream)i(&)i
Fe(out)p Fq(\))g(const)611 1094 y Fi([virtual])150 1294
y Fp(Outputs)28 b(the)g(FFNAnimat's)g(data)g(to)f(a)g(stream.)142
1506 y Fq(P)m(arameters:)311 1606 y Fe(out)42 b Fp(A)27
b(reference)g(to)h(an)f(output)h(stream.)150 1836 y(Reimplemen)n(ted)g
(from)f Fq(BEAST::Animat)f Fp(\(p.)15 b(73\).)150 2099
y Fq(10.27.2.4)92 b(v)m(oid)32 b(BEAST::FFNAnimat::Unserialise)c
(\(std::istream)h(&)j Fe(in)p Fq(\))71 b Fi([virtual])150
2299 y Fp(Inputs)28 b(the)g(FFNAnimat's)h(data)e(from)g(a)g(stream.)142
2511 y Fq(P)m(arameters:)311 2610 y Fe(in)41 b Fp(A)28
b(reference)f(to)h(an)f(input)h(stream.)150 2840 y(Reimplemen)n(ted)g
(from)f Fq(BEAST::Animat)f Fp(\(p.)15 b(73\).)150 2987
y(The)28 b(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f
(generated)h(from)g(the)h(follo)n(wing)e(\014les:)275
3200 y Fk(\210)42 b Fq(neuralanimat.h)275 3308 y Fk(\210)g
Fp(neuralanimat.cc)p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 136 144
136 143 bop -358 70 a Fq(136)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.28)136 b(BEAST::Gaussian2D)45 b(Struct)f(Reference)150
562 y Fp(Plots)27 b(a)g(t)n(w)n(o-dimensional)f(Gaussian)h(function)h
(in)g(a)f(distribution)g(or)g(distribution)h(k)n(ernel.)150
709 y Fi(#include)40 b Fo(<)p Fi(bacteria.h)p Fo(>)150
988 y Fj(Public)c(Mem)m(b)s(er)h(F)-9 b(unctions)275
1175 y Fk(\210)42 b Fq(Gaussian2D)27 b Fp(\(in)n(t)h(cen)n(terx,)f(in)n
(t)h(cen)n(tery)-7 b(,)27 b(double)g(sd=1.0,)g(double)g(scale=1.0\))275
1283 y Fk(\210)42 b Fp(double)27 b Fq(op)s(erator\(\))h
Fp(\(in)n(t)g(x,)g(in)n(t)g(y\))150 1562 y Fj(Public)36
b(A)m(ttributes)275 1749 y Fk(\210)42 b Fp(in)n(t)27
b Fq(cx)275 1857 y Fk(\210)42 b Fp(in)n(t)27 b Fq(cy)275
1965 y Fk(\210)42 b Fp(double)27 b Fq(sdsq)275 2073 y
Fk(\210)42 b Fp(double)27 b Fq(s)150 2352 y Fj(10.28.1)113
b(Detailed)36 b(Description)150 2553 y Fp(Plots)27 b(a)g(t)n(w)n
(o-dimensional)f(Gaussian)h(function)h(in)g(a)f(distribution)g(or)g
(distribution)h(k)n(ernel.)150 2700 y(The)g(do)r(cumen)n(tation)f(for)g
(this)h(struct)f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e
(\014le:)275 2913 y Fk(\210)42 b Fq(bacteria.h)p -358
5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 137 145
137 144 bop 150 70 a Fq(10.29)30 b(BEAST::GaussianNoise)g(Struct)j
(Reference)1922 b(137)p 150 103 4034 4 v 150 333 a Fl(10.29)136
b(BEAST::GaussianNoise)46 b(Struct)e(Reference)150 562
y Fp(Plots)27 b(normally)f(distributed)i(noise)f(in)h(a)f
(distribution.)150 709 y Fi(#include)40 b Fo(<)p Fi(bacteria.h)p
Fo(>)150 988 y Fj(Public)c(Mem)m(b)s(er)h(F)-9 b(unctions)275
1175 y Fk(\210)42 b Fq(GaussianNoise)25 b Fp(\(double)j(mean,)g(double)
f(stddev\))275 1283 y Fk(\210)42 b Fp(double)27 b Fq(op)s(erator\(\))h
Fp(\(in)n(t,)g(in)n(t\))150 1562 y Fj(Public)36 b(A)m(ttributes)275
1749 y Fk(\210)42 b Fp(double)27 b Fq(m)275 1857 y Fk(\210)42
b Fp(double)27 b Fq(sd)150 2136 y Fj(10.29.1)113 b(Detailed)36
b(Description)150 2337 y Fp(Plots)27 b(normally)f(distributed)i(noise)f
(in)h(a)f(distribution.)150 2616 y Fj(10.29.2)113 b(Constructor)36
b(&)i(Destructor)e(Do)s(cumen)m(tation)150 2817 y Fq(10.29.2.1)92
b(BEAST::GaussianNoise::GaussianNoise)29 b(\(double)k
Fe(me)-5 b(an)p Fq(,)35 b(double)e Fe(stddev)p Fq(\))611
2917 y Fi([inline])142 3090 y Fq(P)m(arameters:)311 3189
y Fe(me)-5 b(an)43 b Fp(The)27 b(mean)h(v)-5 b(alue)27
b(of)h(the)g(noise.)311 3322 y Fe(sd)42 b Fp(The)28 b(standard)f
(deviation)g(of)g(the)h(noise.)142 3518 y Fq(W)-8 b(arning:)311
3618 y Fp(Can)28 b(return)f(negativ)n(e)f(v)-5 b(alues.)150
3848 y(The)28 b(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g
(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
4061 y Fk(\210)42 b Fq(bacteria.h)p 150 5723 V 150 5823
a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 138 146
138 145 bop -358 70 a Fq(138)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.30)136 b(BEAST::GaussianRing2D)45 b(Struct)g(Reference)150
563 y Fp(Plots)27 b(a)g(t)n(w)n(o)g(dimensional)g(Gaussian)g(ring.)150
710 y Fi(#include)40 b Fo(<)p Fi(bacteria.h)p Fo(>)150
994 y Fj(Public)c(Mem)m(b)s(er)h(F)-9 b(unctions)275
1184 y Fk(\210)42 b Fq(GaussianRing2D)30 b Fp(\(in)n(t)i(cen)n(terx,)f
(in)n(t)h(cen)n(tery)-7 b(,)32 b(double)f(mean=1.0,)g(double)g
(stddev=1.0,)g(double)358 1283 y(scale=1.0\))476 1410
y Fg(Plots)d(a)f(two)i(dimensional)e(ring)h(with)f(a)h(Gaussian)h
(function.)275 1612 y Fk(\210)42 b Fp(double)27 b Fq(op)s(erator\(\))h
Fp(\(in)n(t)g(X,)g(in)n(t)g(Y\))150 1896 y Fj(Public)36
b(A)m(ttributes)275 2086 y Fk(\210)42 b Fp(in)n(t)27
b Fq(cx)275 2196 y Fk(\210)42 b Fp(in)n(t)27 b Fq(cy)476
2323 y Fg(The)g(c)l(entr)l(e)j(of)d(the)h(Gaussian)h(function.)275
2525 y Fk(\210)42 b Fp(double)27 b Fq(m)476 2651 y Fg(Stor)l(e)i(the)f
(me)l(an,)f(which)h(is)f(the)i(r)l(adius.)275 2853 y
Fk(\210)42 b Fp(double)27 b Fq(sd)275 2963 y Fk(\210)42
b Fp(double)27 b Fq(sdsq)476 3090 y Fg(The)g(standar)l(d)j(deviation)e
(and)g(squar)l(e)i(ther)l(e)l(of.)275 3291 y Fk(\210)42
b Fp(double)27 b Fq(s)476 3418 y Fg(Stor)l(e)i(the)f(sc)l(ale.)275
3620 y Fk(\210)42 b Fp(double)27 b Fq(k)150 3904 y Fj(10.30.1)113
b(Detailed)36 b(Description)150 4106 y Fp(Plots)27 b(a)g(t)n(w)n(o)g
(dimensional)g(Gaussian)g(ring.)150 4390 y Fj(10.30.2)113
b(Constructor)36 b(&)i(Destructor)e(Do)s(cumen)m(tation)150
4592 y Fq(10.30.2.1)92 b(BEAST::GaussianRing2D::GaussianRing2D)30
b(\(in)m(t)35 b Fe(c)-5 b(enterx)p Fq(,)34 b(in)m(t)h
Fe(c)-5 b(entery)p Fq(,)611 4691 y(double)31 b Fe(me)-5
b(an)33 b Fq(=)f(1.0,)e(double)h Fe(stddev)i Fq(=)f(1.0,)f(double)g
Fe(sc)-5 b(ale)32 b Fq(=)g(1.0\))70 b Fi([inline])150
4893 y Fp(Plots)27 b(a)g(t)n(w)n(o)g(dimensional)g(ring)g(with)h(a)f
(Gaussian)g(function.)142 5108 y Fq(P)m(arameters:)311
5208 y Fe(c)-5 b(enterx)42 b Fp(The)27 b(X)h(co)r(ordinate)f(of)g(the)h
(cen)n(ter.)311 5343 y Fe(c)-5 b(entery)42 b Fp(The)27
b(Y)h(co)r(ordinate)f(of)g(the)h(cen)n(ter.)311 5478
y Fe(me)-5 b(an)43 b Fp(The)27 b(mean)h(for)f(the)h(Gaussian)e
(function.)311 5613 y Fe(standar)-5 b(d)42 b Fp(deviation)27
b(for)g(the)h(Gaussian)f(function.)p -358 5723 V -192
5823 a Fn(Generated)f(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 139 147
139 146 bop 150 70 a Fq(10.30)30 b(BEAST::GaussianRing2D)g(Struct)j
(Reference)1833 b(139)p 150 103 4034 4 v 311 333 a Fe(sc)-5
b(ale)43 b Fp(The)27 b(v)-5 b(alue)28 b(to)f(output)h(within)h(the)f
(ring)e(area.)150 563 y(The)i(do)r(cumen)n(tation)f(for)g(this)h
(struct)f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
776 y Fk(\210)42 b Fq(bacteria.h)p 150 5723 V 150 5823
a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 140 148
140 147 bop -358 70 a Fq(140)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.31)136 b(BEAST::GA)-15 b(V)k(arian)l(t)44
b(Struct)h(Reference)150 568 y Fp(This)27 b(is)g(a)f(general)g(purp)r
(ose)g(data)g(t)n(yp)r(e)h(whic)n(h)g(tak)n(es)f(\014v)n(e)g(basic)h
(data)f(t)n(yp)r(es:)37 b(in)n(t,)27 b(\015oat,)g(double,)g(c)n(har)e
(and)150 668 y(b)r(o)r(ol.)150 814 y Fi(#include)40 b
Fo(<)p Fi(geneticalgorithm)o(.h)o Fo(>)150 961 y Fp(Collab)r(oration)26
b(diagram)g(for)h(BEAST::GA)-9 b(V)i(arian)n(t:)1481
1606 y @beginspecial 35 @llx 35 @lly 209 @urx 137 @ury
1036 @rwi @setspecial
%%BeginDocument: structBEAST_1_1GAVariant__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 209 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 209 137
%%PageOrientation: Portrait
gsave
35 35 174 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node506
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 33 8 moveto
140 8 lineto
140 23 lineto
33 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 33 8 moveto
140 8 lineto
140 23 lineto
33 23 lineto
closepath
stroke
gsave 10 dict begin
86 11 moveto 97 -0.5 (BEAST::GAVariant) alignedtext
end grestore
end grestore

%	Node507
[ /Rect [ 0 77 172 91 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unionBEAST_1_1GAVariant_1_1VariantData.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 76 moveto
172 76 lineto
172 91 lineto
0 91 lineto
closepath
stroke
gsave 10 dict begin
86 79 moveto 162 -0.5 (BEAST::GAVariant::VariantData) alignedtext
end grestore
end grestore

%	Node507 -> Node506
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 86 68 moveto
86 54 86 35 86 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 84 66 moveto
86 76 lineto
89 66 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
104 46 moveto 26 -0.5 (value) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2000 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2207 y Fk(\210)42 b Fq(GA)-11 b(V)j(arian)m(t)29
b Fp(\(in)n(t)f(v=0\))476 2346 y Fg(Constructs)i Ff(GA)-10
b(V)j(arian)n(t)28 b Fg(fr)l(om)f(an)h(int,)f(doubles)i(up)f(as)g
(default)g(c)l(onstructor.)275 2560 y Fk(\210)42 b Fq(GA)-11
b(V)j(arian)m(t)29 b Fp(\(\015oat)f(v\))476 2699 y Fg(Constructs)i
Ff(GA)-10 b(V)j(arian)n(t)28 b Fg(fr)l(om)f(a)h(\015o)l(at.)275
2913 y Fk(\210)42 b Fq(GA)-11 b(V)j(arian)m(t)29 b Fp(\(double)f(v\))
476 3052 y Fg(Constructs)i Ff(GA)-10 b(V)j(arian)n(t)28
b Fg(fr)l(om)f(a)h(double.)275 3266 y Fk(\210)42 b Fq(GA)-11
b(V)j(arian)m(t)29 b Fp(\(c)n(har)e(v\))476 3405 y Fg(Constructs)j
Ff(GA)-10 b(V)j(arian)n(t)28 b Fg(fr)l(om)f(a)h(char.)275
3618 y Fk(\210)42 b Fq(GA)-11 b(V)j(arian)m(t)29 b Fp(\(b)r(o)r(ol)f
(v\))476 3757 y Fg(Constructs)i Ff(GA)-10 b(V)j(arian)n(t)28
b Fg(fr)l(om)f(a)h(b)l(o)l(ol.)275 3971 y Fk(\210)42
b Fq(op)s(erator)31 b(in)m(t)d Fp(\(\))g(const)476 4110
y Fg(int)f(typ)l(e)l(c)l(ast)j(op)l(er)l(ator)275 4324
y Fk(\210)42 b Fq(op)s(erator)31 b(\015oat)d Fp(\(\))h(const)476
4463 y Fg(\015o)l(at)f(typ)l(e)l(c)l(ast)i(op)l(er)l(ator)275
4677 y Fk(\210)42 b Fq(op)s(erator)31 b(double)c Fp(\(\))i(const)476
4816 y Fg(double)f(typ)l(e)l(c)l(ast)i(op)l(er)l(ator)275
5030 y Fk(\210)42 b Fq(op)s(erator)31 b(c)m(har)f Fp(\(\))e(const)476
5169 y Fg(char)g(typ)l(e)l(c)l(ast)i(op)l(er)l(ator)275
5382 y Fk(\210)42 b Fq(op)s(erator)31 b(b)s(o)s(ol)c
Fp(\(\))h(const)476 5522 y Fg(b)l(o)l(ol)g(typ)l(e)l(c)l(ast)i(op)l(er)
l(ator)p -358 5723 V -192 5823 a Fn(Generated)c(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 141 149
141 148 bop 150 70 a Fq(10.31)30 b(BEAST::GA)-11 b(V)j(arian)m(t)33
b(Struct)g(Reference)2082 b(141)p 150 103 4034 4 v 150
333 a Fj(Public)36 b(A)m(ttributes)275 519 y Fk(\210)42
b Fq(BEAST::GA)-11 b(V)j(arian)m(t::V)g(arian)m(tData)30
b(v)-5 b(alue)476 644 y Fg(Union)27 b(of)g(\014ve)h(data)h(typ)l(es)g
(for)f Ff(GA)-10 b(V)j(arian)n(t)p Fg(.)275 843 y Fk(\210)42
b Fq(GA)-11 b(V)j(arian)m(tT)m(yp)s(e)30 b(t)m(yp)s(e)476
967 y Fg(A)d(\015ag)h(signifying)f(the)i(typ)l(e)f(of)f(data)i(curr)l
(ently)g(held.)150 1338 y Fj(10.31.1)113 b(Detailed)36
b(Description)150 1539 y Fp(This)27 b(is)g(a)f(general)g(purp)r(ose)g
(data)g(t)n(yp)r(e)h(whic)n(h)g(tak)n(es)f(\014v)n(e)g(basic)h(data)f
(t)n(yp)r(es:)37 b(in)n(t,)27 b(\015oat,)g(double,)g(c)n(har)e(and)150
1639 y(b)r(o)r(ol.)150 1785 y(A)h(union)f(is)g(used)h(to)f(ensure)g
(that)h Fq(GA)-11 b(V)j(arian)m(t)27 b Fp(nev)n(er)e(tak)n(es)f(up)i
(more)e(space)h(than)g(the)h(size)f(of)h(the)f(largest)150
1885 y(datat)n(yp)r(e)i(plus)h(the)g(size)f(of)h(one)f(en)n(umeration)g
(t)n(yp)r(e.)150 2032 y(The)h(do)r(cumen)n(tation)f(for)g(this)h
(struct)f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
2245 y Fk(\210)42 b Fq(geneticalgorithm.h)p 150 5723
V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 142 150
142 149 bop -358 70 a Fq(142)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.32)136 b(BEAST::GA)-15 b(V)k(arian)l(t::V)g(arian)l(tData)
47 b(Union)e(Reference)150 562 y Fp(Union)28 b(of)f(\014v)n(e)h(data)f
(t)n(yp)r(es)g(for)g Fq(GA)-11 b(V)j(arian)m(t)p Fp(.)150
709 y Fi(#include)40 b Fo(<)p Fi(geneticalgorithm)o(.h)o
Fo(>)150 988 y Fj(Public)c(Mem)m(b)s(er)h(F)-9 b(unctions)275
1175 y Fk(\210)42 b Fq(V)-8 b(arian)m(tData)30 b Fp(\(in)n(t)e(v\))275
1283 y Fk(\210)42 b Fq(V)-8 b(arian)m(tData)30 b Fp(\(\015oat)d(v\))275
1391 y Fk(\210)42 b Fq(V)-8 b(arian)m(tData)30 b Fp(\(double)e(v\))275
1498 y Fk(\210)42 b Fq(V)-8 b(arian)m(tData)30 b Fp(\(c)n(har)d(v\))275
1606 y Fk(\210)42 b Fq(V)-8 b(arian)m(tData)30 b Fp(\(b)r(o)r(ol)e(v\))
150 1886 y Fj(Public)36 b(A)m(ttributes)275 2073 y Fk(\210)42
b Fp(in)n(t)27 b Fq(i)275 2180 y Fk(\210)42 b Fp(\015oat)27
b Fq(f)275 2288 y Fk(\210)42 b Fp(double)27 b Fq(d)275
2396 y Fk(\210)42 b Fp(c)n(har)26 b Fq(c)275 2504 y Fk(\210)42
b Fp(b)r(o)r(ol)27 b Fq(b)150 2784 y Fj(10.32.1)113 b(Detailed)36
b(Description)150 2984 y Fp(Union)28 b(of)f(\014v)n(e)h(data)f(t)n(yp)r
(es)g(for)g Fq(GA)-11 b(V)j(arian)m(t)p Fp(.)150 3131
y(The)28 b(do)r(cumen)n(tation)f(for)g(this)h(union)g(w)n(as)e
(generated)h(from)g(the)h(follo)n(wing)e(\014le:)275
3345 y Fk(\210)42 b Fq(geneticalgorithm.h)p -358 5723
V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 143 151
143 150 bop 150 70 a Fq(10.33)30 b(BEAST::GeneticAlgorithm)p
Fo(<)e Fq(EV)m(O,)k(MUTFUNC)g Fo(>)g Fq(Class)f(T)-8
b(emplate)30 b(Reference)439 b(143)p 150 103 4034 4 v
150 333 a Fl(10.33)136 b(BEAST::GeneticAlgorithm)p Fb(<)93
b Fl(EV)l(O,)g(MUTFUNC)f Fb(>)591 482 y Fl(Class)46 b(T)-11
b(emplate)45 b(Reference)150 712 y Fp(The)30 b Fq(GeneticAlgorithm)e
Fp(class)h(pro)n(vides)g(functionalit)n(y)h(to)g(co)n(v)n(er)e(a)h
(range)g(of)h(GA)h(metho)r(ds,)g(and)f(ma)n(y)150 811
y(b)r(e)e(extended)g(to)f(incorp)r(orate)f(other)h(approac)n(hes.)150
958 y Fi(#include)40 b Fo(<)p Fi(geneticalgorithm)o(.h)o
Fo(>)150 1105 y Fp(Collab)r(oration)26 b(diagram)g(for)h
(BEAST::GeneticAlgorithm)p Fo(<)g Fp(EV)n(O,)g(MUTFUNC)h
Fo(>)p Fp(:)763 2208 y @beginspecial 35 @llx 35 @lly
555 @urx 256 @ury 2759 @rwi @setspecial
%%BeginDocument: classBEAST_1_1GeneticAlgorithm__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 555 256
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 555 256
%%PageOrientation: Portrait
gsave
35 35 520 221 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node513
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 256 97 moveto
510 97 lineto
510 112 lineto
256 112 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 256 97 moveto
510 97 lineto
510 112 lineto
256 112 lineto
closepath
stroke
gsave 10 dict begin
383 100 moveto 244 -0.5 (BEAST::GeneticAlgorithm< EVO, MUTFUNC >) alignedtext
end grestore
end grestore

%	Node514
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 9 185 moveto
104 185 lineto
104 200 lineto
9 200 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
56 188 moveto 85 -0.5 (vector< GENE >) alignedtext
end grestore
end grestore

%	Node514 -> Node513
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 105 184 moveto
164 171 190 189 238 153 curveto
252 142 243 129 256 120 curveto
261 117 268 114 277 113 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 106 181 moveto
96 185 lineto
106 186 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
180 194 moveto 99 -0.5 (bestCurrentGenome) alignedtext
180 183 moveto 84 -0.5 (bestEverGenome) alignedtext
end grestore
end grestore

%	Node515
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 9 123 moveto
104 123 lineto
104 138 lineto
9 138 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
56 126 moveto 85 -0.5 (vector< EVO * >) alignedtext
end grestore
end grestore

%	Node515 -> Node513
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 112 125 moveto
152 120 207 116 256 112 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 114 122 moveto
104 126 lineto
114 127 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
180 137 moveto 52 -0.5 (population) alignedtext
180 126 moveto 85 -0.5 (outputPopulation) alignedtext
end grestore
end grestore

%	Node516
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 21 72 moveto
92 72 lineto
92 87 lineto
21 87 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
56 75 moveto 61 -0.5 (MUTFUNC) alignedtext
end grestore
end grestore

%	Node516 -> Node513
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 101 83 moveto
138 85 192 88 238 94 curveto
247 94 248 96 256 97 curveto
258 97 259 97 261 97 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 102 81 moveto
92 82 lineto
102 86 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
180 97 moveto 64 -0.5 (mutFuncObj) alignedtext
end grestore
end grestore

%	Node517
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 14 10 moveto
98 10 lineto
98 25 lineto
14 25 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
56 13 moveto 74 -0.5 (vector< float >) alignedtext
end grestore
end grestore

%	Node517 -> Node513
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 107 26 moveto
165 35 191 18 238 53 curveto
252 63 242 77 256 88 curveto
262 92 273 95 286 97 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 108 24 moveto
98 25 lineto
108 29 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
180 67 moveto 106 -0.5 (averageFitnessRecord) alignedtext
180 56 moveto 87 -0.5 (bestFitnessRecord) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2574 a Fj(Public)36 b(T)m(yp)s(es)275
2763 y Fk(\210)42 b Fp(t)n(yp)r(edef)28 b(EV)n(O::gene)p
1048 2763 25 4 v 28 w(t)n(yp)r(e)g Fq(GENE)476 2889 y
Fg(A)f(typ)l(e)l(def)i(for)e(the)i(gene)f(typ)l(e)h(\(e.g.)35
b(\015o)l(at\),)29 b(adapte)l(d)g(fr)l(om)e(EV)n(O.)275
3089 y Fk(\210)42 b Fp(t)n(yp)r(edef)28 b(EV)n(O::genot)n(yp)r(e)p
1212 3089 V 28 w(t)n(yp)r(e)g Fq(GENOTYPE)476 3215 y
Fg(A)f(typ)l(e)l(def)i(for)e(the)i(genotyp)l(e)h(typ)l(e)e(\(e.g.)36
b(ve)l(ctor)p Fc(<)p Fg(\015o)l(at)p Fc(>)p Fg(\),)29
b(adapte)l(d)h(fr)l(om)d(EV)n(O.)275 3416 y Fk(\210)42
b Fp(t)n(yp)r(edef)28 b(std::v)n(ector)p Fo(<)e Fp(EV)n(O)h
Fh(\003)g Fo(>)p Fp(::iterator)f Fq(P)m(opIter)476 3542
y Fg(A)n(n)h(iter)l(ator)j(typ)l(e)e(for)g(the)g(p)l(opulation.)275
3743 y Fk(\210)42 b Fp(t)n(yp)r(edef)28 b(std::v)n(ector)p
Fo(<)e Fp(EV)n(O)h Fh(\003)g Fo(>)p Fp(::const)p 1708
3743 V 29 w(iterator)f Fq(P)m(opConstIter)476 3869 y
Fg(A)h(c)l(onst)i(iter)l(ator)h(typ)l(e)e(for)g(the)g(p)l(opulation.)
275 4070 y Fk(\210)42 b Fp(t)n(yp)r(edef)28 b(std::v)n(ector)p
Fo(<)e Fq(GENE)h Fo(>)p Fp(::iterator)f Fq(ChromIter)476
4196 y Fg(A)n(n)h(iter)l(ator)j(typ)l(e)e(for)g(the)g(chr)l(omosomes.)
150 4570 y Fj(Public)36 b(Mem)m(b)s(er)h(F)-9 b(unctions)275
4759 y Fk(\210)42 b Fq(GeneticAlgorithm)25 b Fp(\(\015oat)i(crosso)n(v)
n(er=0.7f,)c(\015oat)28 b(m)n(utation=0.01f,)e(in)n(t)h(p)r(opSize=0\))
476 4885 y Fg(Constructor:)43 b(sets)31 b(default)g(p)l(ar)l(ameters:)
43 b(elitism)29 b(and)i(sub)l(elitism)g(0,)f(cr)l(ossover)j(p)l(oints)e
(1,)g(tournament)476 4976 y(p)l(ar)l(ameter)e(0.75,)e(tournament)j
(size)e(2,)f(r)l(ank)i(pr)l(essur)l(e)h(1.5,)d(exp)l(onent)i(1.0.)275
5177 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetP)m(opulation)i
Fp(\(const)f(std::v)n(ector)p Fo(<)g Fp(EV)n(O)f Fh(\003)h
Fo(>)h Fp(&p\))275 5286 y Fk(\210)42 b Fp(std::v)n(ector)p
Fo(<)26 b Fp(EV)n(O)g Fh(\003)i Fo(>)f Fp(&)g Fq(GetP)m(opulation)h
Fp(\(\))275 5395 y Fk(\210)42 b Fp(std::v)n(ector)p Fo(<)26
b Fp(EV)n(O)g Fh(\003)i Fo(>)f Fq(GetP)m(opulationCop)m(y)h
Fp(\(\))g(const)476 5522 y Fg(R)l(eturns)e(duplic)l(ates)h(of)d(the)i
(output)h(p)l(opulation)f(which)f(won)-8 b('t)25 b(b)l(e)h(delete)l(d)g
(by)f(the)h(GA)f(if)f(it)h(do)l(es)h(a)f Ff(Clean-)476
5613 y(Up\(\))p Fg(.)p 150 5723 4034 4 v 150 5823 a Fn(Generated)h(on)e
(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 144 152
144 151 bop -358 70 a Fq(144)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
442 a Fk(\210)42 b Fq(P)m(opIter)28 b(b)s(egin)e Fp(\(\))275
552 y Fk(\210)42 b Fq(P)m(opIter)28 b(end)g Fp(\(\))275
662 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetCrosso)m(v)m(er)i
Fp(\(\015oat)g(c\))476 788 y Fg(Sets)g(the)h(r)l(ate)g(of)e(cr)l
(ossover.)275 990 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetMutation)i
Fp(\(\015oat)f(m\))476 1116 y Fg(Sets)h(the)h(r)l(ate)g(of)e(mutation.)
275 1317 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetSelection)h
Fp(\()p Fq(GASelectionT)m(yp)s(e)h Fp(s\))476 1444 y
Fg(Sets)g(the)h(sele)l(ction)f(op)l(er)l(ator.)275 1645
y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetMutationF)-8 b(unction)28
b Fp(\()p Fq(GENE)p Fp(\()p Fh(\003)p Fp(ptr\)\()p Fq(GENE)p
Fp(\)\))476 1771 y Fg(Sets)21 b(the)h(mutation)f(function,)h(which)f
(may)g(b)l(e)g(any)g(C)f(function)h(which)g(takes)h(as)f(its)g(ar)l
(gument)h(one)f(variable)476 1862 y(of)27 b(the)h(gene)h(typ)l(e)f(and)
g(r)l(eturns)i(a)e(variable)g(of)f(the)h(gene)h(typ)l(e.)275
2064 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetMutationF)-8
b(unction)28 b Fp(\(MUTFUNC)h(ob)5 b(j\))476 2190 y Fg(Sets)29
b(the)f(mutation)h(function)f(to)g(a)g(function)g(obje)l(ct,)h(the)f
(typ)l(e)h(of)f(which)g(should)g(also)g(b)l(e)g(sp)l(e)l(ci\014e)l(d)i
(in)d(the)476 2281 y(template)h(c)l(onstructor)j(for)d(the)g(GA.)275
2482 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetElitism)f Fp(\(in)n(t)j(e\))
476 2609 y Fg(Sets)j(the)g(elitism)e(value,)i(which)f(de)l(cides)h(how)
f(many)h(of)e(the)i(\014ttest)h(individuals)e(go)g(thr)l(ough)i(to)f
(the)g(next)476 2700 y(gener)l(ation)e(unchange)l(d.)275
2901 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetSub)s(elitism)e
Fp(\(in)n(t)29 b(s\))476 3028 y Fg(Sets)35 b(the)g(sub)l(elitism)g
(value,)h(which)e(de)l(cides)h(how)g(many)f(of)g(the)h(le)l(ast)g
(\014t)g(individuals)f(ar)l(e)h(b)l(arr)l(e)l(d)h(fr)l(om)476
3119 y(r)l(epr)l(o)l(ducing.)275 3320 y Fk(\210)42 b
Fp(v)n(oid)26 b Fq(SetCrosso)m(v)m(erP)m(oin)m(ts)i Fp(\(in)n(t)g(p\))
476 3447 y Fg(Sets)g(the)h(numb)l(er)f(of)f(p)l(oints)i(of)e(cr)l
(ossover.)275 3648 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetFitnessMetho)s
(d)g Fp(\()p Fq(GAFitnessMetho)s(dT)m(yp)s(e)h Fp(f)6
b(\))476 3774 y Fg(Sets)28 b(the)h(metho)l(d)f(by)g(which)g(\014tness)h
(sc)l(or)l(es)h(ar)l(e)e(use)l(d.)275 3975 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetFitnessFix)h Fp(\()p Fq(GAFitnessFixT)m(yp)s(e)
h Fp(f)6 b(\))476 4102 y Fg(Sets)28 b(the)h(metho)l(d)f(by)g(which)g
(\014tness)h(sc)l(or)l(es)h Fc(<)d Fg(0)g(ar)l(e)i(tr)l(e)l(ate)l(d.)
275 4303 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetOwnsData)j
Fp(\(b)r(o)r(ol)e(b\))476 4429 y Fg(Set)h(to)g(true)h(if)d(the)j(GA)f
(is)f(r)l(esp)l(onsible)i(for)f(deleting)g(the)g(old)g(p)l(opulation)g
(obje)l(cts.)275 4630 y Fk(\210)42 b Fp(v)n(oid)26 b
Fq(SetP)m(arameter)i Fp(\()p Fq(GAFltP)m(aramT)m(yp)s(e)h
Fp(p,)f(\015oat)f(f)6 b(\))476 4757 y Fg(Sets)28 b(a)g(r)l(e)l
(al-value)l(d)h(p)l(ar)l(ameter.)275 4958 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetP)m(arameter)i Fp(\()p Fq(GAIn)m(tP)m(aramT)m
(yp)s(e)i Fp(p,)e(in)n(t)g(n\))476 5084 y Fg(Sets)g(an)g(inte)l
(ger-value)l(d)i(p)l(ar)l(ameter.)275 5285 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetPrin)m(tSt)m(yle)j Fp(\(in)n(t)f(p\))476
5412 y Fg(Sets)g(the)h(output)g(style)f(of)g(the)g(GA's)g(T)-6
b(oString)28 b(metho)l(d.)275 5613 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(Generate)i Fp(\(\))p -358 5723 V -192
5823 a Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 145 153
145 152 bop 150 70 a Fq(10.33)30 b(BEAST::GeneticAlgorithm)p
Fo(<)e Fq(EV)m(O,)k(MUTFUNC)g Fo(>)g Fq(Class)f(T)-8
b(emplate)30 b(Reference)439 b(145)p 150 103 4034 4 v
476 333 a Fg(The)27 b(gener)l(ation)j(function:)35 b(this)28
b(is)f(wher)l(e)i(it)f(al)t(l)e(happ)l(ens.)275 534 y
Fk(\210)42 b Fp(v)n(oid)26 b Fq(ReGenerate)i Fp(\(\))476
660 y Fg(Cal)t(ls)f(the)h Ff(Generate\(\))g Fg(metho)l(d)h(and)f(c)l
(opies)g(the)h(output)g(p)l(opulation)g(into)e(the)i(input.)275
861 y Fk(\210)42 b Fp(in)n(t)27 b Fq(GetGenerations)g
Fp(\(\))i(const)275 971 y Fk(\210)42 b Fp(std::v)n(ector)p
Fo(<)26 b Fp(\015oat)h Fo(>)g Fq(GetAvgFitnessHistory)f
Fp(\(\))j(const)275 1080 y Fk(\210)42 b Fp(std::v)n(ector)p
Fo(<)26 b Fp(\015oat)h Fo(>)g Fq(GetBestFitnessHistory)e
Fp(\(\))k(const)275 1190 y Fk(\210)42 b Fp(std::v)n(ector)p
Fo(<)26 b Fq(GENE)h Fo(>)g Fq(GetBestCurren)m(tGenome)f
Fp(\(\))i(const)275 1300 y Fk(\210)42 b Fp(std::v)n(ector)p
Fo(<)26 b Fq(GENE)h Fo(>)g Fq(GetBestEv)m(erGenome)e
Fp(\(\))k(const)275 1409 y Fk(\210)42 b Fp(\015oat)27
b Fq(GetBestCurren)m(tFitness)g Fp(\(\))h(const)275 1519
y Fk(\210)42 b Fp(\015oat)27 b Fq(GetBestEv)m(erFitness)f
Fp(\(\))275 1629 y Fk(\210)42 b Fp(std::string)27 b Fq(T)-8
b(oString)27 b Fp(\(\))i(const)476 1755 y Fg(R)l(eturns)e(a)f(string)h
(c)l(ontaining)g(various)f(details)h(ab)l(out)g(the)f(GA's)g(curr)l
(ent)i(state,)g(dep)l(ending)f(on)f(what)g(has)476 1846
y(b)l(e)l(en)i(set)h(with)e(SetPrintStyle.)275 2047 y
Fk(\210)42 b Fp(std::string)27 b Fq(GetCSV)h Fp(\(c)n(har)e(separator=)
f(','\))j(const)476 2174 y Fg(R)l(eturns)c(a)f(string)h(c)l(ontaining)f
(a)g(simple)g(CSV)f(table)i(with)f(aver)l(age)h(and)g(b)l(est)g
(\014tness)g(for)f(every)h(gener)l(ation)476 2265 y(so)k(far.)275
2466 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(CleanUp)i Fp(\(\))476
2592 y Fg(Deletes)g(the)h(obje)l(cts)g(c)l(omprising)f(the)g(input)g
(and)g(output)h(p)l(opulations.)275 2793 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(Unserialise)h Fp(\(std::istream)g(&\))275
2903 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Serialise)h Fp(\(std::ostream)g
(&\))g(const)150 3186 y Fj(Protected)36 b(Mem)m(b)s(er)i(F)-9
b(unctions)275 3375 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(CalcStats)j
Fp(\(\))476 3501 y Fg(Calculates)f(some)g(statistics)h(use)l(d)f(in)f
(some)g(of)g(the)h(sele)l(ction)g(metho)l(ds)h(and)f(also)f(stor)l(e)l
(d)i(by)f(the)g(class)g(for)476 3593 y(data)g(c)l(ol)t(le)l(ction.)275
3794 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Setup)i Fp(\(\))476
3920 y Fg(Pr)l(ep)l(ar)l(es)h(the)g(GA)f(for)f(the)i(next)f(ep)l(o)l
(ch.)275 4121 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(FixFitness)h
Fp(\(\))476 4247 y Fg(A)l(djusts)h(the)h(\014tness)g(ac)l(c)l(or)l
(ding)g(to.)275 4448 y Fk(\210)42 b Fp(\015oat)27 b Fq(GetFitness)f
Fp(\(EV)n(O)h Fh(\003)p Fp(i\))476 4575 y Fg(Calculates)d(the)g
(\014tness)h(sc)l(or)l(e)g(to)f(b)l(e)g(use)l(d)g(by)g(the)g(GA)f(fr)l
(om)h(the)g(stor)l(e)l(d)h(\014tness)g(sc)l(or)l(es)g(in)e(the)h(EV)n
(O)f(obje)l(ct.)275 4776 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SelectP)m(aren)m(tGenot)m(yp)s(e)j Fp(\()p Fq(GENOTYPE)f
Fp(&\))476 4902 y Fg(Dep)l(ending)33 b(on)g(the)h(sele)l(ction)g(pr)l
(o)l(c)l(e)l(dur)l(e)h(chosen,)g(a)e(genotyp)l(e)i(is)d(taken)i(fr)l
(om)f(the)g(p)l(opulation)h(and)f(r)l(e-)476 4993 y(turne)l(d)c(by)f(r)
l(efer)l(enc)l(e.)275 5194 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(Crosso)m(v)m(erGenot)m(yp)s(es)i Fp(\()p Fq(GENOTYPE)g
Fp(&,)f Fq(GENOTYPE)h Fp(&\))476 5321 y Fg(This)h(metho)l(d)i(simply)f
(takes)h(two)f(chr)l(omosomes,)i(mum)d(and)h(dad,)h(and)f(swaps)h(them)
f(over)h(at)f(a)g(r)l(andom)476 5412 y(p)l(oint)e(along)g(the)g
(length.)275 5613 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(MutateGenot)m(yp)s
(e)i Fp(\()p Fq(GENOTYPE)g Fp(&\))p 150 5723 V 150 5823
a Fn(Generated)e(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d
(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 146 154
146 153 bop -358 70 a Fq(146)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 476
333 a Fg(While)26 b(cr)l(ossover)31 b(simulates)d(the)g(e\013e)l(ct)h
(of)f(sexual)g(r)l(epr)l(o)l(duction)i(within)e(a)f(p)l(opulation,)h
(mutation)h(arti\014-)476 424 y(cial)t(ly)d(r)l(epr)l(o)l(duc)l(es)31
b(the)d(e\013e)l(cts)i(of)d(tr)l(anscription)j(err)l(ors)f(in)e(the)h
(r)l(eplic)l(ation)h(of)e(DNA.)275 638 y Fk(\210)42 b
Fp(v)n(oid)26 b Fq(SelectProbabilit)m(y)i Fp(\()p Fq(GENOTYPE)g
Fp(&\))476 778 y Fg(R)l(oulette)40 b(and)f(R)l(ank)g(Sele)l(ction)g
(Having)g(done)g(the)g(Setup)h(function)f(\(ab)l(ove\),)j(e)l(ach)e
(individual)e(has)h(a)476 869 y(pr)l(ob)l(ability)28
b(sc)l(or)l(e,)h(derive)l(d)f(fr)l(om)g(their)g(r)l(ank)h(or)f
(\014tness.)275 1083 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SelectEv)m(en)i
Fp(\()p Fq(GENOTYPE)g Fp(&\))275 1206 y Fk(\210)42 b
Fp(v)n(oid)26 b Fq(SelectT)-8 b(ournamen)m(t)28 b Fp(\()p
Fq(GENOTYPE)f Fp(&\))476 1346 y Fg(T)-6 b(ournament)24
b(Sele)l(ction)h(The)e(metho)l(d)h(implemente)l(d)g(her)l(e)g(is)f(an)h
(amalgamation)g(of)e(two)i(slightly)g(di\013er)l(ent)476
1437 y(appr)l(o)l(aches.)150 1840 y Fj(10.33.1)113 b(Detailed)36
b(Description)150 2047 y Fq(template)p Fo(<)p Fq(class)21
b(EV)m(O,)j(class)f(MUTFUNC)i(=)f(MutationOp)s(erator)p
Fo(<)p Fq(t)m(yp)s(ename)e(EV)m(O::gene)p 3616 2047 29
4 v 33 w(-)150 2147 y(t)m(yp)s(e)p Fo(>>)31 b Fq(class)h
(BEAST::GeneticAlgorithm)p Fo(<)c Fq(EV)m(O,)j(MUTFUNC)i
Fo(>)150 2354 y Fp(The)d Fq(GeneticAlgorithm)e Fp(class)h(pro)n(vides)g
(functionalit)n(y)h(to)g(co)n(v)n(er)e(a)h(range)g(of)h(GA)h(metho)r
(ds,)g(and)f(ma)n(y)150 2453 y(b)r(e)e(extended)g(to)f(incorp)r(orate)f
(other)h(approac)n(hes.)150 2600 y(The)20 b(class)f(is)g(completely)h
(generic,)g(in)g(order)e(to)i(allo)n(w)f(the)h(widest)g(p)r(ossible)f
(application.)34 b(The)19 b(\014rst)h(template)150 2700
y(parameter)27 b(is)h(the)h(t)n(yp)r(e)g(of)f(the)h(genes)e(\(e.g.)40
b(in)n(t,)29 b(\015oat\).)39 b(The)28 b(second)g(is)g(a)g(class)g(whic)
n(h)g(m)n(ust)g(pro)n(vide)g(the)150 2799 y(metho)r(ds)g(exp)r(osed)f
(b)n(y)g(the)311 3052 y Fq(Ev)m(olv)m(er)36 b Fp(ABC,)f(ideally)g
(inherited)g(from)f(an)h Fq(Ev)m(olv)m(er)h Fp(of)f(the)g(same)f
(templated)i(t)n(yp)r(e.)59 b(The)35 b(third)311 3152
y(template)41 b(parameter)e(is)h(the)g(t)n(yp)r(e)g(of)g(the)h(m)n
(utation)f(op)r(erator)e(and)i(will)h(usually)e(b)r(e)i(\014ne)f(as)g
(the)311 3251 y(default)25 b(t)n(yp)r(e)f(of)g(MutationOp)r(erator)p
Fo(<)p Fp(T)p Fo(>)p Fp(,)f(whic)n(h)h(is)g(a)f Fq(MutationOp)s(erator)
h Fp(function)h(ob)5 b(ject)24 b(with)311 3351 y(the)k(same)f(t)n(yp)r
(e)h(as)f(the)h(genes.)36 b(Phew!)150 3663 y Fj(10.33.2)113
b(Mem)m(b)s(er)37 b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150
3870 y Fq(10.33.2.1)92 b(template)p Fo(<)p Fq(class)30
b(EV)m(O,)i(class)g(MUTFUNC)h(=)f(MutationOp)s(erator)p
Fo(<)p Fq(t)m(yp)s(ename)611 3969 y(EV)m(O::gene)p 1064
3969 V 33 w(t)m(yp)s(e)p Fo(>>)h Fq(in)m(t)g(BEAST::GeneticAlgorithm)p
Fo(<)c Fq(EV)m(O,)k(MUTFUNC)611 4069 y Fo(>)p Fq(::GetGenerations)d
(\(\))i(const)71 b Fi([inline])142 4262 y Fq(Returns:)311
4362 y Fp(The)28 b(n)n(um)n(b)r(er)f(of)h(Generations)e(so)h(far)150
4763 y Fq(10.33.2.2)92 b(template)p Fo(<)p Fq(class)30
b(EV)m(O,)i(class)g(MUTFUNC)h(=)f(MutationOp)s(erator)p
Fo(<)p Fq(t)m(yp)s(ename)611 4862 y(EV)m(O::gene)p 1064
4862 V 33 w(t)m(yp)s(e)p Fo(>>)g Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p
Fo(<)d Fq(EV)m(O,)j(MUTFUNC)611 4962 y Fo(>)p Fq(::SetCrosso)m(v)m(er)f
(\(\015oat)h Fe(c)p Fq(\))72 b Fi([inline])150 5169 y
Fp(Sets)28 b(the)g(rate)f(of)g(crosso)n(v)n(er.)142 5387
y Fq(P)m(arameters:)311 5487 y Fe(c)42 b Fp(A)28 b(\015oat)f(in)h(the)g
(range)e([0,1])p -358 5723 4034 4 v -192 5823 a Fn(Generated)g(on)f
(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 147 155
147 154 bop 150 70 a Fq(10.33)30 b(BEAST::GeneticAlgorithm)p
Fo(<)e Fq(EV)m(O,)k(MUTFUNC)g Fo(>)g Fq(Class)f(T)-8
b(emplate)30 b(Reference)439 b(147)p 150 103 4034 4 v
150 333 a(10.33.2.3)92 b(template)p Fo(<)p Fq(class)30
b(EV)m(O,)i(class)g(MUTFUNC)h(=)f(MutationOp)s(erator)p
Fo(<)p Fq(t)m(yp)s(ename)611 432 y(EV)m(O::gene)p 1064
432 29 4 v 33 w(t)m(yp)s(e)p Fo(>>)g Fq(v)m(oid)g
(BEAST::GeneticAlgorithm)p Fo(<)d Fq(EV)m(O,)j(MUTFUNC)611
532 y Fo(>)p Fq(::SetCrosso)m(v)m(erP)m(oin)m(ts)f(\(in)m(t)h
Fe(p)p Fq(\))71 b Fi([inline])150 735 y Fp(Sets)28 b(the)g(n)n(um)n(b)r
(er)f(of)h(p)r(oin)n(ts)f(of)h(crosso)n(v)n(er.)142 955
y Fq(P)m(arameters:)311 1055 y Fe(p)42 b Fp(An)28 b(in)n(teger)f
Fo(>)p Fp(=)g(0)g(\(0)g(results)g(in)h(no)f(crosso)n(v)n(er\))150
1423 y Fq(10.33.2.4)92 b(template)p Fo(<)p Fq(class)30
b(EV)m(O,)i(class)g(MUTFUNC)h(=)f(MutationOp)s(erator)p
Fo(<)p Fq(t)m(yp)s(ename)611 1522 y(EV)m(O::gene)p 1064
1522 V 33 w(t)m(yp)s(e)p Fo(>>)g Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p
Fo(<)d Fq(EV)m(O,)j(MUTFUNC)611 1622 y Fo(>)p Fq(::SetElitism)27
b(\(in)m(t)32 b Fe(e)p Fq(\))72 b Fi([inline])150 1825
y Fp(Sets)31 b(the)g(elitism)g(v)-5 b(alue,)31 b(whic)n(h)g(decides)f
(ho)n(w)g(man)n(y)g(of)h(the)g(\014ttest)g(individuals)g(go)e(through)h
(to)h(the)g(next)150 1925 y(generation)26 b(unc)n(hanged.)142
2145 y Fq(P)m(arameters:)311 2245 y Fe(e)42 b Fp(An)28
b(in)n(teger)f(in)h(the)g(range)e([0,p)r(opulation)h(size])150
2612 y Fq(10.33.2.5)92 b(template)p Fo(<)p Fq(class)30
b(EV)m(O,)i(class)g(MUTFUNC)h(=)f(MutationOp)s(erator)p
Fo(<)p Fq(t)m(yp)s(ename)611 2712 y(EV)m(O::gene)p 1064
2712 V 33 w(t)m(yp)s(e)p Fo(>>)g Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p
Fo(<)d Fq(EV)m(O,)j(MUTFUNC)611 2812 y Fo(>)p Fq(::SetFitnessFix)e
(\(GAFitnessFixT)m(yp)s(e)h Fe(f)p Fq(\))72 b Fi([inline])150
3015 y Fp(Sets)28 b(the)g(metho)r(d)g(b)n(y)f(whic)n(h)h(\014tness)f
(scores)f Fo(<)i Fp(0)f(are)f(treated.)142 3236 y Fq(See)31
b(also:)311 3336 y(GAFitnessFixT)m(yp)s(e)150 3703 y(10.33.2.6)92
b(template)p Fo(<)p Fq(class)30 b(EV)m(O,)i(class)g(MUTFUNC)h(=)f
(MutationOp)s(erator)p Fo(<)p Fq(t)m(yp)s(ename)611 3803
y(EV)m(O::gene)p 1064 3803 V 33 w(t)m(yp)s(e)p Fo(>>)g
Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p Fo(<)d Fq(EV)m(O,)j(MUTFUNC)611
3902 y Fo(>)p Fq(::SetFitnessMetho)s(d)d(\(GAFitnessMetho)s(dT)m(yp)s
(e)h Fe(f)p Fq(\))72 b Fi([inline])150 4105 y Fp(Sets)28
b(the)g(metho)r(d)g(b)n(y)f(whic)n(h)h(\014tness)f(scores)f(are)h
(used.)142 4327 y Fq(See)k(also:)311 4426 y(GAFitnessMetho)s(dT)m(yp)s
(e)150 4794 y(10.33.2.7)92 b(template)p Fo(<)p Fq(class)30
b(EV)m(O,)i(class)g(MUTFUNC)h(=)f(MutationOp)s(erator)p
Fo(<)p Fq(t)m(yp)s(ename)611 4894 y(EV)m(O::gene)p 1064
4894 V 33 w(t)m(yp)s(e)p Fo(>>)g Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p
Fo(<)d Fq(EV)m(O,)j(MUTFUNC)611 4993 y Fo(>)p Fq(::SetMutation)e
(\(\015oat)j Fe(m)p Fq(\))71 b Fi([inline])150 5196 y
Fp(Sets)28 b(the)g(rate)f(of)g(m)n(utation.)142 5401
y Fq(P)m(arameters:)311 5500 y Fe(m)42 b Fp(A)28 b(\015oat)f(in)h(the)g
(range)e([0,1])p 150 5723 4034 4 v 150 5823 a Fn(Generated)g(on)e(Sun)h
(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 148 156
148 155 bop -358 70 a Fq(148)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a(10.33.2.8)92 b(template)p Fo(<)p Fq(class)30 b(EV)m(O,)i(class)g
(MUTFUNC)h(=)f(MutationOp)s(erator)p Fo(<)p Fq(t)m(yp)s(ename)611
432 y(EV)m(O::gene)p 1064 432 29 4 v 33 w(t)m(yp)s(e)p
Fo(>>)g Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p Fo(<)d
Fq(EV)m(O,)j(MUTFUNC)611 532 y Fo(>)p Fq(::SetP)m(arameter)f(\(GAIn)m
(tP)m(aramT)m(yp)s(e)j Fe(p)p Fq(,)d(in)m(t)h Fe(n)p
Fq(\))71 b Fi([inline])150 740 y Fp(Sets)28 b(an)f(in)n(teger-v)-5
b(alued)26 b(parameter.)142 977 y Fq(P)m(arameters:)311
1076 y Fe(p)42 b Fp(The)28 b(parameter)e(to)h(set)311
1226 y Fe(n)42 b Fp(The)28 b(v)-5 b(alue)27 b(to)h(set)f(it)h(to.)142
1447 y Fq(See)j(also:)311 1547 y(GAIn)m(tP)m(aramT)m(yp)s(e)150
1954 y(10.33.2.9)92 b(template)p Fo(<)p Fq(class)30 b(EV)m(O,)i(class)g
(MUTFUNC)h(=)f(MutationOp)s(erator)p Fo(<)p Fq(t)m(yp)s(ename)611
2054 y(EV)m(O::gene)p 1064 2054 V 33 w(t)m(yp)s(e)p Fo(>>)g
Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p Fo(<)d Fq(EV)m(O,)j(MUTFUNC)611
2154 y Fo(>)p Fq(::SetP)m(arameter)f(\(GAFltP)m(aramT)m(yp)s(e)i
Fe(p)p Fq(,)e(\015oat)i Fe(f)p Fq(\))71 b Fi([inline])150
2361 y Fp(Sets)28 b(a)f(real-v)-5 b(alued)26 b(parameter.)142
2598 y Fq(P)m(arameters:)311 2698 y Fe(p)42 b Fp(The)28
b(parameter)e(to)h(set)311 2848 y Fe(f)42 b Fp(The)28
b(v)-5 b(alue)27 b(to)h(set)f(it)h(to.)142 3085 y Fq(See)j(also:)311
3185 y(GAFltP)m(aramT)m(yp)s(e)150 3592 y(10.33.2.10)92
b(template)p Fo(<)p Fq(class)27 b(EV)m(O,)i(class)f(MUTFUNC)i(=)g
(MutationOp)s(erator)p Fo(<)p Fq(t)m(yp)s(ename)659 3692
y(EV)m(O::gene)p 1112 3692 V 33 w(t)m(yp)s(e)p Fo(>>)f
Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p Fo(<)d Fq(EV)m(O,)j(MUTFUNC)659
3792 y Fo(>)p Fq(::SetPrin)m(tSt)m(yle)i(\(in)m(t)h Fe(p)p
Fq(\))71 b Fi([inline])150 3999 y Fp(Sets)28 b(the)g(output)g(st)n(yle)
f(of)h(the)g(GA's)f(T)-7 b(oString)27 b(metho)r(d.)142
4237 y Fq(See)k(also:)311 4337 y(GAPrin)m(tSt)m(yleT)m(yp)s(e)150
4744 y(10.33.2.11)92 b(template)p Fo(<)p Fq(class)27
b(EV)m(O,)i(class)f(MUTFUNC)i(=)g(MutationOp)s(erator)p
Fo(<)p Fq(t)m(yp)s(ename)659 4844 y(EV)m(O::gene)p 1112
4844 V 33 w(t)m(yp)s(e)p Fo(>>)f Fq(v)m(oid)g(BEAST::GeneticAlgorithm)p
Fo(<)d Fq(EV)m(O,)j(MUTFUNC)659 4943 y Fo(>)p Fq(::SetSelection)h
(\(GASelectionT)m(yp)s(e)h Fe(s)p Fq(\))72 b Fi([inline])150
5151 y Fp(Sets)28 b(the)g(selection)f(op)r(erator.)142
5389 y Fq(See)k(also:)311 5488 y(GASelectionT)m(yp)s(e)p
-358 5723 4034 4 v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 149 157
149 156 bop 150 70 a Fq(10.33)30 b(BEAST::GeneticAlgorithm)p
Fo(<)e Fq(EV)m(O,)k(MUTFUNC)g Fo(>)g Fq(Class)f(T)-8
b(emplate)30 b(Reference)439 b(149)p 150 103 4034 4 v
150 333 a(10.33.2.12)92 b(template)p Fo(<)p Fq(class)27
b(EV)m(O,)i(class)f(MUTFUNC)i(=)g(MutationOp)s(erator)p
Fo(<)p Fq(t)m(yp)s(ename)659 432 y(EV)m(O::gene)p 1112
432 29 4 v 33 w(t)m(yp)s(e)p Fo(>>)f Fq(v)m(oid)g
(BEAST::GeneticAlgorithm)p Fo(<)d Fq(EV)m(O,)j(MUTFUNC)659
532 y Fo(>)p Fq(::SetSub)s(elitism)e(\(in)m(t)32 b Fe(s)p
Fq(\))71 b Fi([inline])150 732 y Fp(Sets)36 b(the)f(sub)r(elitism)i(v)
-5 b(alue,)37 b(whic)n(h)e(decides)h(ho)n(w)e(man)n(y)h(of)h(the)f
(least)g(\014t)h(individuals)g(are)e(barred)g(from)150
832 y(repro)r(ducing.)142 1044 y Fq(P)m(arameters:)311
1143 y Fe(s)42 b Fp(An)28 b(in)n(teger)f(in)h(the)g(range)e([0,p)r
(opulation)h(size])150 1373 y(The)h(do)r(cumen)n(tation)f(for)g(this)h
(class)f(w)n(as)f(generated)h(from)g(the)h(follo)n(wing)e(\014le:)275
1586 y Fk(\210)42 b Fq(geneticalgorithm.h)p 150 5723
4034 4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 150 158
150 157 bop -358 70 a Fq(150)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.34)136 b(BEAST::GeneticAlgorithm)p Fb(<)185
b Fl(EV)l(O,)f(MUTFUNC)591 482 y Fb(>)p Fl(::ev)l(o)p
959 482 41 4 v 50 w(sort)p Fb(<)p 1372 482 V 94 w Fl(EV)l(O)45
b Fb(>)g Fl(Struct)f(T)-11 b(emplate)46 b(Reference)150
711 y Fp(A)28 b(little)g(function)g(ob)5 b(ject)28 b(to)f(enable)h(us)f
(to)h(sort)e(the)i(p)r(opulation)g(b)n(y)f(\014tness.)150
858 y Fi(#include)40 b Fo(<)p Fi(geneticalgorithm)o(.h)o
Fo(>)150 1138 y Fj(Public)c(Mem)m(b)s(er)h(F)-9 b(unctions)275
1324 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(op)s(erator\(\))h
Fp(\()p 1038 1324 25 4 v 30 w(EV)n(O)f Fh(\003)p Fp(const)g(&p1,)p
1739 1324 V 57 w(EV)n(O)f Fh(\003)p Fp(const)h(&p2\))150
1604 y Fj(10.34.1)113 b(Detailed)36 b(Description)150
1804 y Fq(template)p Fo(<)p Fq(class)21 b(EV)m(O,)j(class)f(MUTFUNC)i
(=)f(MutationOp)s(erator)p Fo(<)p Fq(t)m(yp)s(ename)e(EV)m(O::gene)p
3616 1804 29 4 v 33 w(-)150 1904 y(t)m(yp)s(e)p Fo(>>)p
Fq(template)p Fo(<)p Fq(class)p 1114 1904 V 53 w(EV)m(O)p
Fo(>)g Fq(struct)h(BEAST::GeneticAlgorithm)p Fo(<)18
b Fq(EV)m(O,)j(MUTFUNC)150 2004 y Fo(>)p Fq(::ev)m(o)p
414 2004 V 33 w(sort)p Fo(<)p 705 2004 V 66 w Fq(EV)m(O)32
b Fo(>)150 2204 y Fp(A)c(little)g(function)g(ob)5 b(ject)28
b(to)f(enable)h(us)f(to)h(sort)e(the)i(p)r(opulation)g(b)n(y)f
(\014tness.)150 2351 y(The)h(do)r(cumen)n(tation)f(for)g(this)h(struct)
f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
2564 y Fk(\210)42 b Fq(geneticalgorithm.h)p -358 5723
4034 4 v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 151 159
151 158 bop 150 70 a Fq(10.35)30 b(BEAST::Group)p Fo(<)p
1145 70 29 4 v 66 w Fq(Ob)5 b(jT)m(yp)s(e)32 b Fo(>)g
Fq(Class)f(T)-8 b(emplate)30 b(Reference)1285 b(151)p
150 103 4034 4 v 150 333 a Fl(10.35)136 b(BEAST::Group)p
Fb(<)p 1637 333 41 4 v 88 w Fl(Ob)7 b(jT)l(yp)t(e)41
b Fb(>)h Fl(Class)g(T)-11 b(emplate)42 b(Refer-)591 482
y(ence)150 712 y Fp(A)24 b(simple)f(class)g(whic)n(h)g(creates)f(and)h
(main)n(tains)g(a)g(v)n(ector)f(of)h(ob)5 b(jects)23
b(of)g(the)h(sp)r(eci\014ed)g(t)n(yp)r(e)f(and)h(adds)f(them)150
811 y(to)k(the)h(w)n(orld)f(eac)n(h)g(round.)150 958
y Fi(#include)40 b Fo(<)p Fi(simulation.h)p Fo(>)150
1105 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::Group)p
Fo(<)p 1695 1105 25 4 v 57 w Fp(Ob)5 b(jT)n(yp)r(e)27
b Fo(>)p Fp(:)1340 1637 y @beginspecial 35 @llx 35 @lly
277 @urx 121 @ury 1374 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Group__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 277 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 277 121
%%PageOrientation: Portrait
gsave
35 35 242 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node522
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 38 8 moveto
193 8 lineto
193 23 lineto
38 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 38 8 moveto
193 8 lineto
193 23 lineto
38 23 lineto
closepath
stroke
gsave 10 dict begin
115 11 moveto 145 -0.5 (BEAST::Group< _ObjType >) alignedtext
end grestore
end grestore

%	Node523
[ /Rect [ 0 61 102 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1SimObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
102 60 lineto
102 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
51 63 moveto 92 -0.5 (BEAST::SimObject) alignedtext
end grestore
end grestore

%	Node523 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 54 moveto
79 45 95 32 105 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 52 moveto
60 60 lineto
69 55 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node524
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 120 60 moveto
240 60 lineto
240 75 lineto
120 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
180 63 moveto 110 -0.5 (vector< _ObjType * >) alignedtext
end grestore
end grestore

%	Node524 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 163 54 moveto
151 45 135 32 125 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 161 55 moveto
170 60 lineto
164 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1968 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::Group)p Fo(<)p 1782 1968 V 56 w Fp(Ob)5 b(jT)n(yp)r(e)27
b Fo(>)p Fp(:)1340 2832 y @beginspecial 35 @llx 35 @lly
277 @urx 191 @ury 1374 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Group__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 277 191
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 277 191
%%PageOrientation: Portrait
gsave
35 35 242 156 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node525
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 70 8 moveto
225 8 lineto
225 23 lineto
70 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 70 8 moveto
225 8 lineto
225 23 lineto
70 23 lineto
closepath
stroke
gsave 10 dict begin
147 11 moveto 145 -0.5 (BEAST::Group< _ObjType >) alignedtext
end grestore
end grestore

%	Node526
[ /Rect [ 0 63 102 77 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1SimObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 62 moveto
102 62 lineto
102 77 lineto
0 77 lineto
closepath
stroke
gsave 10 dict begin
51 65 moveto 92 -0.5 (BEAST::SimObject) alignedtext
end grestore
end grestore

%	Node526 -> Node525
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 58 moveto
91 48 117 33 133 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 55 moveto
64 62 lineto
74 60 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node527
[ /Rect [ 10 131 92 145 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1World.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 10 130 moveto
93 130 lineto
93 145 lineto
10 145 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
51 133 moveto 73 -0.5 (BEAST::World) alignedtext
end grestore
end grestore

%	Node527 -> Node526
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 51 122 moveto
51 108 51 89 51 78 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 49 120 moveto
51 130 lineto
54 120 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
80 100 moveto 48 -0.5 (myWorld) alignedtext
end grestore
end grestore

%	Node543
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 120 62 moveto
240 62 lineto
240 77 lineto
120 77 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
180 65 moveto 110 -0.5 (vector< _ObjType * >) alignedtext
end grestore
end grestore

%	Node543 -> Node525
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 170 54 moveto
164 44 157 32 152 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 168 55 moveto
175 62 lineto
172 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3197 a Fj(Public)36 b(T)m(yp)s(es)275
3386 y Fk(\210)42 b Fp(t)n(yp)r(edef)p 658 3386 V 58
w(Ob)5 b(jT)n(yp)r(e)27 b Fq(ob)5 b(ject)p 1302 3386
29 4 v 35 w(t)m(yp)s(e)150 3668 y Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3856 y Fk(\210)42 b Fq(Group)27 b Fp(\(in)n(t)i(s=0\))
476 3982 y Fg(Sets)f(the)h Ff(Group)g Fg(up)e(with)h(a)g(numb)l(er)g
(of)f(obje)l(cts)i(of)e(the)i(native)f(typ)l(e.)275 4182
y Fk(\210)42 b Fp(virtual)27 b Fh(\030)p Fq(Group)g Fp(\(\))476
4308 y Fg(Destructor)j(-)e(deletes)h(al)t(l)e(the)h(obje)l(cts)h(in)e
(the)h(gr)l(oup.)275 4508 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(AddT)-8 b(oW)g(orld)28 b Fp(\(\))476 4634
y Fg(A)l(dds)g(the)g(c)l(ontents)i(of)d(the)i Ff(Group)g
Fg(to)f(the)g Ff(W)-7 b(orld)p Fg(.)275 4835 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(F)-8 b(orEac)m(h)29 b Fp(\(v)n(oid\()p
1128 4835 25 4 v 30 w(Ob)5 b(jT)n(yp)r(e::)p Fh(\003)p
Fp(metho)r(d\)\(\)\))476 4960 y Fg(Cal)t(ls)27 b(the)h(sp)l(e)l
(ci\014e)l(d)h(memb)l(er)f(function)g(on)g(e)l(ach)g(obje)l(ct)h(in)e
(the)i Ff(Group)p Fg(.)275 5161 y Fk(\210)42 b Fp(template)p
Fo(<)p Fp(t)n(yp)r(ename)p 1126 5161 V 57 w(Arg)p Fo(>)26
b Fp(v)n(oid)h Fq(F)-8 b(orEac)m(h)29 b Fp(\(v)n(oid\()p
2150 5161 V 30 w(Ob)5 b(jT)n(yp)r(e::)p Fh(\003)p Fp(metho)r(d\)\()p
2934 5161 V 30 w(Arg\),)p 3183 5161 V 57 w(Arg)27 b(arg\))476
5287 y Fg(Cal)t(ls)g(the)h(sp)l(e)l(ci\014e)l(d)h(memb)l(er)f(function)
g(on)g(e)l(ach)g(obje)l(ct)h(in)e(the)i(gr)l(oup,)f(p)l(assing)g(an)g
(ar)l(gument.)275 5487 y Fk(\210)42 b Fp(template)p Fo(<)p
Fp(t)n(yp)r(ename)p 1126 5487 V 57 w(Result)p Fo(>)27
b Fp(v)n(oid)g Fq(F)-8 b(orEac)m(h)29 b Fp(\()p 2061
5487 V 30 w(Result\()p 2355 5487 V 31 w(Ob)5 b(jT)n(yp)r(e::)p
Fh(\003)p Fp(metho)r(d\)\(\)\))476 5613 y Fg(Cal)t(ls)27
b(the)h(sp)l(e)l(ci\014e)l(d)h(memb)l(er)f(function)g(on)g(e)l(ach)g
(obje)l(ct)h(in)e(the)i Ff(Group)p Fg(.)p 150 5723 4034
4 v 150 5823 a Fn(Generated)d(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 152 160
152 159 bop -358 70 a Fq(152)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
457 a Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)p
1210 457 25 4 v 141 w(Result,)134 b(t)n(yp)r(ename)p
2094 457 V 142 w(Arg)p Fo(>)111 b Fp(v)n(oid)h Fq(F)-8
b(orEac)m(h)113 b Fp(\()p 3187 457 V 30 w(Result\()p
3481 457 V 31 w(Ob)5 b(j-)358 556 y(T)n(yp)r(e::)p Fh(\003)p
Fp(metho)r(d\)\()p 976 556 V 30 w(Arg\),)p 1225 556 V
57 w(Arg)27 b(arg\))476 697 y Fg(Cal)t(ls)g(the)h(sp)l(e)l(ci\014e)l(d)
h(memb)l(er)f(function)g(on)g(e)l(ach)g(obje)l(ct)h(in)e(the)i(gr)l
(oup,)f(p)l(assing)g(an)g(ar)l(gument.)275 912 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(Serialise)h Fp(\(std::ostream)g(&\))g
(const)275 1036 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(Unserialise)h Fp(\(std::istream)g(&\))150 1350 y Fj(10.35.1)113
b(Detailed)36 b(Description)150 1558 y Fq(template)p
Fo(<)p Fq(class)p 810 1558 29 4 v 64 w(Ob)5 b(jT)m(yp)s(e)p
Fo(>)32 b Fq(class)g(BEAST::Group)p Fo(<)p 2276 1558
V 65 w Fq(Ob)5 b(jT)m(yp)s(e)32 b Fo(>)150 1765 y Fp(A)24
b(simple)f(class)g(whic)n(h)g(creates)f(and)h(main)n(tains)g(a)g(v)n
(ector)f(of)h(ob)5 b(jects)23 b(of)g(the)h(sp)r(eci\014ed)g(t)n(yp)r(e)
f(and)h(adds)f(them)150 1865 y(to)k(the)h(w)n(orld)f(eac)n(h)g(round.)
150 2012 y(Note)h(that)g Fq(Group)h Fp(is)e(also)g(resp)r(onsible)h
(for)f(deleting)h(the)g(ob)5 b(jects)28 b(it)g(con)n(tains,)g(if)g(y)n
(ou)f(attempt)i(to)f(delete)150 2111 y(an)n(y)f(of)g(the)h(ob)5
b(jects)27 b(in)h(a)g Fq(Group)f Fp(y)n(ourself,)g(there)g(will)h(lik)n
(ely)f(b)r(e)h(segmen)n(tation)f(faults.)142 2322 y Fq(P)m(arameters:)p
317 2422 30 4 v 347 2422 a Fe(ObjT)-7 b(yp)i(e)41 b Fp(The)27
b(t)n(yp)r(e)h(of)g(ob)5 b(jects)27 b(to)g(create.)142
2659 y Fq(See)k(also:)311 2758 y(P)m(opulation)311 2858
y(SimOb)5 b(ject)150 3172 y Fj(10.35.2)113 b(Constructor)36
b(&)i(Destructor)e(Do)s(cumen)m(tation)150 3379 y Fq(10.35.2.1)92
b(template)p Fo(<)p Fq(class)p 1277 3379 29 4 v 70 w(Ob)5
b(jT)m(yp)s(e)p Fo(>)38 b Fq(virtual)g(BEAST::Group)p
Fo(<)p 2849 3379 V 71 w Fq(Ob)5 b(jT)m(yp)s(e)611 3479
y Fo(>)p Fq(::)p Fh(\030)p Fq(Group)31 b(\(\))71 b Fi([inline,)40
b(virtual])150 3687 y Fp(Destructor)27 b(-)g(deletes)h(all)f(the)h(ob)5
b(jects)27 b(in)h(the)g(group.)150 4001 y Fj(10.35.3)113
b(Mem)m(b)s(er)37 b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150
4208 y Fq(10.35.3.1)92 b(template)p Fo(<)p Fq(class)p
1275 4208 V 68 w(Ob)5 b(jT)m(yp)s(e)p Fo(>)35 b Fq(template)p
Fo(<)p Fq(t)m(yp)s(ename)p 2656 4208 V 67 w(Result,)f(t)m(yp)s(ename)p
611 4308 V 640 4308 a(Arg)p Fo(>)e Fq(v)m(oid)g(BEAST::Group)p
Fo(<)p 1849 4308 V 66 w Fq(Ob)5 b(jT)m(yp)s(e)33 b Fo(>)p
Fq(::F)-8 b(orEac)m(h)32 b(\()p 2817 4308 V 34 w(Result\()p
3159 4308 V 33 w(Ob)5 b(jT)m(yp)s(e::)p Fh(\003)611 4407
y Fe(metho)-5 b(d)p Fq(\)\()p 987 4407 V 36 w(Arg\),)p
1277 4407 V 66 w(Arg)32 b Fe(ar)-5 b(g)p Fq(\))71 b Fi([inline])150
4615 y Fp(Calls)27 b(the)h(sp)r(eci\014ed)g(mem)n(b)r(er)f(function)i
(on)e(eac)n(h)g(ob)5 b(ject)27 b(in)h(the)g(group,)e(passing)h(an)g
(argumen)n(t.)150 4762 y(The)h(mem)n(b)r(er)f(function)h(ma)n(y)f(b)r
(e)h(one)f(returning)g(a)g(result,)h(but)g(the)g(result)f(will)h(b)r(e)
g(discarded.)150 5059 y Fq(10.35.3.2)92 b(template)p
Fo(<)p Fq(class)p 1277 5059 V 70 w(Ob)5 b(jT)m(yp)s(e)p
Fo(>)38 b Fq(template)p Fo(<)p Fq(t)m(yp)s(ename)p 2664
5059 V 69 w(Result)p Fo(>)e Fq(v)m(oid)611 5159 y(BEAST::Group)p
Fo(<)p 1358 5159 V 66 w Fq(Ob)5 b(jT)m(yp)s(e)33 b Fo(>)p
Fq(::F)-8 b(orEac)m(h)32 b(\()p 2325 5159 V 35 w(Result\()p
2668 5159 V 33 w(Ob)5 b(jT)m(yp)s(e::)p Fh(\003)32 b
Fe(metho)-5 b(d)p Fq(\)\(\)\))611 5259 y Fi([inline])150
5466 y Fp(Calls)27 b(the)h(sp)r(eci\014ed)g(mem)n(b)r(er)f(function)i
(on)e(eac)n(h)g(ob)5 b(ject)27 b(in)h(the)g Fq(Group)p
Fp(.)150 5613 y(The)g(mem)n(b)r(er)f(function)h(ma)n(y)f(b)r(e)h(one)f
(returning)g(a)g(result,)h(but)g(the)g(result)f(will)h(b)r(e)g
(discarded.)p -358 5723 4034 4 v -192 5823 a Fn(Generated)e(on)f(Sun)f
(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 153 161
153 160 bop 150 70 a Fq(10.35)30 b(BEAST::Group)p Fo(<)p
1145 70 29 4 v 66 w Fq(Ob)5 b(jT)m(yp)s(e)32 b Fo(>)g
Fq(Class)f(T)-8 b(emplate)30 b(Reference)1285 b(153)p
150 103 4034 4 v 150 333 a(10.35.3.3)92 b(template)p
Fo(<)p Fq(class)p 1279 333 29 4 v 72 w(Ob)5 b(jT)m(yp)s(e)p
Fo(>)39 b Fq(template)p Fo(<)p Fq(t)m(yp)s(ename)p 2668
333 V 70 w(Arg)p Fo(>)g Fq(v)m(oid)611 432 y(BEAST::Group)p
Fo(<)p 1353 432 V 61 w Fq(Ob)5 b(jT)m(yp)s(e)29 b Fo(>)p
Fq(::F)-8 b(orEac)m(h)27 b(\(v)m(oid\()p 2523 432 V 35
w(Ob)5 b(jT)m(yp)s(e::)p Fh(\003)27 b Fe(metho)-5 b(d)p
Fq(\)\()p 3423 432 V 35 w(Arg\),)p 611 532 V 640 532
a(Arg)32 b Fe(ar)-5 b(g)p Fq(\))71 b Fi([inline])150
732 y Fp(Calls)27 b(the)h(sp)r(eci\014ed)g(mem)n(b)r(er)f(function)i
(on)e(eac)n(h)g(ob)5 b(ject)27 b(in)h(the)g(group,)e(passing)h(an)g
(argumen)n(t.)150 995 y Fq(10.35.3.4)92 b(template)p
Fo(<)p Fq(class)p 1272 995 V 65 w(Ob)5 b(jT)m(yp)s(e)p
Fo(>)33 b Fq(v)m(oid)g(BEAST::Group)p Fo(<)p 2725 995
V 66 w Fq(Ob)5 b(jT)m(yp)s(e)33 b Fo(>)p Fq(::F)-8 b(orEac)m(h)611
1095 y(\(v)m(oid\()p 866 1095 V 35 w(Ob)5 b(jT)m(yp)s(e::)p
Fh(\003)31 b Fe(metho)-5 b(d)p Fq(\)\(\)\))73 b Fi([inline])150
1296 y Fp(Calls)27 b(the)h(sp)r(eci\014ed)g(mem)n(b)r(er)f(function)i
(on)e(eac)n(h)g(ob)5 b(ject)27 b(in)h(the)g Fq(Group)p
Fp(.)150 1442 y(The)g(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n
(as)f(generated)h(from)g(the)h(follo)n(wing)e(\014le:)275
1656 y Fk(\210)42 b Fq(sim)m(ulation.h)p 150 5723 4034
4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 154 162
154 161 bop -358 70 a Fq(154)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.36)136 b(BEAST::Matc)l(hAdapter)p Fb(<)p
2164 333 41 4 v 132 w Fl(F)-11 b(unctor)84 b Fb(>)g Fl(Struct)g(T)-11
b(em-)591 482 y(plate)46 b(Reference)150 711 y Fp(Allo)n(ws)27
b(an)n(y)g(unary)g(predicate)g(to)g(b)r(e)h(adapted)f(for)g(use)h(as)f
(a)g(matc)n(hing)g(function.)150 858 y Fi(#include)40
b Fo(<)p Fi(sensorfunctors.h)o Fo(>)150 1005 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Matc)n(hAdapter)p Fo(<)p 1992
1005 25 4 v 57 w Fp(F)-7 b(unctor)27 b Fo(>)p Fp(:)1443
1549 y @beginspecial 35 @llx 35 @lly 227 @urx 121 @ury
1125 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MatchAdapter__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 227 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 227 121
%%PageOrientation: Portrait
gsave
35 35 192 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node544
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
190 8 lineto
190 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
190 8 lineto
190 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
95 11 moveto 180 -0.5 (BEAST::MatchAdapter< _Functor >) alignedtext
end grestore
end grestore

%	Node545
[ /Rect [ 16 61 174 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 16 60 moveto
175 60 lineto
175 75 lineto
16 75 lineto
closepath
stroke
gsave 10 dict begin
95 63 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node545 -> Node544
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 95 51 moveto
95 42 95 31 95 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 93 50 moveto
95 60 lineto
98 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1879 a(Collab)r(oration)f(diagram)g(for)h(BEAST::Matc)
n(hAdapter)p Fo(<)p 2079 1879 V 56 w Fp(F)-7 b(unctor)28
b Fo(>)p Fp(:)1319 2483 y @beginspecial 35 @llx 35 @lly
287 @urx 137 @ury 1424 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MatchAdapter__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 287 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 287 137
%%PageOrientation: Portrait
gsave
35 35 252 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node546
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 46 8 moveto
236 8 lineto
236 23 lineto
46 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 46 8 moveto
236 8 lineto
236 23 lineto
46 23 lineto
closepath
stroke
gsave 10 dict begin
141 11 moveto 180 -0.5 (BEAST::MatchAdapter< _Functor >) alignedtext
end grestore
end grestore

%	Node547
[ /Rect [ 0 77 158 91 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 76 moveto
159 76 lineto
159 91 lineto
0 91 lineto
closepath
stroke
gsave 10 dict begin
79 79 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node547 -> Node546
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 70 moveto
105 57 124 35 134 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 91 67 moveto
86 76 lineto
95 71 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node548
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 176 76 moveto
231 76 lineto
231 91 lineto
176 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
203 79 moveto 45 -0.5 (_Functor) alignedtext
end grestore
end grestore

%	Node548 -> Node546
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 190 70 moveto
177 57 158 35 148 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 187 71 moveto
196 76 lineto
191 67 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
203 46 moveto 37 -0.5 (functor) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2846 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3032 y Fk(\210)42 b Fq(Matc)m(hAdapter)29
b Fp(\()p 1034 3032 V 30 w(F)-7 b(unctor)28 b(f)6 b(\))275
3140 y Fk(\210)42 b Fp(virtual)27 b(b)r(o)r(ol)g Fq(op)s(erator\(\))h
Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(input\))150
3420 y Fj(Public)36 b(A)m(ttributes)275 3606 y Fk(\210)p
363 3606 V 71 w Fp(F)-7 b(unctor)28 b Fq(functor)150
3886 y Fj(10.36.1)113 b(Detailed)36 b(Description)150
4087 y Fq(template)p Fo(<)p Fq(class)p 810 4087 29 4
v 64 w(F)-8 b(unctor)p Fo(>)32 b Fq(struct)h(BEAST::Matc)m(hAdapter)p
Fo(<)p 2628 4087 V 66 w Fq(F)-8 b(unctor)33 b Fo(>)150
4287 y Fp(Allo)n(ws)27 b(an)n(y)g(unary)g(predicate)g(to)g(b)r(e)h
(adapted)f(for)g(use)h(as)f(a)g(matc)n(hing)g(function.)150
4434 y(This)k(includes)f(all)h(unary)e(functors)i(describ)r(ed)f(b)n(y)
h(the)g(STL)f(and)h(an)n(y)f(binary)f(functors)i(after)f(adaptation)150
4534 y(with)j(bind1st)g(or)e(bind2nd.)52 b(The)33 b(ptr)p
1413 4534 25 4 v 30 w(fun)g(adapter)e(ma)n(y)h(b)r(e)h(used)g(to)f
(turn)h(an)n(y)f(function)h(in)n(to)f(a)g(scaling)150
4633 y(functor.)150 4780 y(The)c(do)r(cumen)n(tation)f(for)g(this)h
(struct)f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
4993 y Fk(\210)42 b Fp(sensorfunctors.h)p -358 5723 4034
4 v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 155 163
155 162 bop 150 70 a Fq(10.37)30 b(BEAST::Matc)m(hComp)s(oseAnd)g
(Struct)j(Reference)1702 b(155)p 150 103 4034 4 v 150
333 a Fl(10.37)136 b(BEAST::Matc)l(hComp)t(oseAnd)44
b(Struct)g(Reference)150 562 y Fp(Chains)30 b(an)n(y)f(n)n(um)n(b)r(er)
h(of)g(matc)n(hing)f(functions)i(together)e(suc)n(h)h(that)g(only)g(if)
h(all)e(of)h(them)h(are)e(true)h(for)g(the)150 661 y(ob)5
b(ject)27 b(b)r(eing)h(matc)n(hed,)g Fq(Matc)m(hComp)s(oseAnd)e
Fp(will)h(return)h(true.)150 808 y Fi(#include)40 b Fo(<)p
Fi(sensorfunctors.h)o Fo(>)150 955 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Matc)n(hComp)r(oseAnd:)1107
1470 y @beginspecial 35 @llx 35 @lly 389 @urx 121 @ury
1932 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MatchComposeAnd__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 389 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 389 121
%%PageOrientation: Portrait
gsave
35 35 354 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node549
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 96 8 moveto
246 8 lineto
246 23 lineto
96 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 96 8 moveto
246 8 lineto
246 23 lineto
96 23 lineto
closepath
stroke
gsave 10 dict begin
171 11 moveto 140 -0.5 (BEAST::MatchComposeAnd) alignedtext
end grestore
end grestore

%	Node550
[ /Rect [ 0 61 158 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
159 60 lineto
159 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
79 63 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node550 -> Node549
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 101 56 moveto
118 46 142 32 158 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 101 53 moveto
93 60 lineto
103 58 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node551
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 176 60 moveto
353 60 lineto
353 75 lineto
176 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
264 63 moveto 167 -0.5 (vector< SensorMatchFunction * >) alignedtext
end grestore
end grestore

%	Node551 -> Node549
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 242 56 moveto
224 46 200 32 184 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 240 58 moveto
250 60 lineto
242 53 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1800 a(Collab)r(oration)f(diagram)g(for)h(BEAST::Matc)
n(hComp)r(oseAnd:)1107 2315 y @beginspecial 35 @llx 35
@lly 389 @urx 121 @ury 1932 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MatchComposeAnd__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 389 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 389 121
%%PageOrientation: Portrait
gsave
35 35 354 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node552
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 96 8 moveto
246 8 lineto
246 23 lineto
96 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 96 8 moveto
246 8 lineto
246 23 lineto
96 23 lineto
closepath
stroke
gsave 10 dict begin
171 11 moveto 140 -0.5 (BEAST::MatchComposeAnd) alignedtext
end grestore
end grestore

%	Node553
[ /Rect [ 0 61 158 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
159 60 lineto
159 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
79 63 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node553 -> Node552
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 101 56 moveto
118 46 142 32 158 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 101 53 moveto
93 60 lineto
103 58 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node554
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 176 60 moveto
353 60 lineto
353 75 lineto
176 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
264 63 moveto 167 -0.5 (vector< SensorMatchFunction * >) alignedtext
end grestore
end grestore

%	Node554 -> Node552
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 242 56 moveto
224 46 200 32 184 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 240 58 moveto
250 60 lineto
242 53 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2678 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2864 y Fk(\210)42 b Fq(Matc)m(hComp)s(oseAnd)26
b Fp(\()p Fq(SensorMatc)m(hF)-8 b(unction)28 b Fh(\003)p
Fp(\014rst,)f Fq(SensorMatc)m(hF)-8 b(unction)28 b Fh(\003)p
Fp(second\))275 2972 y Fk(\210)42 b Fp(virtual)27 b(b)r(o)r(ol)g
Fq(op)s(erator\(\))h Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28
b Fh(\003)p Fp(ob)5 b(j\))150 3252 y Fj(10.37.1)113 b(Detailed)36
b(Description)150 3453 y Fp(Chains)30 b(an)n(y)f(n)n(um)n(b)r(er)h(of)g
(matc)n(hing)f(functions)i(together)e(suc)n(h)h(that)g(only)g(if)h(all)
e(of)h(them)h(are)e(true)h(for)g(the)150 3552 y(ob)5
b(ject)27 b(b)r(eing)h(matc)n(hed,)g Fq(Matc)m(hComp)s(oseAnd)e
Fp(will)h(return)h(true.)150 3699 y(The)h(\014rst)g(t)n(w)n(o)g
(functors)f(ma)n(y)h(b)r(e)h(added)f(in)g(the)h(constructor.)40
b(If)29 b(more)g(are)f(needed,)i(they)f(ma)n(y)g(b)r(e)g(added)150
3799 y(using)e(push)p 543 3799 25 4 v 30 w(bac)n(k.)36
b(Because)27 b Fq(Matc)m(hComp)s(oseAnd)f Fp(is)h(deriv)n(ed)g(from)g
(std::v)n(ector,)g(its)h(con)n(ten)n(ts)f(ma)n(y)g(b)r(e)150
3898 y(manipulated)h(just)g(lik)n(e)f(an)n(y)g(other)g(v)n(ector.)150
4045 y(The)h(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g
(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
4258 y Fk(\210)42 b Fp(sensorfunctors.h)p 150 5723 4034
4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 156 164
156 163 bop -358 70 a Fq(156)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.38)136 b(BEAST::Matc)l(hComp)t(oseOr)45 b(Struct)f
(Reference)150 562 y Fp(Chains)29 b(an)n(y)f(n)n(um)n(b)r(er)g(of)h
(matc)n(hing)g(functions)g(together)f(suc)n(h)h(that)g(should)g(an)n(y)
f(of)h(them)g(b)r(e)g(true)g(for)g(the)150 661 y(ob)5
b(ject)27 b(b)r(eing)h(matc)n(hed,)g Fq(Matc)m(hComp)s(oseOr)d
Fp(will)j(return)f(true.)150 808 y Fi(#include)40 b Fo(<)p
Fi(sensorfunctors.h)o Fo(>)150 955 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Matc)n(hComp)r(oseOr:)1107 1470
y @beginspecial 35 @llx 35 @lly 389 @urx 121 @ury 1932
@rwi @setspecial
%%BeginDocument: structBEAST_1_1MatchComposeOr__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 389 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 389 121
%%PageOrientation: Portrait
gsave
35 35 354 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node555
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 101 8 moveto
242 8 lineto
242 23 lineto
101 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 101 8 moveto
242 8 lineto
242 23 lineto
101 23 lineto
closepath
stroke
gsave 10 dict begin
171 11 moveto 131 -0.5 (BEAST::MatchComposeOr) alignedtext
end grestore
end grestore

%	Node556
[ /Rect [ 0 61 158 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
159 60 lineto
159 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
79 63 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node556 -> Node555
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 101 56 moveto
118 46 142 32 158 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 101 53 moveto
93 60 lineto
103 58 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node557
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 176 60 moveto
353 60 lineto
353 75 lineto
176 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
264 63 moveto 167 -0.5 (vector< SensorMatchFunction * >) alignedtext
end grestore
end grestore

%	Node557 -> Node555
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 242 56 moveto
224 46 200 32 184 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 240 58 moveto
250 60 lineto
242 53 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1800 a(Collab)r(oration)f(diagram)g(for)h(BEAST::Matc)
n(hComp)r(oseOr:)1107 2315 y @beginspecial 35 @llx 35
@lly 389 @urx 121 @ury 1932 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MatchComposeOr__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 389 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 389 121
%%PageOrientation: Portrait
gsave
35 35 354 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node558
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 101 8 moveto
242 8 lineto
242 23 lineto
101 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 101 8 moveto
242 8 lineto
242 23 lineto
101 23 lineto
closepath
stroke
gsave 10 dict begin
171 11 moveto 131 -0.5 (BEAST::MatchComposeOr) alignedtext
end grestore
end grestore

%	Node559
[ /Rect [ 0 61 158 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
159 60 lineto
159 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
79 63 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node559 -> Node558
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 101 56 moveto
118 46 142 32 158 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 101 53 moveto
93 60 lineto
103 58 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node560
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 176 60 moveto
353 60 lineto
353 75 lineto
176 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
264 63 moveto 167 -0.5 (vector< SensorMatchFunction * >) alignedtext
end grestore
end grestore

%	Node560 -> Node558
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 242 56 moveto
224 46 200 32 184 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 240 58 moveto
250 60 lineto
242 53 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2678 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2864 y Fk(\210)42 b Fq(Matc)m(hComp)s(oseOr)25
b Fp(\()p Fq(SensorMatc)m(hF)-8 b(unction)29 b Fh(\003)p
Fp(\014rst,)e Fq(SensorMatc)m(hF)-8 b(unction)28 b Fh(\003)p
Fp(second\))275 2972 y Fk(\210)42 b Fp(virtual)27 b(b)r(o)r(ol)g
Fq(op)s(erator\(\))h Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28
b Fh(\003)p Fp(ob)5 b(j\))150 3252 y Fj(10.38.1)113 b(Detailed)36
b(Description)150 3453 y Fp(Chains)29 b(an)n(y)f(n)n(um)n(b)r(er)g(of)h
(matc)n(hing)g(functions)g(together)f(suc)n(h)h(that)g(should)g(an)n(y)
f(of)h(them)g(b)r(e)g(true)g(for)g(the)150 3552 y(ob)5
b(ject)27 b(b)r(eing)h(matc)n(hed,)g Fq(Matc)m(hComp)s(oseOr)d
Fp(will)j(return)f(true.)150 3699 y(The)i(\014rst)g(t)n(w)n(o)g
(functors)f(ma)n(y)h(b)r(e)h(added)f(in)g(the)h(constructor.)40
b(If)29 b(more)g(are)f(needed,)i(they)f(ma)n(y)g(b)r(e)g(added)150
3799 y(using)j(push)p 548 3799 25 4 v 30 w(bac)n(k.)52
b(Because)31 b Fq(Matc)m(hComp)s(oseOr)g Fp(is)i(deriv)n(ed)f(from)g
(std::v)n(ector,)h(its)g(con)n(ten)n(ts)f(ma)n(y)g(b)r(e)150
3898 y(manipulated)c(just)g(lik)n(e)f(an)n(y)g(other)g(v)n(ector.)150
4045 y(The)h(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g
(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
4258 y Fk(\210)42 b Fp(sensorfunctors.h)p -358 5723 4034
4 v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 157 165
157 164 bop 150 70 a Fq(10.39)30 b(BEAST::Matc)m(hExact)p
Fo(<)p 1383 70 29 4 v 67 w Fq(Ob)5 b(jectT)m(yp)s(e)33
b Fo(>)f Fq(Struct)h(T)-8 b(emplate)30 b(Reference)879
b(157)p 150 103 4034 4 v 150 333 a Fl(10.39)136 b(BEAST::Matc)l(hExact)
p Fb(<)p 1992 333 41 4 v 110 w Fl(Ob)7 b(jectT)l(yp)t(e)61
b Fb(>)g Fl(Struct)g(T)-11 b(em-)591 482 y(plate)46 b(Reference)150
711 y Fp(Iden)n(ti\014es)27 b(exact)f(ob)5 b(ject)26
b(t)n(yp)r(es,)h(so)f(if)h(de\014ned)g(with)h(Cheese,)e(will)h(return)f
(true)h(only)f(for)g(Cheese,)h(and)f(false)150 811 y(for)h(Cheddar)g
(and)g(Gruy)n(\022)-39 b(ere.)150 958 y Fi(#include)40
b Fo(<)p Fi(sensorfunctors.h)o Fo(>)150 1105 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Matc)n(hExact)p Fo(<)p 1905
1105 25 4 v 56 w Fp(Ob)5 b(jectT)n(yp)r(e)27 b Fo(>)p
Fp(:)1431 1647 y @beginspecial 35 @llx 35 @lly 233 @urx
121 @ury 1155 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MatchExact__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 233 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 233 121
%%PageOrientation: Portrait
gsave
35 35 198 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node561
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
197 8 lineto
197 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
197 8 lineto
197 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
98 11 moveto 187 -0.5 (BEAST::MatchExact< _ObjectType >) alignedtext
end grestore
end grestore

%	Node562
[ /Rect [ 19 61 177 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 19 60 moveto
178 60 lineto
178 75 lineto
19 75 lineto
closepath
stroke
gsave 10 dict begin
98 63 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node562 -> Node561
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 98 51 moveto
98 42 98 31 98 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 96 50 moveto
98 60 lineto
101 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1976 a(Collab)r(oration)f(diagram)g(for)h(BEAST::Matc)
n(hExact)p Fo(<)p 1993 1976 V 55 w Fp(Ob)5 b(jectT)n(yp)r(e)28
b Fo(>)p Fp(:)1431 2519 y @beginspecial 35 @llx 35 @lly
233 @urx 121 @ury 1155 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MatchExact__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 233 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 233 121
%%PageOrientation: Portrait
gsave
35 35 198 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node563
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
197 8 lineto
197 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
197 8 lineto
197 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
98 11 moveto 187 -0.5 (BEAST::MatchExact< _ObjectType >) alignedtext
end grestore
end grestore

%	Node564
[ /Rect [ 19 61 177 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 19 60 moveto
178 60 lineto
178 75 lineto
19 75 lineto
closepath
stroke
gsave 10 dict begin
98 63 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node564 -> Node563
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 98 51 moveto
98 42 98 31 98 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 96 50 moveto
98 60 lineto
101 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2881 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3068 y Fk(\210)42 b Fp(virtual)27 b(b)r(o)r(ol)g
Fq(op)s(erator\(\))h Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28
b Fh(\003)p Fp(ob)5 b(j\))150 3348 y Fj(10.39.1)113 b(Detailed)36
b(Description)150 3548 y Fq(template)p Fo(<)p Fq(class)p
810 3548 29 4 v 64 w(Ob)5 b(jectT)m(yp)s(e)p Fo(>)32
b Fq(struct)h(BEAST::Matc)m(hExact)p Fo(<)p 2693 3548
V 67 w Fq(Ob)5 b(jectT)m(yp)s(e)33 b Fo(>)150 3749 y
Fp(Iden)n(ti\014es)27 b(exact)f(ob)5 b(ject)26 b(t)n(yp)r(es,)h(so)f
(if)h(de\014ned)g(with)h(Cheese,)e(will)h(return)f(true)h(only)f(for)g
(Cheese,)h(and)f(false)150 3848 y(for)h(Cheddar)g(and)g(Gruy)n(\022)-39
b(ere.)150 3995 y(The)28 b(do)r(cumen)n(tation)f(for)g(this)h(struct)f
(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
4208 y Fk(\210)42 b Fp(sensorfunctors.h)p 150 5723 4034
4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 158 166
158 165 bop -358 70 a Fq(158)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.40)136 b(BEAST::Matc)l(hKindOf)p Fb(<)p 2065
333 41 4 v 85 w Fl(Ob)7 b(jectT)l(yp)t(e)37 b Fb(>)g
Fl(Struct)f(T)-11 b(em-)591 482 y(plate)46 b(Reference)150
711 y Fp(Iden)n(ti\014es)31 b(ob)5 b(jects)30 b(b)r(elonging)h(to)f
(hierarc)n(hies,)g(so)g(if)i(de\014ned)f(with)g(Cheese,)h(will)f
(return)f(true)h(for)g(ob)5 b(jects)150 811 y(of)28 b(t)n(yp)r(e)f
(Cheese,)h(or)e(deriv)n(ed)h(classes)f(suc)n(h)i(as)f(Cheddar)g(and)g
(Gruy)n(\022)-39 b(ere.)150 958 y Fi(#include)40 b Fo(<)p
Fi(sensorfunctors.h)o Fo(>)150 1105 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Matc)n(hKindOf)p Fo(<)p 1964
1105 25 4 v 57 w Fp(Ob)5 b(jectT)n(yp)r(e)27 b Fo(>)p
Fp(:)1406 1643 y @beginspecial 35 @llx 35 @lly 245 @urx
121 @ury 1215 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MatchKindOf__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 245 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 245 121
%%PageOrientation: Portrait
gsave
35 35 210 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node565
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
208 8 lineto
208 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
208 8 lineto
208 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
104 11 moveto 198 -0.5 (BEAST::MatchKindOf< _ObjectType >) alignedtext
end grestore
end grestore

%	Node566
[ /Rect [ 25 61 183 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 25 60 moveto
184 60 lineto
184 75 lineto
25 75 lineto
closepath
stroke
gsave 10 dict begin
104 63 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node566 -> Node565
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 104 51 moveto
104 42 104 31 104 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 102 50 moveto
104 60 lineto
107 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1973 a(Collab)r(oration)f(diagram)g(for)h(BEAST::Matc)
n(hKindOf)p Fo(<)p 2051 1973 V 56 w Fp(Ob)5 b(jectT)n(yp)r(e)27
b Fo(>)p Fp(:)1406 2512 y @beginspecial 35 @llx 35 @lly
245 @urx 121 @ury 1215 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MatchKindOf__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 245 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 245 121
%%PageOrientation: Portrait
gsave
35 35 210 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node567
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
208 8 lineto
208 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
208 8 lineto
208 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
104 11 moveto 198 -0.5 (BEAST::MatchKindOf< _ObjectType >) alignedtext
end grestore
end grestore

%	Node568
[ /Rect [ 25 61 183 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 25 60 moveto
184 60 lineto
184 75 lineto
25 75 lineto
closepath
stroke
gsave 10 dict begin
104 63 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node568 -> Node567
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 104 51 moveto
104 42 104 31 104 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 102 50 moveto
104 60 lineto
107 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2874 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3061 y Fk(\210)42 b Fp(virtual)27 b(b)r(o)r(ol)g
Fq(op)s(erator\(\))h Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28
b Fh(\003)p Fp(ob)5 b(j\))150 3341 y Fj(10.40.1)113 b(Detailed)36
b(Description)150 3541 y Fq(template)p Fo(<)p Fq(class)p
810 3541 29 4 v 64 w(Ob)5 b(jectT)m(yp)s(e)p Fo(>)32
b Fq(struct)h(BEAST::Matc)m(hKindOf)p Fo(<)p 2763 3541
V 65 w Fq(Ob)5 b(jectT)m(yp)s(e)33 b Fo(>)150 3742 y
Fp(Iden)n(ti\014es)e(ob)5 b(jects)30 b(b)r(elonging)h(to)f(hierarc)n
(hies,)g(so)g(if)i(de\014ned)f(with)g(Cheese,)h(will)f(return)f(true)h
(for)g(ob)5 b(jects)150 3841 y(of)28 b(t)n(yp)r(e)f(Cheese,)h(or)e
(deriv)n(ed)h(classes)f(suc)n(h)i(as)f(Cheddar)g(and)g(Gruy)n(\022)-39
b(ere.)150 3988 y(The)28 b(do)r(cumen)n(tation)f(for)g(this)h(struct)f
(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
4201 y Fk(\210)42 b Fp(sensorfunctors.h)p -358 5723 4034
4 v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 159 167
159 166 bop 150 70 a Fq(10.41)30 b(BEAST::Matc)m(hSp)s(eci\014c)i
(Struct)h(Reference)1945 b(159)p 150 103 4034 4 v 150
333 a Fl(10.41)136 b(BEAST::Matc)l(hSp)t(eci\014c)43
b(Struct)i(Reference)150 562 y Fp(Iden)n(ti\014es)28
b(one)f(particular)f(ob)5 b(ject)27 b(and)h(returns)f(true)g(only)g
(for)h(that)f(ob)5 b(ject.)150 709 y Fi(#include)40 b
Fo(<)p Fi(sensorfunctors.h)o Fo(>)150 855 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Matc)n(hSp)r(eci\014c:)1510
1412 y @beginspecial 35 @llx 35 @lly 195 @urx 121 @ury
966 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MatchSpecific__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 195 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 195 121
%%PageOrientation: Portrait
gsave
35 35 160 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node569
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 19 8 moveto
140 8 lineto
140 23 lineto
19 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 19 8 moveto
140 8 lineto
140 23 lineto
19 23 lineto
closepath
stroke
gsave 10 dict begin
79 11 moveto 111 -0.5 (BEAST::MatchSpecific) alignedtext
end grestore
end grestore

%	Node570
[ /Rect [ 0 61 158 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
159 60 lineto
159 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
79 63 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node570 -> Node569
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 79 51 moveto
79 42 79 31 79 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 77 50 moveto
79 60 lineto
82 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1742 a(Collab)r(oration)f(diagram)g(for)h(BEAST::Matc)
n(hSp)r(eci\014c:)1236 2339 y @beginspecial 35 @llx 35
@lly 327 @urx 137 @ury 1623 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MatchSpecific__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 327 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 327 137
%%PageOrientation: Portrait
gsave
35 35 292 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node571
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 96 8 moveto
217 8 lineto
217 23 lineto
96 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 96 8 moveto
217 8 lineto
217 23 lineto
96 23 lineto
closepath
stroke
gsave 10 dict begin
156 11 moveto 111 -0.5 (BEAST::MatchSpecific) alignedtext
end grestore
end grestore

%	Node572
[ /Rect [ 0 77 158 91 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 76 moveto
159 76 lineto
159 91 lineto
0 91 lineto
closepath
stroke
gsave 10 dict begin
79 79 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node572 -> Node571
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 94 71 moveto
110 57 134 35 147 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 94 68 moveto
88 76 lineto
97 72 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node573
[ /Rect [ 176 77 290 91 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 176 76 moveto
291 76 lineto
291 91 lineto
176 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
233 79 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node573 -> Node571
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 218 71 moveto
202 57 178 35 165 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 215 72 moveto
224 76 lineto
218 68 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
223 46 moveto 28 -0.5 (target) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2701 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2888 y Fk(\210)42 b Fq(Matc)m(hSp)s(eci\014c)28
b Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(ob)5
b(j\))275 2996 y Fk(\210)42 b Fp(virtual)27 b(b)r(o)r(ol)g
Fq(op)s(erator\(\))h Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28
b Fh(\003)p Fp(ob)5 b(j\))150 3275 y Fj(Public)36 b(A)m(ttributes)275
3462 y Fk(\210)42 b Fq(W)-8 b(orldOb)5 b(ject)27 b Fh(\003)g
Fq(target)150 3742 y Fj(10.41.1)113 b(Detailed)36 b(Description)150
3942 y Fp(Iden)n(ti\014es)28 b(one)f(particular)f(ob)5
b(ject)27 b(and)h(returns)f(true)g(only)g(for)h(that)f(ob)5
b(ject.)150 4089 y(The)28 b(do)r(cumen)n(tation)f(for)g(this)h(struct)f
(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
4302 y Fk(\210)42 b Fp(sensorfunctors.h)p 150 5723 V
150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 160 168
160 167 bop -358 70 a Fq(160)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.42)136 b(BEAST::MutationOp)t(erator)p Fb(<)70
b Fl(T)f Fb(>)g Fl(Struct)g(T)-11 b(emplate)591 482 y(Reference)150
715 y Fi(#include)40 b Fo(<)p Fi(geneticalgorithm)o(.h)o
Fo(>)150 862 y Fp(Collab)r(oration)26 b(diagram)g(for)h
(BEAST::MutationOp)r(erator)p Fo(<)e Fp(T)j Fo(>)p Fp(:)1489
1553 y @beginspecial 35 @llx 35 @lly 205 @urx 147 @ury
1016 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MutationOperator__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 205 147
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 205 147
%%PageOrientation: Portrait
gsave
35 35 170 112 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node590
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
169 8 lineto
169 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
169 8 lineto
169 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
84 11 moveto 159 -0.5 (BEAST::MutationOperator< T >) alignedtext
end grestore
end grestore

%	Node591
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 70 86 moveto
99 86 lineto
99 101 lineto
70 101 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
84 89 moveto 7 -0.5 (T) alignedtext
end grestore
end grestore

%	Node591 -> Node590
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 84 78 moveto
84 62 84 37 84 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 82 76 moveto
84 86 lineto
87 76 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
115 56 moveto 49 -0.5 (minimum) alignedtext
115 45 moveto 52 -0.5 (maximum) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1936 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2136 y Fk(\210)42 b Fq(MutationOp)s(erator)27
b Fp(\(T)h(min=-1.0,)e(T)i(max=1.0\))476 2270 y Fg(The)f(maximum)g(and)
h(minimum)e(r)l(andom)j(values)f(c)l(an)g(b)l(e)g(optional)t(ly)g(sp)l
(e)l(ci\014e)l(d.)275 2479 y Fk(\210)42 b Fp(T)27 b Fq(op)s(erator\(\))
h Fp(\(T)g(t\))476 2613 y Fg(Performs)g(a)g(r)l(andom)g(mutation)g(on)g
(the)g(ar)l(gument)i(and)e(r)l(eturns)h(the)g(r)l(esult.)150
3004 y Fj(Public)36 b(A)m(ttributes)275 3204 y Fk(\210)42
b Fp(T)27 b Fq(minim)m(um)476 3338 y Fg(Minimum)f(mutation.)275
3546 y Fk(\210)42 b Fp(T)27 b Fq(maxim)m(um)476 3680
y Fg(Maximum)g(mutation.)150 4071 y Fj(10.42.1)113 b(Detailed)36
b(Description)150 4276 y Fq(template)p Fo(<)p Fq(t)m(yp)s(ename)29
b(T)p Fo(>)j Fq(struct)g(BEAST::MutationOp)s(erator)p
Fo(<)f Fq(T)h Fo(>)311 4458 y Fp(A)g(functor)e(whic)n(h)h(ma)n(y)f(b)r
(e)i(initialised)e(with)i(max)e(and)h(min)g(v)-5 b(alues,)32
b(and)e(then)i(returns)e(a)g(uniformly)311 4557 y(distributed)h(random)
f(n)n(um)n(b)r(er)g(b)r(et)n(w)n(een)g(those)g(v)-5 b(alues.)45
b Fq(MutationOp)s(erator)30 b Fp(ma)n(y)g(b)r(e)h(adapted)f(in)311
4657 y(a)e(n)n(um)n(b)r(er)f(of)h(w)n(a)n(ys)e(to)h(suit)h(di\013eren)n
(t)g(GA)g(requiremen)n(ts:)311 4925 y(The)37 b(template)h(can)e(b)r(e)i
(initialised)f(as)f(an)n(y)g(n)n(umeric)h(t)n(yp)r(e)g(and)g(will)g
(return)g(go)r(o)r(d)f(results)h(for)f(real)311 5025
y(v)-5 b(alues,)24 b(usable)f(results)g(for)g(in)n(teger)f(t)n(yp)r(es)
i(\(remem)n(b)r(er)f(to)g(add)g(one)g(to)g(the)h(max)f(limit)h(to)f
(tak)n(e)g(accoun)n(t)311 5124 y(of)28 b(the)g(lac)n(k)f(of)g(prop)r
(er)g(rounding.\))311 5397 y(The)43 b(template)f(can)g(b)r(e)g(sp)r
(ecialised)g(to)g(pro)n(vide)f(an)h(alternativ)n(e)f(default)h(m)n
(utation)g(op)r(erator)f(for)311 5497 y(whic)n(hev)n(er)35
b(t)n(yp)r(e)g(y)n(ou)g(are)f(using)h(for)g(y)n(our)f(genot)n(yp)r(e,)j
(e.g.)60 b(y)n(ou)35 b(migh)n(t)g(w)n(an)n(t)g(to)g(mak)n(e)g(a)g
(gaussian)311 5597 y(distributed)28 b(\015oat)g(m)n(utation)f(op)r
(erator.)p -358 5723 V -192 5823 a Fn(Generated)f(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 161 169
161 168 bop 150 70 a Fq(10.42)30 b(BEAST::MutationOp)s(erator)p
Fo(<)h Fq(T)h Fo(>)f Fq(Struct)i(T)-8 b(emplate)31 b(Reference)1076
b(161)p 150 103 4034 4 v 311 349 a Fp(Alternativ)n(ely)33
b(y)n(ou)g(could)g(do)g(a)n(w)n(a)n(y)f(with)i Fq(MutationOp)s(erator)f
Fp(en)n(tirely)g(and)g(sp)r(ecify)h(a)f(di\013eren)n(t)311
449 y(functor)h(t)n(yp)r(e)g(when)g(initialising)g(y)n(our)e(GA)i
(\(the)h(GA)f(defaults)g(to)g(a)f(m)n(utation)h(op)r(erator)e(of)i(a)f
(t)n(yp)r(e)311 549 y(matc)n(hing)28 b(the)f(GA's)h(gene)f(t)n(yp)r
(e\))150 778 y(The)h(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n
(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
992 y Fk(\210)42 b Fq(geneticalgorithm.h)p 150 5723 V
150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 162 170
162 169 bop -358 70 a Fq(162)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.43)136 b(BEAST::MutationOp)t(erator)p Fb(<)91
b Fl(b)t(o)t(ol)g Fb(>)g Fl(Struct)f(T)-11 b(em-)591
482 y(plate)46 b(Reference)150 711 y Fp(Sp)r(ecialised)27
b Fq(MutationOp)s(erator)h Fp(for)f(b)r(o)r(ol,)h(simply)f(NOT's)g(its)
h(input.)150 858 y Fi(#include)40 b Fo(<)p Fi(geneticalgorithm)o(.h)o
Fo(>)150 1138 y Fj(Public)c(Mem)m(b)s(er)h(F)-9 b(unctions)275
1324 y Fk(\210)42 b Fq(MutationOp)s(erator)27 b Fp(\(\))275
1432 y Fk(\210)42 b Fq(MutationOp)s(erator)27 b Fp(\(b)r(o)r(ol,)h(b)r
(o)r(ol\))275 1540 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b
Fq(op)s(erator\(\))h Fp(\(b)r(o)r(ol)g(b\))150 1820 y
Fj(10.43.1)113 b(Detailed)36 b(Description)150 2020 y
Fq(template)p Fo(<>)29 b Fq(struct)k(BEAST::MutationOp)s(erator)p
Fo(<)d Fq(b)s(o)s(ol)g Fo(>)150 2221 y Fp(Sp)r(ecialised)d
Fq(MutationOp)s(erator)h Fp(for)f(b)r(o)r(ol,)h(simply)f(NOT's)g(its)h
(input.)150 2367 y(This)35 b(is)h(mostly)f(for)f(a)h(demonstration,)i
(although)d(b)r(o)r(ol)i(w)n(ould)e(b)r(e)i(an)f(easy)g(w)n(a)n(y)f(to)
h(implemen)n(t)h(binary)150 2467 y(genot)n(yp)r(es,)d(y)n(ou)f(w)n
(ould)g(b)r(e)h(b)r(etter)g(advised)f(to)h(sp)r(ecialise)f(the)h(in)n
(t)g(t)n(yp)r(e)g(of)g Fq(MutationOp)s(erator)f Fp(since)150
2567 y(the)c(nativ)n(e)f(in)n(teger)g(t)n(yp)r(e)h(is)f(faster)g(on)g
(most)h(systems.)150 2714 y(The)g(do)r(cumen)n(tation)f(for)g(this)h
(struct)f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
2927 y Fk(\210)42 b Fq(geneticalgorithm.h)p -358 5723
V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 163 171
163 170 bop 150 70 a Fq(10.44)30 b(BEAST::MutationOp)s(erator)p
Fo(<)h Fq(GA)-11 b(V)j(arian)m(t)34 b Fo(>)d Fq(Struct)i(T)-8
b(emplate)30 b(Reference)696 b(163)p 150 103 4034 4 v
150 333 a Fl(10.44)136 b(BEAST::MutationOp)t(erator)p
Fb(<)97 b Fl(GA)-15 b(V)k(arian)l(t)96 b Fb(>)g Fl(Struct)591
482 y(T)-11 b(emplate)46 b(Reference)150 717 y Fp(This)36
b(sp)r(ecialised)f(m)n(utation)h(op)r(erator)e(pro)n(vides)h(the)h
(facilities)g(of)g(the)g(basic)g Fq(MutationOp)s(erator)g
Fp(for)150 816 y Fq(GA)-11 b(V)j(arian)m(t)p Fp(.)150
963 y Fi(#include)40 b Fo(<)p Fi(geneticalgorithm)o(.h)o
Fo(>)150 1110 y Fp(Collab)r(oration)26 b(diagram)g(for)h
(BEAST::MutationOp)r(erator)p Fo(<)e Fp(GA)-9 b(V)i(arian)n(t)27
b Fo(>)p Fp(:)696 2300 y @beginspecial 35 @llx 35 @lly
587 @urx 274 @ury 2919 @rwi @setspecial
%%BeginDocument: structBEAST_1_1MutationOperator_3_01GAVariant_01_4__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 587 274
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 587 274
%%PageOrientation: Portrait
gsave
35 35 552 239 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node595
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 324 112 moveto
542 112 lineto
542 127 lineto
324 127 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 324 112 moveto
542 112 lineto
542 127 lineto
324 127 lineto
closepath
stroke
gsave 10 dict begin
433 115 moveto 208 -0.5 (BEAST::MutationOperator< GAVariant >) alignedtext
end grestore
end grestore

%	Node596
[ /Rect [ 15 215 197 229 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1MutationOperator.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 15 214 moveto
198 214 lineto
198 229 lineto
15 229 lineto
closepath
stroke
gsave 10 dict begin
106 217 moveto 173 -0.5 (BEAST::MutationOperator< char >) alignedtext
end grestore
end grestore

%	Node596 -> Node595
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 205 213 moveto
251 202 271 209 306 177 curveto
321 163 309 148 324 136 curveto
329 132 337 130 348 128 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 206 210 moveto
196 214 lineto
206 215 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
264 211 moveto 62 -0.5 (charMutator) alignedtext
end grestore
end grestore

%	Node597
[ /Rect [ 14 164 198 178 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1MutationOperator.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 14 163 moveto
199 163 lineto
199 178 lineto
14 178 lineto
closepath
stroke
gsave 10 dict begin
106 166 moveto 175 -0.5 (BEAST::MutationOperator< float >) alignedtext
end grestore
end grestore

%	Node597 -> Node595
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 202 162 moveto
203 162 203 162 204 162 curveto
250 154 263 155 306 139 curveto
315 135 316 131 324 129 curveto
326 129 327 128 329 128 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 203 159 moveto
193 163 lineto
203 164 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
264 161 moveto 64 -0.5 (floatMutator) alignedtext
end grestore
end grestore

%	Node598
[ /Rect [ 15 113 197 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1MutationOperator_3_01bool_01_4.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 15 112 moveto
198 112 lineto
198 127 lineto
15 127 lineto
closepath
stroke
gsave 10 dict begin
106 115 moveto 173 -0.5 (BEAST::MutationOperator< bool >) alignedtext
end grestore
end grestore

%	Node598 -> Node595
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 208 120 moveto
244 120 286 120 324 120 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 208 118 moveto
198 120 lineto
208 123 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
264 123 moveto 61 -0.5 (boolMutator) alignedtext
end grestore
end grestore

%	Node599
[ /Rect [ 9 62 203 76 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1MutationOperator.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 9 61 moveto
204 61 lineto
204 76 lineto
9 76 lineto
closepath
stroke
gsave 10 dict begin
106 64 moveto 185 -0.5 (BEAST::MutationOperator< double >) alignedtext
end grestore
end grestore

%	Node599 -> Node595
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 213 77 moveto
253 83 266 85 306 101 curveto
315 104 316 107 324 110 curveto
327 111 330 112 334 112 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 214 75 moveto
204 76 lineto
214 80 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
264 104 moveto 74 -0.5 (doubleMutator) alignedtext
end grestore
end grestore

%	Node600
[ /Rect [ 19 11 193 25 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1MutationOperator.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 19 10 moveto
194 10 lineto
194 25 lineto
19 25 lineto
closepath
stroke
gsave 10 dict begin
106 13 moveto 165 -0.5 (BEAST::MutationOperator< int >) alignedtext
end grestore
end grestore

%	Node600 -> Node595
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 203 26 moveto
203 26 204 26 204 26 curveto
251 34 272 24 306 57 curveto
323 71 307 89 324 103 curveto
329 107 340 110 352 112 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 204 24 moveto
194 24 lineto
203 29 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
264 60 moveto 54 -0.5 (intMutator) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2691 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2895 y Fk(\210)42 b Fq(MutationOp)s(erator)27
b Fp(\()p Fq(GA)-11 b(V)j(arian)m(t)30 b Fp(min=-1.0,)c
Fq(GA)-11 b(V)j(arian)m(t)30 b Fp(max=1.0\))476 3033
y Fg(Constructor,)g(c)l(asts)f(inputs)f(to)g(di\013er)l(ent)h(typ)l(es)
g(for)f(sub-op)l(er)l(ators.)275 3245 y Fk(\210)42 b
Fq(GA)-11 b(V)j(arian)m(t)29 b(op)s(erator\(\))f Fp(\()p
Fq(GA)-11 b(V)j(arian)m(t)30 b Fp(in\))476 3382 y Fg(Cal)t(ls)d(the)h
(mutation)g(op)l(er)l(ator)i(for)e(the)g(c)l(orr)l(e)l(ct)i(typ)l(e.)
150 3781 y Fj(Public)36 b(A)m(ttributes)275 3986 y Fk(\210)42
b Fq(MutationOp)s(erator)p Fo(<)27 b Fp(in)n(t)g Fo(>)h
Fq(in)m(tMutator)476 4123 y Fg(Mutation)g(op)l(er)l(ator)i(for)d(ints.)
275 4336 y Fk(\210)42 b Fq(MutationOp)s(erator)p Fo(<)27
b Fp(\015oat)g Fo(>)g Fq(\015oatMutator)476 4473 y Fg(Mutation)h(op)l
(er)l(ator)i(for)d(\015o)l(ats.)275 4685 y Fk(\210)42
b Fq(MutationOp)s(erator)p Fo(<)27 b Fp(double)g Fo(>)g
Fq(doubleMutator)476 4822 y Fg(Mutation)h(op)l(er)l(ator)i(for)d
(doubles.)275 5035 y Fk(\210)42 b Fq(MutationOp)s(erator)p
Fo(<)27 b Fp(c)n(har)f Fo(>)h Fq(c)m(harMutator)476 5172
y Fg(Mutation)h(op)l(er)l(ator)i(for)d(chars.)275 5384
y Fk(\210)42 b Fq(MutationOp)s(erator)p Fo(<)27 b Fp(b)r(o)r(ol)g
Fo(>)g Fq(b)s(o)s(olMutator)476 5522 y Fg(Mutation)h(op)l(er)l(ator)i
(for)d(b)l(o)l(ols.)p 150 5723 V 150 5823 a Fn(Generated)f(on)e(Sun)h
(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 164 172
164 171 bop -358 70 a Fq(164)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fj(10.44.1)113 b(Detailed)36 b(Description)150
533 y Fq(template)p Fo(<>)29 b Fq(struct)k(BEAST::MutationOp)s(erator)p
Fo(<)d Fq(GA)-11 b(V)j(arian)m(t)34 b Fo(>)150 734 y
Fp(This)i(sp)r(ecialised)f(m)n(utation)h(op)r(erator)e(pro)n(vides)h
(the)h(facilities)g(of)g(the)g(basic)g Fq(MutationOp)s(erator)g
Fp(for)150 833 y Fq(GA)-11 b(V)j(arian)m(t)p Fp(.)150
980 y(Fiv)n(e)26 b(separate)e Fq(MutationOp)s(erator)h
Fp(ob)5 b(jects)26 b(are)e(created,)i(one)f(for)g(eac)n(h)g(data)h(t)n
(yp)r(e)g(\(in)n(t,)g(\015oat,)g(double,)150 1080 y(c)n(har,)i(b)r(o)r
(ol\).)42 b(These)28 b(m)n(utation)h(op)r(erators)e(are)h(initialised)h
(with)h(the)f(same)g(min)g(and)g(max)g(m)n(utations)f(but)150
1179 y(can)f(b)r(e)h(accessed)f(individually)g(and)h(reassigned)d(via)j
(the)g(public)g(mem)n(b)r(ers)f(whic)n(h)g(store)g(them.)142
1392 y Fq(T)-8 b(o)s(do)311 1491 y Fp(serialise/unserialise)150
1721 y(The)28 b(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g
(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
1935 y Fk(\210)42 b Fq(geneticalgorithm.h)p -358 5723
V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 165 173
165 172 bop 150 70 a Fq(10.45)30 b(BEAST::Ob)5 b(jLoader)p
Fo(<)p 1324 70 29 4 v 66 w Fq(T)m(yp)s(e)33 b Fo(>)e
Fq(Struct)i(T)-8 b(emplate)31 b(Reference)1220 b(165)p
150 103 4034 4 v 150 333 a Fl(10.45)136 b(BEAST::Ob)7
b(jLoader)p Fb(<)p 1894 333 41 4 v 95 w Fl(T)l(yp)t(e)46
b Fb(>)h Fl(Struct)f(T)-11 b(emplate)47 b(Ref-)591 482
y(erence)150 711 y Fp(A)28 b(functor)f(for)h(recreating)d(templated)j
(ob)5 b(ject)28 b(t)n(yp)r(es)f(using)h(serialisation.)150
858 y Fi(#include)40 b Fo(<)p Fi(unserialiser.h)p Fo(>)150
1005 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::Ob)5
b(jLoader)p Fo(<)p 1854 1005 25 4 v 55 w Fp(T)n(yp)r(e)28
b Fo(>)p Fp(:)1510 1562 y @beginspecial 35 @llx 35 @lly
195 @urx 121 @ury 966 @rwi @setspecial
%%BeginDocument: structBEAST_1_1ObjLoader__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 195 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 195 121
%%PageOrientation: Portrait
gsave
35 35 160 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node601
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
158 8 lineto
158 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
158 8 lineto
158 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
79 11 moveto 148 -0.5 (BEAST::ObjLoader< _Type >) alignedtext
end grestore
end grestore

%	Node602
[ /Rect [ 16 61 142 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1ObjLoaderBase.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 16 60 moveto
143 60 lineto
143 75 lineto
16 75 lineto
closepath
stroke
gsave 10 dict begin
79 63 moveto 117 -0.5 (BEAST::ObjLoaderBase) alignedtext
end grestore
end grestore

%	Node602 -> Node601
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 79 51 moveto
79 42 79 31 79 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 77 50 moveto
79 60 lineto
82 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1891 a(Collab)r(oration)e(diagram)g(for)h(BEAST::Ob)5
b(jLoader)p Fo(<)p 1942 1891 V 55 w Fp(T)n(yp)r(e)27
b Fo(>)p Fp(:)1510 2448 y @beginspecial 35 @llx 35 @lly
195 @urx 121 @ury 966 @rwi @setspecial
%%BeginDocument: structBEAST_1_1ObjLoader__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 195 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 195 121
%%PageOrientation: Portrait
gsave
35 35 160 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node603
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
158 8 lineto
158 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
158 8 lineto
158 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
79 11 moveto 148 -0.5 (BEAST::ObjLoader< _Type >) alignedtext
end grestore
end grestore

%	Node604
[ /Rect [ 16 61 142 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1ObjLoaderBase.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 16 60 moveto
143 60 lineto
143 75 lineto
16 75 lineto
closepath
stroke
gsave 10 dict begin
79 63 moveto 117 -0.5 (BEAST::ObjLoaderBase) alignedtext
end grestore
end grestore

%	Node604 -> Node603
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 79 51 moveto
79 42 79 31 79 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 77 50 moveto
79 60 lineto
82 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2811 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2997 y Fk(\210)42 b Fp(virtual)27 b Fq(W)-8
b(orldOb)5 b(ject)27 b Fh(\003)g Fq(op)s(erator\(\))h
Fp(\(std::istream)g(&in\))150 3277 y Fj(10.45.1)113 b(Detailed)36
b(Description)150 3478 y Fq(template)p Fo(<)p Fq(t)m(yp)s(ename)p
1027 3478 29 4 v 63 w(T)m(yp)s(e)p Fo(>)c Fq(struct)h(BEAST::Ob)5
b(jLoader)p Fo(<)p 2568 3478 V 66 w Fq(T)m(yp)s(e)32
b Fo(>)150 3678 y Fp(A)c(functor)f(for)h(recreating)d(templated)j(ob)5
b(ject)28 b(t)n(yp)r(es)f(using)h(serialisation.)150
3825 y(The)g(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g
(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
4038 y Fk(\210)42 b Fq(unserialiser.h)p 150 5723 4034
4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 166 174
166 173 bop -358 70 a Fq(166)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.46)136 b(BEAST::Ob)7 b(jLoaderBase)45 b(Struct)g(Reference)
150 562 y Fp(A)28 b(simple)g(abstract)e(base)h(class)g(for)g
Fq(Ob)5 b(jLoader)29 b Fp(functors.)150 709 y Fi(#include)40
b Fo(<)p Fi(unserialiser.h)p Fo(>)150 855 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::Ob)5 b(jLoaderBase:)1510 1412
y @beginspecial 35 @llx 35 @lly 195 @urx 121 @ury 966
@rwi @setspecial
%%BeginDocument: structBEAST_1_1ObjLoaderBase__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 195 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 195 121
%%PageOrientation: Portrait
gsave
35 35 160 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node605
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 16 60 moveto
143 60 lineto
143 75 lineto
16 75 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 16 60 moveto
143 60 lineto
143 75 lineto
16 75 lineto
closepath
stroke
gsave 10 dict begin
79 63 moveto 117 -0.5 (BEAST::ObjLoaderBase) alignedtext
end grestore
end grestore

%	Node606
[ /Rect [ 0 9 158 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1ObjLoader.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 8 moveto
158 8 lineto
158 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
79 11 moveto 148 -0.5 (BEAST::ObjLoader< _Type >) alignedtext
end grestore
end grestore

%	Node605 -> Node606
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 79 51 moveto
79 42 79 31 79 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 77 50 moveto
79 60 lineto
82 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1775 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 1962 y Fk(\210)42 b Fp(virtual)27 b Fq(W)-8
b(orldOb)5 b(ject)27 b Fh(\003)g Fq(op)s(erator\(\))h
Fp(\(std::istream)g(&in\)=0)150 2241 y Fj(10.46.1)113
b(Detailed)36 b(Description)150 2442 y Fp(A)28 b(simple)g(abstract)e
(base)h(class)g(for)g Fq(Ob)5 b(jLoader)29 b Fp(functors.)150
2589 y(The)f(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g
(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
2802 y Fk(\210)42 b Fq(unserialiser.h)p -358 5723 V -192
5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 167 175
167 174 bop 150 70 a Fq(10.47)30 b(BEAST::P)m(opulation)p
Fo(<)p 1331 70 29 4 v 65 w Fq(Ind,)p 1566 70 V 66 w(MutF)-8
b(unc)32 b Fo(>)g Fq(Class)f(T)-8 b(emplate)30 b(Reference)856
b(167)p 150 103 4034 4 v 150 333 a Fl(10.47)136 b(BEAST::P)l(opulation)
p Fb(<)p 1909 333 41 4 v 100 w Fl(Ind,)p 2247 333 V 101
w(MutF)-11 b(unc)49 b Fb(>)i Fl(Class)h(T)-11 b(em-)591
482 y(plate)46 b(Reference)150 712 y Fp(This)35 b(class)f(is)h(deriv)n
(ed)f(from)g Fq(Group)h Fp(and)g(adds)f(a)h(managed)f(GA)h(whic)n(h)g
(is)g(automatically)e(run)i(on)g(the)150 811 y(whole)27
b Fq(P)m(opulation)h Fp(ev)n(ery)e(ep)r(o)r(c)n(h.)150
958 y Fi(#include)40 b Fo(<)p Fi(population.h)p Fo(>)150
1105 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::P)n(opulation)p
Fo(<)p 1859 1105 25 4 v 56 w Fp(Ind,)p 2062 1105 V 58
w(MutF)-7 b(unc)28 b Fo(>)p Fp(:)1398 1894 y @beginspecial
35 @llx 35 @lly 249 @urx 173 @ury 1235 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Population__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 249 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 249 173
%%PageOrientation: Portrait
gsave
35 35 214 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node608
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 5 8 moveto
212 8 lineto
212 23 lineto
5 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 5 8 moveto
212 8 lineto
212 23 lineto
5 23 lineto
closepath
stroke
gsave 10 dict begin
108 11 moveto 197 -0.5 (BEAST::Population< _Ind, _MutFunc >) alignedtext
end grestore
end grestore

%	Node609
[ /Rect [ 44 61 172 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Group.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 44 60 moveto
172 60 lineto
172 75 lineto
44 75 lineto
closepath
stroke
gsave 10 dict begin
108 63 moveto 118 -0.5 (BEAST::Group< _Ind >) alignedtext
end grestore
end grestore

%	Node609 -> Node608
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 108 51 moveto
108 42 108 31 108 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 106 50 moveto
108 60 lineto
111 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node610
[ /Rect [ 0 113 102 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1SimObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
102 112 lineto
102 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
51 115 moveto 92 -0.5 (BEAST::SimObject) alignedtext
end grestore
end grestore

%	Node610 -> Node609
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 106 moveto
77 96 91 84 99 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 65 104 moveto
59 112 lineto
68 107 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node611
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 120 112 moveto
213 112 lineto
213 127 lineto
120 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
166 115 moveto 83 -0.5 (vector< _Ind * >) alignedtext
end grestore
end grestore

%	Node611 -> Node609
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 150 106 moveto
139 96 125 84 117 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 148 107 moveto
157 112 lineto
151 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2225 a(Collab)r(oration)e(diagram)g(for)h(BEAST::P)n
(opulation)p Fo(<)p 1946 2225 V 55 w Fp(Ind,)p 2149 2225
V 58 w(MutF)-7 b(unc)29 b Fo(>)p Fp(:)883 3045 y @beginspecial
35 @llx 35 @lly 497 @urx 191 @ury 2470 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Population__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 497 191
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 497 191
%%PageOrientation: Portrait
gsave
35 35 462 156 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node612
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 31 8 moveto
238 8 lineto
238 23 lineto
31 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 31 8 moveto
238 8 lineto
238 23 lineto
31 23 lineto
closepath
stroke
gsave 10 dict begin
134 11 moveto 197 -0.5 (BEAST::Population< _Ind, _MutFunc >) alignedtext
end grestore
end grestore

%	Node613
[ /Rect [ 70 77 198 91 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Group.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 70 76 moveto
198 76 lineto
198 91 lineto
70 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
134 79 moveto 118 -0.5 (BEAST::Group< _Ind >) alignedtext
end grestore
end grestore

%	Node613 -> Node612
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 68 moveto
134 54 134 35 134 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 132 66 moveto
134 76 lineto
137 66 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node631
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 10 130 moveto
103 130 lineto
103 145 lineto
10 145 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
56 133 moveto 83 -0.5 (vector< _Ind * >) alignedtext
end grestore
end grestore

%	Node631 -> Node612
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 42 124 moveto
31 112 18 92 27 76 curveto
44 48 78 32 104 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 39 125 moveto
48 130 lineto
43 121 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
44 80 moveto 24 -0.5 (team) alignedtext
end grestore
end grestore

%	Node631 -> Node613
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 125 moveto
89 115 110 101 123 92 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 122 moveto
67 130 lineto
77 126 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node632
[ /Rect [ 216 77 460 91 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1GeneticAlgorithm.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 216 76 moveto
460 76 lineto
460 91 lineto
216 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
338 79 moveto 234 -0.5 (BEAST::GeneticAlgorithm< _Ind, _MutFunc >) alignedtext
end grestore
end grestore

%	Node632 -> Node612
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 307 73 moveto
266 60 193 36 157 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 305 75 moveto
315 76 lineto
307 70 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
278 46 moveto 18 -0.5 (GA) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3411 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3599 y Fk(\210)42 b Fq(P)m(opulation)27
b Fp(\(in)n(t)h(s,)g Fq(GeneticAlgorithm)p Fo(<)p 1930
3599 V 54 w Fp(Ind,)p 2133 3599 V 58 w(MutF)-7 b(unc)29
b Fo(>)e Fp(&ga\))275 3708 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(BeginAssessmen)m(t)f Fp(\(\))476 3834
y Fg(This)i(metho)l(d)i(is)e(c)l(al)t(le)l(d)h(at)g(the)g(b)l(e)l
(ginning)g(of)g(the)g(assessment)i(and)e(sets)h(up)f(te)l(ams)g(if)f(r)
l(e)l(quir)l(e)l(d.)275 4034 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(EndAssessmen)m(t)f Fp(\(\))476 4160 y
Fg(This)k(metho)l(d)h(is)f(c)l(al)t(le)l(d)g(at)h(the)g(end)f(of)g(the)
h(assessment)h(and)f(c)l(auses)h(e)l(ach)f(individual's)e(\014tness)j
(sc)l(or)l(e)f(to)476 4251 y(b)l(e)e(stor)l(e)l(d.)275
4452 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(BeginGeneration)h
Fp(\(\))476 4577 y Fg(This)g(metho)l(d)i(is)e(c)l(al)t(le)l(d)h(at)g
(the)g(b)l(e)l(ginning)g(of)g(the)g(gener)l(ation)h(and.)275
4778 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(EndGeneration)i
Fp(\(\))476 4904 y Fg(Performs)33 b(GA)g(management,)i(by)e(c)l(opying)
g(the)g Ff(P)n(opulation)i Fg(into)e(the)g(GA,)g(running)g(the)g(GA)g
(on)g(the)476 4995 y(p)l(opulation)28 b(and)g(then)h(r)l(etrieving)g
(the)f(new)g(gener)l(ation)h(fr)l(om)f(the)g(GA.)275
5195 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(BeginRun)h
Fp(\(\))476 5321 y Fg(This)f(metho)l(d)h(is)f(c)l(al)t(le)l(d)g(at)g
(the)h(b)l(e)l(ginning)g(of)f(the)h(run)f(and)h(ensur)l(es)h(that)f
(the)g(c)l(ontents)h(of)e(the)h(p)l(opulation)476 5412
y(has)h(b)l(e)l(en)g(r)l(eset.)275 5613 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(EndRun)i Fp(\(\))p 150
5723 4034 4 v 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 168 176
168 175 bop -358 70 a Fq(168)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 476
333 a Fg(This)c(metho)l(d)i(is)e(c)l(al)t(le)l(d)h(at)g(the)g(end)g(of)
g(the)g(run)g(and)g(curr)l(ently)h(do)l(esn)-8 b('t)29
b(do)f(anything)h(at)f(al)t(l.)275 556 y Fk(\210)42 b
Fp(virtual)27 b(v)n(oid)f Fq(AddT)-8 b(oW)g(orld)28 b
Fp(\(\))476 706 y Fg(A)l(dds)g(either)h(the)f(whole)g(p)l(opulation,)g
(or)g(the)g(curr)l(ently)h(sele)l(cte)l(d)h(te)l(am)e(to)g(the)h
(world.)275 929 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetT)-8
b(eamSize)27 b Fp(\(in)n(t)h(n\))476 1079 y Fg(De)l(cides)g(how)g(many)
g(individuals)f(wil)t(l)f(go)i(into)g(assessments.)275
1302 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetClones)h Fp(\(in)n(t)h(n\))
476 1452 y Fg(A)n(l)t(lows)f(you)h(to)g(sp)l(e)l(cify)g(the)g(numb)l
(er)h(of)e(clones)h(to)h(b)l(e)f(made)f(of)h(e)l(ach)g(individual)f(in)
g(e)l(ach)i(assessment.)275 1675 y Fk(\210)42 b Fp(const)27
b(std::v)n(ector)p Fo(<)p 1051 1675 25 4 v 56 w Fp(Ind)h
Fh(\003)f Fo(>)g Fp(&)g Fq(GetT)-8 b(eam)27 b Fp(\(\))h(const)476
1825 y Fg(R)l(eturns)h(the)f(curr)l(ent)i(te)l(am.)275
2048 y Fk(\210)42 b Fp(virtual)27 b(std::string)g Fq(T)-8
b(oString)27 b Fp(\(\))i(const)476 2197 y Fg(Outputs)g(data)f(ab)l(out)
h(the)g(curr)l(ent)g(gener)l(ation,)g(curr)l(ently)g(only)f(fr)l(om)f
(the)i(GA.)275 2421 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(Serialise)h Fp(\(std::ostream)g(&\))g(const)476 2570
y Fg(Copies)h(the)g Ff(P)n(opulation)i Fg(to)e(a)f(str)l(e)l(am.)275
2794 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Unserialise)h
Fp(\(std::istream)g(&\))476 2943 y Fg(Converts)i(the)g(data)f(pr)l(o)l
(duc)l(e)l(d)i(by)e(Serialise)f(b)l(ack)i(into)f(a)f(p)l(opulation.)150
3367 y Fj(Public)36 b(A)m(ttributes)275 3589 y Fk(\210)42
b Fq(GeneticAlgorithm)p Fo(<)p 1206 3589 V 54 w Fp(Ind,)p
1409 3589 V 58 w(MutF)-7 b(unc)29 b Fo(>)e Fp(&)g Fq(GA)150
3922 y Fj(10.47.1)113 b(Detailed)36 b(Description)150
4133 y Fq(template)p Fo(<)p Fq(class)p 826 4133 29 4
v 80 w(Ind,)51 b(class)p 1319 4133 V 82 w(MutF)-8 b(unc)48
b(=)g(MutationOp)s(erator)p Fo(<)p Fq(t)m(yp)s(ename)p
3197 4133 V 80 w(Ind::gene)p 3616 4133 V 33 w(-)150 4232
y(t)m(yp)s(e)p Fo(>>)31 b Fq(class)h(BEAST::P)m(opulation)p
Fo(<)p 1649 4232 V 65 w Fq(Ind,)p 1884 4232 V 66 w(MutF)-8
b(unc)32 b Fo(>)150 4443 y Fp(This)j(class)f(is)h(deriv)n(ed)f(from)g
Fq(Group)h Fp(and)g(adds)f(a)h(managed)f(GA)h(whic)n(h)g(is)g
(automatically)e(run)i(on)g(the)150 4543 y(whole)27 b
Fq(P)m(opulation)h Fp(ev)n(ery)e(ep)r(o)r(c)n(h.)142
4792 y Fq(P)m(arameters:)p 317 4891 30 4 v 347 4891 a
Fe(Ind)41 b Fp(The)28 b(t)n(yp)r(e)g(of)f(ob)5 b(jects)28
b(to)f(create,)g(m)n(ust)h(inherit)f(from)h Fq(Ev)m(olv)m(er)p
Fp(.)p 317 5049 V 347 5049 a Fe(MutF)-7 b(unc)41 b Fp(If)28
b(y)n(our)e(GA)i(uses)f(a)g(custom)h(m)n(utation)f(op)r(erator,)f(it)i
(m)n(ust)g(also)e(b)r(e)i(sp)r(eci\014ed)g(here.)142
5298 y Fq(See)j(also:)311 5397 y(GeneticAlgorithm)311
5497 y(Ev)m(olv)m(er)311 5597 y(Group)p -358 5723 4034
4 v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 169 177
169 176 bop 150 70 a Fq(10.47)30 b(BEAST::P)m(opulation)p
Fo(<)p 1331 70 29 4 v 65 w Fq(Ind,)p 1566 70 V 66 w(MutF)-8
b(unc)32 b Fo(>)g Fq(Class)f(T)-8 b(emplate)30 b(Reference)856
b(169)p 150 103 4034 4 v 150 333 a Fj(10.47.2)113 b(Mem)m(b)s(er)37
b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150 533 y Fq(10.47.2.1)92
b(template)p Fo(<)p Fq(class)p 1274 533 29 4 v 66 w(Ind,)34
b(class)p 1735 533 V 68 w(MutF)-8 b(unc)34 b(=)g(MutationOp)s(erator)p
Fo(<)p Fq(t)m(yp)s(ename)p 611 633 V 640 633 a(Ind::gene)p
1031 633 V 33 w(t)m(yp)s(e)p Fo(>>)k Fq(v)m(oid)g(BEAST::P)m(opulation)
p Fo(<)p 2560 633 V 71 w Fq(Ind,)p 2803 633 V 74 w(MutF)-8
b(unc)611 732 y Fo(>)p Fq(::SetClones)30 b(\(in)m(t)h
Fe(n)p Fq(\))71 b Fi([inline])150 933 y Fp(Allo)n(ws)27
b(y)n(ou)g(to)g(sp)r(ecify)h(the)g(n)n(um)n(b)r(er)f(of)h(clones)f(to)g
(b)r(e)h(made)g(of)f(eac)n(h)g(individual)h(in)g(eac)n(h)f(assessmen)n
(t.)150 1080 y(If)h(y)n(ou)f(w)n(an)n(t)g(to)g(assess)f(clones)h(of)h
(only)f(one)g(individual,)h(set)g(the)g(team)f(size)g(to)h(one.)150
1227 y(The)g(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f
(generated)h(from)g(the)h(follo)n(wing)e(\014le:)275
1440 y Fk(\210)42 b Fp(p)r(opulation.h)p 150 5723 4034
4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 170 178
170 177 bop -358 70 a Fq(170)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.48)136 b(BEAST::prop)t(ert)l(y)p Fb(<)p 1763
333 41 4 v 82 w Fl(Owner,)p 2274 333 V 84 w(T)l(yp)t(e,)p
2696 333 V 84 w(In,)p 2942 333 V 85 w(Out)33 b Fb(>)h
Fl(Class)591 482 y(T)-11 b(emplate)46 b(Reference)150
711 y Fp(Class)37 b(wrapp)r(er)h(for)f(a)h(mem)n(b)r(er)h(v)-5
b(ariable)37 b(whic)n(h)h(allo)n(ws)f(mem)n(b)r(er)h(data)g(to)g(b)r(e)
h(exp)r(osed)f(with)g(in)n(visible)150 811 y(get/set)27
b(seman)n(tics.)150 958 y Fi(#include)40 b Fo(<)p Fi(utilities.h)p
Fo(>)150 1105 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::prop)r(ert)n
(y)p Fo(<)p 1775 1105 25 4 v 56 w Fp(Owner,)p 2096 1105
V 57 w(T)n(yp)r(e,)p 2363 1105 V 57 w(In,)p 2520 1105
V 58 w(Out)g Fo(>)p Fp(:)1236 1627 y @beginspecial 35
@llx 35 @lly 327 @urx 121 @ury 1623 @rwi @setspecial
%%BeginDocument: classBEAST_1_1property__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 327 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 327 121
%%PageOrientation: Portrait
gsave
35 35 292 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node635
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 21 60 moveto
269 60 lineto
269 75 lineto
21 75 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 21 60 moveto
269 60 lineto
269 75 lineto
21 75 lineto
closepath
stroke
gsave 10 dict begin
145 63 moveto 238 -0.5 (BEAST::property< _Owner, _Type, _In, _Out >) alignedtext
end grestore
end grestore

%	Node636
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 0 8 moveto
290 8 lineto
290 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
145 11 moveto 280 -0.5 (BEAST::pointer_property< _Owner, _Type, _In, _Out >) alignedtext
end grestore
end grestore

%	Node635 -> Node636
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 145 51 moveto
145 42 145 31 145 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 143 50 moveto
145 60 lineto
148 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1957 a(Collab)r(oration)f(diagram)g(for)h(BEAST::prop)
r(ert)n(y)p Fo(<)p 1863 1957 V 56 w Fp(Owner,)p 2183
1957 V 56 w(T)n(yp)r(e,)p 2451 1957 V 58 w(In,)p 2608
1957 V 57 w(Out)h Fo(>)p Fp(:)1323 2562 y @beginspecial
35 @llx 35 @lly 285 @urx 137 @ury 1414 @rwi @setspecial
%%BeginDocument: classBEAST_1_1property__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 285 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 285 137
%%PageOrientation: Portrait
gsave
35 35 250 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node637
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
248 8 lineto
248 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
248 8 lineto
248 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
124 11 moveto 238 -0.5 (BEAST::property< _Owner, _Type, _In, _Out >) alignedtext
end grestore
end grestore

%	Node638
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 71 76 moveto
107 76 lineto
107 91 lineto
71 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
89 79 moveto 26 -0.5 (_Out) alignedtext
end grestore
end grestore

%	Node638 -> Node637
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 93 68 moveto
95 60 99 50 103 42 curveto
107 35 112 29 116 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 91 66 moveto
91 76 lineto
96 67 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
120 46 moveto 24 -0.5 (_Get) alignedtext
end grestore
end grestore

%	Node639
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 134 76 moveto
185 76 lineto
185 91 lineto
134 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
159 79 moveto 41 -0.5 (_Owner) alignedtext
end grestore
end grestore

%	Node639 -> Node637
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 153 68 moveto
150 60 145 50 141 42 curveto
137 35 133 29 130 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 150 68 moveto
156 76 lineto
155 66 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
161 46 moveto 19 -0.5 (that) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2924 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3111 y Fk(\210)42 b Fq(prop)s(ert)m(y)28
b Fp(\()p 786 3111 V 30 w(Owner)f Fh(\003)p Fp(t,)p 1208
3111 V 57 w(Out\()p 1413 3111 V 30 w(Owner::)p Fh(\003)p
Fp(get\)\(v)n(oid\))g(const,)g(v)n(oid\()p 2584 3111
V 29 w(Owner::)p Fh(\003)p Fp(set\)\()p 3108 3111 V 29
w(In\)\))275 3219 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(init)h
Fp(\()p 745 3219 V 30 w(Owner)g Fh(\003)p Fp(t,)p 1168
3219 V 58 w(Out\()p 1373 3219 V 30 w(Owner::)p Fh(\003)p
Fp(get\)\(v)n(oid\))f(const,)h(v)n(oid\()p 2543 3219
V 30 w(Owner::)p Fh(\003)p Fp(set\)\()p 3068 3219 V 29
w(In\)\))275 3327 y Fk(\210)42 b Fq(prop)s(ert)m(y)28
b Fp(&)f Fq(op)s(erator=)h Fp(\()p 1337 3327 V 30 w(In)g(v\))275
3435 y Fk(\210)42 b Fq(op)s(erator)p 752 3435 29 4 v
66 w(Out)27 b Fp(\(\))275 3543 y Fk(\210)p 363 3543 25
4 v 71 w Fp(T)n(yp)r(e)h Fh(\003)f Fq(op)s(erator)32
b Fh(!)60 b Fp(\(\))28 b(const)275 3651 y Fk(\210)42
b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)p 1126 3651
V 57 w(CastT)n(yp)r(e)p Fo(>)p 1601 3651 V 56 w Fp(CastT)n(yp)r(e)27
b Fq(as)h Fp(\(\))g(const)150 3930 y Fj(10.48.1)113 b(Detailed)36
b(Description)150 4131 y Fq(template)p Fo(<)p Fq(class)p
811 4131 29 4 v 64 w(Owner,)d(t)m(yp)s(ename)p 1621 4131
V 66 w(T)m(yp)s(e,)f(t)m(yp)s(ename)p 2368 4131 V 66
w(In)h(=)p 2631 4131 V 67 w(T)m(yp)s(e,)g(t)m(yp)s(ename)p
3378 4131 V 66 w(Out)g(=)p 150 4230 V 179 4230 a(In)p
Fo(>)e Fq(class)h(BEAST::prop)s(ert)m(y)p Fo(<)p 1428
4230 V 66 w Fq(Owner,)p 1798 4230 V 65 w(T)m(yp)s(e,)p
2104 4230 V 66 w(In,)p 2286 4230 V 66 w(Out)g Fo(>)150
4431 y Fp(Class)37 b(wrapp)r(er)h(for)f(a)h(mem)n(b)r(er)h(v)-5
b(ariable)37 b(whic)n(h)h(allo)n(ws)f(mem)n(b)r(er)h(data)g(to)g(b)r(e)
h(exp)r(osed)f(with)g(in)n(visible)150 4530 y(get/set)27
b(seman)n(tics.)142 4747 y Fq(Note:)311 4846 y Fp(A)39
b(sligh)n(t)e(sp)r(eed)i(p)r(enalt)n(y)f(is)g(incurred)f(b)n(y)h(the)g
(time)h(tak)n(en)e(to)h(dereference)f(the)i(accessor/m)n(utator)311
4946 y(functions,)28 b(if)h(faster)e(access)f(is)h(required)g(the)h
(actual)f(accessor)e(functions)j(should)g(b)r(e)g(used.)150
5176 y(The)g(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f
(generated)h(from)g(the)h(follo)n(wing)e(\014le:)275
5389 y Fk(\210)42 b Fq(utilities.h)p -358 5723 4034 4
v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 171 179
171 178 bop 150 70 a Fq(10.49)30 b(Random)p Fo(<)p 853
70 29 4 v 64 w Fq(T)m(yp)s(e)j Fo(>)e Fq(Struct)i(T)-8
b(emplate)31 b(Reference)1691 b(171)p 150 103 4034 4
v 150 333 a Fl(10.49)136 b(Random)p Fb(<)p 1229 333 41
4 v 94 w Fl(T)l(yp)t(e)44 b Fb(>)h Fl(Struct)g(T)-11
b(emplate)45 b(Reference)150 562 y Fp(F)-7 b(unction)28
b(ob)5 b(ject)27 b(v)n(ersion)f(of)i(randv)-5 b(al.)150
709 y Fi(#include)40 b Fo(<)p Fi(random.h)p Fo(>)150
855 y Fp(Collab)r(oration)26 b(diagram)g(for)h(Random)p
Fo(<)p 1527 855 25 4 v 57 w Fp(T)n(yp)r(e)g Fo(>)p Fp(:)1618
1536 y @beginspecial 35 @llx 35 @lly 143 @urx 137 @ury
707 @rwi @setspecial
%%BeginDocument: structRandom__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 143 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 143 137
%%PageOrientation: Portrait
gsave
35 35 108 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node1
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
106 8 lineto
106 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
106 8 lineto
106 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
53 11 moveto 96 -0.5 (Random< _Type >) alignedtext
end grestore
end grestore

%	Node2
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 32 76 moveto
74 76 lineto
74 91 lineto
32 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
53 79 moveto 32 -0.5 (_Type) alignedtext
end grestore
end grestore

%	Node2 -> Node1
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 53 68 moveto
53 54 53 35 53 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 51 66 moveto
53 76 lineto
56 66 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
69 46 moveto 22 -0.5 (limit) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1899 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2085 y Fk(\210)42 b Fq(Random)26 b Fp(\()p
774 2085 V 30 w(T)n(yp)r(e)h(l\))275 2193 y Fk(\210)p
363 2193 V 71 w Fp(T)n(yp)r(e)h Fq(op)s(erator\(\))g
Fp(\()p 1098 2193 V 30 w(T)n(yp)r(e)g(n\))275 2301 y
Fk(\210)p 363 2301 V 71 w Fp(T)n(yp)r(e)g Fq(op)s(erator\(\))g
Fp(\(\))150 2581 y Fj(Public)36 b(A)m(ttributes)275 2767
y Fk(\210)p 363 2767 V 71 w Fp(T)n(yp)r(e)28 b Fq(limit)150
3047 y Fj(10.49.1)113 b(Detailed)36 b(Description)150
3247 y Fq(template)p Fo(<)p Fq(t)m(yp)s(ename)p 1027
3247 29 4 v 63 w(T)m(yp)s(e)p Fo(>)c Fq(struct)h(Random)p
Fo(<)p 2097 3247 V 64 w Fq(T)m(yp)s(e)f Fo(>)150 3448
y Fp(F)-7 b(unction)28 b(ob)5 b(ject)27 b(v)n(ersion)f(of)i(randv)-5
b(al.)142 3660 y Fq(See)31 b(also:)311 3760 y(randv)-5
b(al)150 3990 y Fp(The)28 b(do)r(cumen)n(tation)f(for)g(this)h(struct)f
(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
4203 y Fk(\210)42 b Fq(random.h)p 150 5723 4034 4 v 150
5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 172 180
172 179 bop -358 70 a Fq(172)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.50)136 b(BEAST::Ring2D)45 b(Struct)g(Reference)150
562 y Fp(Plots)27 b(a)g(t)n(w)n(o)g(dimensional)g(ring.)150
709 y Fi(#include)40 b Fo(<)p Fi(bacteria.h)p Fo(>)150
983 y Fj(Public)c(Mem)m(b)s(er)h(F)-9 b(unctions)275
1163 y Fk(\210)42 b Fq(Ring2D)19 b Fp(\(in)n(t)i(cen)n(terx,)g(in)n(t)f
(cen)n(tery)-7 b(,)21 b(double)f(OuterRadius=2.0,)g(double)g
(InnerRadius=1.0,)g(double)358 1263 y(scale=1.0\))476
1382 y Fg(Plots)28 b(a)f(two)i(dimensional)e(ring.)275
1575 y Fk(\210)42 b Fp(double)27 b Fq(op)s(erator\(\))h
Fp(\(in)n(t)g(X,)g(in)n(t)g(Y\))150 1849 y Fj(Public)36
b(A)m(ttributes)275 2030 y Fk(\210)42 b Fp(in)n(t)27
b Fq(cx)275 2131 y Fk(\210)42 b Fp(in)n(t)27 b Fq(cy)476
2250 y Fg(The)g(c)l(entr)l(e)j(of)d(the)h(Gaussian)h(function.)275
2443 y Fk(\210)42 b Fp(double)27 b Fq(rin2)275 2545 y
Fk(\210)42 b Fp(double)27 b Fq(rout2)476 2663 y Fg(Stor)l(e)i(the)f
(squar)l(e)h(r)l(adii.)275 2857 y Fk(\210)42 b Fp(double)27
b Fq(area)275 2958 y Fk(\210)42 b Fp(double)27 b Fq(s)476
3077 y Fg(Stor)l(e)i(the)f(ar)l(e)l(a)h(and)f(sc)l(ale)g(for)f(sp)l(e)l
(e)l(d.)150 3443 y Fj(10.50.1)113 b(Detailed)36 b(Description)150
3643 y Fp(Plots)27 b(a)g(t)n(w)n(o)g(dimensional)g(ring.)150
3918 y Fj(10.50.2)113 b(Constructor)36 b(&)i(Destructor)e(Do)s(cumen)m
(tation)150 4118 y Fq(10.50.2.1)92 b(BEAST::Ring2D::Ring2D)29
b(\(in)m(t)k Fe(c)-5 b(enterx)p Fq(,)33 b(in)m(t)g Fe(c)-5
b(entery)p Fq(,)32 b(double)g Fe(OuterR)-5 b(adius)611
4218 y Fq(=)33 b(2.0,)d(double)h Fe(InnerR)-5 b(adius)32
b Fq(=)g(1.0,)e(double)h Fe(sc)-5 b(ale)33 b Fq(=)f(1.0\))70
b Fi([inline])150 4418 y Fp(Plots)27 b(a)g(t)n(w)n(o)g(dimensional)g
(ring.)142 4600 y Fq(P)m(arameters:)311 4699 y Fe(c)-5
b(enterx)42 b Fp(The)27 b(X)h(co)r(ordinate)f(of)g(the)h(cen)n(ter.)311
4820 y Fe(c)-5 b(entery)42 b Fp(The)27 b(Y)h(co)r(ordinate)f(of)g(the)h
(cen)n(ter.)311 4941 y Fe(OuterR)-5 b(adius)41 b Fp(The)28
b(maxim)n(um)f(radius)g(of)h(the)g(ring.)311 5061 y Fe(InnerR)-5
b(adius)42 b Fp(The)28 b(minim)n(um)g(radius)f(of)g(the)h(ring)f
(\(radius)g(of)h(the)g(hole\).)311 5182 y Fe(sc)-5 b(ale)43
b Fp(The)27 b(v)-5 b(alue)28 b(to)f(output)h(within)h(the)f(ring)e
(area.)150 5382 y(The)i(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n
(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
5571 y Fk(\210)42 b Fq(bacteria.h)p -358 5723 V -192
5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 173 181
173 180 bop 150 70 a Fq(10.51)30 b(BEAST::ScaleAbs)h(Struct)i
(Reference)2154 b(173)p 150 103 4034 4 v 150 333 a Fl(10.51)136
b(BEAST::ScaleAbs)44 b(Struct)h(Reference)150 562 y Fp(Returns)27
b(the)h(absolute)f(v)-5 b(alue)28 b(of)f(the)h(input,)h(as)e(for)g(the)
h(std::abs)f(function.)150 709 y Fi(#include)40 b Fo(<)p
Fi(sensorfunctors.h)o Fo(>)150 855 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::ScaleAbs:)1526 1416 y @beginspecial
35 @llx 35 @lly 187 @urx 121 @ury 926 @rwi @setspecial
%%BeginDocument: structBEAST_1_1ScaleAbs__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 187 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 187 121
%%PageOrientation: Portrait
gsave
35 35 152 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node642
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 28 8 moveto
123 8 lineto
123 23 lineto
28 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 28 8 moveto
123 8 lineto
123 23 lineto
28 23 lineto
closepath
stroke
gsave 10 dict begin
75 11 moveto 85 -0.5 (BEAST::ScaleAbs) alignedtext
end grestore
end grestore

%	Node643
[ /Rect [ 0 61 150 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
151 60 lineto
151 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
75 63 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node643 -> Node642
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 51 moveto
75 42 75 31 75 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 50 moveto
75 60 lineto
78 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1746 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::ScaleAbs:)1526 2307 y @beginspecial 35 @llx 35
@lly 187 @urx 121 @ury 926 @rwi @setspecial
%%BeginDocument: structBEAST_1_1ScaleAbs__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 187 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 187 121
%%PageOrientation: Portrait
gsave
35 35 152 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node644
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 28 8 moveto
123 8 lineto
123 23 lineto
28 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 28 8 moveto
123 8 lineto
123 23 lineto
28 23 lineto
closepath
stroke
gsave 10 dict begin
75 11 moveto 85 -0.5 (BEAST::ScaleAbs) alignedtext
end grestore
end grestore

%	Node645
[ /Rect [ 0 61 150 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
151 60 lineto
151 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
75 63 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node645 -> Node644
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 51 moveto
75 42 75 31 75 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 50 moveto
75 60 lineto
78 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2670 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2856 y Fk(\210)42 b Fp(virtual)27 b(double)g
Fq(op)s(erator\(\))h Fp(\(double)g(input\))150 3136 y
Fj(10.51.1)113 b(Detailed)36 b(Description)150 3336 y
Fp(Returns)27 b(the)h(absolute)f(v)-5 b(alue)28 b(of)f(the)h(input,)h
(as)e(for)g(the)h(std::abs)f(function.)150 3483 y(The)h(do)r(cumen)n
(tation)f(for)g(this)h(struct)f(w)n(as)g(generated)g(from)g(the)h
(follo)n(wing)e(\014le:)275 3696 y Fk(\210)42 b Fp(sensorfunctors.h)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 174 182
174 181 bop -358 70 a Fq(174)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.52)136 b(BEAST::ScaleAdapter)p Fb(<)p 2044
333 41 4 v 91 w Fl(F)-11 b(unctor)41 b Fb(>)h Fl(Struct)g(T)-11
b(emplate)591 482 y(Reference)150 711 y Fp(Allo)n(ws)27
b(an)n(y)g(unary)g(functor)g(to)h(b)r(e)g(adapted)f(for)g(use)g(as)g(a)
g(scaling)g(function.)150 858 y Fi(#include)40 b Fo(<)p
Fi(sensorfunctors.h)o Fo(>)150 1005 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::ScaleAdapter)p Fo(<)p 1945 1005
25 4 v 56 w Fp(F)-7 b(unctor)28 b Fo(>)p Fp(:)1460 1543
y @beginspecial 35 @llx 35 @lly 219 @urx 121 @ury 1085
@rwi @setspecial
%%BeginDocument: structBEAST_1_1ScaleAdapter__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 219 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 219 121
%%PageOrientation: Portrait
gsave
35 35 184 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node646
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
183 8 lineto
183 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
183 8 lineto
183 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
91 11 moveto 173 -0.5 (BEAST::ScaleAdapter< _Functor >) alignedtext
end grestore
end grestore

%	Node647
[ /Rect [ 16 61 166 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 16 60 moveto
167 60 lineto
167 75 lineto
16 75 lineto
closepath
stroke
gsave 10 dict begin
91 63 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node647 -> Node646
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 91 51 moveto
91 42 91 31 91 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 89 50 moveto
91 60 lineto
94 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1863 a(Collab)r(oration)e(diagram)g(for)h
(BEAST::ScaleAdapter)p Fo(<)p 2033 1863 V 56 w Fp(F)-7
b(unctor)27 b Fo(>)p Fp(:)1335 2460 y @beginspecial 35
@llx 35 @lly 279 @urx 137 @ury 1384 @rwi @setspecial
%%BeginDocument: structBEAST_1_1ScaleAdapter__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 279 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 279 137
%%PageOrientation: Portrait
gsave
35 35 244 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node648
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 44 8 moveto
227 8 lineto
227 23 lineto
44 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 44 8 moveto
227 8 lineto
227 23 lineto
44 23 lineto
closepath
stroke
gsave 10 dict begin
135 11 moveto 173 -0.5 (BEAST::ScaleAdapter< _Functor >) alignedtext
end grestore
end grestore

%	Node649
[ /Rect [ 0 77 150 91 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 76 moveto
151 76 lineto
151 91 lineto
0 91 lineto
closepath
stroke
gsave 10 dict begin
75 79 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node649 -> Node648
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 87 70 moveto
99 57 118 35 128 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 86 67 moveto
82 76 lineto
90 70 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node650
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 168 76 moveto
223 76 lineto
223 91 lineto
168 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
195 79 moveto 45 -0.5 (_Functor) alignedtext
end grestore
end grestore

%	Node650 -> Node648
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 183 70 moveto
171 57 152 35 142 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 180 70 moveto
188 76 lineto
184 67 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
196 46 moveto 37 -0.5 (functor) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2819 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3001 y Fk(\210)42 b Fq(ScaleAdapter)28
b Fp(\()p 979 3001 V 30 w(F)-7 b(unctor)28 b(f)6 b(\))275
3104 y Fk(\210)42 b Fp(virtual)27 b(double)g Fq(op)s(erator\(\))h
Fp(\(double)g(input\))150 3379 y Fj(Public)36 b(A)m(ttributes)275
3561 y Fk(\210)p 363 3561 V 71 w Fp(F)-7 b(unctor)28
b Fq(functor)150 3837 y Fj(Related)37 b(F)-9 b(unctions)150
4037 y Fp(\(Note)28 b(that)g(these)f(are)g(not)h(mem)n(b)r(er)f
(functions.\))275 4232 y Fk(\210)42 b Fq(ScaleAdapter)p
Fo(<)p 1012 4232 V 58 w Fp(F)-7 b(unctor)27 b Fo(>)g
Fh(\003)h Fq(ScaleAdapt)g Fp(\()p 2047 4232 V 30 w(F)-7
b(unctor)28 b(f)6 b(\))476 4352 y Fg(A)27 b(help)l(er)i(function)e(for)
h(cr)l(e)l(ating)h Ff(ScaleAdapter)f Fg(functors.)150
4719 y Fj(10.52.1)113 b(Detailed)36 b(Description)150
4919 y Fq(template)p Fo(<)p Fq(class)p 810 4919 29 4
v 64 w(F)-8 b(unctor)p Fo(>)32 b Fq(struct)h(BEAST::ScaleAdapter)p
Fo(<)p 2573 4919 V 66 w Fq(F)-8 b(unctor)32 b Fo(>)150
5120 y Fp(Allo)n(ws)27 b(an)n(y)g(unary)g(functor)g(to)h(b)r(e)g
(adapted)f(for)g(use)g(as)g(a)g(scaling)g(function.)150
5267 y(This)k(includes)f(all)h(unary)e(functors)i(describ)r(ed)f(b)n(y)
h(the)g(STL)f(and)h(an)n(y)f(binary)f(functors)i(after)f(adaptation)150
5366 y(with)j(bind1st)g(or)e(bind2nd.)52 b(The)33 b(ptr)p
1413 5366 25 4 v 30 w(fun)g(adapter)e(ma)n(y)h(b)r(e)h(used)g(to)f
(turn)h(an)n(y)f(function)h(in)n(to)f(a)g(scaling)150
5466 y(functor.)150 5613 y(The)c(do)r(cumen)n(tation)f(for)g(this)h
(struct)f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)p
-358 5723 4034 4 v -192 5823 a Fn(Generated)g(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 175 183
175 182 bop 150 70 a Fq(10.52)30 b(BEAST::ScaleAdapter)p
Fo(<)p 1434 70 29 4 v 66 w Fq(F)-8 b(unctor)33 b Fo(>)e
Fq(Struct)i(T)-8 b(emplate)31 b(Reference)999 b(175)p
150 103 4034 4 v 275 333 a Fk(\210)42 b Fp(sensorfunctors.h)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 176 184
176 183 bop -358 70 a Fq(176)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.53)136 b(BEAST::ScaleComp)t(ose)45 b(Struct)g(Reference)150
562 y Fq(ScaleComp)s(ose)21 b Fp(allo)n(ws)h(the)h(c)n(haining)g(of)g
(t)n(w)n(o)g(scaling)f(functions)i(together,)f(suc)n(h)g(the)h(output)g
(of)f(a)g Fq(Scale-)150 661 y(Comp)s(ose)j Fp(functor)j(is)g(the)g
(result)g(of)g(second\(\014rst\(input\)\),)h(where)f(\014rst)g(and)g
(second)f(are)g(the)h(argumen)n(ts)150 761 y(in)f(ScaleComp)r(ose's)e
(constructor.)150 908 y Fi(#include)40 b Fo(<)p Fi(sensorfunctors.h)o
Fo(>)150 1055 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::ScaleComp)r
(ose:)1526 1616 y @beginspecial 35 @llx 35 @lly 187 @urx
121 @ury 926 @rwi @setspecial
%%BeginDocument: structBEAST_1_1ScaleCompose__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 187 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 187 121
%%PageOrientation: Portrait
gsave
35 35 152 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node651
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 15 8 moveto
136 8 lineto
136 23 lineto
15 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 15 8 moveto
136 8 lineto
136 23 lineto
15 23 lineto
closepath
stroke
gsave 10 dict begin
75 11 moveto 111 -0.5 (BEAST::ScaleCompose) alignedtext
end grestore
end grestore

%	Node652
[ /Rect [ 0 61 150 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
151 60 lineto
151 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
75 63 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node652 -> Node651
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 51 moveto
75 42 75 31 75 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 50 moveto
75 60 lineto
78 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1945 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::ScaleComp)r(ose:)1526 2638 y @beginspecial 35
@llx 35 @lly 187 @urx 147 @ury 926 @rwi @setspecial
%%BeginDocument: structBEAST_1_1ScaleCompose__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 187 147
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 187 147
%%PageOrientation: Portrait
gsave
35 35 152 112 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node653
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 15 8 moveto
136 8 lineto
136 23 lineto
15 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 15 8 moveto
136 8 lineto
136 23 lineto
15 23 lineto
closepath
stroke
gsave 10 dict begin
75 11 moveto 111 -0.5 (BEAST::ScaleCompose) alignedtext
end grestore
end grestore

%	Node654
[ /Rect [ 0 87 150 101 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 86 moveto
151 86 lineto
151 101 lineto
0 101 lineto
closepath
stroke
gsave 10 dict begin
75 89 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node654 -> Node653
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 78 moveto
75 62 75 37 75 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 76 moveto
75 86 lineto
78 76 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node654 -> Node653
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 78 78 moveto
79 74 79 71 80 68 curveto
81 56 81 53 80 42 curveto
79 36 78 29 77 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 76 76 moveto
77 86 lineto
81 76 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
101 56 moveto 33 -0.5 (second) alignedtext
101 45 moveto 20 -0.5 (first) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3001 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3187 y Fk(\210)42 b Fq(ScaleComp)s(ose)24
b Fp(\()p Fq(SensorScaleF)-8 b(unction)28 b Fh(\003)p
Fp(f,)g Fq(SensorScaleF)-8 b(unction)27 b Fh(\003)p Fp(s\))275
3295 y Fk(\210)42 b Fp(virtual)27 b(double)g Fq(op)s(erator\(\))h
Fp(\(double)g(input\))150 3575 y Fj(10.53.1)113 b(Detailed)36
b(Description)150 3775 y Fq(ScaleComp)s(ose)21 b Fp(allo)n(ws)h(the)h
(c)n(haining)g(of)g(t)n(w)n(o)g(scaling)f(functions)i(together,)f(suc)n
(h)g(the)h(output)g(of)f(a)g Fq(Scale-)150 3875 y(Comp)s(ose)j
Fp(functor)j(is)g(the)g(result)g(of)g(second\(\014rst\(input\)\),)h
(where)f(\014rst)g(and)g(second)f(are)g(the)h(argumen)n(ts)150
3975 y(in)f(ScaleComp)r(ose's)e(constructor.)150 4121
y(F)-7 b(or)42 b(example,)j(to)d(create)g(a)f(function)i(whic)n(h)f
(scales)g(the)g(input)h(from)f([0:50])f(to)h([0:1])g(and)g(then)g(adds)
150 4221 y(random)35 b(noise)h(b)r(et)n(w)n(een)g(-0.5)f(and)h(+0.5:)53
b(s-)p Fo(>)p Fp(SetScalingF)-7 b(unction\(new)35 b Fq(ScaleComp)s(ose)
p Fp(\(new)f Fq(Scale-)150 4321 y(Linear)p Fp(\(50.0\),)40
b(new)f Fq(ScaleNoise)p Fp(\(-0.5,)f(0.5\)\)\);)43 b(T)-7
b(o)38 b(comp)r(ose)g(more)f(complex)g(functions,)42
b(instances)37 b(of)150 4420 y Fq(ScaleComp)s(ose)25
b Fp(ma)n(y)i(b)r(e)h(nested.)37 b Fq(ScaleComp)s(ose)25
b Fp(is)i(resp)r(onsible)g(for)g(deleting)h(its)g(c)n(hild)f
(functions.)150 4567 y(The)h(do)r(cumen)n(tation)f(for)g(this)h(struct)
f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
4781 y Fk(\210)42 b Fp(sensorfunctors.h)p -358 5723 V
-192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 177 185
177 184 bop 150 70 a Fq(10.54)30 b(BEAST::ScaleLinear)i(Struct)h
(Reference)2050 b(177)p 150 103 4034 4 v 150 333 a Fl(10.54)136
b(BEAST::ScaleLinear)45 b(Struct)g(Reference)150 562
y Fp(A)20 b(simple)g(linear)f(scaling)f(function)i(whic)n(h)g(defaults)
g(to)f(an)h(input)g(scale)f(b)r(et)n(w)n(een)g(0)h(and)f(a)g(de\014ned)
h(maxim)n(um,)150 661 y(scaling)27 b(to)g(an)g(output)h(range)f(b)r(et)
n(w)n(een)g(0)g(and)h(1.)150 808 y Fi(#include)40 b Fo(<)p
Fi(sensorfunctors.h)o Fo(>)150 955 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::ScaleLinear:)1526 1516 y @beginspecial
35 @llx 35 @lly 187 @urx 121 @ury 926 @rwi @setspecial
%%BeginDocument: structBEAST_1_1ScaleLinear__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 187 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 187 121
%%PageOrientation: Portrait
gsave
35 35 152 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node655
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 21 8 moveto
129 8 lineto
129 23 lineto
21 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 21 8 moveto
129 8 lineto
129 23 lineto
21 23 lineto
closepath
stroke
gsave 10 dict begin
75 11 moveto 98 -0.5 (BEAST::ScaleLinear) alignedtext
end grestore
end grestore

%	Node656
[ /Rect [ 0 61 150 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
151 60 lineto
151 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
75 63 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node656 -> Node655
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 51 moveto
75 42 75 31 75 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 50 moveto
75 60 lineto
78 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1846 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::ScaleLinear:)1526 2406 y @beginspecial 35 @llx
35 @lly 187 @urx 121 @ury 926 @rwi @setspecial
%%BeginDocument: structBEAST_1_1ScaleLinear__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 187 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 187 121
%%PageOrientation: Portrait
gsave
35 35 152 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node657
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 21 8 moveto
129 8 lineto
129 23 lineto
21 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 21 8 moveto
129 8 lineto
129 23 lineto
21 23 lineto
closepath
stroke
gsave 10 dict begin
75 11 moveto 98 -0.5 (BEAST::ScaleLinear) alignedtext
end grestore
end grestore

%	Node658
[ /Rect [ 0 61 150 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
151 60 lineto
151 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
75 63 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node658 -> Node657
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 51 moveto
75 42 75 31 75 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 50 moveto
75 60 lineto
78 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2769 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2956 y Fk(\210)42 b Fq(ScaleLinear)28
b Fp(\(double)g(range\))275 3064 y Fk(\210)42 b Fq(ScaleLinear)22
b Fp(\(double)g(inputMinim)n(um,)i(double)e(inputMaxim)n(um,)i(double)d
(outputMinim)n(um,)k(dou-)358 3163 y(ble)i(outputMaxim)n(um\))275
3271 y Fk(\210)42 b Fp(virtual)27 b(double)g Fq(op)s(erator\(\))h
Fp(\(double)g(input\))150 3551 y Fj(Public)36 b(A)m(ttributes)275
3737 y Fk(\210)42 b Fp(double)27 b Fq(inMin)275 3845
y Fk(\210)42 b Fp(double)27 b Fq(inMax)275 3953 y Fk(\210)42
b Fp(double)27 b Fq(outMin)275 4061 y Fk(\210)42 b Fp(double)27
b Fq(outMax)150 4341 y Fj(10.54.1)113 b(Detailed)36 b(Description)150
4541 y Fp(A)20 b(simple)g(linear)f(scaling)f(function)i(whic)n(h)g
(defaults)g(to)f(an)h(input)g(scale)f(b)r(et)n(w)n(een)g(0)h(and)f(a)g
(de\014ned)h(maxim)n(um,)150 4641 y(scaling)27 b(to)g(an)g(output)h
(range)f(b)r(et)n(w)n(een)g(0)g(and)h(1.)150 4788 y(An)n(y)33
b(input)i(and)e(output)h(range)e(can)h(b)r(e)h(de\014ned,)h(including)e
(in)n(v)n(erted)g(ranges)f(with)i(min)g Fo(>)f Fp(max,)h(whic)n(h)150
4887 y(can)27 b(in)n(v)n(ert)g(the)h(output.)150 5034
y(The)g(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g(generated)
g(from)g(the)h(follo)n(wing)e(\014le:)275 5247 y Fk(\210)42
b Fp(sensorfunctors.h)p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 178 186
178 185 bop -358 70 a Fq(178)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.55)136 b(BEAST::ScaleNoise)46 b(Struct)e(Reference)150
562 y Fq(ScaleNoise)26 b Fp(adds)h(uniform)h(random)f(noise)g(to)g(its)
h(input.)150 709 y Fi(#include)40 b Fo(<)p Fi(sensorfunctors.h)o
Fo(>)150 855 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::ScaleNoise:)
1526 1416 y @beginspecial 35 @llx 35 @lly 187 @urx 121
@ury 926 @rwi @setspecial
%%BeginDocument: structBEAST_1_1ScaleNoise__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 187 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 187 121
%%PageOrientation: Portrait
gsave
35 35 152 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node659
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 24 8 moveto
127 8 lineto
127 23 lineto
24 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 24 8 moveto
127 8 lineto
127 23 lineto
24 23 lineto
closepath
stroke
gsave 10 dict begin
75 11 moveto 93 -0.5 (BEAST::ScaleNoise) alignedtext
end grestore
end grestore

%	Node660
[ /Rect [ 0 61 150 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
151 60 lineto
151 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
75 63 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node660 -> Node659
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 51 moveto
75 42 75 31 75 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 50 moveto
75 60 lineto
78 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1746 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::ScaleNoise:)1526 2307 y @beginspecial 35 @llx
35 @lly 187 @urx 121 @ury 926 @rwi @setspecial
%%BeginDocument: structBEAST_1_1ScaleNoise__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 187 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 187 121
%%PageOrientation: Portrait
gsave
35 35 152 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node661
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 24 8 moveto
127 8 lineto
127 23 lineto
24 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 24 8 moveto
127 8 lineto
127 23 lineto
24 23 lineto
closepath
stroke
gsave 10 dict begin
75 11 moveto 93 -0.5 (BEAST::ScaleNoise) alignedtext
end grestore
end grestore

%	Node662
[ /Rect [ 0 61 150 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
151 60 lineto
151 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
75 63 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node662 -> Node661
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 51 moveto
75 42 75 31 75 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 50 moveto
75 60 lineto
78 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2670 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2856 y Fk(\210)42 b Fq(ScaleNoise)26 b
Fp(\(double)i(min=-0.1,)e(double)i(max=0.1\))275 2964
y Fk(\210)42 b Fp(virtual)27 b(double)g Fq(op)s(erator\(\))h
Fp(\(double)g(input\))150 3244 y Fj(Public)36 b(A)m(ttributes)275
3430 y Fk(\210)42 b Fp(double)27 b Fq(minim)m(um)275
3538 y Fk(\210)42 b Fp(double)27 b Fq(maxim)m(um)150
3818 y Fj(10.55.1)113 b(Detailed)36 b(Description)150
4018 y Fq(ScaleNoise)26 b Fp(adds)h(uniform)h(random)f(noise)g(to)g
(its)h(input.)150 4165 y(Minim)n(um)g(and)g(maxim)n(um)f(v)-5
b(alues)27 b(ma)n(y)g(b)r(e)h(sp)r(eci\014ed,)g(but)g(default)g(to)g
([-0.1:0.1])150 4312 y(The)g(do)r(cumen)n(tation)f(for)g(this)h(struct)
f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
4525 y Fk(\210)42 b Fp(sensorfunctors.h)p -358 5723 V
-192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 179 187
179 186 bop 150 70 a Fq(10.56)30 b(BEAST::ScaleThreshold)h(Struct)i
(Reference)1896 b(179)p 150 103 4034 4 v 150 333 a Fl(10.56)136
b(BEAST::ScaleThreshold)44 b(Struct)h(Reference)150 562
y Fq(ScaleThreshold)28 b Fp(tak)n(es)f(v)-5 b(alues:)38
b(threshold,)27 b(min)i(and)f(max)g(and)g(returns)f(min)i(if)f(input)h
Fo(<)f Fp(threshold,)g(or)150 661 y(max)f(if)h(input)h
Fo(>)p Fp(=)e(threshold.)150 808 y Fi(#include)40 b Fo(<)p
Fi(sensorfunctors.h)o Fo(>)150 955 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::ScaleThreshold:)1526 1516 y
@beginspecial 35 @llx 35 @lly 187 @urx 121 @ury 926 @rwi
@setspecial
%%BeginDocument: structBEAST_1_1ScaleThreshold__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 187 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 187 121
%%PageOrientation: Portrait
gsave
35 35 152 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node663
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 13 8 moveto
138 8 lineto
138 23 lineto
13 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 13 8 moveto
138 8 lineto
138 23 lineto
13 23 lineto
closepath
stroke
gsave 10 dict begin
75 11 moveto 115 -0.5 (BEAST::ScaleThreshold) alignedtext
end grestore
end grestore

%	Node664
[ /Rect [ 0 61 150 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
151 60 lineto
151 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
75 63 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node664 -> Node663
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 51 moveto
75 42 75 31 75 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 50 moveto
75 60 lineto
78 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1846 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::ScaleThreshold:)1526 2406 y @beginspecial 35
@llx 35 @lly 187 @urx 121 @ury 926 @rwi @setspecial
%%BeginDocument: structBEAST_1_1ScaleThreshold__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 187 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 187 121
%%PageOrientation: Portrait
gsave
35 35 152 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node665
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 13 8 moveto
138 8 lineto
138 23 lineto
13 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 13 8 moveto
138 8 lineto
138 23 lineto
13 23 lineto
closepath
stroke
gsave 10 dict begin
75 11 moveto 115 -0.5 (BEAST::ScaleThreshold) alignedtext
end grestore
end grestore

%	Node666
[ /Rect [ 0 61 150 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
151 60 lineto
151 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
75 63 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node666 -> Node665
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 51 moveto
75 42 75 31 75 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 50 moveto
75 60 lineto
78 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2769 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2956 y Fk(\210)42 b Fq(ScaleThreshold)27
b Fp(\(double)h(t,)g(double)f(a=0.0,)f(double)i(b=1.0\))275
3064 y Fk(\210)42 b Fp(virtual)27 b(double)g Fq(op)s(erator\(\))h
Fp(\(double)g(input\))150 3343 y Fj(Public)36 b(A)m(ttributes)275
3530 y Fk(\210)42 b Fp(double)27 b Fq(threshold)275 3638
y Fk(\210)42 b Fp(double)27 b Fq(minim)m(um)275 3745
y Fk(\210)42 b Fp(double)27 b Fq(maxim)m(um)150 4025
y Fj(10.56.1)113 b(Detailed)36 b(Description)150 4226
y Fq(ScaleThreshold)28 b Fp(tak)n(es)f(v)-5 b(alues:)38
b(threshold,)27 b(min)i(and)f(max)g(and)g(returns)f(min)i(if)f(input)h
Fo(<)f Fp(threshold,)g(or)150 4325 y(max)f(if)h(input)h
Fo(>)p Fp(=)e(threshold.)150 4472 y(Min)h(and)f(max)h(default)g(to)f(0)
g(and)h(1.)150 4619 y(The)g(do)r(cumen)n(tation)f(for)g(this)h(struct)f
(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
4832 y Fk(\210)42 b Fp(sensorfunctors.h)p 150 5723 V
150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 180 188
180 187 bop -358 70 a Fq(180)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.57)136 b(BEAST::SelfSensor)45 b(Class)h(Reference)150
562 y Fp(The)28 b Fq(SelfSensor)e Fp(is)i(used)f(to)h(detect)g
(information)f(ab)r(out)g(its)h(o)n(wner.)150 709 y Fi(#include)40
b Fo(<)p Fi(sensorbase.h)p Fo(>)150 855 y Fp(Inheritance)27
b(diagram)f(for)h(BEAST::SelfSensor:)1601 1985 y @beginspecial
35 @llx 35 @lly 151 @urx 225 @ury 747 @rwi @setspecial
%%BeginDocument: classBEAST_1_1SelfSensor__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 151 225
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 151 225
%%PageOrientation: Portrait
gsave
35 35 116 190 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node667
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 6 8 moveto
108 8 lineto
108 23 lineto
6 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 6 8 moveto
108 8 lineto
108 23 lineto
6 23 lineto
closepath
stroke
gsave 10 dict begin
57 11 moveto 92 -0.5 (BEAST::SelfSensor) alignedtext
end grestore
end grestore

%	Node668
[ /Rect [ 16 61 98 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Sensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 16 60 moveto
99 60 lineto
99 75 lineto
16 75 lineto
closepath
stroke
gsave 10 dict begin
57 63 moveto 73 -0.5 (BEAST::Sensor) alignedtext
end grestore
end grestore

%	Node668 -> Node667
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 51 moveto
57 42 57 31 57 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 50 moveto
57 60 lineto
60 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node669
[ /Rect [ 0 113 114 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
115 112 lineto
115 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
57 115 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node669 -> Node668
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 103 moveto
57 94 57 83 57 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 102 moveto
57 112 lineto
60 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node670
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 8 164 moveto
107 164 lineto
107 179 lineto
8 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
57 167 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node670 -> Node669
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 155 moveto
57 146 57 135 57 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 154 moveto
57 164 lineto
60 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2299 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::SelfSensor:)1626 2882 y @beginspecial 35 @llx
35 @lly 139 @urx 121 @ury 687 @rwi @setspecial
%%BeginDocument: classBEAST_1_1SelfSensor__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 139 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 139 121
%%PageOrientation: Portrait
gsave
35 35 104 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node671
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
102 8 lineto
102 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
102 8 lineto
102 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
51 11 moveto 92 -0.5 (BEAST::SelfSensor) alignedtext
end grestore
end grestore

%	Node672
[ /Rect [ 10 61 92 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Sensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 10 60 moveto
93 60 lineto
93 75 lineto
10 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
51 63 moveto 73 -0.5 (BEAST::Sensor) alignedtext
end grestore
end grestore

%	Node672 -> Node671
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 51 51 moveto
51 42 51 31 51 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 49 50 moveto
51 60 lineto
54 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3238 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3417 y Fk(\210)42 b Fq(SelfSensor)26 b
Fp(\()p Fq(SelfSensorT)m(yp)s(e)i Fp(t,)g(std::string)f(ctrl=""\))476
3534 y Fg(Constructor,)j(sp)l(e)l(cifying)d(typ)l(e)i(and)f(optional)t
(ly)g(a)g(c)l(ontr)l(ol)g(to)h(watch.)275 3726 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(Up)s(date)j Fp(\(\))476
3843 y Fg(R)l(esets)g(the)f(sensor)h(r)l(e)l(ady)g(for)f(the)g(next)h
(r)l(ound)g(of)e(tests.)275 4035 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(In)m(teract)k Fp(\()p Fq(W)-8 b(orldOb)5
b(ject)28 b Fh(\003)p Fp(\))476 4152 y Fg(Cal)t(ls)f(the)i(sensor's)g
(matching)g(function)g(on)f(the)h Ff(W)-7 b(orldOb)5
b(ject)p Fg(,)29 b(then)g(if)e(it's)h(a)g(match,)g(c)l(al)t(ls)g(the)h
(eval-)476 4243 y(uation)f(function.)275 4435 y Fk(\210)42
b Fp(virtual)27 b(double)g Fq(GetOutput)h Fp(\(\))g(const)476
4552 y Fg(R)l(eturns)h(the)f(SelfSensor's)h(output,)f(which)g(c)l(omes)
g(dir)l(e)l(ctly)h(fr)l(om)e(the)i(sensor's)g(owner.)150
4917 y Fj(Protected)36 b(A)m(ttributes)275 5096 y Fk(\210)42
b Fq(SelfSensorT)m(yp)s(e)27 b(m)m(yT)m(yp)s(e)476 5213
y Fg(The)g(typ)l(e)i(of)e Ff(SelfSensor)p Fg(.)275 5404
y Fk(\210)42 b Fp(std::string)27 b Fq(con)m(trolName)476
5522 y Fg(F)-6 b(r)l(om)28 b Ff(Animat)g Fg(c)l(ontr)l(ols)h(,)e(e.g.)
35 b("left".)p -358 5723 V -192 5823 a Fn(Generated)26
b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 181 189
181 188 bop 150 70 a Fq(10.57)30 b(BEAST::SelfSensor)h(Class)g
(Reference)2146 b(181)p 150 103 4034 4 v 150 333 a Fj(10.57.1)113
b(Detailed)36 b(Description)150 533 y Fp(The)28 b Fq(SelfSensor)e
Fp(is)i(used)f(to)h(detect)g(information)f(ab)r(out)g(its)h(o)n(wner.)
150 680 y(An)e Fq(Animat)e Fp(can)i(use)f(a)g Fq(SelfSensor)g
Fp(to)g(get)g(information)g(on)g(its)h(lo)r(cation)f(and)g(the)h(state)
f(of)h(its)g(con)n(trols.)150 960 y Fj(10.57.2)113 b(Mem)m(b)s(er)37
b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150 1160 y
Fq(10.57.2.1)92 b(double)31 b(BEAST::SelfSensor::GetOutput)f(\(\))i
(const)71 b Fi([virtual])150 1361 y Fp(Returns)27 b(the)h(SelfSensor's)
f(output,)i(whic)n(h)e(comes)g(directly)g(from)h(the)g(sensor's)e(o)n
(wner.)150 1507 y(Curren)n(tly)h(supp)r(orts)g(sensing)g(of)g(x/y)g(lo)
r(cation,)g(angle,)g(or)g(con)n(trol)f(output.)142 1724
y Fq(T)-8 b(o)s(do)311 1824 y Fp(Sensing)25 b(of)h(\014tness,)f(p)r
(erhaps)g(adjusting)g Fq(SelfSensor)f Fp(in)n(to)h(a)g(template)h(whic)
n(h)f(can)g(b)r(e)g(made)g(to)h(sense)311 1924 y(an)n(y)h(detail)h(ab)r
(out)f(the)h(o)n(wner.)150 2154 y(Reimplemen)n(ted)g(from)f
Fq(BEAST::Sensor)g Fp(\(p.)14 b(184\).)150 2300 y(The)28
b(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h(from)
g(the)h(follo)n(wing)e(\014les:)275 2514 y Fk(\210)42
b Fq(sensorbase.h)275 2622 y Fk(\210)g Fp(sensor.cc)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 182 190
182 189 bop -358 70 a Fq(182)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.58)136 b(BEAST::Sensor)44 b(Class)i(Reference)150
562 y Fp(The)22 b Fq(Sensor)f Fp(class)g(is)g(the)h(base)f(class)g(for)
g(all)g(the)h(di\013eren)n(t)g(t)n(yp)r(es)f(of)h(sensor:)32
b Fq(T)-8 b(ouc)m(hSensor)p Fp(,)24 b Fq(SelfSensor)p
Fp(,)150 661 y Fq(AreaSensor)k Fp(and)f Fq(BeamSensor)p
Fp(.)150 808 y Fi(#include)40 b Fo(<)p Fi(sensorbase.h)p
Fo(>)150 955 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::Sensor:)825
1913 y @beginspecial 35 @llx 35 @lly 525 @urx 225 @ury
2610 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Sensor__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 525 225
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 525 225
%%PageOrientation: Portrait
gsave
35 35 490 190 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node700
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 201 60 moveto
284 60 lineto
284 75 lineto
201 75 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 201 60 moveto
284 60 lineto
284 75 lineto
201 75 lineto
closepath
stroke
gsave 10 dict begin
242 63 moveto 73 -0.5 (BEAST::Sensor) alignedtext
end grestore
end grestore

%	Node703
[ /Rect [ 0 9 106 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1AreaSensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 8 moveto
107 8 lineto
107 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
53 11 moveto 97 -0.5 (BEAST::AreaSensor) alignedtext
end grestore
end grestore

%	Node700 -> Node703
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 206 57 moveto
169 47 113 32 81 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 205 59 moveto
215 60 lineto
206 54 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node704
[ /Rect [ 124 9 236 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1BeamSensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 124 8 moveto
236 8 lineto
236 23 lineto
124 23 lineto
closepath
stroke
gsave 10 dict begin
180 11 moveto 102 -0.5 (BEAST::BeamSensor) alignedtext
end grestore
end grestore

%	Node700 -> Node704
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 226 54 moveto
214 45 199 32 189 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 224 55 moveto
233 60 lineto
227 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node705
[ /Rect [ 254 9 356 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1SelfSensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 254 8 moveto
356 8 lineto
356 23 lineto
254 23 lineto
closepath
stroke
gsave 10 dict begin
305 11 moveto 92 -0.5 (BEAST::SelfSensor) alignedtext
end grestore
end grestore

%	Node700 -> Node705
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 258 54 moveto
270 45 286 32 296 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 257 52 moveto
251 60 lineto
260 55 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node706
[ /Rect [ 374 9 488 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1TouchSensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 374 8 moveto
488 8 lineto
488 23 lineto
374 23 lineto
closepath
stroke
gsave 10 dict begin
431 11 moveto 104 -0.5 (BEAST::TouchSensor) alignedtext
end grestore
end grestore

%	Node700 -> Node706
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 278 57 moveto
315 47 371 32 403 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 278 54 moveto
269 60 lineto
279 59 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node701
[ /Rect [ 185 113 299 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 185 112 moveto
300 112 lineto
300 127 lineto
185 127 lineto
closepath
stroke
gsave 10 dict begin
242 115 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node701 -> Node700
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 242 103 moveto
242 94 242 83 242 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 240 102 moveto
242 112 lineto
245 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node702
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 193 164 moveto
292 164 lineto
292 179 lineto
193 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
242 167 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node702 -> Node701
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 242 155 moveto
242 146 242 135 242 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 240 154 moveto
242 164 lineto
245 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2234 a(Collab)r(oration)f(diagram)g(for)h
(BEAST::Sensor:)169 3511 y @beginspecial 35 @llx 35 @lly
947 @urx 339 @ury 4184 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Sensor__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 947 339
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 947 339
%%PageOrientation: Portrait
gsave
35 35 912 304 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node707
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 819 137 moveto
902 137 lineto
902 152 lineto
819 152 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 819 137 moveto
902 137 lineto
902 152 lineto
819 152 lineto
closepath
stroke
gsave 10 dict begin
860 140 moveto 73 -0.5 (BEAST::Sensor) alignedtext
end grestore
end grestore

%	Node708
[ /Rect [ 339 205 453 219 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 339 204 moveto
454 204 lineto
454 219 lineto
339 219 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
396 207 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node708 -> Node707
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 462 208 moveto
486 207 513 205 538 203 curveto
655 194 698 234 800 178 curveto
812 171 808 162 818 155 curveto
819 154 821 153 822 153 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 464 206 moveto
454 208 lineto
464 211 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node725
[ /Rect [ 592 164 680 178 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Animat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 592 163 moveto
681 163 lineto
681 178 lineto
592 178 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
636 166 moveto 79 -0.5 (BEAST::Animat) alignedtext
end grestore
end grestore

%	Node708 -> Node725
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 455 203 moveto
500 193 510 185 556 178 curveto
568 176 580 175 591 174 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 456 200 moveto
446 204 lineto
456 205 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node714
[ /Rect [ 9 205 107 219 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Vector2D.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 9 204 moveto
108 204 lineto
108 219 lineto
9 219 lineto
closepath
stroke
gsave 10 dict begin
58 207 moveto 89 -0.5 (BEAST::Vector2D) alignedtext
end grestore
end grestore

%	Node714 -> Node707
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 116 225 moveto
119 227 121 229 126 231 curveto
379 302 456 244 716 218 curveto
754 214 771 227 800 204 curveto
809 197 811 165 819 160 curveto
824 157 829 155 833 153 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 117 223 moveto
107 220 lineto
115 227 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
505 255 moveto 55 -0.5 (relLocation) alignedtext
end grestore
end grestore

%	Node714 -> Node708
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 117 212 moveto
179 212 276 212 338 212 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 118 210 moveto
108 212 lineto
118 215 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
223 215 moveto 184 -0.5 (VECTOR2D_FAKE_REFERENCE) alignedtext
end grestore
end grestore

%	Node714 -> Node725
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 104 203 moveto
105 203 107 202 108 202 curveto
211 179 234 160 338 148 curveto
390 142 403 144 454 148 curveto
500 151 511 156 556 162 curveto
568 163 580 165 591 166 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 105 200 moveto
95 204 lineto
105 205 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
396 184 moveto 78 -0.5 (collisionNormal) alignedtext
396 173 moveto 65 -0.5 (collisionPoint) alignedtext
396 162 moveto 64 -0.5 (startLocation) alignedtext
396 151 moveto 38 -0.5 (velocity) alignedtext
end grestore
end grestore

%	Node724
[ /Rect [ 557 113 715 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorMatchFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 557 112 moveto
716 112 lineto
716 127 lineto
557 127 lineto
closepath
stroke
gsave 10 dict begin
636 115 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node724 -> Node707
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 726 126 moveto
750 128 776 130 800 134 curveto
808 135 816 136 824 137 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 726 124 moveto
716 125 lineto
726 128 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
767 137 moveto 56 -0.5 (MatchFunc) alignedtext
end grestore
end grestore

%	Node725 -> Node707
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 689 165 moveto
721 161 763 157 800 153 curveto
806 152 812 151 818 150 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 691 162 moveto
681 166 lineto
691 167 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
767 162 moveto 51 -0.5 (myOwner) alignedtext
end grestore
end grestore

%	Node733
[ /Rect [ 561 62 711 76 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorScaleFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 561 61 moveto
712 61 lineto
712 76 lineto
561 76 lineto
closepath
stroke
gsave 10 dict begin
636 64 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node733 -> Node707
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 721 77 moveto
756 84 769 84 800 106 curveto
811 113 808 120 818 128 curveto
824 132 830 135 837 137 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 722 75 moveto
712 75 lineto
721 80 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
767 109 moveto 49 -0.5 (ScaleFunc) alignedtext
end grestore
end grestore

%	Node734
[ /Rect [ 562 11 710 25 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1SensorEvalFunction.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 562 10 moveto
711 10 lineto
711 25 lineto
562 25 lineto
closepath
stroke
gsave 10 dict begin
636 13 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node734 -> Node707
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 720 20 moveto
749 25 780 36 800 58 curveto
821 80 799 100 818 124 curveto
823 130 830 134 837 137 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 721 18 moveto
711 19 lineto
721 23 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
767 61 moveto 47 -0.5 (EvalFunc) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3870 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 4052 y Fk(\210)42 b Fq(Sensor)27 b Fp(\()p
Fq(V)-8 b(ector2D)28 b Fp(l=)p Fq(V)-8 b(ector2D)p Fp(\(0.0,)28
b(0.0\),)f(double)g(o=0.0\))476 4172 y Fg(Constructor)j(for)e(the)g(b)l
(asic)g Ff(Sensor)g Fg(class.)275 4366 y Fk(\210)42 b
Fp(virtual)27 b Fh(\030)p Fq(Sensor)f Fp(\(\))476 4486
y Fg(Destructor:)37 b(deletes)29 b(the)g(sensor's)g(functors,)f(if)f
(pr)l(esent.)275 4681 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(Init)i Fp(\(\))476 4801 y Fg(Initialises)f Ff(W)-7
b(orldOb)5 b(ject)31 b Fg(by)d(c)l(alculating)i(e)l(dges)f(if)f(r)l(e)l
(quir)l(e)l(d,)h(and)g(setting)h(a)e(r)l(andom)i(lo)l(c)l(ation)f(if)e
(init-)476 4892 y(R)l(andom)h(is)f(set.)275 5087 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(Up)s(date)j Fp(\(\))476
5207 y Fg(R)l(esets)g(the)f(sensor)h(r)l(e)l(ady)g(for)f(the)g(next)h
(r)l(ound)g(of)e(tests.)275 5402 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(In)m(teract)k Fp(\()p Fq(W)-8 b(orldOb)5
b(ject)28 b Fh(\003)p Fp(\))476 5522 y Fg(Cal)t(ls)f(the)i(sensor's)g
(matching)g(function)g(on)f(the)h Ff(W)-7 b(orldOb)5
b(ject)p Fg(,)29 b(then)g(if)e(it's)h(a)g(match,)g(c)l(al)t(ls)g(the)h
(eval-)476 5613 y(uation)f(function.)p -358 5723 V -192
5823 a Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 183 191
183 190 bop 150 70 a Fq(10.58)30 b(BEAST::Sensor)h(Class)g(Reference)
2299 b(183)p 150 103 4034 4 v 275 447 a Fk(\210)42 b
Fp(virtual)27 b(v)n(oid)f Fq(Displa)m(y)i Fp(\(\))275
561 y Fk(\210)42 b Fp(virtual)27 b(double)g Fq(GetOutput)h
Fp(\(\))g(const)476 692 y Fg(R)l(eturns)h(the)f(sensor's)h(output)g
(for)f(this)g(r)l(ound.)275 898 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetOwner)i Fp(\()p Fq(Animat)f Fh(\003)p Fp(o)n(wner\))275
1012 y Fk(\210)42 b Fq(Animat)26 b Fh(\003)h Fq(GetOwner)h
Fp(\(\))g(const)275 1126 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetMatc)m(hingF)-8 b(unction)28 b Fp(\()p Fq(SensorMatc)m(hF)-8
b(unction)29 b Fh(\003)p Fp(func\))476 1257 y Fg(Sets)f(the)h(matching)
f(function,)f(deleting)i(the)f(old)g(one)g(if)e(appr)l(opriate.)275
1463 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetEv)-5 b(aluationF)d(unction)
28 b Fp(\()p Fq(SensorEv)-5 b(alF)d(unction)27 b Fh(\003)p
Fp(func\))476 1594 y Fg(Sets)h(the)h(evaluation)f(function,)g(deleting)
g(the)g(old)g(one)g(if)e(appr)l(opriate.)275 1799 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetScalingF)-8 b(unction)28 b Fp(\()p
Fq(SensorScaleF)-8 b(unction)28 b Fh(\003)p Fp(func\))476
1930 y Fg(Sets)g(the)h(sc)l(aling)f(function,)f(deleting)h(the)h(old)e
(one)h(if)f(appr)l(opriate.)150 2315 y Fj(Protected)36
b(A)m(ttributes)275 2511 y Fk(\210)42 b Fq(Animat)26
b Fh(\003)h Fq(m)m(yOwner)476 2641 y Fg(p)l(ointer)h(to)g(owner)h
Ff(Animat)p Fg(,)e(NULL)h(if)e(none)275 2847 y Fk(\210)42
b Fq(V)-8 b(ector2D)28 b(relLo)s(cation)476 2978 y Fg(r)l(elative)g(lo)
l(c)l(ation)g(to)h Ff(Animat)275 3184 y Fk(\210)42 b
Fp(double)27 b Fq(relOrien)m(tation)476 3315 y Fg(r)l(elative)h
(orientation)h(to)f Ff(Animat)275 3520 y Fk(\210)42 b
Fq(SensorMatc)m(hF)-8 b(unction)28 b Fh(\003)f Fq(Matc)m(hF)-8
b(unc)275 3634 y Fk(\210)42 b Fq(SensorEv)-5 b(alF)d(unction)27
b Fh(\003)g Fq(Ev)-5 b(alF)d(unc)275 3749 y Fk(\210)42
b Fq(SensorScaleF)-8 b(unction)27 b Fh(\003)g Fq(ScaleF)-8
b(unc)150 4042 y Fj(10.58.1)113 b(Detailed)36 b(Description)150
4245 y Fp(The)22 b Fq(Sensor)f Fp(class)g(is)g(the)h(base)f(class)g
(for)g(all)g(the)h(di\013eren)n(t)g(t)n(yp)r(es)f(of)h(sensor:)32
b Fq(T)-8 b(ouc)m(hSensor)p Fp(,)24 b Fq(SelfSensor)p
Fp(,)150 4345 y Fq(AreaSensor)k Fp(and)f Fq(BeamSensor)p
Fp(.)150 4492 y(The)c(basic)f Fq(Sensor)h Fp(class)f(imp)r(oses)g(no)h
(area)e(restriction)h(and)h(so)f(will)h(allo)n(w)f(its)h(o)n(wner)f(to)
h(detect)g(an)n(y)f(ob)5 b(ject)150 4591 y(in)28 b(the)g(w)n(orld.)150
4885 y Fj(10.58.2)113 b(Constructor)36 b(&)i(Destructor)e(Do)s(cumen)m
(tation)150 5088 y Fq(10.58.2.1)92 b(BEAST::Sensor::)p
Fh(\030)p Fq(Sensor)29 b(\(\))71 b Fi([virtual])150 5291
y Fp(Destructor:)36 b(deletes)28 b(the)g(sensor's)e(functors,)h(if)h
(presen)n(t.)142 5513 y Fq(T)-8 b(o)s(do)311 5613 y Fp(Shared)27
b(functors?)p 150 5723 V 150 5823 a Fn(Generated)f(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 184 192
184 191 bop -358 70 a Fq(184)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fj(10.58.3)113 b(Mem)m(b)s(er)37 b(F)-9 b(unction)37
b(Do)s(cumen)m(tation)150 533 y Fq(10.58.3.1)92 b(double)31
b(BEAST::Sensor::GetOutput)f(\(\))i(const)71 b Fi([virtual])150
734 y Fp(Returns)27 b(the)h(sensor's)e(output)j(for)e(this)h(round.)150
880 y(The)35 b(scaling)e(function)i(is)f(applied)h(to)f(the)h(output)g
(of)g(the)g(ev)-5 b(aluation)33 b(function)j(to)e(get)g(the)h(result,)h
(th)n(us)150 980 y(the)27 b(output)g(migh)n(t)f(b)r(e)h(divided)g(b)n
(y)f(the)h(range)e(to)h(yield)h(a)f(v)-5 b(alue)26 b([0:1],)g(or)g
(randomly)f(adjusted)i(to)f(sim)n(ulate)150 1080 y(noise.)150
1227 y(Reimplemen)n(ted)i(in)g Fq(BEAST::SelfSensor)e
Fp(\(p.)14 b(181\).)150 1373 y(The)28 b(do)r(cumen)n(tation)f(for)g
(this)h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)n(wing)e
(\014les:)275 1587 y Fk(\210)42 b Fq(sensorbase.h)275
1695 y Fk(\210)g Fp(sensor.cc)p -358 5723 V -192 5823
a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 185 193
185 192 bop 150 70 a Fq(10.59)30 b(BEAST::SensorEv)-5
b(alF)d(unction)31 b(Struct)i(Reference)1708 b(185)p
150 103 4034 4 v 150 333 a Fl(10.59)136 b(BEAST::SensorEv)-7
b(alF)c(unction)44 b(Struct)g(Reference)150 562 y Fp(Abstract)27
b(base)g(class)g(for)g(ev)-5 b(aluation)27 b(functors.)150
709 y Fi(#include)40 b Fo(<)p Fi(sensorbase.h)p Fo(>)150
855 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::SensorEv)-5
b(alF)e(unction:)812 1361 y @beginspecial 35 @llx 35
@lly 531 @urx 121 @ury 2640 @rwi @setspecial
%%BeginDocument: structBEAST_1_1SensorEvalFunction__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 531 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 531 121
%%PageOrientation: Portrait
gsave
35 35 496 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node735
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 168 60 moveto
317 60 lineto
317 75 lineto
168 75 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 168 60 moveto
317 60 lineto
317 75 lineto
168 75 lineto
closepath
stroke
gsave 10 dict begin
242 63 moveto 139 -0.5 (BEAST::SensorEvalFunction) alignedtext
end grestore
end grestore

%	Node736
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 0 8 moveto
104 8 lineto
104 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
52 11 moveto 94 -0.5 (BEAST::EvalCount) alignedtext
end grestore
end grestore

%	Node735 -> Node736
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 205 57 moveto
168 47 113 32 80 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 204 59 moveto
214 60 lineto
205 54 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node737
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 122 8 moveto
233 8 lineto
233 23 lineto
122 23 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
177 11 moveto 101 -0.5 (BEAST::EvalDensity) alignedtext
end grestore
end grestore

%	Node735 -> Node737
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 225 54 moveto
213 45 197 32 187 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 223 55 moveto
232 60 lineto
226 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node738
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 250 8 moveto
367 8 lineto
367 23 lineto
250 23 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
308 11 moveto 107 -0.5 (BEAST::EvalGradient) alignedtext
end grestore
end grestore

%	Node735 -> Node738
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 259 54 moveto
271 45 288 32 298 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 258 52 moveto
252 60 lineto
261 55 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node739
[ /Rect [ 384 9 494 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1EvalNearest.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 384 8 moveto
495 8 lineto
495 23 lineto
384 23 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
439 11 moveto 101 -0.5 (BEAST::EvalNearest) alignedtext
end grestore
end grestore

%	Node735 -> Node739
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 281 57 moveto
318 47 376 32 410 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 280 55 moveto
271 60 lineto
281 60 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1724 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 1910 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(Reset)h Fp(\(\))275 2018 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(op)s(erator\(\))j Fp(\()p Fq(W)-8 b(orldOb)5
b(ject)27 b Fh(\003)p Fp(,)h(const)f Fq(V)-8 b(ector2D)28
b Fp(&nearestP)n(oin)n(t\)=0)275 2126 y Fk(\210)42 b
Fp(virtual)27 b(double)g Fq(GetOutput)h Fp(\(\))g(const=0)150
2406 y Fj(10.59.1)113 b(Detailed)36 b(Description)150
2606 y Fp(Abstract)27 b(base)g(class)g(for)g(ev)-5 b(aluation)27
b(functors.)150 2753 y(Classes)37 b(inherited)h(from)f
Fq(SensorEv)-5 b(alF)d(unction)37 b Fp(m)n(ust)h(implemen)n(t)h(op)r
(erator\(\)\(W)-7 b(orldOb)5 b(ject)p Fh(\003)p Fp(,)38
b(const)150 2853 y(V)-7 b(ector2d&\))27 b(and)g(double)h
(GetOutput\(\)const.)150 2999 y(The)g(do)r(cumen)n(tation)f(for)g(this)
h(struct)f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
3213 y Fk(\210)42 b Fq(sensorbase.h)p 150 5723 V 150
5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 186 194
186 193 bop -358 70 a Fq(186)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.60)136 b(BEAST::SensorMatc)l(hF)-11 b(unction)43
b(Struct)i(Reference)150 562 y Fp(Abstract)27 b(base)g(class)g(for)g
(matc)n(hing)g(functors.)150 709 y Fi(#include)40 b Fo(<)p
Fi(sensorbase.h)p Fo(>)150 855 y Fp(Inheritance)27 b(diagram)f(for)h
(BEAST::SensorMatc)n(hF)-7 b(unction:)966 1769 y @beginspecial
35 @llx 35 @lly 457 @urx 211 @ury 2271 @rwi @setspecial
%%BeginDocument: structBEAST_1_1SensorMatchFunction__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 457 211
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 457 211
%%PageOrientation: Portrait
gsave
35 35 422 176 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node747
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 9 79 moveto
168 79 lineto
168 94 lineto
9 94 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 9 79 moveto
168 79 lineto
168 94 lineto
9 94 lineto
closepath
stroke
gsave 10 dict begin
88 82 moveto 149 -0.5 (BEAST::SensorMatchFunction) alignedtext
end grestore
end grestore

%	Node748
[ /Rect [ 213 160 403 174 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1MatchAdapter.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 213 159 moveto
403 159 lineto
403 174 lineto
213 174 lineto
closepath
stroke
gsave 10 dict begin
308 162 moveto 180 -0.5 (BEAST::MatchAdapter< _Functor >) alignedtext
end grestore
end grestore

%	Node747 -> Node748
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 175 99 moveto
193 117 180 142 204 158 curveto
207 160 210 161 213 163 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 98 moveto
168 94 lineto
175 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node749
[ /Rect [ 233 128 383 142 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1MatchComposeAnd.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 233 127 moveto
383 127 lineto
383 142 lineto
233 142 lineto
closepath
stroke
gsave 10 dict begin
308 130 moveto 140 -0.5 (BEAST::MatchComposeAnd) alignedtext
end grestore
end grestore

%	Node747 -> Node749
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 99 moveto
188 107 188 119 204 126 curveto
213 130 223 132 233 134 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 97 moveto
168 94 lineto
176 101 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node750
[ /Rect [ 238 96 378 110 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1MatchComposeOr.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 238 95 moveto
379 95 lineto
379 110 lineto
238 110 lineto
closepath
stroke
gsave 10 dict begin
308 98 moveto 131 -0.5 (BEAST::MatchComposeOr) alignedtext
end grestore
end grestore

%	Node747 -> Node750
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 93 moveto
197 95 218 96 237 98 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 91 moveto
168 93 lineto
178 96 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node751
[ /Rect [ 210 64 406 78 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1MatchExact.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 210 63 moveto
407 63 lineto
407 78 lineto
210 78 lineto
closepath
stroke
gsave 10 dict begin
308 66 moveto 187 -0.5 (BEAST::MatchExact< _ObjectType >) alignedtext
end grestore
end grestore

%	Node747 -> Node751
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 80 moveto
186 80 195 79 204 78 curveto
206 78 208 78 209 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 78 moveto
168 80 lineto
178 83 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node752
[ /Rect [ 204 32 412 46 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1MatchKindOf.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 204 31 moveto
412 31 lineto
412 46 lineto
204 46 lineto
closepath
stroke
gsave 10 dict begin
308 34 moveto 198 -0.5 (BEAST::MatchKindOf< _ObjectType >) alignedtext
end grestore
end grestore

%	Node747 -> Node752
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 173 75 moveto
188 66 187 53 204 46 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 173 72 moveto
165 79 lineto
175 77 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node753
[ /Rect [ 248 0 368 14 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1MatchSpecific.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 248 -1 moveto
369 -1 lineto
369 14 lineto
248 14 lineto
closepath
stroke
gsave 10 dict begin
308 2 moveto 111 -0.5 (BEAST::MatchSpecific) alignedtext
end grestore
end grestore

%	Node747 -> Node753
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 174 73 moveto
192 55 179 31 204 15 curveto
217 7 232 4 247 2 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 173 71 moveto
166 79 lineto
176 75 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2132 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2318 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(Reset)h Fp(\(\))275 2426 y Fk(\210)42 b Fp(virtual)27
b(b)r(o)r(ol)g Fq(op)s(erator\(\))h Fp(\()p Fq(W)-8 b(orldOb)5
b(ject)28 b Fh(\003)p Fp(\)=0)150 2706 y Fj(10.60.1)113
b(Detailed)36 b(Description)150 2906 y Fp(Abstract)27
b(base)g(class)g(for)g(matc)n(hing)g(functors.)150 3053
y(Classes)f(inherited)i(from)f Fq(SensorMatc)m(hF)-8
b(unction)29 b Fp(m)n(ust)e(implemen)n(t)i(op)r(erator\(\)\(W)-7
b(orldOb)5 b(ject)p Fh(\003)p Fp(\).)150 3200 y(The)28
b(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g(generated)g
(from)g(the)h(follo)n(wing)e(\014le:)275 3413 y Fk(\210)42
b Fq(sensorbase.h)p -358 5723 V -192 5823 a Fn(Generated)26
b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 187 195
187 194 bop 150 70 a Fq(10.61)30 b(BEAST::SensorScaleF)-8
b(unction)31 b(Struct)i(Reference)1677 b(187)p 150 103
4034 4 v 150 333 a Fl(10.61)136 b(BEAST::SensorScaleF)-11
b(unction)44 b(Struct)h(Reference)150 562 y Fp(Abstract)27
b(base)g(class)g(for)g(scaling)g(functors.)150 709 y
Fi(#include)40 b Fo(<)p Fi(sensorbase.h)p Fo(>)150 855
y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::SensorScaleF)-7
b(unction:)1032 1918 y @beginspecial 35 @llx 35 @lly
425 @urx 243 @ury 2112 @rwi @setspecial
%%BeginDocument: structBEAST_1_1SensorScaleFunction__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 425 243
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 425 243
%%PageOrientation: Portrait
gsave
35 35 390 208 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node755
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 9 95 moveto
160 95 lineto
160 110 lineto
9 110 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 9 95 moveto
160 95 lineto
160 110 lineto
9 110 lineto
closepath
stroke
gsave 10 dict begin
84 98 moveto 141 -0.5 (BEAST::SensorScaleFunction) alignedtext
end grestore
end grestore

%	Node756
[ /Rect [ 241 192 335 206 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1ScaleAbs.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 241 191 moveto
336 191 lineto
336 206 lineto
241 206 lineto
closepath
stroke
gsave 10 dict begin
288 194 moveto 85 -0.5 (BEAST::ScaleAbs) alignedtext
end grestore
end grestore

%	Node755 -> Node756
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 168 117 moveto
187 139 168 169 196 190 curveto
209 199 225 202 240 203 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 169 115 moveto
160 110 lineto
166 118 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node757
[ /Rect [ 197 160 379 174 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1ScaleAdapter.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 197 159 moveto
380 159 lineto
380 174 lineto
197 174 lineto
closepath
stroke
gsave 10 dict begin
288 162 moveto 173 -0.5 (BEAST::ScaleAdapter< _Functor >) alignedtext
end grestore
end grestore

%	Node755 -> Node757
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 168 115 moveto
182 128 176 146 196 158 curveto
197 158 198 159 199 159 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 170 113 moveto
160 110 lineto
167 117 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node758
[ /Rect [ 228 128 348 142 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1ScaleCompose.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 228 127 moveto
349 127 lineto
349 142 lineto
228 142 lineto
closepath
stroke
gsave 10 dict begin
288 130 moveto 111 -0.5 (BEAST::ScaleCompose) alignedtext
end grestore
end grestore

%	Node755 -> Node758
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 168 113 moveto
179 117 183 122 196 126 curveto
206 129 217 130 227 132 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 170 111 moveto
160 110 lineto
168 116 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node759
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 229 95 moveto
348 95 lineto
348 110 lineto
229 110 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
288 98 moveto 109 -0.5 (BEAST::ScaleGradient) alignedtext
end grestore
end grestore

%	Node755 -> Node759
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 169 103 moveto
189 103 210 103 228 103 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 170 101 moveto
160 103 lineto
170 106 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node760
[ /Rect [ 234 64 342 78 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1ScaleLinear.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 234 63 moveto
342 63 lineto
342 78 lineto
234 78 lineto
closepath
stroke
gsave 10 dict begin
288 66 moveto 98 -0.5 (BEAST::ScaleLinear) alignedtext
end grestore
end grestore

%	Node755 -> Node760
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 163 93 moveto
177 88 181 82 196 78 curveto
208 75 221 73 234 72 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 163 90 moveto
154 95 lineto
164 95 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node761
[ /Rect [ 237 32 339 46 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1ScaleNoise.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 237 31 moveto
340 31 lineto
340 46 lineto
237 46 lineto
closepath
stroke
gsave 10 dict begin
288 34 moveto 93 -0.5 (BEAST::ScaleNoise) alignedtext
end grestore
end grestore

%	Node755 -> Node761
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 165 91 moveto
183 77 175 57 196 46 curveto
208 39 222 36 236 35 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 165 88 moveto
157 95 lineto
167 93 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node762
[ /Rect [ 226 0 350 14 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($structBEAST_1_1ScaleThreshold.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 226 -1 moveto
351 -1 lineto
351 14 lineto
226 14 lineto
closepath
stroke
gsave 10 dict begin
288 2 moveto 115 -0.5 (BEAST::ScaleThreshold) alignedtext
end grestore
end grestore

%	Node755 -> Node762
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 166 89 moveto
189 67 167 36 196 15 curveto
205 9 215 6 225 4 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 165 87 moveto
158 95 lineto
168 91 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2281 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2467 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(Reset)h Fp(\(\))275 2575 y Fk(\210)42 b Fp(virtual)27
b(double)g Fq(op)s(erator\(\))h Fp(\(double\)=0)150 2855
y Fj(10.61.1)113 b(Detailed)36 b(Description)150 3055
y Fp(Abstract)27 b(base)g(class)g(for)g(scaling)g(functors.)150
3202 y(Classes)f(inherited)i(from)f Fq(SensorScaleF)-8
b(unction)28 b Fp(m)n(ust)g(implemen)n(t)g(double)f(op)r
(erator\(\)\(double\).)150 3349 y(The)h(do)r(cumen)n(tation)f(for)g
(this)h(struct)f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e
(\014le:)275 3562 y Fk(\210)42 b Fq(sensorbase.h)p 150
5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 188 196
188 195 bop -358 70 a Fq(188)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.62)136 b(BEAST::SerialException)46 b(Struct)f(Reference)150
562 y Fp(Since)20 b(exceptions)f(ha)n(v)n(e)f(an)i(undesirable)e(o)n(v)
n(erhead,)i(they)f(ha)n(v)n(e)g(not)g(b)r(een)h(used)g(elsewhere)f(in)h
(the)g(sim)n(ulation)150 661 y(en)n(vironmen)n(t)27 b(for)g(reasons)e
(of)j(sp)r(eed.)150 808 y Fi(#include)40 b Fo(<)p Fi(serialfuncs.h)p
Fo(>)150 1088 y Fj(Public)c(Mem)m(b)s(er)h(F)-9 b(unctions)275
1274 y Fk(\210)42 b Fq(SerialException)27 b Fp(\()p Fq(SerialErrorT)m
(yp)s(e)h Fp(e,)g(std::string)f(n="",)f(std::string)i(msg=""\))275
1382 y Fk(\210)42 b Fp(std::string)27 b Fq(T)-8 b(oString)27
b Fp(\(\))i(const)476 1507 y Fg(R)l(eturns)g(a)f(textual)h(description)
g(of)e(the)h(exc)l(eption.)150 1878 y Fj(Public)36 b(A)m(ttributes)275
2064 y Fk(\210)42 b Fq(SerialErrorT)m(yp)s(e)28 b(error)275
2172 y Fk(\210)42 b Fp(std::string)27 b Fq(name)275 2280
y Fk(\210)42 b Fp(std::string)27 b Fq(message)150 2560
y Fj(10.62.1)113 b(Detailed)36 b(Description)150 2760
y Fp(Since)20 b(exceptions)f(ha)n(v)n(e)f(an)i(undesirable)e(o)n(v)n
(erhead,)i(they)f(ha)n(v)n(e)g(not)g(b)r(een)h(used)g(elsewhere)f(in)h
(the)g(sim)n(ulation)150 2860 y(en)n(vironmen)n(t)27
b(for)g(reasons)e(of)j(sp)r(eed.)150 3007 y(Loading)j(and)h(sa)n(ving,)
g(ho)n(w)n(ev)n(er,)g(is)g(not)g(sp)r(eed-critical)g(and)g(the)h
(problems)e(encoun)n(tered)h(suit)g(exception)150 3106
y(handling)27 b(w)n(ell.)38 b(If)28 b(in)g(the)g(future)g(a)f(more)g
(complete)h(exception)f(framew)n(ork)f(is)i(added,)g
Fq(SerialException)150 3206 y Fp(should)f(b)r(e)h(incorp)r(orated)e(in)
n(to)i(that.)150 3353 y(The)g(do)r(cumen)n(tation)f(for)g(this)h
(struct)f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014les:)275
3566 y Fk(\210)42 b Fq(serialfuncs.h)275 3674 y Fk(\210)g
Fp(serialfuncs.cc)p -358 5723 V -192 5823 a Fn(Generated)26
b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 189 197
189 196 bop 150 70 a Fq(10.63)30 b(BEAST::Signaller)p
Fo(<)p 1240 70 29 4 v 64 w Fq(State,)p 1550 70 V 66 w(Signal,)p
1896 70 V 65 w(Cost)i Fo(>)f Fq(Class)g(T)-8 b(emplate)31
b(Reference)715 b(189)p 150 103 4034 4 v 150 333 a Fl(10.63)136
b(BEAST::Signaller)p Fb(<)p 1806 333 41 4 v 127 w Fl(State,)p
2284 333 V 136 w(Signal,)p 2813 333 V 135 w(Cost)78 b
Fb(>)g Fl(Class)591 482 y(T)-11 b(emplate)46 b(Reference)150
711 y Fp(A)28 b(general-purp)r(ose)d(class)i(for)g(mo)r(delling)g
(signallers)f(with)i(discrete)g(signal)e(and)i(state)f(t)n(yp)r(es.)150
858 y Fi(#include)40 b Fo(<)p Fi(signaller.h)p Fo(>)150
1005 y Fp(Collab)r(oration)26 b(diagram)g(for)h(BEAST::Signaller)p
Fo(<)p 1865 1005 25 4 v 56 w Fp(State,)p 2135 1005 V
57 w(Signal,)p 2437 1005 V 57 w(Cost)h Fo(>)p Fp(:)1381
1614 y @beginspecial 35 @llx 35 @lly 257 @urx 137 @ury
1275 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Signaller__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 257 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 257 137
%%PageOrientation: Portrait
gsave
35 35 222 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node767
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
221 8 lineto
221 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
221 8 lineto
221 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
110 11 moveto 211 -0.5 (BEAST::Signaller< _State, _Signal, _Cost >) alignedtext
end grestore
end grestore

%	Node768
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 47 76 moveto
85 76 lineto
85 91 lineto
47 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
66 79 moveto 28 -0.5 (_Cost) alignedtext
end grestore
end grestore

%	Node768 -> Node767
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 69 68 moveto
71 60 75 50 80 42 curveto
85 35 92 28 98 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 67 66 moveto
67 76 lineto
72 67 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
106 46 moveto 42 -0.5 (totalCost) alignedtext
end grestore
end grestore

%	Node769
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 134 76 moveto
174 76 lineto
174 91 lineto
134 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
154 79 moveto 30 -0.5 (_State) alignedtext
end grestore
end grestore

%	Node769 -> Node767
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 149 68 moveto
146 60 141 50 136 42 curveto
131 35 125 29 119 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 146 68 moveto
152 76 lineto
151 66 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
159 46 moveto 21 -0.5 (state) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1975 a Fj(Public)36 b(T)m(yp)s(es)275
2160 y Fk(\210)42 b Fp(t)n(yp)r(edef)p 658 2160 V 58
w(State)27 b Fq(state)p 1107 2160 29 4 v 35 w(t)m(yp)s(e)476
2282 y Fg(A)g(typ)l(e)l(def)i(for)e(use)i(in)e(cr)l(e)l(ating)i
(sensors.)275 2480 y Fk(\210)42 b Fp(t)n(yp)r(edef)p
658 2480 25 4 v 58 w(Signal)27 b Fq(signal)p 1177 2480
29 4 v 33 w(t)m(yp)s(e)476 2603 y Fg(A)g(typ)l(e)l(def)i(for)e(use)i
(in)e(cr)l(e)l(ating)i(sensors.)275 2800 y Fk(\210)42
b Fp(t)n(yp)r(edef)p 658 2800 25 4 v 58 w(Cost)27 b Fq(cost)p
1048 2800 29 4 v 34 w(t)m(yp)s(e)476 2923 y Fg(A)g(typ)l(e)l(def)i(for)
e(use)i(in)e(cr)l(e)l(ating)i(sensors.)150 3292 y Fj(Public)36
b(Mem)m(b)s(er)h(F)-9 b(unctions)275 3477 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(Reset)h Fp(\(\))476 3600 y Fg(R)l(esets)i(the)f
Ff(Signaller)i Fg(by)e(putting)h(the)f(total)g(c)l(ost)h(b)l(ack)g(to)f
(0.)275 3797 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Randomise)f
Fp(\(in)n(t)k(n)n(umStates,)e(in)n(t)h(n)n(umSignals\))476
3920 y Fg(R)l(andomises)d(the)g(signal)t(ler)g(so)g(that)h(e)l(ach)f(p)
l(ossible)g(internal)h(state)g(has)f(a)f(r)l(andom)i(signal)e(asso)l
(ciate)l(d)j(with)476 4011 y(it.)275 4209 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(PushCost)i Fp(\(\))476 4332 y Fg(A)l(dds)g(the)g
(curr)l(ent)i(signal)t(ling)d(c)l(ost)i(to)f(the)g(total)h(signal)t
(ling)e(c)l(ost)i(so)f(far.)275 4529 y Fk(\210)p 363
4529 25 4 v 71 w Fp(State)g Fq(GetState)g Fp(\(\))h(const)476
4652 y Fg(R)l(eturns)g(the)f(internal)g(state)i(of)d(the)h(signal)t
(ler.)275 4850 y Fk(\210)p 363 4850 V 71 w Fp(Signal)g
Fq(GetSignal)e Fp(\(\))j(const)476 4972 y Fg(R)l(eturns)g(the)f(curr)l
(ent)i(signal.)275 5170 y Fk(\210)p 363 5170 V 71 w Fp(Signal)e
Fq(GetSignal)e Fp(\()p 1110 5170 V 31 w(State)h(s\))h(const)476
5293 y Fg(R)l(eturns)h(the)f(signal)g(for)f(the)i(sp)l(e)l(ci\014e)l(d)
g(state.)275 5490 y Fk(\210)p 363 5490 V 71 w Fp(Cost)f
Fq(GetCost)f Fp(\(\))h(const)476 5613 y Fg(R)l(eturns)h(the)f(curr)l
(ent)i(signal)t(ling)d(c)l(ost.)p 150 5723 4034 4 v 150
5823 a Fn(Generated)f(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 190 198
190 197 bop -358 70 a Fq(190)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
441 a Fk(\210)p 363 441 25 4 v 71 w Fp(Cost)d Fq(GetT)-8
b(otalCost)27 b Fp(\(\))h(const)476 565 y Fg(R)l(eturns)h(the)f(total)h
(signal)t(ling)e(c)l(ost)i(so)f(far.)275 764 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetState)j Fp(\()p 954 764 V 30
w(State)e(s\))476 889 y Fg(Sets)h(the)h(internal)f(state)h(of)e(the)i
(signal)t(ler.)275 1088 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetSignal)h Fp(\()p 989 1088 V 30 w(State)h(st,)p
1352 1088 V 58 w(Signal)f(si\))476 1213 y Fg(Sets)h(up)g(the)h(signals)
f(for)f(e)l(ach)i(state.)150 1584 y Fj(Static)36 b(Public)g(Mem)m(b)s
(er)h(F)-9 b(unctions)275 1770 y Fk(\210)p 363 1770 V
71 w Fp(Cost)28 b Fq(GetCost)f Fp(\()p 994 1770 V 30
w(State)h(st,)p 1356 1770 V 57 w(Signal)f(si\))476 1895
y Fg(R)l(eturns)i(the)f(signal)t(ling)f(c)l(ost)i(for)f(the)g(sp)l(e)l
(ci\014e)l(d)h(state/signal.)275 2094 y Fk(\210)42 b
Fp(v)n(oid)26 b Fq(SetCost)i Fp(\()p 928 2094 V 30 w(State)f(st,)p
1290 2094 V 58 w(Signal)g(si,)p 1676 2094 V 58 w(Cost)g(co\))476
2218 y Fg(Sets)h(up)g(c)l(osts)h(asso)l(ciate)l(d)h(with)e(signal)t
(ling.)150 2589 y Fj(10.63.1)113 b(Detailed)36 b(Description)150
2790 y Fq(template)p Fo(<)p Fq(t)m(yp)s(ename)p 1060
2790 29 4 v 97 w(State,)73 b(t)m(yp)s(ename)p 1885 2790
V 99 w(Signal,)g(t)m(yp)s(ename)p 2745 2790 V 99 w(Cost)64
b(=)i(\015oat)p Fo(>)f Fq(class)150 2890 y(BEAST::Signaller)p
Fo(<)p 990 2890 V 64 w Fq(State,)p 1301 2890 V 66 w(Signal,)p
1647 2890 V 65 w(Cost)31 b Fo(>)150 3090 y Fp(A)d(general-purp)r(ose)d
(class)i(for)g(mo)r(delling)g(signallers)f(with)i(discrete)g(signal)e
(and)i(state)f(t)n(yp)r(es.)150 3237 y(Signallers)f(can)i(b)r(e)g(made)
f(to)g(k)n(eep)h(trac)n(k)e(of)i(signalling)e(costs)h(and)g(are)g
(compatible)g(with)h(their)g(o)n(wn)f(signal)150 3336
y(sensor)g(functions)h(\(if)i(m)n(ultiply)e(inherited)h(with)g
Fq(W)-8 b(orldOb)5 b(ject)p Fp(\).)39 b(Eac)n(h)27 b
Fq(Signaller)g Fp(template)i(main)n(tains)150 3436 y(its)f(o)n(wn)f
(static)g(costs)g(map,)h(so)f(costs)f(are)h(shared)g(b)r(et)n(w)n(een)g
(signallers)f(with)i(the)g(same)f(templated)h(t)n(yp)r(es.)150
3583 y(The)g(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f
(generated)h(from)g(the)h(follo)n(wing)e(\014le:)275
3796 y Fk(\210)42 b Fq(signaller.h)p -358 5723 4034 4
v -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 191 199
191 198 bop 150 70 a Fq(10.64)30 b(BEAST::SimOb)5 b(ject)30
b(Class)h(Reference)2132 b(191)p 150 103 4034 4 v 150
333 a Fl(10.64)136 b(BEAST::SimOb)7 b(ject)45 b(Class)h(Reference)150
562 y Fp(An)20 b(abstract)f(base)g(class)g(for)h(the)g
Fq(P)m(opulation)g Fp(template,)h(allo)n(wing)e(p)r(opulations)g(with)i
(di\013eren)n(t)f(templated)150 661 y(t)n(yp)r(es)28
b(to)f(b)r(e)h(represen)n(ted)e(in)i Fq(Sim)m(ulation)p
Fp(.)150 808 y Fi(#include)40 b Fo(<)p Fi(simulation.h)p
Fo(>)150 955 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::SimOb)5
b(ject:)1132 1707 y @beginspecial 35 @llx 35 @lly 376
@urx 173 @ury 1873 @rwi @setspecial
%%BeginDocument: classBEAST_1_1SimObject__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 376 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 376 173
%%PageOrientation: Portrait
gsave
35 35 341 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node770
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 105 112 moveto
207 112 lineto
207 127 lineto
105 127 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 105 112 moveto
207 112 lineto
207 127 lineto
105 127 lineto
closepath
stroke
gsave 10 dict begin
156 115 moveto 92 -0.5 (BEAST::SimObject) alignedtext
end grestore
end grestore

%	Node771
[ /Rect [ 0 61 154 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Group.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
155 60 lineto
155 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
77 63 moveto 145 -0.5 (BEAST::Group< _ObjType >) alignedtext
end grestore
end grestore

%	Node770 -> Node771
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 137 107 moveto
121 97 101 84 88 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 108 moveto
144 112 lineto
137 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node772
[ /Rect [ 172 61 300 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Group.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 172 60 moveto
300 60 lineto
300 75 lineto
172 75 lineto
closepath
stroke
gsave 10 dict begin
236 63 moveto 118 -0.5 (BEAST::Group< _Ind >) alignedtext
end grestore
end grestore

%	Node770 -> Node772
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 175 107 moveto
191 97 211 84 224 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 175 104 moveto
168 112 lineto
178 108 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node773
[ /Rect [ 133 9 339 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Population.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 133 8 moveto
340 8 lineto
340 23 lineto
133 23 lineto
closepath
stroke
gsave 10 dict begin
236 11 moveto 197 -0.5 (BEAST::Population< _Ind, _MutFunc >) alignedtext
end grestore
end grestore

%	Node772 -> Node773
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 236 51 moveto
236 42 236 31 236 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 234 50 moveto
236 60 lineto
239 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2032 a(Collab)r(oration)26 b(diagram)g(for)h
(BEAST::SimOb)5 b(ject:)1609 2709 y @beginspecial 35
@llx 35 @lly 146 @urx 137 @ury 727 @rwi @setspecial
%%BeginDocument: classBEAST_1_1SimObject__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 146 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 146 137
%%PageOrientation: Portrait
gsave
35 35 111 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node774
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
102 8 lineto
102 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
102 8 lineto
102 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
51 11 moveto 92 -0.5 (BEAST::SimObject) alignedtext
end grestore
end grestore

%	Node775
[ /Rect [ 10 77 92 91 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1World.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 10 76 moveto
93 76 lineto
93 91 lineto
10 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
51 79 moveto 73 -0.5 (BEAST::World) alignedtext
end grestore
end grestore

%	Node775 -> Node774
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 51 68 moveto
51 54 51 35 51 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 49 66 moveto
51 76 lineto
54 66 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
80 46 moveto 48 -0.5 (myWorld) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3070 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3254 y Fk(\210)42 b Fp(virtual)27 b Fh(\030)p
Fq(SimOb)5 b(ject)26 b Fp(\(\))476 3377 y Fg(Virtual)h(destructor.)275
3574 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(BeginAssessmen)m(t)f
Fp(\(\))476 3697 y Fg(This)i(metho)l(d)i(may)e(b)l(e)h(overidden)h(to)f
(do)g(pr)l(o)l(c)l(essing)i(b)l(etwe)l(en)f(assessments.)275
3894 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(EndAssessmen)m(t)f
Fp(\(\))275 4000 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(BeginGeneration)h Fp(\(\))476 4122 y Fg(This)g(metho)l(d)i(may)e(b)l
(e)h(overidden)h(to)f(do)g(pr)l(o)l(c)l(essing)i(b)l(etwe)l(en)f(gener)
l(ations.)275 4319 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(EndGeneration)i Fp(\(\))275 4425 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(BeginRun)h Fp(\(\))476 4548 y Fg(This)g(metho)l(d)i(may)
e(b)l(e)h(overidden)h(to)f(do)g(pr)l(o)l(c)l(essing)i(b)l(etwe)l(en)f
(runs.)275 4745 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(EndRun)i Fp(\(\))275 4851 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(AddT)-8 b(oW)g(orld)28 b Fp(\(\)=0)476
4973 y Fg(Cal)t(ls)f(the)h(world's)g(A)l(dd)g(metho)l(d)g(on)g(the)h(c)
l(ontents)g(of)f(this)g(obje)l(ct.)275 5171 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(Serialise)h Fp(\(std::ostream)g(&\))g
(const)476 5293 y Fg(Outputs)i(obje)l(ct)f(to)h(a)e(str)l(e)l(am.)275
5490 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Unserialise)h
Fp(\(std::istream)g(&\))476 5613 y Fg(Inputs)h(obje)l(ct)h(fr)l(om)e(a)
h(str)l(e)l(am.)p 150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 192 200
192 199 bop -358 70 a Fq(192)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
446 a Fk(\210)42 b Fp(virtual)27 b(b)r(o)r(ol)g Fq(Sa)m(v)m(e)i
Fp(\(const)f(c)n(har)e Fh(\003)p Fp(\))h(const)476 576
y Fg(Uses)32 b(the)f(SimObje)l(ct's)g(Serialise)g(metho)l(d)i(\(sele)l
(cte)l(d)g(thr)l(ough)g(p)l(olymorphism\))e(to)h(str)l(e)l(am)g(the)g
(obje)l(ct)g(to)476 667 y(the)c(sp)l(e)l(ci\014e)l(d)h(\014le.)275
872 y Fk(\210)42 b Fp(virtual)27 b(b)r(o)r(ol)g Fq(Load)h
Fp(\(const)g(c)n(har)e Fh(\003)p Fp(\))476 1002 y Fg(Uses)g(the)g
(SimObje)l(ct's)g(Unserialise)f(metho)l(d)i(\(sele)l(cte)l(d)h(thr)l
(ough)f(p)l(olymorphism\))f(to)g(r)l(einstate)i(the)e(obje)l(ct)476
1093 y(fr)l(om)h(the)h(sp)l(e)l(ci\014e)l(d)h(\014le.)275
1298 y Fk(\210)42 b Fq(W)-8 b(orld)27 b Fp(&)g Fq(GetW)-8
b(orld)27 b Fp(\(\))h(const)476 1428 y Fg(R)l(eturns)h(the)f(world)g
(in)f(which)h(the)g Ff(SimOb)5 b(ject)29 b Fg(r)l(esides.)275
1632 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetW)-8 b(orld)27
b Fp(\()p Fq(W)-8 b(orld)28 b Fh(\003)p Fp(w\))476 1762
y Fg(Sets)g(the)h(world)f(use)l(d)g(in)f(A)l(ddT)-6 b(oWorld.)275
1967 y Fk(\210)42 b Fp(virtual)27 b(std::string)g Fq(T)-8
b(oString)27 b Fp(\(\))i(const)150 2258 y Fj(Related)37
b(F)-9 b(unctions)150 2461 y Fp(\(Note)28 b(that)g(these)f(are)g(not)h
(mem)n(b)r(er)f(functions.\))275 2679 y Fk(\210)42 b
Fp(std::ostream)26 b(&)h Fq(op)s(erator)p Fo(<<)g Fp(\(std::ostream)g
(&out,)g(const)h Fq(SimOb)5 b(ject)26 b Fp(&ob)5 b(j\))476
2809 y Fg(Output)28 b(op)l(er)l(ator)i(for)e(al)t(l)f(obje)l(cts)i
(derive)l(d)f(fr)l(om)g Ff(SimOb)5 b(ject)p Fg(.)275
3014 y Fk(\210)42 b Fp(std::istream)27 b(&)g Fq(op)s(erator)p
Fo(>>)g Fp(\(std::istream)g(&in,)h Fq(SimOb)5 b(ject)26
b Fp(&ob)5 b(j\))476 3144 y Fg(Input)28 b(op)l(er)l(ator)i(for)d(al)t
(l)g(obje)l(cts)i(derive)l(d)f(fr)l(om)g Ff(SimOb)5 b(ject)p
Fg(.)150 3526 y Fj(10.64.1)113 b(Detailed)36 b(Description)150
3729 y Fp(An)20 b(abstract)f(base)g(class)g(for)h(the)g
Fq(P)m(opulation)g Fp(template,)h(allo)n(wing)e(p)r(opulations)g(with)i
(di\013eren)n(t)f(templated)150 3829 y(t)n(yp)r(es)28
b(to)f(b)r(e)h(represen)n(ted)e(in)i Fq(Sim)m(ulation)p
Fp(.)150 4120 y Fj(10.64.2)113 b(Mem)m(b)s(er)37 b(F)-9
b(unction)37 b(Do)s(cumen)m(tation)150 4323 y Fq(10.64.2.1)92
b(b)s(o)s(ol)31 b(BEAST::SimOb)5 b(ject::Load)29 b(\(const)j(c)m(har)h
Fh(\003)f Fe(\014leName)p Fq(\))72 b Fi([virtual])150
4526 y Fp(Uses)23 b(the)i(SimOb)5 b(ject's)23 b(Unserialise)g(metho)r
(d)h(\(selected)g(through)f(p)r(olymorphism\))g(to)h(reinstate)f(the)h
(ob)5 b(ject)150 4625 y(from)27 b(the)h(sp)r(eci\014ed)g(\014le.)142
4845 y Fq(Returns:)311 4945 y Fp(T)-7 b(rue)28 b(if)g(successful.)150
5310 y Fq(10.64.2.2)92 b(b)s(o)s(ol)31 b(BEAST::SimOb)5
b(ject::Sa)m(v)m(e)30 b(\(const)i(c)m(har)h Fh(\003)e
Fe(\014leName)p Fq(\))i(const)71 b Fi([virtual])150 5513
y Fp(Uses)29 b(the)h(SimOb)5 b(ject's)29 b(Serialise)f(metho)r(d)i
(\(selected)f(through)g(p)r(olymorphism\))g(to)g(stream)g(the)g(ob)5
b(ject)29 b(to)150 5613 y(the)f(sp)r(eci\014ed)g(\014le.)p
-358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 193 201
193 200 bop 150 70 a Fq(10.64)30 b(BEAST::SimOb)5 b(ject)30
b(Class)h(Reference)2132 b(193)p 150 103 4034 4 v 142
307 a(Returns:)311 406 y Fp(T)-7 b(rue)28 b(if)g(successful.)150
636 y(The)g(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f
(generated)h(from)g(the)h(follo)n(wing)e(\014les:)275
849 y Fk(\210)42 b Fq(sim)m(ulation.h)275 957 y Fk(\210)g
Fq(sim)m(ulation.cc)p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 194 202
194 201 bop -358 70 a Fq(194)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.65)136 b(BEAST::Sim)l(ulation)46 b(Class)f(Reference)150
562 y Fp(The)28 b(basic)f Fq(Sim)m(ulation)e Fp(framew)n(ork)h(whic)n
(h)h(m)n(ust)h(b)r(e)g(deriv)n(ed)f(to)g(set)h(up)g(sim)n(ulations.)150
709 y Fi(#include)40 b Fo(<)p Fi(simulation.h)p Fo(>)150
856 y Fp(Collab)r(oration)26 b(diagram)g(for)h(BEAST::Sim)n(ulation:)
1609 1537 y @beginspecial 35 @llx 35 @lly 146 @urx 137
@ury 727 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Simulation__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 146 137
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 146 137
%%PageOrientation: Portrait
gsave
35 35 111 102 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node792
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
104 8 lineto
104 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
104 8 lineto
104 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
52 11 moveto 94 -0.5 (BEAST::Simulation) alignedtext
end grestore
end grestore

%	Node793
[ /Rect [ 11 77 93 91 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1World.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 11 76 moveto
94 76 lineto
94 91 lineto
11 91 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
52 79 moveto 73 -0.5 (BEAST::World) alignedtext
end grestore
end grestore

%	Node793 -> Node792
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 52 68 moveto
52 54 52 35 52 24 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 50 66 moveto
52 76 lineto
55 66 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
80 46 moveto 47 -0.5 (theWorld) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1901 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2089 y Fk(\210)42 b Fq(Sim)m(ulation)25
b Fp(\(\))476 2214 y Fg(Constructor,)30 b(cr)l(e)l(ates)f(an)f(empty)h
(simulation.)275 2414 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(Init)i Fp(\(\))476 2539 y Fg(The)34 b(curr)l(ent)i(run)e(is)g(set)h
(to)f(0,)h(the)g(c)l(omplete)g(\015ag)f(b)l(e)l(c)l(omes)i(false)e(and)
g(e)l(ach)h Ff(SimOb)5 b(ject)35 b Fg(is)e(given)i(a)476
2630 y(p)l(ointer)28 b(to)g(theWorld,)g(then)h(the)f(run)g(b)l(e)l
(gins.)275 2830 y Fk(\210)42 b Fp(virtual)27 b(b)r(o)r(ol)g
Fq(Up)s(date)h Fp(\(\))476 2955 y Fg(Up)l(dates)h(the)f
Ff(W)-7 b(orld)29 b Fg(onc)l(e)g(and)e(che)l(cks)j(to)e(se)l(e)g(if)f
(the)h(time)g(limit)e(has)i(p)l(asse)l(d.)275 3155 y
Fk(\210)42 b Fp(v)n(oid)26 b Fq(Displa)m(y)i Fp(\(\))275
3264 y Fk(\210)42 b Fp(std::string)27 b Fq(T)-8 b(oString)27
b Fp(\()p Fq(SimPrin)m(tSt)m(yleT)m(yp)s(e)h Fp(s=SIM)p
2256 3264 25 4 v 29 w(PRINT)p 2555 3264 V 30 w(ST)-7
b(A)g(TUS\))29 b(const)476 3389 y Fg(R)l(ep)l(orts)g(a)f(few)f(details)
h(ab)l(out)h(the)f(curr)l(ent)i(state)f(of)e(the)i(simulation.)275
3589 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Add)i Fp(\(std::string)g(name,)f
Fq(SimOb)5 b(ject)27 b Fp(&p)r(op\))476 3714 y Fg(A)l(dds)h(a)g
Ff(P)n(opulation)p Fg(,)h Ff(Group)g Fg(or)f(other)h
Ff(SimOb)5 b(ject)28 b Fg(to)g(the)h(world.)275 3914
y Fk(\210)42 b Fp(v)n(oid)26 b Fq(ResetRun)h Fp(\(\))476
4039 y Fg(This)34 b(metho)l(d)h(is)f(c)l(al)t(le)l(d)h(when)g(the)g
(GUI)f(ne)l(e)l(ds)i(to)e(br)l(e)l(ak)i(the)f(curr)l(ent)i(run)e(and)f
(start)i(again)f(fr)l(om)f(the)476 4130 y(b)l(e)l(ginning)28
b(of)f(that)i(run.)275 4330 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(ResetGeneration)h Fp(\(\))476 4455 y Fg(This)h(metho)l(d)h(is)f(c)
l(al)t(le)l(d)h(when)f(the)h(GUI)f(ne)l(e)l(ds)i(to)f(br)l(e)l(ak)h
(the)f(curr)l(ent)h(gener)l(ation)g(and)f(start)h(again)e(fr)l(om)476
4546 y(the)g(b)l(e)l(ginning)g(of)f(that)i(gener)l(ation.)275
4746 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(ResetAssessmen)m(t)e
Fp(\(\))476 4871 y Fg(This)j(metho)l(d)h(is)f(c)l(al)t(le)l(d)g(when)g
(the)h(GUI)f(ne)l(e)l(ds)i(to)e(br)l(e)l(ak)i(the)f(curr)l(ent)h
(assessment)g(and)f(start)h(again)e(fr)l(om)476 4963
y(the)h(b)l(e)l(ginning)g(of)f(that)i(assessment.)275
5163 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetRuns)h Fp(\(in)n(t)i(r\))476
5288 y Fg(Sets)f(the)h(numb)l(er)f(of)f(runs)i(for)e(this)h
(simulation.)275 5488 y Fk(\210)42 b Fp(v)n(oid)26 b
Fq(SetGenerations)h Fp(\(in)n(t)i(g\))476 5613 y Fg(Sets)f(the)h(numb)l
(er)f(of)f(gener)l(ations)j(p)l(er)f(run,)e(if)g(unset)h(gener)l
(ations)i(ar)l(e)f(unlimite)l(d.)p -358 5723 4034 4 v
-192 5823 a Fn(Generated)d(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e
(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j
(Sim)n(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 195 203
195 202 bop 150 70 a Fq(10.65)30 b(BEAST::Sim)m(ulation)f(Class)i
(Reference)2127 b(195)p 150 103 4034 4 v 275 450 a Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetAssessmen)m(ts)f Fp(\(in)n(t)j(a\))476
584 y Fg(Sets)g(the)h(numb)l(er)f(of)f(assessments)k(p)l(er)d(gener)l
(ation,)h(default)f(is)f(one.)275 793 y Fk(\210)42 b
Fp(v)n(oid)26 b Fq(SetTimeSteps)g Fp(\(in)n(t)i(t\))476
927 y Fg(Sets)g(the)h(numb)l(er)f(of)f(time)h(steps)h(p)l(er)f
(assessment,)i(default)e(is)f(1000.)275 1136 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetLogStream)h Fp(\(std::ostream)g(&o\))476
1270 y Fg(Sets)h(the)h(output)g(lo)l(g)f(str)l(e)l(am.)275
1478 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(HasSimOb)5
b(ject)26 b Fp(\(std::string)i(n\))476 1613 y Fg(Che)l(cks)g(if)f(the)h
(sp)l(e)l(ci\014e)l(d)h(simulation)f(obje)l(ct)g(is)g(in)f(the)h
(simulation.)275 1821 y Fk(\210)42 b Fq(SimOb)5 b(ject)26
b Fp(&)h Fq(GetSimOb)5 b(ject)26 b Fp(\(std::string)i(n\))476
1955 y Fg(Gets)h(the)f(sp)l(e)l(ci\014e)l(d)h(simulation)e(obje)l(ct.)
275 2164 y Fk(\210)42 b Fp(in)n(t)27 b Fq(GetRun)h Fp(\(\))g(const)476
2298 y Fg(Gets)h(the)f(curr)l(ent)i(run.)275 2507 y Fk(\210)42
b Fp(in)n(t)27 b Fq(GetGeneration)h Fp(\(\))g(const)476
2641 y Fg(Gets)h(the)f(curr)l(ent)i(gener)l(ation.)275
2850 y Fk(\210)42 b Fp(in)n(t)27 b Fq(GetAssessmen)m(t)e
Fp(\(\))k(const)476 2984 y Fg(Gets)g(the)f(curr)l(ent)i(assessment.)275
3192 y Fk(\210)42 b Fp(in)n(t)27 b Fq(GetTimeStep)f Fp(\(\))j(const)476
3327 y Fg(Gets)g(the)f(curr)l(ent)i(timestep.)275 3535
y Fk(\210)42 b Fp(in)n(t)27 b Fq(GetT)-8 b(otalRuns)28
b Fp(\(\))g(const)476 3669 y Fg(Gets)h(the)f(total)g(runs.)275
3878 y Fk(\210)42 b Fp(in)n(t)27 b Fq(GetT)-8 b(otalGenerations)28
b Fp(\(\))g(const)476 4012 y Fg(Gets)h(the)f(total)g(gener)l(ations.)
275 4221 y Fk(\210)42 b Fp(in)n(t)27 b Fq(GetT)-8 b(otalAssessmen)m(ts)
25 b Fp(\(\))k(const)476 4355 y Fg(Gets)g(the)f(total)g(assessments.)
275 4564 y Fk(\210)42 b Fp(in)n(t)27 b Fq(GetT)-8 b(otalTimeSteps)26
b Fp(\(\))i(const)476 4698 y Fg(Gets)h(the)f(total)g(time)g(steps.)275
4906 y Fk(\210)42 b Fp(std::ostream)26 b(&)h Fq(GetLogStream)g
Fp(\(\))476 5041 y Fg(Gets)i(the)f(lo)l(g)g(str)l(e)l(am.)275
5249 y Fk(\210)42 b Fq(W)-8 b(orld)27 b Fp(&)g Fq(GetW)-8
b(orld)27 b Fp(\(\))476 5383 y Fg(Gets)i(the)f Ff(W)-7
b(orld)29 b Fg(obje)l(ct)f(for)g(this)g(simulation.)275
5592 y Fk(\210)42 b Fp(const)27 b(std::map)p Fo(<)g Fp(std::string,)g
Fq(SimOb)5 b(ject)27 b Fh(\003)g Fo(>)g Fp(&)g Fq(GetCon)m(ten)m(ts)h
Fp(\(\))g(const)p 150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 196 204
196 203 bop -358 70 a Fq(196)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fj(Protected)36 b(Mem)m(b)s(er)i(F)-9 b(unctions)275
534 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Generate)i Fp(\(\))275
652 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(TimeUp)h Fp(\(\))275
771 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(BeginAssessmen)m(t)f
Fp(\(\))476 906 y Fg(This)i(metho)l(d)i(is)e(c)l(al)t(le)l(d)h(at)g
(the)g(b)l(e)l(ginning)g(of)g(every)h(assessment.)275
1115 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(EndAssessmen)m(t)f
Fp(\(\))476 1250 y Fg(This)i(metho)l(d)i(is)e(c)l(al)t(le)l(d)h(at)g
(the)g(end)g(of)g(every)g(assessment.)275 1460 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(BeginGeneration)h Fp(\(\))476
1595 y Fg(This)g(metho)l(d)i(is)e(c)l(al)t(le)l(d)h(at)g(the)g(b)l(e)l
(ginning)g(of)g(every)h(gener)l(ation.)275 1805 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(EndGeneration)i Fp(\(\))476
1939 y Fg(This)f(metho)l(d)i(is)e(c)l(al)t(le)l(d)h(at)g(the)g(end)g
(of)g(every)g(gener)l(ation.)275 2149 y Fk(\210)42 b
Fp(virtual)27 b(v)n(oid)f Fq(BeginRun)h Fp(\(\))476 2284
y Fg(This)g(metho)l(d)i(is)e(c)l(al)t(le)l(d)h(at)g(the)g(b)l(e)l
(ginning)g(of)g(every)h(run.)275 2494 y Fk(\210)42 b
Fp(virtual)27 b(v)n(oid)f Fq(EndRun)i Fp(\(\))476 2629
y Fg(This)23 b(metho)l(d)h(is)f(c)l(al)t(le)l(d)g(at)h(the)g(end)f(of)g
(every)i(run)e(and)h(is)f(r)l(esp)l(onsible)h(for)g(either)g(stopping)g
(the)g(simulation)476 2720 y(if)i(the)j(maximum)d(numb)l(er)j(of)e
(runs)i(has)f(b)l(e)l(en)g(r)l(e)l(ache)l(d.)275 2930
y Fk(\210)42 b Fp(std::map)p Fo(<)27 b Fp(std::string,)g
Fq(SimOb)5 b(ject)27 b Fh(\003)g Fo(>)g Fp(&)g Fq(GetCon)m(ten)m(ts)h
Fp(\(\))150 3232 y Fj(10.65.1)113 b(Detailed)36 b(Description)150
3437 y Fp(The)28 b(basic)f Fq(Sim)m(ulation)e Fp(framew)n(ork)h(whic)n
(h)h(m)n(ust)h(b)r(e)g(deriv)n(ed)f(to)g(set)h(up)g(sim)n(ulations.)150
3584 y(This)g(class)e(cannot)h(itself)h(b)r(e)g(instan)n(tiated.)37
b(T)-7 b(o)27 b(deriv)n(e)g(y)n(our)f(o)n(wn)h Fq(Sim)m(ulation)p
Fp(:)275 3807 y Fk(\210)42 b Fp(Create)26 b(a)h(new)h(class,)f
(publicly)h(deriv)n(ed)f(from)g Fq(Sim)m(ulation)p Fp(.)275
3994 y Fk(\210)42 b Fp(Sp)r(ecify)28 b(y)n(our)e(sim)n(ulation)h(con)n
(ten)n(ts)g(\(e.g.)37 b Fq(Group)28 b Fp(and)f Fq(P)m(opulation)h
Fp(classes\))e(as)h(mem)n(b)r(er)h(data.)275 4181 y Fk(\210)42
b Fp(Create)27 b(a)g(public)i(constructor)d(whic)n(h)i(initialises)g
(the)g(mem)n(b)r(er)g(data,)g(then)g(adds)g(eac)n(h)f(ob)5
b(ject)27 b(using)358 4281 y Fq(Sim)m(ulation::Add)p
Fp(.)275 4467 y Fk(\210)42 b Fp(P)n(erform)25 b(an)n(y)i(setup)h(of)g
(the)g Fq(W)-8 b(orld)p Fp(,)27 b(the)h Fq(Sim)m(ulation)d
Fp(or)i(the)h(con)n(ten)n(ts)f(in)h(the)g(constructor.)275
4654 y Fk(\210)42 b Fp(If)28 b(y)n(ou)e(need)i(to)g(p)r(erform)f
(actions)g(ev)n(ery)f(ep)r(o)r(c)n(h,)h(o)n(v)n(erride)f(the)i(virtual)
f(metho)r(d,)h(Init.)150 4956 y Fj(10.65.2)113 b(Mem)m(b)s(er)37
b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150 5161 y
Fq(10.65.2.1)92 b(v)m(oid)32 b(BEAST::Sim)m(ulation::BeginAssessm)o(e)o
(n)m(t)27 b(\(\))71 b Fi([protected,)39 b(virtual])150
5366 y Fp(This)28 b(metho)r(d)g(is)f(called)g(at)h(the)g(b)r(eginning)f
(of)h(ev)n(ery)e(assessmen)n(t.)150 5513 y(If)f(y)n(ou)e(w)n(an)n(t)h
(to)g(o)n(v)n(erride)f(this)h(metho)r(d,)i(ensure)e(that)g
Fq(Sim)m(ulation::BeginAssessm)o(en)m(t)19 b Fp(is)24
b(called)g(at)h(the)150 5613 y(end)j(of)f(y)n(our)g(o)n(v)n(erridden)e
(v)n(ersion.)p -358 5723 V -192 5823 a Fn(Generated)h(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 197 205
197 204 bop 150 70 a Fq(10.65)30 b(BEAST::Sim)m(ulation)f(Class)i
(Reference)2127 b(197)p 150 103 4034 4 v 150 333 a(10.65.2.2)92
b(v)m(oid)32 b(BEAST::Sim)m(ulation::BeginGeneration)27
b(\(\))71 b Fi([protected,)39 b(virtual])150 540 y Fp(This)28
b(metho)r(d)g(is)f(called)g(at)h(the)g(b)r(eginning)f(of)h(ev)n(ery)e
(generation.)150 687 y(If)g(y)n(ou)e(w)n(an)n(t)h(to)g(o)n(v)n(erride)e
(this)j(metho)r(d,)g(ensure)f(that)g Fq(Sim)m(ulation::BeginGeneration)
c Fp(is)26 b(called)f(at)g(the)150 787 y(end)j(of)f(y)n(our)g(o)n(v)n
(erridden)e(v)n(ersion.)150 1085 y Fq(10.65.2.3)92 b(v)m(oid)32
b(BEAST::Sim)m(ulation::BeginRun)27 b(\(\))71 b Fi([protected,)39
b(virtual])150 1292 y Fp(This)28 b(metho)r(d)g(is)f(called)g(at)h(the)g
(b)r(eginning)f(of)h(ev)n(ery)e(run.)150 1439 y(If)j(y)n(ou)e(w)n(an)n
(t)g(to)h(o)n(v)n(erride)e(this)i(metho)r(d,)h(ensure)f(that)g
Fq(Sim)m(ulation::BeginRun)c Fp(is)k(called)f(at)h(the)h(end)f(of)150
1539 y(y)n(our)e(o)n(v)n(erridden)g(v)n(ersion.)150 1837
y Fq(10.65.2.4)92 b(v)m(oid)32 b(BEAST::Sim)m(ulation::EndAssessme)o(n)
m(t)27 b(\(\))71 b Fi([protected,)39 b(virtual])150 2045
y Fp(This)28 b(metho)r(d)g(is)f(called)g(at)h(the)g(end)g(of)f(ev)n
(ery)g(assessmen)n(t.)150 2192 y(If)j(y)n(ou)f(w)n(an)n(t)g(to)h(o)n(v)
n(erride)e(this)i(metho)r(d,)h(ensure)e(that)h Fq(Sim)m
(ulation::EndAssessmen)m(t)24 b Fp(is)30 b(called)f(at)h(the)150
2291 y(end)e(of)f(y)n(our)g(o)n(v)n(erridden)e(v)n(ersion.)150
2589 y Fq(10.65.2.5)92 b(v)m(oid)32 b(BEAST::Sim)m
(ulation::EndGeneration)c(\(\))71 b Fi([protected,)39
b(virtual])150 2797 y Fp(This)28 b(metho)r(d)g(is)f(called)g(at)h(the)g
(end)g(of)f(ev)n(ery)g(generation.)150 2944 y(If)k(y)n(ou)f(w)n(an)n(t)
g(to)h(o)n(v)n(erride)d(this)j(metho)r(d,)h(ensure)e(that)h
Fq(Sim)m(ulation::EndGeneration)c Fp(is)k(called)f(at)h(the)150
3043 y(end)d(of)f(y)n(our)g(o)n(v)n(erridden)e(v)n(ersion.)150
3342 y Fq(10.65.2.6)92 b(v)m(oid)32 b(BEAST::Sim)m(ulation::EndRun)c
(\(\))71 b Fi([protected,)39 b(virtual])150 3549 y Fp(This)25
b(metho)r(d)g(is)g(called)g(at)g(the)g(end)g(of)g(ev)n(ery)f(run)h(and)
f(is)h(resp)r(onsible)f(for)h(either)g(stopping)f(the)i(sim)n(ulation)
150 3649 y(if)i(the)g(maxim)n(um)g(n)n(um)n(b)r(er)f(of)g(runs)h(has)f
(b)r(een)h(reac)n(hed.)150 3796 y(If)33 b(y)n(ou)f(w)n(an)n(t)g(to)h(o)
n(v)n(erride)d(this)j(metho)r(d,)i(ensure)d(that)h Fq(Sim)m
(ulation::EndRun)c Fp(is)j(called)h(at)f(the)h(end)g(of)150
3895 y(y)n(our)26 b(o)n(v)n(erridden)g(v)n(ersion.)150
4194 y Fq(10.65.2.7)92 b(v)m(oid)32 b(BEAST::Sim)m(ulation::SetRuns)c
(\(in)m(t)k Fe(r)p Fq(\))70 b Fi([inline])150 4401 y
Fp(Sets)28 b(the)g(n)n(um)n(b)r(er)f(of)h(runs)f(for)g(this)h(sim)n
(ulation.)150 4548 y(Has)f(no)h(e\013ect)g(if)g(the)g(n)n(um)n(b)r(er)f
(of)h(generations)d(has)i(not)h(b)r(een)g(sp)r(eci\014ed)g(using)f
(SetGenerations.)150 4846 y Fq(10.65.2.8)92 b(std::string)35
b(BEAST::Sim)m(ulation::T)-8 b(oString)32 b(\(SimPrin)m(tSt)m(yleT)m
(yp)s(e)k Fe(s)g Fq(=)611 4946 y(SIM)p 797 4946 29 4
v 35 w(PRINT)p 1146 4946 V 34 w(ST)-8 b(A)g(TUS\))34
b(const)150 5153 y Fp(Rep)r(orts)27 b(a)g(few)h(details)g(ab)r(out)f
(the)h(curren)n(t)f(state)g(of)h(the)g(sim)n(ulation.)142
5390 y Fq(Returns:)311 5489 y Fp(The)g(output)g(string.)p
150 5723 4034 4 v 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 198 206
198 205 bop -358 70 a Fq(198)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a(10.65.2.9)92 b(b)s(o)s(ol)31 b(BEAST::Sim)m(ulation::Up)s(date)d
(\(\))71 b Fi([virtual])150 533 y Fp(Up)r(dates)28 b(the)g
Fq(W)-8 b(orld)27 b Fp(once)g(and)g(c)n(hec)n(ks)g(to)g(see)h(if)g(the)
g(time)g(limit)g(has)f(passed.)150 680 y(If)h(the)g(time)g(limit)g(has)
f(passed,)g(EndAssessmen)n(t)g(is)h(called.)150 827 y(The)g(do)r(cumen)
n(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h(from)g(the)h
(follo)n(wing)e(\014les:)275 1040 y Fk(\210)42 b Fq(sim)m(ulation.h)275
1148 y Fk(\210)g Fq(sim)m(ulation.cc)p -358 5723 V -192
5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 199 207
199 206 bop 150 70 a Fq(10.66)30 b(BEAST::switc)m(her)i(Struct)h
(Reference)2182 b(199)p 150 103 4034 4 v 150 333 a Fl(10.66)136
b(BEAST::switc)l(her)45 b(Struct)g(Reference)150 562
y Fp(The)28 b(switc)n(her)f(is)g(useful)h(when)g(con\014guring)e(b)r(o)
r(ols)h(from)g(string)g(data.)150 709 y Fi(#include)40
b Fo(<)p Fi(serialfuncs.h)p Fo(>)150 988 y Fj(Public)c(Mem)m(b)s(er)h
(F)-9 b(unctions)275 1175 y Fk(\210)42 b Fq(switc)m(her)27
b Fp(\(std::string)h(s,)f(b)r(o)r(ol)h(&b\))150 1454
y Fj(Public)36 b(A)m(ttributes)275 1641 y Fk(\210)42
b Fp(std::string)27 b Fq(name)275 1749 y Fk(\210)42 b
Fp(b)r(o)r(ol)27 b(&)g Fq(option)150 2028 y Fj(10.66.1)113
b(Detailed)36 b(Description)150 2229 y Fp(The)28 b(switc)n(her)f(is)g
(useful)h(when)g(con\014guring)e(b)r(o)r(ols)h(from)g(string)g(data.)
150 2376 y(E.g.)47 b(to)31 b(set)g Fi(bool)42 b(isTrue)29
b Fp(according)h(to)h(a)g(string)f(coming)h(from)g(a)g(stream:)43
b Fi(cin)g Fo(>>)f Fi(switcher\("is-)150 2475 y(True",)f(isTrue\);)150
2622 y Fp(The)28 b(do)r(cumen)n(tation)f(for)g(this)h(struct)f(w)n(as)g
(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
2836 y Fk(\210)42 b Fq(serialfuncs.h)p 150 5723 V 150
5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 200 208
200 207 bop -358 70 a Fq(200)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.67)136 b(BEAST::T)-11 b(ouc)l(hSensor)43
b(Class)j(Reference)150 562 y Fp(Detects)28 b(ob)5 b(jects)27
b(whic)n(h)h(are)e(touc)n(hing)h(the)h(sensor's)e(o)n(wner.)150
709 y Fi(#include)40 b Fo(<)p Fi(sensorbase.h)p Fo(>)150
855 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::T)-7
b(ouc)n(hSensor:)1601 1999 y @beginspecial 35 @llx 35
@lly 151 @urx 225 @ury 747 @rwi @setspecial
%%BeginDocument: classBEAST_1_1TouchSensor__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 151 225
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 151 225
%%PageOrientation: Portrait
gsave
35 35 116 190 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node811
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
114 8 lineto
114 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
114 8 lineto
114 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
57 11 moveto 104 -0.5 (BEAST::TouchSensor) alignedtext
end grestore
end grestore

%	Node812
[ /Rect [ 16 61 98 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Sensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 16 60 moveto
99 60 lineto
99 75 lineto
16 75 lineto
closepath
stroke
gsave 10 dict begin
57 63 moveto 73 -0.5 (BEAST::Sensor) alignedtext
end grestore
end grestore

%	Node812 -> Node811
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 51 moveto
57 42 57 31 57 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 50 moveto
57 60 lineto
60 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node813
[ /Rect [ 0 113 114 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
115 112 lineto
115 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
57 115 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node813 -> Node812
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 103 moveto
57 94 57 83 57 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 102 moveto
57 112 lineto
60 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node814
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 8 164 moveto
107 164 lineto
107 179 lineto
8 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
57 167 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node814 -> Node813
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 155 moveto
57 146 57 135 57 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 154 moveto
57 164 lineto
60 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2329 a(Collab)r(oration)26 b(diagram)g(for)h(BEAST::T)
-7 b(ouc)n(hSensor:)1601 2915 y @beginspecial 35 @llx
35 @lly 151 @urx 121 @ury 747 @rwi @setspecial
%%BeginDocument: classBEAST_1_1TouchSensor__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 151 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 151 121
%%PageOrientation: Portrait
gsave
35 35 116 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node815
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
114 8 lineto
114 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
114 8 lineto
114 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
57 11 moveto 104 -0.5 (BEAST::TouchSensor) alignedtext
end grestore
end grestore

%	Node816
[ /Rect [ 16 61 98 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Sensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 16 60 moveto
99 60 lineto
99 75 lineto
16 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
57 63 moveto 73 -0.5 (BEAST::Sensor) alignedtext
end grestore
end grestore

%	Node816 -> Node815
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 51 moveto
57 42 57 31 57 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 50 moveto
57 60 lineto
60 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3277 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3464 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f
Fq(Init)i Fp(\(\))476 3588 y Fg(Initialises)f(sensor)i(r)l(adius)f(to)g
(match)h(that)f(of)g(owner.)275 3788 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(In)m(teract)k Fp(\()p Fq(W)-8 b(orldOb)5
b(ject)28 b Fh(\003)p Fp(other\))476 3912 y Fg(Che)l(cks)35
b(if)e(the)i Ff(W)-7 b(orldOb)5 b(ject)36 b Fg(is)e(the)h(c)l(orr)l(e)l
(ct)i(typ)l(e)e(using)f(MatchF)-6 b(unc,)37 b(then)f(che)l(cks)f(if)e
(the)i(sensor's)476 4003 y(owner)28 b(is)f(touching)i(the)g
Ff(W)-7 b(orldOb)5 b(ject)29 b Fg(and)f(c)l(al)t(ls)f(the)i(EvalF)-6
b(unc.)150 4374 y Fj(10.67.1)113 b(Detailed)36 b(Description)150
4575 y Fp(Detects)28 b(ob)5 b(jects)27 b(whic)n(h)h(are)e(touc)n(hing)h
(the)h(sensor's)e(o)n(wner.)142 4787 y Fq(See)31 b(also:)311
4887 y(Sensor)150 5117 y Fp(The)d(do)r(cumen)n(tation)f(for)g(this)h
(class)f(w)n(as)f(generated)h(from)g(the)h(follo)n(wing)e(\014les:)275
5330 y Fk(\210)42 b Fq(sensorbase.h)275 5438 y Fk(\210)g
Fp(sensor.cc)p -358 5723 V -192 5823 a Fn(Generated)26
b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 201 209
201 208 bop 150 70 a Fq(10.68)30 b(BEAST::UniformNoise)f(Struct)k
(Reference)1949 b(201)p 150 103 4034 4 v 150 333 a Fl(10.68)136
b(BEAST::UniformNoise)46 b(Struct)f(Reference)150 562
y Fp(Plots)27 b(uniform)g(noise)g(in)h(a)f(distribution.)150
709 y Fi(#include)40 b Fo(<)p Fi(bacteria.h)p Fo(>)150
988 y Fj(Public)c(Mem)m(b)s(er)h(F)-9 b(unctions)275
1175 y Fk(\210)42 b Fq(UniformNoise)24 b Fp(\(double)k(minim)n(um,)h
(double)e(maxim)n(um\))275 1283 y Fk(\210)42 b Fp(double)27
b Fq(op)s(erator\(\))h Fp(\(in)n(t,)g(in)n(t\))150 1562
y Fj(Public)36 b(A)m(ttributes)275 1749 y Fk(\210)42
b Fp(double)27 b Fq(range)275 1857 y Fk(\210)42 b Fp(double)27
b Fq(mo)s(d)150 2136 y Fj(10.68.1)113 b(Detailed)36 b(Description)150
2337 y Fp(Plots)27 b(uniform)g(noise)g(in)h(a)f(distribution.)150
2616 y Fj(10.68.2)113 b(Constructor)36 b(&)i(Destructor)e(Do)s(cumen)m
(tation)150 2817 y Fq(10.68.2.1)92 b(BEAST::UniformNoise::UniformNois)o
(e)31 b(\(double)36 b Fe(minimum)p Fq(,)h(double)611
2917 y Fe(maximum)p Fq(\))71 b Fi([inline])142 3103 y
Fq(P)m(arameters:)311 3203 y Fe(minimum)42 b Fp(The)27
b(lo)n(w)n(est)g(v)-5 b(alue)27 b(of)h(noise.)311 3336
y Fe(maximum)42 b Fp(The)27 b(highest)h(v)-5 b(alue)27
b(of)h(noise.)150 3566 y(The)g(do)r(cumen)n(tation)f(for)g(this)h
(struct)f(w)n(as)g(generated)g(from)g(the)h(follo)n(wing)e(\014le:)275
3779 y Fk(\210)42 b Fq(bacteria.h)p 150 5723 V 150 5823
a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 202 210
202 209 bop -358 70 a Fq(202)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.69)136 b(BEAST::Unserialiser)46 b(Class)g(Reference)150
562 y Fp(This)22 b(class)f(is)h(a)n(v)-5 b(ailable)21
b(for)h(unserialising)f(ob)5 b(jects)21 b(from)h(streams,)g(without)h
(kno)n(wing)e(whic)n(h)h(t)n(yp)r(e)g(of)g(ob)5 b(ject)150
661 y(is)27 b(to)h(b)r(e)g(unserialised)f(-)g(the)h(t)n(yp)r(e)g(is)f
(determined)h(from)f(the)h(header)f(of)g(the)h(stream.)150
808 y Fi(#include)40 b Fo(<)p Fi(unserialiser.h)p Fo(>)150
1088 y Fj(Public)c(Mem)m(b)s(er)h(F)-9 b(unctions)275
1274 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Add)i Fp(\(std::string)g(name,)f
Fq(Ob)5 b(jLoaderBase)29 b Fh(\003)p Fp(func\))476 1399
y Fg(A)l(dds)f(a)g(new)f Ff(Ob)5 b(jLoader)29 b Fg(functor)f(to)h(the)f
(map,)f(deleting)h(any)g(existing)h(one.)275 1598 y Fk(\210)42
b Fq(W)-8 b(orldOb)5 b(ject)27 b Fh(\003)g Fq(op)s(erator\(\))h
Fp(\(std::istream)g(&in\))476 1723 y Fg(Cal)t(ling)g(the)h
Ff(Unserialiser)h Fg(as)g(a)f(function)g(obje)l(ct)h(wil)t(l)d(r)l
(eturn)j(a)f(p)l(ointer)h(to)g(the)f(next)h(serialise)l(d)g(obje)l(ct)
476 1814 y(on)d(the)i(sp)l(e)l(ci\014e)l(d)g(istr)l(e)l(am,)f(or)g
(NULL)g(if)e(none)i(is)g(found.)150 2185 y Fj(Static)36
b(Public)g(Mem)m(b)s(er)h(F)-9 b(unctions)275 2371 y
Fk(\210)42 b Fq(Unserialiser)26 b Fp(&)h Fq(Instance)i
Fp(\(\))476 2496 y Fg(R)l(eturns)g(a)f(r)l(efer)l(enc)l(e)h(to)f(the)h
(one)f(and)g(only)f Ff(Unserialiser)i Fg(obje)l(ct.)150
2867 y Fj(10.69.1)113 b(Detailed)36 b(Description)150
3067 y Fp(This)22 b(class)f(is)h(a)n(v)-5 b(ailable)21
b(for)h(unserialising)f(ob)5 b(jects)21 b(from)h(streams,)g(without)h
(kno)n(wing)e(whic)n(h)h(t)n(yp)r(e)g(of)g(ob)5 b(ject)150
3167 y(is)27 b(to)h(b)r(e)g(unserialised)f(-)g(the)h(t)n(yp)r(e)g(is)f
(determined)h(from)f(the)h(header)f(of)g(the)h(stream.)150
3314 y(Since)39 b(it's)g(a)f(singleton)g(ob)5 b(ject,)41
b(there)e(is)f(only)h(ev)n(er)e(one)h(reference)g(to)h(it)g(at)f(a)h
(time.)70 b(T)-7 b(o)38 b(access)g(that)150 3414 y(reference,)27
b(use)g Fq(Unserialiser::Instance\(\))p Fp(.)150 3560
y(The)h(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f(generated)h
(from)g(the)h(follo)n(wing)e(\014les:)275 3774 y Fk(\210)42
b Fq(unserialiser.h)275 3882 y Fk(\210)g Fq(unserialiser.cc)p
-358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 203 211
203 210 bop 150 70 a Fq(10.70)30 b(BEAST::V)-8 b(ector2D)32
b(Class)f(Reference)2178 b(203)p 150 103 4034 4 v 150
333 a Fl(10.70)136 b(BEAST::V)-11 b(ector2D)44 b(Class)i(Reference)150
562 y Fp(A)28 b(class)f(for)g(represen)n(ting)f(t)n(w)n(o-dimensional)g
(v)n(ectors)g(and)h(co)r(ordinates.)150 709 y Fi(#include)40
b Fo(<)p Fi(vector2d.h)p Fo(>)150 989 y Fj(Public)c(Mem)m(b)s(er)h(F)-9
b(unctions)275 1176 y Fk(\210)42 b Fq(V)-8 b(ector2D)28
b Fp(\(double)g(X,)g(double)f(Y\))275 1285 y Fk(\210)42
b Fq(V)-8 b(ector2D)28 b Fp(\(double)g(X,)g(double)f(Y,)h(double)g(l,)f
(double)h(a\))275 1393 y Fk(\210)42 b Fq(V)-8 b(ector2D)28
b Fp(\(const)f Fq(V)-8 b(ector2D)29 b Fp(&v,)e(double)g(l,)h(double)g
(a\))275 1501 y Fk(\210)42 b Fq(V)-8 b(ector2D)28 b(op)s(erator+)g
Fp(\(const)f Fq(V)-8 b(ector2D)29 b Fp(&\))e(const)476
1626 y Fg(R)l(eturns)i(this)f(ve)l(ctor)h(plus)f(other.)275
1826 y Fk(\210)42 b Fq(V)-8 b(ector2D)28 b(op)s(erator-)f
Fp(\(const)h Fq(V)-8 b(ector2D)28 b Fp(&\))g(const)476
1951 y Fg(R)l(eturns)h(this)f(ve)l(ctor)h(minus)f(other.)275
2150 y Fk(\210)42 b Fq(V)-8 b(ector2D)28 b(op)s(erator)k
Fh(\003)27 b Fp(\(double\))h(const)476 2275 y Fg(R)l(eturns)h(this)f
(ve)l(ctor)h(multiplie)l(d)e(by)h(l.)275 2475 y Fk(\210)42
b Fq(V)-8 b(ector2D)28 b Fp(&)f Fq(op)s(erator+=)h Fp(\(const)g
Fq(V)-8 b(ector2D)28 b Fp(&\))476 2600 y Fg(A)l(dds)g(other)h(to)f
(this)g(ve)l(ctor.)275 2800 y Fk(\210)42 b Fq(V)-8 b(ector2D)28
b Fp(&)f Fq(op)s(erator-=)h Fp(\(const)f Fq(V)-8 b(ector2D)29
b Fp(&\))476 2925 y Fg(Subtr)l(acts)h(other)f(fr)l(om)e(this)h(ve)l
(ctor.)275 3124 y Fk(\210)42 b Fq(V)-8 b(ector2D)28 b
Fp(&)f Fq(op)s(erator)32 b Fh(\003)p Fq(=)27 b Fp(\(double\))476
3249 y Fg(Multiplies)g(this)h(ve)l(ctor's)h(length)f(by)g(the)h(sp)l(e)
l(ci\014e)l(d)g(value.)275 3449 y Fk(\210)42 b Fq(V)-8
b(ector2D)28 b(op)s(erator-)f Fp(\(\))i(const)476 3574
y Fg(Ne)l(gates)g(b)l(oth)g(values)f(of)f(the)i(ve)l(ctor.)275
3773 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(op)s(erator==)h
Fp(\(const)g Fq(V)-8 b(ector2D)28 b Fp(&\))g(const)476
3898 y Fg(R)l(eturns)h(true)g(if)d(this)i(ve)l(ctor)i(is)d(e)l(qual)h
(to)g(other.)275 4098 y Fk(\210)42 b Fp(b)r(o)r(ol)27
b Fq(op)s(erator!=)h Fp(\(const)g Fq(V)-8 b(ector2D)28
b Fp(&\))f(const)476 4223 y Fg(R)l(eturns)i(true)g(if)d(this)i(ve)l
(ctor)i(is)d(not)h(e)l(qual)g(to)g(other.)275 4422 y
Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetX)i Fp(\(double)g(X\))275
4531 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetY)i Fp(\(double)g(Y\))275
4639 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetP)m(olarCo)s(ordinates)i
Fp(\(double,)f(double\))476 4764 y Fg(Sets)h(the)h(ve)l(ctor)g(up)f
(using)g(p)l(olar)g(c)l(o)l(or)l(dinates.)275 4964 y
Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetCartesian)i Fp(\(double,)g(double\))
476 5089 y Fg(Quick)f(way)h(of)f(setting)i(X)f(and)g(Y)f(of)g(ve)l
(ctor)j(at)e(the)g(same)g(time.)275 5288 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(SetLength)i Fp(\(double\))476 5413
y Fg(Sets)g(the)h(length)f(of)f(the)i(ve)l(ctor.)275
5613 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(incLength)h
Fp(\(double\))p 150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 204 212
204 211 bop -358 70 a Fq(204)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
333 a Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(decLength)h
Fp(\(double\))275 439 y Fk(\210)42 b Fp(v)n(oid)26 b
Fq(SetAngle)h Fp(\(double\))476 562 y Fg(Sets)h(the)h(angle)f(of)f(the)
h(ve)l(ctor.)275 759 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(normalise)g
Fp(\(\))476 882 y Fg(Converts)j(the)g(ve)l(ctor)g(into)f(a)f(unit)h(ve)
l(ctor)i(with)d(the)i(same)f(angle.)275 1079 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(rotate)j Fp(\(double\))476 1202
y Fg(R)l(otates)g(the)g(ve)l(ctor)g(by)f(the)g(sp)l(e)l(ci\014e)l(d)h
(numb)l(er)g(of)e(r)l(adians.)275 1399 y Fk(\210)42 b
Fq(V)-8 b(ector2D)28 b(rotation)f Fp(\(double\))i(const)476
1522 y Fg(R)l(eturns)g(the)f(ve)l(ctor)i(r)l(otate)l(d)g(by)e(the)g(sp)
l(e)l(ci\014e)l(d)h(numb)l(er)f(of)g(r)l(adians.)275
1720 y Fk(\210)42 b Fp(double)27 b Fq(GetX)h Fp(\(\))g(const)275
1826 y Fk(\210)42 b Fp(double)27 b Fq(GetY)h Fp(\(\))g(const)275
1932 y Fk(\210)42 b Fp(double)27 b Fq(GetLength)h Fp(\(\))g(const)476
2055 y Fg(R)l(eturns)h(the)f(length)h(of)e(the)h(ve)l(ctor,)h(if)e(p)l
(ossible)h(use)g(GetL)l(engthSquar)l(e)l(d)k(inste)l(ad.)275
2252 y Fk(\210)42 b Fp(double)27 b Fq(GetLengthSquared)i
Fp(\(\))f(const)476 2375 y Fg(R)l(eturns)h(the)f(squar)l(e)h(of)f(the)g
(ve)l(ctor's)h(length,)f(useful)g(for)f(quicker)i(c)l(omp)l(arisons.)
275 2572 y Fk(\210)42 b Fp(double)27 b Fq(GetAngle)g
Fp(\(\))h(const)476 2695 y Fg(R)l(eturns)h(the)f(angle)g(of)f(the)i(ve)
l(ctor)g(in)e(r)l(adians.)275 2893 y Fk(\210)42 b Fp(double)27
b Fq(GetGradien)m(t)h Fp(\(\))h(const)476 3015 y Fg(R)l(eturns)g(the)f
(gr)l(adient)h(of)e(the)i(ve)l(ctor.)275 3213 y Fk(\210)42
b Fq(V)-8 b(ector2D)28 b(GetRecipro)s(cal)f Fp(\(\))h(const)476
3335 y Fg(R)l(eturns)h(the)f(opp)l(osite)h(ve)l(ctor.)275
3533 y Fk(\210)42 b Fq(V)-8 b(ector2D)28 b(GetNormalised)d
Fp(\(\))j(const)476 3656 y Fg(R)l(eturns)h(a)f(unit)f(ve)l(ctor)j(with)
d(the)i(same)f(angle)g(as)g(the)g(curr)l(ent)i(ve)l(ctor.)275
3853 y Fk(\210)42 b Fq(V)-8 b(ector2D)28 b(GetP)m(erp)s(endicular)g
Fp(\(\))g(const)476 3976 y Fg(R)l(eturns)h(the)f(p)l(erp)l(endicular)i
(to)e(the)g(ve)l(ctor/.)275 4173 y Fk(\210)42 b Fp(double)27
b Fq(dot)h Fp(\(const)f Fq(V)-8 b(ector2D)28 b Fp(&\))g(const)476
4296 y Fg(R)l(eturns)h(the)f(dot)h(pr)l(o)l(duct)g(of)e(the)i(ve)l
(ctor)g(with)f(other.)275 4494 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(Serialise)h Fp(\(std::ostream)g(&\))g(const)476
4616 y Fg(Writes)h(a)f Ff(V)-7 b(ector2D)28 b Fg(to)g(an)g(output)h
(str)l(e)l(am.)275 4814 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(Unserialise)h Fp(\(std::istream)g(&\))476 4936 y
Fg(R)l(e)l(ads)h(a)g Ff(V)-7 b(ector2D)28 b Fg(fr)l(om)f(an)h(input)g
(str)l(e)l(am.)150 5306 y Fj(Public)36 b(A)m(ttributes)275
5491 y Fk(\210)42 b Fp(double)27 b Fq(x)275 5597 y Fk(\210)42
b Fp(double)27 b Fq(y)p -358 5723 V -192 5823 a Fn(Generated)f(on)f
(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 205 213
205 212 bop 150 70 a Fq(10.70)30 b(BEAST::V)-8 b(ector2D)32
b(Class)f(Reference)2178 b(205)p 150 103 4034 4 v 150
333 a Fj(Related)37 b(F)-9 b(unctions)150 533 y Fp(\(Note)28
b(that)g(these)f(are)g(not)h(mem)n(b)r(er)f(functions.\))275
746 y Fk(\210)42 b Fp(std::ostream)26 b(&)h Fq(op)s(erator)p
Fo(<<)g Fp(\(std::ostream)g(&out,)g(const)h Fq(V)-8 b(ector2D)28
b Fp(&v\))476 871 y Fg(Output)g(op)l(er)l(ator)i(for)e
Ff(V)-7 b(ector2D)p Fg(.)275 1070 y Fk(\210)42 b Fp(std::istream)27
b(&)g Fq(op)s(erator)p Fo(>>)g Fp(\(std::istream)g(&in,)h
Fq(V)-8 b(ector2D)28 b Fp(&v\))476 1195 y Fg(Input)g(op)l(er)l(ator)i
(for)d Ff(V)-7 b(ector2D)p Fg(.)150 1566 y Fj(10.70.1)113
b(Detailed)36 b(Description)150 1766 y Fp(A)28 b(class)f(for)g
(represen)n(ting)f(t)n(w)n(o-dimensional)g(v)n(ectors)g(and)h(co)r
(ordinates.)150 1913 y(All)h(usual)f(op)r(erators)f(are)h(o)n(v)n
(erloaded)e(and)i(other)g(features)g(are)g(pro)n(vided.)150
2060 y(The)h(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f
(generated)h(from)g(the)h(follo)n(wing)e(\014le:)275
2273 y Fk(\210)42 b Fp(v)n(ector2d.h)p 150 5723 V 150
5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 206 214
206 213 bop -358 70 a Fq(206)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.71)136 b(BEAST::W)-11 b(all)45 b(Class)h(Reference)150
562 y Fp(This)28 b(is)f(a)g(handy)h(class)e(for)h(putting)i(the)e(most)
h(common)f(t)n(yp)r(e)h(of)f(obstacle)g(-)g(w)n(alls)g(-)g(in)n(to)h
(the)g(w)n(orld.)150 709 y Fi(#include)40 b Fo(<)p Fi(worldobject.h)p
Fo(>)150 855 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::W)-7
b(all:)1601 1716 y @beginspecial 35 @llx 35 @lly 151
@urx 173 @ury 747 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Wall__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 151 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 151 173
%%PageOrientation: Portrait
gsave
35 35 116 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node850
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 20 8 moveto
95 8 lineto
95 23 lineto
20 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 20 8 moveto
95 8 lineto
95 23 lineto
20 23 lineto
closepath
stroke
gsave 10 dict begin
57 11 moveto 65 -0.5 (BEAST::Wall) alignedtext
end grestore
end grestore

%	Node851
[ /Rect [ 0 61 114 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
115 60 lineto
115 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
57 63 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node851 -> Node850
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 51 moveto
57 42 57 31 57 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 50 moveto
57 60 lineto
60 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node852
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 8 112 moveto
107 112 lineto
107 127 lineto
8 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
57 115 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node852 -> Node851
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 103 moveto
57 94 57 83 57 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 102 moveto
57 112 lineto
60 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2041 a(Collab)r(oration)26 b(diagram)g(for)h(BEAST::W)
-7 b(all:)1601 2622 y @beginspecial 35 @llx 35 @lly 151
@urx 121 @ury 747 @rwi @setspecial
%%BeginDocument: classBEAST_1_1Wall__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 151 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 151 121
%%PageOrientation: Portrait
gsave
35 35 116 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node853
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 20 8 moveto
95 8 lineto
95 23 lineto
20 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 20 8 moveto
95 8 lineto
95 23 lineto
20 23 lineto
closepath
stroke
gsave 10 dict begin
57 11 moveto 65 -0.5 (BEAST::Wall) alignedtext
end grestore
end grestore

%	Node854
[ /Rect [ 0 61 114 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1WorldObject.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 0 60 moveto
115 60 lineto
115 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
57 63 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node854 -> Node853
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 51 moveto
57 42 57 31 57 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 50 moveto
57 60 lineto
60 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2983 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3167 y Fk(\210)42 b Fq(W)-8 b(all)26 b
Fp(\()p Fq(V)-8 b(ector2D)29 b Fp(p)r(os=)p Fq(V)-8 b(ector2D)p
Fp(\(\),)28 b(double)g(w=50.0,)d(double)j(h=50.0,)e(double)i(o=PI/2\))
476 3289 y Fg(Constructs)i(a)d(r)l(e)l(ctangular)j(gr)l(ey)f
Ff(W)-7 b(orldOb)5 b(ject)30 b Fg(with)d(the)i(sp)l(e)l(ci\014e)l(d)g
(pr)l(op)l(erties.)150 3658 y Fj(Static)36 b(Public)g(Mem)m(b)s(er)h(F)
-9 b(unctions)275 3843 y Fk(\210)42 b Fp(std::v)n(ector)p
Fo(<)26 b Fq(V)-8 b(ector2D)28 b Fo(>)f Fq(GetSides)g
Fp(\(double)h(w,)f(double)h(h\))476 3965 y Fg(R)l(eturns)h(a)f(ve)l
(ctor)h(of)e(p)l(oints)i(on)e(a)h(wal)t(l)f(using)h(width)f(and)h
(height.)150 4334 y Fj(10.71.1)113 b(Detailed)36 b(Description)150
4534 y Fp(This)28 b(is)f(a)g(handy)h(class)e(for)h(putting)i(the)e
(most)h(common)f(t)n(yp)r(e)h(of)f(obstacle)g(-)g(w)n(alls)g(-)g(in)n
(to)h(the)g(w)n(orld.)150 4812 y Fj(10.71.2)113 b(Constructor)36
b(&)i(Destructor)e(Do)s(cumen)m(tation)150 5013 y Fq(10.71.2.1)92
b(BEAST::W)-8 b(all::W)g(all)32 b(\(V)-8 b(ector2D)36
b Fe(p)-5 b(os)35 b Fq(=)g(V)-8 b(ector2D\(\),)36 b(double)e
Fe(w)h Fq(=)g(50.0,)611 5112 y(double)c Fe(h)h Fq(=)g(50.0,)e(double)h
Fe(o)h Fq(=)g(PI/2\))71 b Fi([inline])150 5313 y Fp(Constructs)27
b(a)g(rectangular)f(grey)g Fq(W)-8 b(orldOb)5 b(ject)28
b Fp(with)g(the)g(sp)r(eci\014ed)g(prop)r(erties.)142
5513 y Fq(P)m(arameters:)311 5613 y Fe(p)-5 b(os)43 b
Fp(The)27 b(x,y)h(lo)r(cation)f(of)g(the)h(cen)n(tre)f(of)h(the)g(w)n
(all.)p -358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 207 215
207 214 bop 150 70 a Fq(10.71)30 b(BEAST::W)-8 b(all)31
b(Class)g(Reference)2383 b(207)p 150 103 4034 4 v 311
333 a Fe(w)42 b Fp(The)27 b(width)i(of)e(the)h(w)n(all)311
465 y Fe(h)42 b Fp(The)28 b(heigh)n(t)f(of)h(the)g(w)n(all)311
598 y Fe(o)42 b Fp(The)28 b(orien)n(tation)e(of)h(the)h(w)n(all)f
(\(defaults)i(to)e(v)n(ertical)f(-)i(90)e(deg\).)150
828 y(The)i(do)r(cumen)n(tation)f(for)g(this)h(class)f(w)n(as)f
(generated)h(from)g(the)h(follo)n(wing)e(\014les:)275
1041 y Fk(\210)42 b Fp(w)n(orldob)5 b(ject.h)275 1149
y Fk(\210)42 b Fq(w)m(orldob)5 b(ject.cc)p 150 5723 V
150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 208 216
208 215 bop -358 70 a Fq(208)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(10.72)136 b(BEAST::W)-11 b(orld)44 b(Class)i(Reference)150
563 y Fp(This)28 b(is)h(where)f(it)h(all)f(happ)r(ens:)39
b Fq(W)-8 b(orld)28 b Fp(con)n(tains)f(p)r(oin)n(ters)h(to)g(ev)n(ery)g
(ob)5 b(ject)28 b(in)h(the)g(sim)n(ulation)f(en)n(viron-)150
663 y(men)n(t)g(and)f(allo)n(ws)g(those)g(ob)5 b(jects)27
b(to)g(in)n(teract)g(with)h(eac)n(h)f(other,)g(and)h(then)g(b)r(e)g
(displa)n(y)n(ed.)150 810 y Fi(#include)40 b Fo(<)p Fi(world.h)p
Fo(>)150 957 y Fp(Collab)r(oration)26 b(diagram)g(for)h(BEAST::W)-7
b(orld:)1095 2220 y @beginspecial 35 @llx 35 @lly 395
@urx 285 @ury 1962 @rwi @setspecial
%%BeginDocument: classBEAST_1_1World__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 395 285
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 395 285
%%PageOrientation: Portrait
gsave
35 35 360 250 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node871
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 267 123 moveto
350 123 lineto
350 138 lineto
267 138 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 267 123 moveto
350 123 lineto
350 138 lineto
267 138 lineto
closepath
stroke
gsave 10 dict begin
308 126 moveto 73 -0.5 (BEAST::World) alignedtext
end grestore
end grestore

%	Node872
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 10 225 moveto
152 225 lineto
152 240 lineto
10 240 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
81 228 moveto 132 -0.5 (BEAST::World::PointerInfo) alignedtext
end grestore
end grestore

%	Node872 -> Node871
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 156 224 moveto
199 213 216 218 248 188 curveto
263 173 250 157 267 146 curveto
272 143 277 141 281 139 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 157 221 moveto
147 225 lineto
157 226 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
210 222 moveto 31 -0.5 (mouse) alignedtext
end grestore
end grestore

%	Node882
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 16 174 moveto
146 174 lineto
146 189 lineto
16 189 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
81 177 moveto 120 -0.5 (BEAST::AnimatMonitor) alignedtext
end grestore
end grestore

%	Node882 -> Node871
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 153 173 moveto
153 173 154 173 154 173 curveto
197 165 208 165 248 150 curveto
257 146 258 143 266 140 curveto
267 140 269 139 270 139 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 154 170 moveto
144 174 lineto
154 175 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
210 172 moveto 39 -0.5 (monitor) alignedtext
end grestore
end grestore

%	Node884
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 33 123 moveto
130 123 lineto
130 138 lineto
33 138 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
81 126 moveto 87 -0.5 (BEAST::Collisions) alignedtext
end grestore
end grestore

%	Node884 -> Node871
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 139 131 moveto
178 131 231 131 266 131 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 140 129 moveto
130 131 lineto
140 134 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
210 134 moveto 43 -0.5 (collisions) alignedtext
end grestore
end grestore

%	Node885
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 28 61 moveto
135 61 lineto
135 76 lineto
28 76 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
81 64 moveto 97 -0.5 (vector< Animat * >) alignedtext
end grestore
end grestore

%	Node885 -> Node871
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 144 74 moveto
147 75 151 75 154 76 curveto
197 83 212 78 248 101 curveto
259 107 256 114 266 121 curveto
268 122 269 123 271 123 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 145 72 moveto
135 73 lineto
145 77 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
210 115 moveto 66 -0.5 (animatQueue) alignedtext
210 104 moveto 38 -0.5 (animats) alignedtext
end grestore
end grestore

%	Node886
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 9 10 moveto
154 10 lineto
154 25 lineto
9 25 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
81 13 moveto 135 -0.5 (BEAST::World::DisplayInfo) alignedtext
end grestore
end grestore

%	Node886 -> Node871
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 163 19 moveto
194 24 226 34 248 57 curveto
267 75 249 93 266 113 curveto
270 117 276 121 281 123 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 164 17 moveto
154 18 lineto
164 22 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
210 60 moveto 19 -0.5 (disp) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2591 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 2782 y Fk(\210)42 b Fq(W)-8 b(orld)27
b Fp(\(\))476 2910 y Fg(Constructor,)j(simply)d(c)l(on\014gur)l(es)i
(the)g(world's)f(monitor)g(and)g(c)l(ol)t(lisions)f(classes.)275
3113 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Init)i Fp(\(\))476
3241 y Fg(Cal)t(ls)f(Init)g(on)h(every)g Ff(Animat)g
Fg(and)g Ff(W)-7 b(orldOb)5 b(ject)30 b Fg(in)d(the)h
Ff(W)-7 b(orld)p Fg(.)275 3444 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(InitGL)i Fp(\(\))h(const)476 3572 y Fg(Sets)f(up)g(GL)g(with)g
(the)g(c)l(orr)l(e)l(ct)i(b)l(ackgr)l(ound)g(c)l(olour,)e(pr)l(oje)l
(ction)h(mo)l(de)f(and)g(blend)g(function.)275 3775 y
Fk(\210)42 b Fp(v)n(oid)26 b Fq(Add)i Fp(\()p Fq(Animat)f
Fh(\003)p Fp(r\))476 3903 y Fg(A)l(dds)34 b(an)h Ff(Animat)f
Fg(to)h(the)g(World's)f(animat)g(c)l(ontainer,)j(set's)e(the)f(A)n
(nimat's)g(world)h(to)f(this)h(one)f(and)476 3995 y(adds)28
b(a)g(p)l(ointer)g(to)h(the)f Ff(Animat)g Fg(to)g(the)g(monitor)g(obje)
l(ct.)275 4198 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Add)i
Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(r\))476
4326 y Fg(A)l(dds)j(a)g Ff(W)-7 b(orldOb)5 b(ject)32
b Fg(to)f(the)h(World's)e(worldobje)l(ct)i(c)l(ontainer)g(and)f(set's)g
(the)h(WorldObje)l(ct's)f(world)476 4417 y(to)d(this)g(one.)275
4620 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(AddCollision)g
Fp(\()p Fq(V)-8 b(ector2D)28 b Fp(p)n(v\))476 4748 y
Fg(A)l(dds)g(a)g(c)l(ol)t(lision)f(to)h(the)g(c)l(ol)t(lisions)f(obje)l
(ct.)275 4951 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(T)p Fo(>)g Fp(v)n(oid)g Fq(Add)h Fp(\(const)f(v)n(ector)p
Fo(<)f Fp(T)i Fh(\003)f Fo(>)g Fp(&v\))476 5079 y Fg(A)l(dds)h(a)g(ve)l
(ctor)h(c)l(ontaining)f(p)l(ointers)i(to)e(obje)l(cts)h(of)e(the)h(sp)l
(e)l(ci\014e)l(d)h(typ)l(e)g(to)f(the)g(world.)275 5282
y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(T)p Fo(>)g Fp(v)n(oid)g Fq(Remo)m(v)m(e)f Fp(\(v)n(ector)p
Fo(<)g Fp(T)i Fh(\003)f Fo(>)g Fp(&v\))476 5410 y Fg(R)l(emoves)h(al)t
(l)f(obje)l(cts)i(of)e(the)i(sp)l(e)l(ci\014e)l(d)g(typ)l(e)f(fr)l(om)g
(the)g Ff(W)-7 b(orld)29 b Fg(and)f(inserts)h(them)f(into)g(the)g(ve)l
(ctor.)275 5613 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)
27 b(T)p Fo(>)g Fp(v)n(oid)g Fq(Remo)m(v)m(e)f Fp(\(\))p
-358 5723 V -192 5823 a Fn(Generated)g(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 209 217
209 216 bop 150 70 a Fq(10.72)30 b(BEAST::W)-8 b(orld)31
b(Class)g(Reference)2316 b(209)p 150 103 4034 4 v 476
333 a Fg(R)l(emoves)28 b(al)t(l)f(obje)l(cts)i(of)e(the)i(sp)l(e)l
(ci\014e)l(d)g(typ)l(e)f(fr)l(om)g(the)g Ff(W)-7 b(orld)p
Fg(.)275 533 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(Displa)m(y)i
Fp(\(\))476 659 y Fg(Cal)t(ls)33 b(the)h(Display)f(metho)l(d)i(of)e
(every)i(obje)l(ct)g(in)e(the)h(world,)h(dep)l(ending)g(on)e(this)h
(World's)g(DisplayInfo)476 750 y(struct.)275 951 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(Up)s(date)j Fp(\(\))476 1076 y Fg(Cal)t(le)l(d)f
(every)i(fr)l(ame)e(and)h(r)l(esp)l(onsible)h(for)e(c)l(al)t(ling)g(Up)
l(date)i(on)f(every)g Ff(W)-7 b(orldOb)5 b(ject)31 b
Fg(and)e Ff(Animat)f Fg(in)476 1168 y(the)g Ff(W)-7 b(orld)p
Fg(.)275 1368 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(CleanUp)i
Fp(\(\))476 1494 y Fg(Cle)l(ars)g(al)t(l)f(c)l(ontainers)i(in)e(this)h
Ff(W)-7 b(orld)p Fg(.)275 1694 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(OnMouseLDo)m(wn)h Fp(\(in)n(t)i(x,)e(in)n(t)h(y\))275
1803 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(OnMouseRDo)m(wn)h
Fp(\(in)n(t)h(x,)f(in)n(t)h(y\))275 1912 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(OnMouseLUp)i Fp(\(in)n(t)g(x,)f(in)n(t)h(y\))275
2022 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(OnMouseR)m(Up)h
Fp(\(in)n(t)h(x,)g(in)n(t)g(y\))275 2131 y Fk(\210)42
b Fp(v)n(oid)26 b Fq(OnMouseMo)m(v)m(e)h Fp(\(in)n(t)h(x,)g(in)n(t)f
(y\))275 2240 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(OnSelectNext)i
Fp(\(\))275 2349 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(OnSelectPrevious)h
Fp(\(\))275 2458 y Fk(\210)42 b Fq(V)-8 b(ector2D)28
b(Cen)m(tre)g Fp(\(\))476 2584 y Fg(R)l(eturns)h(the)f(c)l(entr)l(e)i
(c)l(o)l(or)l(dinates.)275 2784 y Fk(\210)42 b Fq(V)-8
b(ector2D)28 b(RandomLo)s(cation)e Fp(\(\))i(const)476
2910 y Fg(R)l(eturns)h(a)f(r)l(andom)g(c)l(o)l(or)l(dinate.)275
3110 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetWidth)h Fp(\(double)h(w\))275
3219 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetHeigh)m(t)h
Fp(\(double)h(h\))275 3329 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetWindo)m(w)h Fp(\(in)n(t)i(w,)e(in)n(t)h(h\))275
3438 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(T)-8 b(oggle)27
b Fp(\()p Fq(W)-8 b(orldDispla)m(yT)m(yp)s(e)28 b Fp(t\))275
3547 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetColour)h Fp(\(const)h
(\015oat)f(c[3]\))275 3656 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetColour)h Fp(\(\015oat)h(r,)f(\015oat)g(g,)g(\015oat)g(b\))275
3765 y Fk(\210)42 b Fp(double)27 b Fq(GetWidth)g Fp(\(\))h(const)476
3891 y Fg(R)l(eturns)h(the)f(curr)l(ent)i(width)e(of)f(the)h(world.)275
4091 y Fk(\210)42 b Fp(double)27 b Fq(GetHeigh)m(t)g
Fp(\(\))h(const)476 4217 y Fg(R)l(eturns)h(the)f(curr)l(ent)i(height)e
(of)f(the)i(world.)275 4417 y Fk(\210)42 b Fp(in)n(t)27
b Fq(GetWinWidth)g Fp(\(\))h(const)476 4543 y Fg(R)l(eturns)h(the)f
(curr)l(ent)i(width)e(of)f(the)h(world.)275 4743 y Fk(\210)42
b Fp(in)n(t)27 b Fq(GetWinHeigh)m(t)g Fp(\(\))h(const)476
4869 y Fg(R)l(eturns)h(the)f(curr)l(ent)i(height)e(of)f(the)i(world.)
275 5070 y Fk(\210)42 b Fp(in)n(t)27 b Fq(GetDispCon\014g)g
Fp(\(\))h(const)476 5195 y Fg(R)l(eturns)h(the)f(curr)l(ent)i(display)e
(c)l(on\014gur)l(ation.)275 5396 y Fk(\210)42 b Fp(b)r(o)r(ol)27
b Fq(IsUp)s(dating)h Fp(\(\))g(const)476 5522 y Fg(R)l(eturns)h(true)g
(if)d(the)j Ff(W)-7 b(orld)28 b Fg(is)g(curr)l(ently)h(p)l(erforming)f
(an)g(up)l(date.)p 150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 210 218
210 217 bop -358 70 a Fq(210)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 275
333 a Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(T)p Fo(>)g Fp(v)n(oid)g Fq(Get)h Fp(\(v)n(ector)p Fo(<)e
Fp(T)h Fh(\003)h Fo(>)f Fp(&v\))476 451 y Fg(Finds)g(every)i(obje)l(ct)
g(in)e(the)h Ff(W)-7 b(orld)29 b Fg(of)e(the)i(sp)l(e)l(ci\014e)l(d)g
(typ)l(e)f(and)g(adds)h(it)e(to)h(a)g(ve)l(ctor.)275
645 y Fk(\210)42 b Fq(W)-8 b(orldOb)5 b(ject)27 b Fh(\003)g
Fq(GetSelected)g Fp(\(\))i(const)275 747 y Fk(\210)42
b Fp(AnimatCon)n(tainer::const)p 1232 747 25 4 v 28 w(iterator)27
b Fq(AnimatsBegin)e Fp(\(\))j(const)476 865 y Fg(Pr)l(ovides)g(dir)l(e)
l(ct)h(ac)l(c)l(ess)h(to)e(the)g(start)h(of)f(the)g(animat)g(c)l
(ontainer.)275 1059 y Fk(\210)42 b Fp(AnimatCon)n(tainer::const)p
1232 1059 V 28 w(iterator)27 b Fq(AnimatsEnd)f Fp(\(\))i(const)476
1178 y Fg(Pr)l(ovides)g(dir)l(e)l(ct)h(ac)l(c)l(ess)h(to)e(the)g(end)g
(of)f(the)i(animat)e(c)l(ontainer.)275 1371 y Fk(\210)42
b Fp(W)-7 b(orldOb)5 b(jectCon)n(tainer::const)p 1427
1371 V 27 w(iterator)26 b Fq(W)-8 b(orldOb)5 b(jectsBegin)27
b Fp(\(\))h(const)476 1490 y Fg(Pr)l(ovides)g(dir)l(e)l(ct)h(ac)l(c)l
(ess)h(to)e(the)g(start)h(of)f(the)g(worldobje)l(ct)h(c)l(ontainer.)275
1683 y Fk(\210)42 b Fp(W)-7 b(orldOb)5 b(jectCon)n(tainer::const)p
1427 1683 V 27 w(iterator)26 b Fq(W)-8 b(orldOb)5 b(jectsEnd)28
b Fp(\(\))g(const)476 1802 y Fg(Pr)l(ovides)g(dir)l(e)l(ct)h(ac)l(c)l
(ess)h(to)e(the)g(end)g(of)f(the)i(worldobje)l(ct)g(c)l(ontainer.)150
2168 y Fj(10.72.1)113 b(Detailed)36 b(Description)150
2368 y Fp(This)28 b(is)h(where)f(it)h(all)f(happ)r(ens:)39
b Fq(W)-8 b(orld)28 b Fp(con)n(tains)f(p)r(oin)n(ters)h(to)g(ev)n(ery)g
(ob)5 b(ject)28 b(in)h(the)g(sim)n(ulation)f(en)n(viron-)150
2468 y(men)n(t)g(and)f(allo)n(ws)g(those)g(ob)5 b(jects)27
b(to)g(in)n(teract)g(with)h(eac)n(h)f(other,)g(and)h(then)g(b)r(e)g
(displa)n(y)n(ed.)150 2742 y Fj(10.72.2)113 b(Mem)m(b)s(er)37
b(F)-9 b(unction)37 b(Do)s(cumen)m(tation)150 2943 y
Fq(10.72.2.1)92 b(template)p Fo(<)p Fq(t)m(yp)s(ename)30
b(T)p Fo(>)i Fq(v)m(oid)h(BEAST::W)-8 b(orld::Add)30
b(\(const)j(v)m(ector)p Fo(<)g Fq(T)g Fh(\003)f Fo(>)611
3042 y Fq(&)h Fe(v)p Fq(\))71 b Fi([inline])150 3243
y Fp(Adds)28 b(a)f(v)n(ector)f(con)n(taining)h(p)r(oin)n(ters)g(to)g
(ob)5 b(jects)28 b(of)f(the)h(sp)r(eci\014ed)g(t)n(yp)r(e)g(to)f(the)h
(w)n(orld.)150 3390 y(The)g(v)n(ector)e(ma)n(y)h(b)r(e)h(a)f(t)n(yp)r
(e)h(deriv)n(ed)f(from)g(v)n(ector,)f(e.g.)37 b Fq(P)m(opulation)27
b Fp(or)g Fq(Group)p Fp(.)142 3561 y Fq(P)m(arameters:)311
3661 y Fe(T)42 b Fp(The)28 b(t)n(yp)r(e)f(of)h(ob)5 b(jects)27
b(to)h(b)r(e)g(added,)f(m)n(ust)h(b)r(e)g(deriv)n(ed)f(from)g
Fq(Animat)f Fp(or)h Fq(W)-8 b(orldOb)5 b(ject)p Fp(.)311
3782 y Fe(v)42 b Fp(A)28 b(reference)f(to)g(an)h(input)g(v)n(ector)e
(of)i(p)r(oin)n(ters)f(to)g(the)h(sp)r(eci\014ed)g(t)n(yp)r(e.)150
4083 y Fq(10.72.2.2)92 b(v)m(oid)32 b(BEAST::W)-8 b(orld::Add)30
b(\(W)-8 b(orldOb)5 b(ject)32 b Fh(\003)f Fe(r)p Fq(\))150
4284 y Fp(Adds)25 b(a)g Fq(W)-8 b(orldOb)5 b(ject)25
b Fp(to)f(the)i(W)-7 b(orld's)24 b(w)n(orldob)5 b(ject)24
b(con)n(tainer)f(and)i(set's)g(the)g(W)-7 b(orldOb)5
b(ject's)24 b(w)n(orld)g(to)150 4383 y(this)k(one.)142
4549 y Fq(P)m(arameters:)311 4649 y Fe(r)42 b Fp(A)28
b(p)r(oin)n(ter)f(to)g(the)h Fq(W)-8 b(orldOb)5 b(ject)28
b Fp(to)f(b)r(e)h(added.)150 4961 y Fq(10.72.2.3)92 b(v)m(oid)32
b(BEAST::W)-8 b(orld::Add)30 b(\(Animat)h Fh(\003)g Fe(r)p
Fq(\))150 5161 y Fp(Adds)c(an)e Fq(Animat)h Fp(to)g(the)g(W)-7
b(orld's)26 b(animat)g(con)n(tainer,)f(set's)h(the)h(Animat's)f(w)n
(orld)f(to)h(this)h(one)e(and)h(adds)150 5261 y(a)h(p)r(oin)n(ter)g(to)
h(the)g Fq(Animat)e Fp(to)i(the)g(monitor)f(ob)5 b(ject.)142
5443 y Fq(P)m(arameters:)311 5543 y Fe(r)42 b Fp(A)28
b(p)r(oin)n(ter)f(to)g(the)h Fq(Animat)f Fp(to)g(b)r(e)h(added.)p
-358 5723 4034 4 v -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 211 219
211 218 bop 150 70 a Fq(10.72)30 b(BEAST::W)-8 b(orld)31
b(Class)g(Reference)2316 b(211)p 150 103 4034 4 v 150
333 a(10.72.2.4)92 b(AnimatCon)m(tainer::const)p 1618
333 29 4 v 33 w(iterator)33 b(BEAST::W)-8 b(orld::AnimatsBegin)27
b(\(\))33 b(const)611 432 y Fi([inline])150 637 y Fp(Pro)n(vides)26
b(direct)h(access)f(to)i(the)g(start)f(of)g(the)h(animat)g(con)n
(tainer.)142 849 y Fq(W)-8 b(arning:)311 949 y Fp(Should)28
b(not)g(b)r(e)g(used)f(when)h(IsUp)r(dating)g(is)f(true.)150
1334 y Fq(10.72.2.5)92 b(AnimatCon)m(tainer::const)p
1618 1334 V 33 w(iterator)34 b(BEAST::W)-8 b(orld::AnimatsEnd)29
b(\(\))34 b(const)611 1433 y Fi([inline])150 1638 y Fp(Pro)n(vides)26
b(direct)h(access)f(to)i(the)g(end)g(of)f(the)h(animat)g(con)n(tainer.)
142 1850 y Fq(W)-8 b(arning:)311 1950 y Fp(Should)28
b(not)g(b)r(e)g(used)f(when)h(IsUp)r(dating)g(is)f(true.)150
2335 y Fq(10.72.2.6)92 b(v)m(oid)32 b(BEAST::W)-8 b(orld::Displa)m(y)30
b(\(\))150 2540 y Fp(Calls)35 b(the)i(Displa)n(y)e(metho)r(d)i(of)f(ev)
n(ery)f(ob)5 b(ject)36 b(in)g(the)g(w)n(orld,)i(dep)r(ending)e(on)g
(this)g(W)-7 b(orld's)36 b(Displa)n(yInfo)150 2639 y(struct.)142
2851 y Fq(See)31 b(also:)311 2951 y Fp(Displa)n(yInfo)311
3051 y Fq(W)-8 b(orldDispla)m(yT)m(yp)s(e)150 3435 y(10.72.2.7)92
b(template)p Fo(<)p Fq(t)m(yp)s(ename)30 b(T)p Fo(>)k
Fq(v)m(oid)f(BEAST::W)-8 b(orld::Get)30 b(\(v)m(ector)p
Fo(<)k Fq(T)g Fh(\003)e Fo(>)h Fq(&)g Fe(v)p Fq(\))611
3535 y Fi([inline])150 3740 y Fp(Finds)28 b(ev)n(ery)e(ob)5
b(ject)28 b(in)f(the)h Fq(W)-8 b(orld)27 b Fp(of)h(the)g(sp)r
(eci\014ed)g(t)n(yp)r(e)g(and)f(adds)g(it)h(to)g(a)f(v)n(ector.)142
3968 y Fq(P)m(arameters:)311 4067 y Fe(T)42 b Fp(The)28
b(t)n(yp)r(e)f(of)h(ob)5 b(jects)27 b(to)h(get.)311 4211
y Fe(v)42 b Fp(A)28 b(reference)f(to)g(a)g(v)n(ector)g(of)g(p)r(oin)n
(ters)g(to)h(ob)5 b(jects)27 b(of)g(the)h(sp)r(eci\014ed)g(t)n(yp)r(e.)
150 4595 y Fq(10.72.2.8)92 b(v)m(oid)32 b(BEAST::W)-8
b(orld::Init)30 b(\(\))150 4800 y Fp(Calls)d(Init)h(on)f(ev)n(ery)g
Fq(Animat)f Fp(and)i Fq(W)-8 b(orldOb)5 b(ject)27 b Fp(in)h(the)g
Fq(W)-8 b(orld)p Fp(.)150 4947 y(Usually)31 b(called)f(at)h(the)h
(start)e(of)i(a)e(sim)n(ulation,)i(to)f(allo)n(w)f(ob)5
b(jects)30 b(to)h(b)r(e)h(set)f(up)g(correctly)f(\(e.g.)47
b(de\014ning)150 5047 y(displa)n(y)27 b(lists)i(and)f(p)r(erforming)f
(con\014guration)g(whic)n(h)h(can't)g(b)r(e)h(done)f(til)g(an)g(ob)5
b(ject)28 b(kno)n(ws)f(whic)n(h)i Fq(W)-8 b(orld)150
5146 y Fp(it's)28 b(in.)142 5337 y Fq(See)j(also:)311
5436 y(W)-8 b(orldOb)5 b(ject::Init)311 5536 y(Animat::Init)p
150 5723 4034 4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 212 220
212 219 bop -358 70 a Fq(212)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a(10.72.2.9)92 b(template)p Fo(<)p Fq(t)m(yp)s(ename)29
b(T)p Fo(>)j Fq(v)m(oid)g(BEAST::W)-8 b(orld::Remo)m(v)m(e)28
b(\(\))71 b Fi([inline])150 533 y Fp(Remo)n(v)n(es)26
b(all)i(ob)5 b(jects)27 b(of)g(the)h(sp)r(eci\014ed)g(t)n(yp)r(e)g
(from)f(the)h Fq(W)-8 b(orld)p Fp(.)142 730 y Fq(W)g(arning:)311
830 y Fp(Will)29 b(not)e(w)n(ork)f(during)i Fq(W)-8 b(orld::Up)s(date)
26 b Fp(-)h(only)h(use)f(b)r(et)n(w)n(een)h(assessmen)n(ts.)150
1158 y Fq(10.72.2.10)92 b(template)p Fo(<)p Fq(t)m(yp)s(ename)28
b(T)p Fo(>)j Fq(v)m(oid)g(BEAST::W)-8 b(orld::Remo)m(v)m(e)27
b(\(v)m(ector)p Fo(<)32 b Fq(T)f Fh(\003)f Fo(>)h Fq(&)659
1258 y Fe(v)p Fq(\))71 b Fi([inline])150 1458 y Fp(Remo)n(v)n(es)26
b(all)i(ob)5 b(jects)27 b(of)g(the)h(sp)r(eci\014ed)g(t)n(yp)r(e)g
(from)f(the)h Fq(W)-8 b(orld)27 b Fp(and)h(inserts)f(them)h(in)n(to)f
(the)h(v)n(ector.)142 1656 y Fq(W)-8 b(arning:)311 1755
y Fp(Will)29 b(not)e(w)n(ork)f(during)i Fq(W)-8 b(orld::Up)s(date)26
b Fp(-)h(only)h(use)f(b)r(et)n(w)n(een)h(assessmen)n(ts.)142
1952 y Fq(P)m(arameters:)311 2051 y Fe(T)42 b Fp(The)28
b(t)n(yp)r(e)f(of)h(ob)5 b(jects)27 b(to)h(remo)n(v)n(e.)311
2178 y Fe(v)42 b Fp(A)28 b(reference)f(to)g(a)g(v)n(ector)g(of)g(p)r
(oin)n(ters)g(to)h(the)g(sp)r(eci\014ed)g(t)n(yp)r(e.)150
2507 y Fq(10.72.2.11)92 b(v)m(oid)32 b(BEAST::W)-8 b(orld::Up)s(date)30
b(\(\))150 2707 y Fp(Called)i(ev)n(ery)g(frame)g(and)g(resp)r(onsible)g
(for)g(calling)g(Up)r(date)h(on)f(ev)n(ery)f Fq(W)-8
b(orldOb)5 b(ject)33 b Fp(and)f Fq(Animat)g Fp(in)150
2807 y(the)c Fq(W)-8 b(orld)p Fp(.)142 2988 y Fq(See)31
b(also:)311 3087 y Fp(W)-7 b(orldOb)5 b(ject::Up)r(date)311
3187 y Fq(Animat::Up)s(date)150 3515 y(10.72.2.12)92
b(W)-8 b(orldOb)5 b(jectCon)m(tainer::const)p 1890 3515
29 4 v 34 w(iterator)33 b(BEAST::W)-8 b(orld::W)g(orldOb)5
b(jects-)659 3615 y(Begin)31 b(\(\))h(const)71 b Fi([inline])150
3816 y Fp(Pro)n(vides)26 b(direct)h(access)f(to)i(the)g(start)f(of)g
(the)h(w)n(orldob)5 b(ject)27 b(con)n(tainer.)142 4013
y Fq(W)-8 b(arning:)311 4112 y Fp(Should)28 b(not)g(b)r(e)g(used)f
(when)h(IsUp)r(dating)g(is)f(true.)150 4441 y Fq(10.72.2.13)92
b(W)-8 b(orldOb)5 b(jectCon)m(tainer::const)p 1890 4441
V 34 w(iterator)33 b(BEAST::W)-8 b(orld::W)g(orldOb)5
b(jects-)659 4540 y(End)32 b(\(\))g(const)71 b Fi([inline])150
4741 y Fp(Pro)n(vides)26 b(direct)h(access)f(to)i(the)g(end)g(of)f(the)
h(w)n(orldob)5 b(ject)26 b(con)n(tainer.)142 4938 y Fq(W)-8
b(arning:)311 5038 y Fp(Should)28 b(not)g(b)r(e)g(used)f(when)h(IsUp)r
(dating)g(is)f(true.)150 5252 y(The)h(do)r(cumen)n(tation)f(for)g(this)
h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)n(wing)e(\014les:)275
5454 y Fk(\210)42 b Fq(w)m(orld.h)275 5559 y Fk(\210)g
Fp(w)n(orld.cc)p -358 5723 4034 4 v -192 5823 a Fn(Generated)26
b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 213 221
213 220 bop 150 70 a Fq(10.73)30 b(BEAST::W)-8 b(orldOb)5
b(ject)31 b(Class)g(Reference)2034 b(213)p 150 103 4034
4 v 150 333 a Fl(10.73)136 b(BEAST::W)-11 b(orldOb)7
b(ject)45 b(Class)h(Reference)150 563 y Fp(The)34 b(base)f(class)g(for)
h(ev)n(erything)e(that)i(mak)n(es)f(a)h(di\013erence)g(in)g(the)g(w)n
(orld,)g(including)h(Animats,)g(Sensors)150 663 y(and)27
b(all)h(t)n(yp)r(es)f(of)h(scenery)e(and)i(in)n(teractiv)n(e)e(ob)5
b(ject.)150 810 y Fi(#include)40 b Fo(<)p Fi(worldobject.h)p
Fo(>)150 957 y Fp(Inheritance)27 b(diagram)f(for)h(BEAST::W)-7
b(orldOb)5 b(ject:)991 1705 y @beginspecial 35 @llx 35
@lly 445 @urx 173 @ury 2211 @rwi @setspecial
%%BeginDocument: classBEAST_1_1WorldObject__inherit__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 445 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 445 173
%%PageOrientation: Portrait
gsave
35 35 410 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node887
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 161 60 moveto
276 60 lineto
276 75 lineto
161 75 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 161 60 moveto
276 60 lineto
276 75 lineto
161 75 lineto
closepath
stroke
gsave 10 dict begin
218 63 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node889
[ /Rect [ 0 9 88 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Animat.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 0 8 moveto
89 8 lineto
89 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
44 11 moveto 79 -0.5 (BEAST::Animat) alignedtext
end grestore
end grestore

%	Node887 -> Node889
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 184 57 moveto
150 47 99 32 69 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 183 59 moveto
193 60 lineto
184 54 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node895
[ /Rect [ 106 9 216 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Distribution.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 106 8 moveto
216 8 lineto
216 23 lineto
106 23 lineto
closepath
stroke
gsave 10 dict begin
161 11 moveto 100 -0.5 (BEAST::Distribution) alignedtext
end grestore
end grestore

%	Node887 -> Node895
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 203 54 moveto
192 44 178 32 170 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 201 55 moveto
210 60 lineto
204 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node896
[ /Rect [ 234 9 316 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Sensor.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 234 8 moveto
317 8 lineto
317 23 lineto
234 23 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
275 11 moveto 73 -0.5 (BEAST::Sensor) alignedtext
end grestore
end grestore

%	Node887 -> Node896
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 233 54 moveto
244 44 258 32 266 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 232 52 moveto
226 60 lineto
235 55 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node901
[ /Rect [ 334 9 408 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Wall.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 334 8 moveto
409 8 lineto
409 23 lineto
334 23 lineto
closepath
stroke
gsave 10 dict begin
371 11 moveto 65 -0.5 (BEAST::Wall) alignedtext
end grestore
end grestore

%	Node887 -> Node901
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 249 57 moveto
279 47 323 32 349 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 249 54 moveto
240 60 lineto
250 59 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node888
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 169 112 moveto
268 112 lineto
268 127 lineto
169 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
218 115 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node888 -> Node887
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 218 103 moveto
218 94 218 83 218 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 216 102 moveto
218 112 lineto
221 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2038 a(Collab)r(oration)26 b(diagram)g(for)h(BEAST::W)
-7 b(orldOb)5 b(ject:)169 3097 y @beginspecial 35 @llx
35 @lly 1065 @urx 310 @ury 4184 @rwi @setspecial
%%BeginDocument: classBEAST_1_1WorldObject__coll__graph.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 1065 310
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 1065 310
%%PageOrientation: Portrait
gsave
35 35 1030 275 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node902
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 491 140 moveto
606 140 lineto
606 155 lineto
491 155 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 491 140 moveto
606 140 lineto
606 155 lineto
491 155 lineto
closepath
stroke
gsave 10 dict begin
548 143 moveto 105 -0.5 (BEAST::WorldObject) alignedtext
end grestore
end grestore

%	Node917
[ /Rect [ 706 141 1020 155 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1property.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 706 140 moveto
1020 140 lineto
1020 155 lineto
706 155 lineto
closepath
stroke
gsave 10 dict begin
863 143 moveto 304 -0.5 (BEAST::property< WorldObject, std::ostream, std::ostream & >) alignedtext
end grestore
end grestore

%	Node902 -> Node917
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 616 156 moveto
619 156 621 156 624 156 curveto
653 157 660 156 688 156 curveto
697 155 698 155 706 155 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 616 154 moveto
606 155 lineto
616 158 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
656 181 moveto 21 -0.5 (_Set) alignedtext
656 170 moveto 19 -0.5 (that) alignedtext
656 159 moveto 24 -0.5 (_Get) alignedtext
end grestore
end grestore

%	Node903
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 306 118 moveto
405 118 lineto
405 133 lineto
306 133 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
355 121 moveto 89 -0.5 (BEAST::Drawable) alignedtext
end grestore
end grestore

%	Node903 -> Node902
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 415 130 moveto
427 130 440 131 452 133 curveto
469 134 474 136 490 139 curveto
493 139 496 140 500 140 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 415 128 moveto
405 129 lineto
415 132 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node905
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 36 139 moveto
145 139 lineto
145 154 lineto
36 154 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
90 142 moveto 99 -0.5 (vector< Vector2D >) alignedtext
end grestore
end grestore

%	Node905 -> Node902
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 154 152 moveto
160 153 166 153 172 154 curveto
181 154 182 155 190 156 curveto
296 161 420 156 490 152 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 155 150 moveto
145 151 lineto
155 155 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
355 160 moveto 69 -0.5 (absoluteEdges) alignedtext
end grestore
end grestore

%	Node905 -> Node903
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 153 141 moveto
185 139 223 136 258 133 curveto
273 132 290 130 305 129 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 155 138 moveto
145 142 lineto
155 143 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
215 140 moveto 26 -0.5 (edges) alignedtext
end grestore
end grestore

%	Node908
[ /Rect [ 41 229 139 243 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($classBEAST_1_1Vector2D.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 41 228 moveto
140 228 lineto
140 243 lineto
41 243 lineto
closepath
stroke
gsave 10 dict begin
90 231 moveto 89 -0.5 (BEAST::Vector2D) alignedtext
end grestore
end grestore

%	Node908 -> Node902
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 149 237 moveto
177 238 210 237 240 232 curveto
337 218 361 209 452 176 curveto
470 169 473 163 490 158 curveto
493 157 496 156 499 156 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 150 235 moveto
140 237 lineto
150 240 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
355 232 moveto 184 -0.5 (VECTOR2D_FAKE_REFERENCE) alignedtext
end grestore
end grestore

%	Node908 -> Node903
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 149 234 moveto
157 233 165 231 172 227 curveto
197 215 235 154 258 141 curveto
266 136 286 132 305 130 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 149 231 moveto
140 236 lineto
150 236 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
215 216 moveto 38 -0.5 (location) alignedtext
end grestore
end grestore

%	Node915
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 8 33 moveto
172 33 lineto
172 48 lineto
8 48 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
90 36 moveto 154 -0.5 (BEAST::auto_property< bool >) alignedtext
end grestore
end grestore

%	Node915 -> Node902
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 181 33 moveto
274 27 409 24 452 51 curveto
485 72 461 105 490 131 curveto
495 135 501 138 507 140 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 182 30 moveto
172 34 lineto
182 35 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
355 98 moveto 25 -0.5 (Dead) alignedtext
355 87 moveto 60 -0.5 (InitRandom) alignedtext
355 76 moveto 23 -0.5 (Solid) alignedtext
355 65 moveto 48 -0.5 (Moveable) alignedtext
355 54 moveto 47 -0.5 (Selectable) alignedtext
end grestore
end grestore

%	Node915 -> Node903
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 176 51 moveto
193 63 256 115 258 117 curveto
273 123 290 126 305 127 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 181 52 moveto
172 48 lineto
179 56 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
215 113 moveto 40 -0.5 (Circular) alignedtext
215 102 moveto 33 -0.5 (Visible) alignedtext
end grestore
end grestore

%	Node917 -> Node902
gsave 10 dict begin
dashed
0.776 0.753 0.804 edgecolor
newpath 596 140 moveto
607 139 618 137 624 137 curveto
653 134 660 134 688 137 curveto
695 137 697 138 701 139 curveto
stroke
gsave 10 dict begin
solid
0.776 0.753 0.804 edgecolor
newpath 701 141 moveto
711 140 lineto
701 137 lineto
closepath
fill
0.776 0.753 0.804 edgecolor
end grestore
gsave 10 dict begin
0.000 0.000 0.000 edgecolor
656 140 moveto 54 -0.5 (LogStream) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3467 a Fj(Public)36 b(Mem)m(b)s(er)h(F)-9
b(unctions)275 3659 y Fk(\210)42 b Fq(W)-8 b(orldOb)5
b(ject)93 b Fp(\(const)g Fq(V)-8 b(ector2D)94 b Fp(&l=)p
Fq(V)-8 b(ector2D)p Fp(\(0,)110 b(0\),)g(double)93 b(o=0.0,)108
b(double)358 3759 y(d=)p Fq(DRA)-11 b(W)g(ABLE)p 1029
3759 29 4 v 34 w(RADIUS)p Fp(,)29 b(b)r(o)r(ol)e(so=false\))275
3870 y Fk(\210)42 b Fq(W)-8 b(orldOb)5 b(ject)26 b Fp(\(const)h
Fq(V)-8 b(ector2D)27 b Fp(&l,)f(double)h(o,)f(std::v)n(ector)p
Fo(<)g Fq(V)-8 b(ector2D)27 b Fo(>)f Fp(e,)h(b)r(o)r(ol)f(so=false\))
275 3982 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Init)i
Fp(\(\))476 4110 y Fg(Initialises)f Ff(W)-7 b(orldOb)5
b(ject)31 b Fg(by)d(c)l(alculating)i(e)l(dges)f(if)f(r)l(e)l(quir)l(e)l
(d,)h(and)g(setting)h(a)e(r)l(andom)i(lo)l(c)l(ation)f(if)e(init-)476
4201 y(R)l(andom)h(is)f(set.)275 4404 y Fk(\210)42 b
Fp(virtual)27 b(v)n(oid)f Fq(Up)s(date)j Fp(\(\))275
4516 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(In)m(teract)k
Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(\))476
4644 y Fg(Cal)t(ls)f(the)h(one-way)h(inter)l(act)g(metho)l(d)g(of)e
(this)h(and)g(another)h Ff(W)-7 b(orldOb)5 b(ject)p Fg(.)275
4847 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(UniIn)m(teract)k
Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(\))275
4959 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(OnCollision)f
Fp(\()p Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(r\))275
5070 y Fk(\210)42 b Fp(virtual)27 b(b)r(o)r(ol)g Fq(IsInside)g
Fp(\(const)g Fq(V)-8 b(ector2D)29 b Fp(&v)n(ec\))d(const)476
5199 y Fg(R)l(eturns)j(true)g(if)d(the)j(sp)l(e)l(ci\014e)l(d)f(p)l
(oint)h(is)e(inside)g(this)h(obje)l(ct.)275 5402 y Fk(\210)42
b Fq(V)-8 b(ector2D)28 b(GetNearestP)m(oin)m(t)g Fp(\(const)f
Fq(W)-8 b(orldOb)5 b(ject)28 b Fh(\003)p Fp(i\))275 5513
y Fk(\210)42 b Fq(V)-8 b(ector2D)29 b(GetNearestP)m(oin)m(t)f
Fp(\(const)h Fq(V)-8 b(ector2D)29 b Fp(&,)f Fq(V)-8 b(ector2D)29
b Fp(&r=VECTOR2D)p 3366 5513 25 4 v 28 w(F)-9 b(AKE)p
3623 5513 V 29 w(-)358 5613 y(REFERENCE\))26 b(const)p
150 5723 4034 4 v 150 5823 a Fn(Generated)g(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 214 222
214 221 bop -358 70 a Fq(214)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 476
333 a Fg(R)l(eturns)g(the)g(ne)l(ar)l(est)h(p)l(oint)f(on)f(this)g
(obje)l(ct)h(to)g(the)f(ar)l(gument,)i(and)e(also)h(r)l(eturns)h(the)f
(c)l(ol)t(lision)e(normal)476 424 y(by)f(r)l(efer)l(enc)l(e.)275
641 y Fk(\210)42 b Fp(b)r(o)r(ol)101 b Fq(In)m(tersects)i
Fp(\(const)f Fq(V)-8 b(ector2D)102 b Fp(&l1,)120 b(const)101
b Fq(V)-8 b(ector2D)103 b Fp(&l2,)119 b Fq(V)-8 b(ector2D)358
741 y Fp(&r=VECTOR2D)p 996 741 25 4 v 27 w(F)f(AKE)p
1252 741 V 30 w(REFERENCE\))26 b(const)476 883 y Fg(R)l(eturns)31
b(true)g(if)e(the)h(line)f(de\014ne)l(d)i(by)f(the)h(two)f(inputs)h
(interse)l(cts)h(with)e(this)g(obje)l(ct)h(at)f(some)g(p)l(oint,)g(and)
476 975 y(c)l(an)e(also)g(r)l(eturn)h(the)f(interse)l(ction)i(by)e(r)l
(efer)l(enc)l(e.)275 1192 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(OnClic)m(k)i Fp(\(\))275 1318 y Fk(\210)42
b Fp(virtual)27 b(v)n(oid)f Fq(OnSelect)i Fp(\(\))275
1443 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(IsSolid)f Fp(\(\))j(const)275
1569 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(IsDead)h Fp(\(\))g(const)275
1695 y Fk(\210)42 b Fp(b)r(o)r(ol)27 b Fq(IsInitRandom)f
Fp(\(\))i(const)275 1821 y Fk(\210)42 b Fp(b)r(o)r(ol)27
b Fq(IsMo)m(v)m(eable)h Fp(\(\))g(const)275 1947 y Fk(\210)42
b Fp(b)r(o)r(ol)27 b Fq(IsSelectable)g Fp(\(\))h(const)275
2073 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetSolid)h Fp(\(b)r(o)r(ol)h
(s\))275 2199 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetDead)i
Fp(\(b)r(o)r(ol)g(d\))275 2324 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetInitRandom)g Fp(\(b)r(o)r(ol)i(r\))275 2450 y
Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetMo)m(v)m(eable)i Fp(\(b)r(o)r(ol)g
(m\))275 2576 y Fk(\210)42 b Fp(v)n(oid)26 b Fq(SetSelectable)h
Fp(\(b)r(o)r(ol)h(s\))275 2702 y Fk(\210)42 b Fp(v)n(oid)p
543 2702 29 4 v 61 w Fq(SetLogStream)27 b Fp(\(std::ostream)f(&o\))275
2828 y Fk(\210)42 b Fp(std::ostream)26 b(&)h Fq(GetLogStream)g
Fp(\(\))h(const)275 2954 y Fk(\210)42 b Fp(virtual)27
b(std::string)g Fq(T)-8 b(oString)27 b Fp(\(\))i(const)476
3096 y Fg(R)l(eturns)g(b)l(asic)f(information)g(ab)l(out)g(this)g(obje)
l(ct)h(as)f(a)g(string.)275 3313 y Fk(\210)42 b Fp(virtual)27
b(v)n(oid)f Fq(Serialise)h Fp(\(std::ostream)g(&\))g(const)476
3456 y Fg(Outputs)i(the)f(obje)l(ct's)h(data)f(to)g(a)g(str)l(e)l(am.)
275 3673 y Fk(\210)42 b Fp(virtual)27 b(v)n(oid)f Fq(Unserialise)h
Fp(\(std::istream)g(&\))476 3815 y Fg(Sets)h(up)g(the)h(obje)l(ct)f(fr)
l(om)g(a)f(str)l(e)l(am.)150 4225 y Fj(Static)36 b(Public)g(Mem)m(b)s
(er)h(F)-9 b(unctions)275 4437 y Fk(\210)42 b Fp(v)n(oid)26
b Fq(SetLogStream)h Fp(\(std::ostream)g(&o\))150 4755
y Fj(Public)36 b(A)m(ttributes)275 4967 y Fk(\210)42
b Fp(auto)p 525 4967 25 4 v 29 w(prop)r(ert)n(y)p Fo(<)26
b Fp(b)r(o)r(ol)h Fo(>)h Fq(Solid)275 5093 y Fk(\210)42
b Fp(auto)p 525 5093 V 29 w(prop)r(ert)n(y)p Fo(<)26
b Fp(b)r(o)r(ol)h Fo(>)h Fq(Dead)275 5219 y Fk(\210)42
b Fp(auto)p 525 5219 V 29 w(prop)r(ert)n(y)p Fo(<)26
b Fp(b)r(o)r(ol)h Fo(>)h Fq(InitRandom)275 5345 y Fk(\210)42
b Fp(auto)p 525 5345 V 29 w(prop)r(ert)n(y)p Fo(<)26
b Fp(b)r(o)r(ol)h Fo(>)h Fq(Mo)m(v)m(eable)275 5471 y
Fk(\210)42 b Fp(auto)p 525 5471 V 29 w(prop)r(ert)n(y)p
Fo(<)26 b Fp(b)r(o)r(ol)h Fo(>)h Fq(Selectable)275 5597
y Fk(\210)42 b Fq(prop)s(ert)m(y)p Fo(<)28 b Fq(W)-8
b(orldOb)5 b(ject)p Fp(,)27 b(std::ostream,)g(std::ostream)f(&)i
Fo(>)f Fq(LogStream)p -358 5723 4034 4 v -192 5823 a
Fn(Generated)f(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 215 223
215 222 bop 150 70 a Fq(10.73)30 b(BEAST::W)-8 b(orldOb)5
b(ject)31 b(Class)g(Reference)2034 b(215)p 150 103 4034
4 v 150 333 a Fj(10.73.1)113 b(Detailed)36 b(Description)150
533 y Fp(The)e(base)f(class)g(for)h(ev)n(erything)e(that)i(mak)n(es)f
(a)h(di\013erence)g(in)g(the)g(w)n(orld,)g(including)h(Animats,)g
(Sensors)150 633 y(and)27 b(all)h(t)n(yp)r(es)f(of)h(scenery)e(and)i
(in)n(teractiv)n(e)e(ob)5 b(ject.)150 780 y Fq(W)-8 b(orldOb)5
b(ject)23 b Fp(pro)n(vides)e(man)n(y)h(o)n(v)n(erridable)e(metho)r(ds)j
(whic)n(h)g(ensure)f(that)h(just)g(ab)r(out)g(an)n(y)e(kind)i(of)g
(thing)150 879 y(can)35 b(b)r(e)i(represen)n(ted)d(in)i(the)g(sim)n
(ulation)f(en)n(vironmen)n(t.)61 b(Of)36 b(particular)e(imp)r(ortance)h
(are)g(Init,)j(Up)r(date,)150 979 y(In)n(teract)29 b(and)g
(OnCollision,)f(the)i(main)f(metho)r(ds)h(used)f(in)g(making)g(a)g
(useful)g(sim)n(ulation)g(ob)5 b(ject.)42 b Fq(W)-8 b(orld-)150
1079 y(Ob)5 b(ject)28 b Fp(also)f(handles)g(some)g(collision)g
(detection)h(and)f(pro)n(vides)f(metho)r(ds)i(for)g(detecting)f(if)h
(other)g(ob)5 b(jects)150 1178 y(are)27 b(touc)n(hing)g(this)h(one.)150
1457 y Fj(10.73.2)113 b(Mem)m(b)s(er)37 b(F)-9 b(unction)37
b(Do)s(cumen)m(tation)150 1657 y Fq(10.73.2.1)92 b(V)-8
b(ector2D)35 b(BEAST::W)-8 b(orldOb)5 b(ject::GetNearestP)m(oin)m(t)32
b(\(const)i(V)-8 b(ector2D)34 b(&)611 1757 y Fe(ve)-5
b(c)p Fq(,)33 b(V)-8 b(ector2D)33 b(&)g Fe(c)-5 b(ol)5
b(lisionNormal)32 b Fq(=)g(VECTOR2D)p 2675 1757 29 4
v 34 w(F)-11 b(AKE)p 2968 1757 V 35 w(REFERENCE\))611
1857 y(const)150 2057 y Fp(Returns)32 b(the)g(nearest)f(p)r(oin)n(t)h
(on)g(this)g(ob)5 b(ject)31 b(to)h(the)g(argumen)n(t,)g(and)g(also)f
(returns)g(the)h(collision)f(normal)150 2157 y(b)n(y)c(reference.)142
2363 y Fq(P)m(arameters:)311 2462 y Fe(ve)-5 b(c)43 b
Fp(The)27 b(p)r(oin)n(t)h(w)n(e)f(are)g(comparing.)311
2593 y Fe(c)-5 b(ol)5 b(lisionNormal)41 b Fp(The)28 b(normal)e(b)r(et)n
(w)n(een)i(the)g(nearest)f(side)g(to)h(v)n(ec)f(and)g(v)n(ec.)142
2783 y Fq(Returns:)311 2883 y Fp(The)h(nearest)f(p)r(oin)n(t)h(on)f
(this)h(ob)5 b(ject)27 b(to)h(v)n(ec.)150 3222 y Fq(10.73.2.2)92
b(v)m(oid)32 b(BEAST::W)-8 b(orldOb)5 b(ject::In)m(teract)32
b(\(W)-8 b(orldOb)5 b(ject)32 b Fh(\003)f Fe(other)p
Fq(\))71 b Fi([virtual])150 3423 y Fp(Calls)27 b(the)h(one-w)n(a)n(y)e
(in)n(teract)h(metho)r(d)h(of)f(this)h(and)f(another)g
Fq(W)-8 b(orldOb)5 b(ject)p Fp(.)150 3570 y(See)28 b(UniIn)n(teract)f
(for)g(the)h(use)f(of)h(one-w)n(a)n(y)e(in)n(teractions.)142
3760 y Fq(P)m(arameters:)311 3860 y Fe(other)42 b Fp(The)28
b Fq(W)-8 b(orldOb)5 b(ject)27 b Fp(w)n(e're)g(in)n(teracting)g(with.)
150 4069 y(Reimplemen)n(ted)39 b(in)f Fq(BEAST::Animat)f
Fp(\(p.)14 b(72\),)41 b Fq(BEAST::Bacterium)36 b Fp(\(p.)15
b(75\),)40 b Fq(BEAST::Sensor)150 4169 y Fp(\(p.)14 b(182\),)24
b Fq(BEAST::SelfSensor)f Fp(\(p.)15 b(180\),)24 b Fq(BEAST::AreaSensor)
g Fp(\(p.)14 b(74\),)25 b Fq(BEAST::T)-8 b(ouc)m(hSensor)150
4268 y Fp(\(p.)14 b(200\),)27 b(and)g Fq(BEAST::BeamSensor)f
Fp(\(p.)14 b(85\).)150 4530 y Fq(10.73.2.3)92 b(b)s(o)s(ol)41
b(BEAST::W)-8 b(orldOb)5 b(ject::In)m(tersects)40 b(\(const)i(V)-8
b(ector2D)611 4630 y(&)42 b Fe(l1)p Fq(,)h(const)e(V)-8
b(ector2D)41 b(&)h Fe(l2)p Fq(,)h(V)-8 b(ector2D)41 b(&)h
Fe(interse)-5 b(ction)41 b Fq(=)611 4730 y(VECTOR2D)p
1152 4730 V 34 w(F)-11 b(AKE)p 1445 4730 V 35 w(REFERENCE\))30
b(const)150 4930 y Fp(Returns)g(true)h(if)g(the)g(line)f(de\014ned)h(b)
n(y)f(the)h(t)n(w)n(o)f(inputs)h(in)n(tersects)f(with)h(this)f(ob)5
b(ject)31 b(at)f(some)g(p)r(oin)n(t,)h(and)150 5030 y(can)c(also)g
(return)g(the)h(in)n(tersection)f(b)n(y)g(reference.)142
5236 y Fq(P)m(arameters:)311 5335 y Fe(l1)42 b Fp(The)27
b(\014rst)h(p)r(oin)n(t)f(of)h(the)g(line)g(to)f(b)r(e)h(tested.)311
5466 y Fe(l2)42 b Fp(The)27 b(second)g(pion)n(t)h(of)f(the)h(line)g(to)
g(b)r(e)g(tested.)311 5597 y Fe(interse)-5 b(ction)42
b Fp(The)27 b(p)r(oin)n(t)h(of)g(in)n(tersection,)e(returned)i(b)n(y)f
(reference.)p 150 5723 4034 4 v 150 5823 a Fn(Generated)f(on)e(Sun)h(F)
-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 216 224
216 223 bop -358 70 a Fq(216)414 b(BEAST)32 b(-)f(Bioinspired)f(Ev)m
(olutionary)j(Agen)m(t)f(Sim)m(ulation)d(T)-8 b(o)s(olkit)31
b(Class)g(Do)s(cumen)m(tation)p -358 103 4034 4 v 142
307 a(Returns:)311 406 y Fp(T)-7 b(rue)28 b(if)g(the)g(line)g(in)n
(tersects)e(this)i(ob)5 b(ject,)28 b(false)f(if)h(not.)150
752 y Fq(10.73.2.4)92 b(b)s(o)s(ol)32 b(BEAST::W)-8 b(orldOb)5
b(ject::IsInside)31 b(\(const)i(V)-8 b(ector2D)34 b(&)g
Fe(ve)-5 b(cT)e(est)p Fq(\))34 b(const)611 852 y Fi([virtual])150
1052 y Fp(Returns)27 b(true)h(if)g(the)g(sp)r(eci\014ed)g(p)r(oin)n(t)g
(is)f(inside)h(this)g(ob)5 b(ject.)142 1264 y Fq(P)m(arameters:)311
1364 y Fe(ve)-5 b(cT)e(est)43 b Fp(The)28 b(p)r(oin)n(t)f(b)r(eing)h
(tested.)142 1575 y Fq(Returns:)311 1675 y Fp(T)-7 b(rue)28
b(if)g(v)n(ecT)-7 b(est)27 b(is)g(inside)h(this)g(ob)5
b(ject.)150 2021 y Fq(10.73.2.5)92 b(v)m(oid)37 b(BEAST::W)-8
b(orldOb)5 b(ject::Serialise)34 b(\(std::ostream)h(&)i
Fe(out)p Fq(\))g(const)611 2121 y Fi([virtual])150 2321
y Fp(Outputs)28 b(the)g(ob)5 b(ject's)27 b(data)g(to)h(a)f(stream.)142
2534 y Fq(See)k(also:)311 2633 y(W)-8 b(orldOb)5 b(ject::Unserialise)
311 2733 y Fp(Dra)n(w)n(able::Serialise)150 2963 y(Reimplemen)n(ted)101
b(in)f Fq(BEAST::Animat)e Fp(\(p.)14 b(73\),)118 b Fq(BEAST::FFNAnimat)
98 b Fp(\(p.)14 b(135\),)117 b(and)150 3062 y Fq(BEAST::DNNAnimat)26
b Fp(\(p.)14 b(101\).)150 3325 y Fq(10.73.2.6)92 b(v)m(oid)32
b(BEAST::W)-8 b(orldOb)5 b(ject::Unserialise)29 b(\(std::istream)g(&)j
Fe(in)p Fq(\))71 b Fi([virtual])150 3526 y Fp(Sets)28
b(up)g(the)g(ob)5 b(ject)27 b(from)g(a)g(stream.)142
3738 y Fq(See)k(also:)311 3838 y(W)-8 b(orldOb)5 b(ject::Serialise)311
3937 y Fp(Dra)n(w)n(able::Unserialise)150 4167 y(Reimplemen)n(ted)101
b(in)f Fq(BEAST::Animat)e Fp(\(p.)14 b(73\),)118 b Fq(BEAST::FFNAnimat)
98 b Fp(\(p.)14 b(135\),)117 b(and)150 4267 y Fq(BEAST::DNNAnimat)26
b Fp(\(p.)14 b(101\).)150 4414 y(The)28 b(do)r(cumen)n(tation)f(for)g
(this)h(class)f(w)n(as)f(generated)h(from)g(the)h(follo)n(wing)e
(\014les:)275 4627 y Fk(\210)42 b Fp(w)n(orldob)5 b(ject.h)275
4735 y Fk(\210)42 b Fq(w)m(orldob)5 b(ject.cc)p -358
5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 217 225
217 224 bop 150 1003 a Fm(Chapter)65 b(11)150 1465 y
Fr(BEAST)77 b(-)h(Bioinspired)150 1714 y(Ev)-6 b(olutionary)76
b(Agen)-6 b(t)78 b(Sim)-6 b(ulation)150 1963 y(T)-19
b(o)6 b(olkit)77 b(File)f(Do)6 b(cumen)-6 b(tation)150
2492 y Fl(11.1)136 b(animat.cc)46 b(File)f(Reference)150
2721 y Fp(Implemen)n(tation)28 b(of)f(the)h(Animat)g(class.)150
2868 y Fi(#include)40 b("animat.h")150 3015 y(#include)g("world.h")150
3162 y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(animat.cc:)1663
4085 y @beginspecial 35 @llx 35 @lly 121 @urx 173 @ury
597 @rwi @setspecial
%%BeginDocument: animat_8cc__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 121 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 121 173
%%PageOrientation: Portrait
gsave
35 35 86 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node0
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 8 8 moveto
63 8 lineto
63 23 lineto
8 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 8 8 moveto
63 8 lineto
63 23 lineto
8 23 lineto
closepath
stroke
gsave 10 dict begin
35 11 moveto 45 -0.5 (animat.cc) alignedtext
end grestore
end grestore

%	Node1
[ /Rect [ 9 113 61 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 9 112 moveto
61 112 lineto
61 127 lineto
9 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
35 115 moveto 42 -0.5 (animat.h) alignedtext
end grestore
end grestore

%	Node1 -> Node0
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 32 104 moveto
31 96 30 85 29 76 curveto
28 57 32 35 34 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 29 103 moveto
34 112 lineto
34 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node27
[ /Rect [ 38 61 84 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 38 60 moveto
84 60 lineto
84 75 lineto
38 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
61 63 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node1 -> Node27
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 43 104 moveto
48 94 53 84 57 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 41 102 moveto
39 112 lineto
46 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node27 -> Node0
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 53 53 moveto
49 43 43 32 39 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 50 53 moveto
57 60 lineto
54 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4448 a Fj(Namespaces)275 4634 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)275 4742 y Fk(\210)42 b
Fp(namespace)26 b Fq(std)150 5022 y Fj(11.1.1)113 b(Detailed)36
b(Description)150 5222 y Fp(Implemen)n(tation)28 b(of)f(the)h(Animat)g
(class.)p eop
%%Page: 218 226
218 225 bop -358 70 a Fq(218)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.2)136 b(animat.h)46 b(File)f(Reference)150
578 y Fp(In)n(terface)27 b(of)g(the)h(Animat)g(class)f(and)h(asso)r
(ciated)e(constan)n(ts.)150 725 y Fi(#include)40 b Fo(<)p
Fi(iostream)p Fo(>)150 872 y Fi(#include)g Fo(<)p Fi(map)p
Fo(>)150 1019 y Fi(#include)g Fo(<)p Fi(string)p Fo(>)150
1165 y Fi(#include)g Fo(<)p Fi(cmath)p Fo(>)150 1312
y Fi(#include)g Fo(<)p Fi(algorithm)p Fo(>)150 1459 y
Fi(#include)g("worldobject.h")150 1606 y(#include)g("sensorbase.h")150
1753 y(#include)g("trail.h")150 1900 y(#include)g("utilities.h")150
2047 y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(animat.h:)779
3749 y @beginspecial 35 @llx 35 @lly 547 @urx 383 @ury
2719 @rwi @setspecial
%%BeginDocument: animat_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 547 383
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 547 383
%%PageOrientation: Portrait
gsave
35 35 512 348 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node33
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 215 10 moveto
267 10 lineto
267 25 lineto
215 25 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 215 10 moveto
267 10 lineto
267 25 lineto
215 25 lineto
closepath
stroke
gsave 10 dict begin
241 13 moveto 42 -0.5 (animat.h) alignedtext
end grestore
end grestore

%	Node34
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 140 270 moveto
191 270 lineto
191 285 lineto
140 285 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
165 273 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node34 -> Node33
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 151 265 moveto
133 248 104 216 92 182 curveto
80 143 66 119 117 62 curveto
132 45 189 37 209 30 curveto
213 29 217 27 220 26 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 147 265 moveto
156 270 lineto
151 261 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node39
[ /Rect [ 231 115 307 129 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 231 114 moveto
307 114 lineto
307 129 lineto
231 129 lineto
closepath
stroke
gsave 10 dict begin
269 117 moveto 66 -0.5 (worldobject.h) alignedtext
end grestore
end grestore

%	Node34 -> Node39
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 175 263 moveto
197 230 247 154 264 130 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 174 260 moveto
170 270 lineto
178 263 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node40
[ /Rect [ 269 219 329 233 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($vector2d_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 269 218 moveto
329 218 lineto
329 233 lineto
269 233 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
299 221 moveto 50 -0.5 (vector2d.h) alignedtext
end grestore
end grestore

%	Node34 -> Node40
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 192 267 moveto
219 257 257 242 280 234 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 192 264 moveto
184 270 lineto
194 269 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node35
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 38 62 moveto
70 62 lineto
70 77 lineto
38 77 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
54 65 moveto 22 -0.5 (map) alignedtext
end grestore
end grestore

%	Node35 -> Node33
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 59 moveto
135 39 155 42 215 26 curveto
215 26 216 26 216 26 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 56 moveto
69 62 lineto
79 61 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node36
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 101 166 moveto
138 166 lineto
138 181 lineto
101 181 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
119 169 moveto 27 -0.5 (string) alignedtext
end grestore
end grestore

%	Node36 -> Node33
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 95 161 moveto
61 140 0 98 29 62 curveto
80 0 129 42 207 26 curveto
210 25 212 25 215 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 94 163 moveto
104 166 lineto
96 159 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node36 -> Node39
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 145 163 moveto
181 150 220 137 245 130 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 145 160 moveto
137 166 lineto
147 165 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node56
[ /Rect [ 126 63 194 77 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensorbase_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 126 62 moveto
195 62 lineto
195 77 lineto
126 77 lineto
closepath
stroke
gsave 10 dict begin
160 65 moveto 59 -0.5 (sensorbase.h) alignedtext
end grestore
end grestore

%	Node36 -> Node56
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 125 159 moveto
134 137 151 95 157 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 124 156 moveto
122 166 lineto
128 158 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node37
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 243 270 moveto
283 270 lineto
283 285 lineto
243 285 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
263 273 moveto 30 -0.5 (cmath) alignedtext
end grestore
end grestore

%	Node37 -> Node33
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 288 266 moveto
308 257 332 244 338 234 curveto
341 227 338 225 338 218 curveto
330 146 334 121 293 62 curveto
282 47 265 33 253 26 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 288 263 moveto
280 270 lineto
290 268 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node37 -> Node39
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 261 262 moveto
261 253 260 243 260 234 curveto
258 195 265 148 268 130 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 258 260 moveto
262 270 lineto
263 260 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node37 -> Node40
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 273 262 moveto
280 253 289 242 294 234 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 271 260 moveto
268 270 lineto
275 263 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node37 -> Node56
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 255 262 moveto
235 221 179 109 164 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 252 262 moveto
259 270 lineto
257 260 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node38
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 212 62 moveto
270 62 lineto
270 77 lineto
212 77 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
241 65 moveto 48 -0.5 (algorithm) alignedtext
end grestore
end grestore

%	Node38 -> Node33
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 241 53 moveto
241 44 241 33 241 26 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 239 52 moveto
241 62 lineto
244 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node39 -> Node33
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 276 107 moveto
280 95 284 77 279 62 curveto
273 47 260 33 251 26 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 275 104 moveto
273 114 lineto
279 106 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node39 -> Node56
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 245 110 moveto
224 100 195 86 176 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 243 112 moveto
253 114 lineto
245 107 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node40 -> Node39
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 295 211 moveto
288 188 276 147 271 130 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 292 209 moveto
297 218 lineto
297 208 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node52
[ /Rect [ 364 167 426 181 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 364 166 moveto
427 166 lineto
427 181 lineto
364 181 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
395 169 moveto 53 -0.5 (drawable.h) alignedtext
end grestore
end grestore

%	Node40 -> Node52
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 321 214 moveto
339 204 365 190 381 182 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 321 211 moveto
313 218 lineto
323 216 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node42
[ /Rect [ 346 271 398 285 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($utilities_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 346 270 moveto
398 270 lineto
398 285 lineto
346 285 lineto
closepath
stroke
gsave 10 dict begin
372 273 moveto 42 -0.5 (utilities.h) alignedtext
end grestore
end grestore

%	Node42 -> Node33
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 407 266 moveto
444 252 500 222 500 174 curveto
500 174 500 174 500 122 curveto
500 24 390 66 299 34 curveto
293 32 292 31 287 30 curveto
278 27 275 28 267 26 curveto
266 26 266 26 265 26 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 405 264 moveto
397 270 lineto
407 269 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node42 -> Node40
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 354 265 moveto
340 255 322 242 310 234 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 351 266 moveto
361 270 lineto
354 262 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node42 -> Node52
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 376 263 moveto
380 240 389 199 393 182 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 374 260 moveto
374 270 lineto
379 261 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node44
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 173 322 moveto
234 322 lineto
234 337 lineto
173 337 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
203 325 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node44 -> Node42
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 237 319 moveto
269 309 318 294 347 286 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 237 316 moveto
228 322 lineto
238 321 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node44 -> Node56
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 176 318 moveto
161 311 143 300 131 286 curveto
100 247 101 230 92 182 curveto
84 137 129 95 150 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 174 320 moveto
184 322 lineto
176 315 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node52 -> Node39
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 369 163 moveto
345 153 309 138 287 130 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 367 165 moveto
377 166 lineto
369 160 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node57
[ /Rect [ 377 115 413 129 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($trail_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 377 114 moveto
414 114 lineto
414 129 lineto
377 129 lineto
closepath
stroke
gsave 10 dict begin
395 117 moveto 27 -0.5 (trail.h) alignedtext
end grestore
end grestore

%	Node52 -> Node57
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 395 157 moveto
395 148 395 137 395 130 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 393 156 moveto
395 166 lineto
398 156 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node56 -> Node33
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 179 57 moveto
195 47 216 34 229 26 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 179 54 moveto
172 62 lineto
182 58 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node57 -> Node33
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 387 108 moveto
379 95 366 75 350 62 curveto
336 51 292 35 264 26 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 383 107 moveto
391 114 lineto
388 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node58
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 444 166 moveto
473 166 lineto
473 181 lineto
444 181 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
458 169 moveto 13 -0.5 (list) alignedtext
end grestore
end grestore

%	Node58 -> Node57
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 442 160 moveto
430 151 414 138 404 130 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 440 161 moveto
449 166 lineto
443 158 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4116 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)1190
4913 y @beginspecial 35 @llx 35 @lly 349 @urx 173 @ury
1733 @rwi @setspecial
%%BeginDocument: animat_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 349 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 349 173
%%PageOrientation: Portrait
gsave
35 35 314 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node59
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 92 8 moveto
144 8 lineto
144 23 lineto
92 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 92 8 moveto
144 8 lineto
144 23 lineto
92 23 lineto
closepath
stroke
gsave 10 dict begin
118 11 moveto 42 -0.5 (animat.h) alignedtext
end grestore
end grestore

%	Node60
[ /Rect [ 0 113 54 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
55 112 lineto
55 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
27 115 moveto 45 -0.5 (animat.cc) alignedtext
end grestore
end grestore

%	Node60 -> Node59
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 26 112 moveto
25 100 24 76 35 60 curveto
42 50 68 37 90 28 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 91 30 moveto
99 24 lineto
89 26 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node61
[ /Rect [ 44 61 90 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 44 60 moveto
90 60 lineto
90 75 lineto
44 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
67 63 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node60 -> Node61
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 33 112 moveto
38 104 48 93 55 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 56 85 moveto
61 76 lineto
53 82 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node61 -> Node59
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 60 moveto
83 52 95 40 105 30 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 106 33 moveto
111 24 lineto
102 29 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node68
[ /Rect [ 78 113 146 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 78 112 moveto
147 112 lineto
147 127 lineto
78 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
112 115 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node68 -> Node59
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 112 112 moveto
114 95 116 54 117 32 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 119 34 moveto
118 24 lineto
114 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node68 -> Node61
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 105 112 moveto
99 104 88 92 80 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 82 82 moveto
74 76 lineto
79 85 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node67
[ /Rect [ 146 61 212 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacterium_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 146 60 moveto
213 60 lineto
213 75 lineto
146 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
179 63 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node67 -> Node59
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 170 60 moveto
160 52 146 40 134 30 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 136 29 moveto
127 24 lineto
133 32 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node73
[ /Rect [ 230 61 312 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($neuralanimat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 230 60 moveto
313 60 lineto
313 75 lineto
230 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
271 63 moveto 73 -0.5 (neuralanimat.h) alignedtext
end grestore
end grestore

%	Node73 -> Node59
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 249 60 moveto
223 51 179 36 149 27 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 150 25 moveto
140 24 lineto
149 30 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 5356 a Fj(Namespaces)275 5597 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)p -358 5723 V -192 5823
a Fn(Generated)g(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 219 227
219 226 bop 150 70 a Fq(11.2)31 b(animat.h)f(File)h(Reference)2688
b(219)p 150 103 4034 4 v 150 333 a Fj(11.2.1)113 b(Detailed)36
b(Description)150 533 y Fp(In)n(terface)27 b(of)g(the)h(Animat)g(class)
f(and)h(asso)r(ciated)e(constan)n(ts.)150 680 y(#include)g(this)f
(\014le)g(if)h(y)n(ou)e(are)g(deriving)g(an)h(Animat)h(with)f(a)g
(unique)g(con)n(trol)f(system)h(\(o)n(v)n(erloaded)d(Con)n(trol)150
780 y(metho)r(d\))28 b(whic)n(h)f(y)n(ou)f(are)g(writing)g(from)h
(scratc)n(h.)35 b(If)28 b(y)n(ou)e(are)g(w)n(orking)f(with)j(neural)e
(nets)h(y)n(ou)f(ma)n(y)g(\014nd)i(it)150 879 y(more)j(useful)g(to)h
(start)e(with)i(FFNAnimat)h(and)e(DNNAnimat)i(whic)n(h)e(come)g(with)h
(their)f(o)n(wn)g(neural)g(nets)150 979 y(and)c(automatic)g
(con\014guration)f(metho)r(ds.)142 1175 y Fq(Author:)311
1274 y Fp(T)-7 b(om)28 b(Carden)311 1374 y(Da)n(vid)g(Gordon)142
1570 y Fq(See)j(also:)311 1670 y(neuralanimat.h)311 1769
y Fp(FFNAnimat)311 1869 y(DNNAnimat)p 150 5723 V 150
5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 220 228
220 227 bop -358 70 a Fq(220)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.3)136 b(animatmonitor.h)47 b(File)e(Reference)150
562 y Fi(#include)40 b Fo(<)p Fi(vector)p Fo(>)150 709
y Fi(#include)g Fo(<)p Fi(algorithm)p Fo(>)150 855 y
Fi(#include)g("drawable.h")150 1002 y Fp(Include)28 b(dep)r(endency)g
(graph)e(for)h(animatmonitor.h:)825 2201 y @beginspecial
35 @llx 35 @lly 525 @urx 277 @ury 2610 @rwi @setspecial
%%BeginDocument: animatmonitor_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 525 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 525 277
%%PageOrientation: Portrait
gsave
35 35 490 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node76
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 381 8 moveto
472 8 lineto
472 23 lineto
381 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 381 8 moveto
472 8 lineto
472 23 lineto
381 23 lineto
closepath
stroke
gsave 10 dict begin
426 11 moveto 81 -0.5 (animatmonitor.h) alignedtext
end grestore
end grestore

%	Node77
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 368 216 moveto
408 216 lineto
408 231 lineto
368 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
388 219 moveto 30 -0.5 (vector) alignedtext
end grestore
end grestore

%	Node77 -> Node76
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 391 207 moveto
398 165 419 55 425 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 389 206 moveto
389 216 lineto
394 207 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node79
[ /Rect [ 254 61 316 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 254 60 moveto
317 60 lineto
317 75 lineto
254 75 lineto
closepath
stroke
gsave 10 dict begin
285 63 moveto 53 -0.5 (drawable.h) alignedtext
end grestore
end grestore

%	Node77 -> Node79
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 384 209 moveto
379 187 364 143 341 112 curveto
326 93 321 88 301 76 curveto
301 76 301 76 300 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 381 207 moveto
386 216 lineto
386 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node92
[ /Rect [ 290 165 360 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($serialfuncs_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 290 164 moveto
361 164 lineto
361 179 lineto
290 179 lineto
closepath
stroke
gsave 10 dict begin
325 167 moveto 61 -0.5 (serialfuncs.h) alignedtext
end grestore
end grestore

%	Node77 -> Node92
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 372 210 moveto
360 201 344 188 334 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 370 211 moveto
379 216 lineto
373 208 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node78
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 430 216 moveto
488 216 lineto
488 231 lineto
430 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
459 219 moveto 48 -0.5 (algorithm) alignedtext
end grestore
end grestore

%	Node78 -> Node76
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 458 208 moveto
456 178 451 113 440 60 curveto
437 47 432 32 429 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 455 206 moveto
459 216 lineto
460 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node78 -> Node92
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 432 213 moveto
405 203 367 188 344 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 430 215 moveto
440 216 lineto
432 210 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node79 -> Node76
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 315 57 moveto
342 47 382 32 406 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 315 54 moveto
306 60 lineto
316 59 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node80
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 166 112 moveto
213 112 lineto
213 127 lineto
166 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
189 115 moveto 37 -0.5 (GL/gl.h) alignedtext
end grestore
end grestore

%	Node80 -> Node79
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 211 108 moveto
229 98 255 84 271 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 211 105 moveto
203 112 lineto
213 110 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node81
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 230 112 moveto
284 112 lineto
284 127 lineto
230 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
257 115 moveto 44 -0.5 (GL/glu.h) alignedtext
end grestore
end grestore

%	Node81 -> Node79
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 265 105 moveto
270 95 277 84 281 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 264 102 moveto
261 112 lineto
268 105 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node82
[ /Rect [ 88 113 148 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($vector2d_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 88 112 moveto
148 112 lineto
148 127 lineto
88 127 lineto
closepath
stroke
gsave 10 dict begin
118 115 moveto 50 -0.5 (vector2d.h) alignedtext
end grestore
end grestore

%	Node82 -> Node79
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 150 109 moveto
183 99 232 84 261 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 150 106 moveto
142 112 lineto
152 111 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node83
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 97 216 moveto
148 216 lineto
148 231 lineto
97 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
122 219 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node83 -> Node82
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 122 208 moveto
121 186 119 145 118 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 120 206 moveto
122 216 lineto
125 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node89
[ /Rect [ 38 165 94 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($random_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 38 164 moveto
94 164 lineto
94 179 lineto
38 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
66 167 moveto 46 -0.5 (random.h) alignedtext
end grestore
end grestore

%	Node83 -> Node89
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 107 210 moveto
97 200 83 188 74 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 105 211 moveto
114 216 lineto
108 208 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node83 -> Node92
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 155 214 moveto
204 201 259 188 292 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 155 211 moveto
146 216 lineto
156 216 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node84
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 15 216 moveto
55 216 lineto
55 231 lineto
15 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
35 219 moveto 30 -0.5 (cmath) alignedtext
end grestore
end grestore

%	Node84 -> Node82
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 28 209 moveto
24 196 21 177 29 164 curveto
37 152 73 136 96 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 25 208 moveto
31 216 lineto
29 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node84 -> Node89
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 44 209 moveto
49 199 56 188 61 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 43 206 moveto
40 216 lineto
47 209 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node85
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 150 164 moveto
191 164 lineto
191 179 lineto
150 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
170 167 moveto 31 -0.5 (float.h) alignedtext
end grestore
end grestore

%	Node85 -> Node82
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 156 158 moveto
146 148 134 136 126 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 153 159 moveto
162 164 lineto
157 155 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node86
[ /Rect [ 212 165 264 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($utilities_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 212 164 moveto
264 164 lineto
264 179 lineto
212 179 lineto
closepath
stroke
gsave 10 dict begin
238 167 moveto 42 -0.5 (utilities.h) alignedtext
end grestore
end grestore

%	Node86 -> Node79
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 261 160 moveto
273 152 286 142 293 128 curveto
301 110 293 87 289 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 261 157 moveto
254 164 lineto
264 161 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node86 -> Node82
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 213 161 moveto
190 150 156 136 135 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 211 163 moveto
221 164 lineto
213 158 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node89 -> Node82
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 80 158 moveto
90 148 102 136 110 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 79 155 moveto
74 164 lineto
83 159 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node97
[ /Rect [ 18 113 70 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($colours_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 18 112 moveto
71 112 lineto
71 127 lineto
18 127 lineto
closepath
stroke
gsave 10 dict begin
44 115 moveto 43 -0.5 (colours.h) alignedtext
end grestore
end grestore

%	Node89 -> Node97
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 59 155 moveto
56 146 51 135 47 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 156 moveto
63 164 lineto
61 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node92 -> Node79
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 328 156 moveto
330 144 331 126 326 112 curveto
320 97 306 83 296 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 326 154 moveto
327 164 lineto
331 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node92 -> Node82
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 285 162 moveto
249 154 196 140 148 128 curveto
147 128 147 128 146 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 284 164 moveto
294 164 lineto
285 159 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node97 -> Node79
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 76 111 moveto
153 92 176 94 254 76 curveto
255 76 255 76 256 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 108 moveto
68 112 lineto
78 113 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2530 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)725
3954 y @beginspecial 35 @llx 35 @lly 572 @urx 329 @ury
2849 @rwi @setspecial
%%BeginDocument: animatmonitor_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 572 329
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 572 329
%%PageOrientation: Portrait
gsave
35 35 537 294 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node98
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 197 8 moveto
288 8 lineto
288 23 lineto
197 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 197 8 moveto
288 8 lineto
288 23 lineto
197 23 lineto
closepath
stroke
gsave 10 dict begin
242 11 moveto 81 -0.5 (animatmonitor.h) alignedtext
end grestore
end grestore

%	Node99
[ /Rect [ 219 61 265 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 219 60 moveto
265 60 lineto
265 75 lineto
219 75 lineto
closepath
stroke
gsave 10 dict begin
242 63 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node99 -> Node98
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 242 60 moveto
242 53 242 42 242 33 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 245 34 moveto
242 24 lineto
240 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node100
[ /Rect [ 0 113 54 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
55 112 lineto
55 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
27 115 moveto 45 -0.5 (animat.cc) alignedtext
end grestore
end grestore

%	Node100 -> Node99
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 53 112 moveto
54 112 54 112 55 112 curveto
124 94 146 96 212 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 211 81 moveto
220 76 lineto
210 76 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node101
[ /Rect [ 72 113 138 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 72 112 moveto
139 112 lineto
139 127 lineto
72 127 lineto
closepath
stroke
gsave 10 dict begin
105 115 moveto 57 -0.5 (drawable.cc) alignedtext
end grestore
end grestore

%	Node101 -> Node99
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 125 112 moveto
148 103 187 88 214 79 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 214 82 moveto
222 76 lineto
212 77 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node102
[ /Rect [ 156 113 234 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 156 112 moveto
235 112 lineto
235 127 lineto
156 127 lineto
closepath
stroke
gsave 10 dict begin
195 115 moveto 69 -0.5 (worldobject.cc) alignedtext
end grestore
end grestore

%	Node102 -> Node99
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 202 112 moveto
209 104 220 92 229 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 230 85 moveto
235 76 lineto
227 82 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node103
[ /Rect [ 252 113 326 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 252 112 moveto
326 112 lineto
326 127 lineto
252 127 lineto
closepath
stroke
gsave 10 dict begin
289 115 moveto 64 -0.5 (distribution.h) alignedtext
end grestore
end grestore

%	Node103 -> Node99
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 282 112 moveto
275 104 264 92 255 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 257 82 moveto
249 76 lineto
254 85 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node104
[ /Rect [ 201 269 277 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 201 268 moveto
278 268 lineto
278 283 lineto
201 283 lineto
closepath
stroke
gsave 10 dict begin
239 271 moveto 67 -0.5 (distribution.cc) alignedtext
end grestore
end grestore

%	Node104 -> Node103
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 236 268 moveto
232 257 225 234 230 216 curveto
240 176 247 162 271 135 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 273 137 moveto
278 128 lineto
269 133 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node105
[ /Rect [ 239 217 295 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacteria_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 239 216 moveto
295 216 lineto
295 231 lineto
239 231 lineto
closepath
stroke
gsave 10 dict begin
267 219 moveto 46 -0.5 (bacteria.h) alignedtext
end grestore
end grestore

%	Node104 -> Node105
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 243 268 moveto
247 260 253 249 259 240 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 261 242 moveto
263 232 lineto
256 240 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node105 -> Node103
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 266 216 moveto
265 205 263 182 268 164 curveto
270 154 275 143 279 135 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 280 138 moveto
284 128 lineto
276 135 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node106
[ /Rect [ 277 165 343 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacterium_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 277 164 moveto
344 164 lineto
344 179 lineto
277 179 lineto
closepath
stroke
gsave 10 dict begin
310 167 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node105 -> Node106
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 273 216 moveto
279 208 289 196 298 187 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 299 189 moveto
304 180 lineto
296 186 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node106 -> Node103
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 307 164 moveto
304 157 299 146 296 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 298 136 moveto
292 128 lineto
294 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node107
[ /Rect [ 383 165 451 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 383 164 moveto
452 164 lineto
452 179 lineto
383 179 lineto
closepath
stroke
gsave 10 dict begin
417 167 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node107 -> Node99
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 408 164 moveto
393 152 362 129 335 112 curveto
313 99 287 87 268 79 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 271 78 moveto
261 76 lineto
269 82 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node110
[ /Rect [ 382 113 452 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($population_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 382 112 moveto
452 112 lineto
452 127 lineto
382 127 lineto
closepath
stroke
gsave 10 dict begin
417 115 moveto 60 -0.5 (population.h) alignedtext
end grestore
end grestore

%	Node107 -> Node110
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 412 164 moveto
411 157 410 146 411 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 413 138 moveto
412 128 lineto
408 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node108
[ /Rect [ 313 217 385 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 313 216 moveto
385 216 lineto
385 231 lineto
313 231 lineto
closepath
stroke
gsave 10 dict begin
349 219 moveto 62 -0.5 (simulation.cc) alignedtext
end grestore
end grestore

%	Node108 -> Node107
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 359 216 moveto
370 208 387 195 400 185 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 400 188 moveto
407 180 lineto
397 184 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node109
[ /Rect [ 403 217 475 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($glutsimenv_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 403 216 moveto
475 216 lineto
475 231 lineto
403 231 lineto
closepath
stroke
gsave 10 dict begin
439 219 moveto 62 -0.5 (glutsimenv.h) alignedtext
end grestore
end grestore

%	Node109 -> Node107
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 436 216 moveto
433 209 428 198 424 189 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 426 188 moveto
420 180 lineto
422 190 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node110 -> Node99
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 390 112 moveto
361 105 315 92 274 79 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 274 76 moveto
264 76 lineto
273 81 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node110 -> Node107
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 423 156 moveto
424 146 424 136 422 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 421 154 moveto
422 164 lineto
426 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node111
[ /Rect [ 493 217 535 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($beast_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 493 216 moveto
535 216 lineto
535 231 lineto
493 231 lineto
closepath
stroke
gsave 10 dict begin
514 219 moveto 32 -0.5 (beast.h) alignedtext
end grestore
end grestore

%	Node111 -> Node107
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 500 216 moveto
484 207 458 193 439 184 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 441 182 moveto
431 180 lineto
439 187 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4317 a Fj(Namespaces)275 4503 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 4783 y Fj(11.3.1)113
b(Detailed)36 b(Description)142 4922 y Fq(Author:)311
5022 y Fp(T)-7 b(om)28 b(Carden)311 5121 y(Da)n(vid)g(Gordon)p
-358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 221 229
221 228 bop 150 70 a Fq(11.4)31 b(bacteria.h)h(File)f(Reference)2642
b(221)p 150 103 4034 4 v 150 333 a Fl(11.4)136 b(bacteria.h)46
b(File)f(Reference)150 562 y Fp(Global)27 b(include)h(for)f(all)g
(bacteria-related)f(classes.)150 709 y Fi(#include)40
b Fo(<)p Fi(sstream)p Fo(>)150 855 y Fi(#include)g Fo(<)p
Fi(vector)p Fo(>)150 1002 y Fi(#include)g("distribution.h")150
1149 y(#include)g("bacterium.h")150 1296 y Fp(Include)28
b(dep)r(endency)g(graph)e(for)h(bacteria.h:)1140 2763
y @beginspecial 35 @llx 35 @lly 373 @urx 329 @ury 1853
@rwi @setspecial
%%BeginDocument: bacteria_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 373 329
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 373 329
%%PageOrientation: Portrait
gsave
35 35 338 294 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node112
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 78 8 moveto
134 8 lineto
134 23 lineto
78 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 78 8 moveto
134 8 lineto
134 23 lineto
78 23 lineto
closepath
stroke
gsave 10 dict begin
106 11 moveto 46 -0.5 (bacteria.h) alignedtext
end grestore
end grestore

%	Node113
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 0 60 moveto
47 60 lineto
47 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
23 63 moveto 37 -0.5 (sstream) alignedtext
end grestore
end grestore

%	Node113 -> Node112
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 43 55 moveto
59 45 80 32 94 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 42 53 moveto
35 60 lineto
45 57 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node114
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 80 216 moveto
120 216 lineto
120 231 lineto
80 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
100 219 moveto 30 -0.5 (vector) alignedtext
end grestore
end grestore

%	Node114 -> Node112
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 97 208 moveto
96 200 94 189 93 180 curveto
89 120 100 47 105 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 94 207 moveto
99 216 lineto
99 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node139
[ /Rect [ 102 165 148 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 102 164 moveto
148 164 lineto
148 179 lineto
102 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
125 167 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node114 -> Node139
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 108 208 moveto
112 199 118 188 121 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 106 206 moveto
104 216 lineto
111 208 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node115
[ /Rect [ 121 113 195 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 121 112 moveto
195 112 lineto
195 127 lineto
121 127 lineto
closepath
stroke
gsave 10 dict begin
158 115 moveto 64 -0.5 (distribution.h) alignedtext
end grestore
end grestore

%	Node115 -> Node112
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 151 105 moveto
139 83 118 41 110 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 148 104 moveto
154 112 lineto
152 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node146
[ /Rect [ 209 61 275 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacterium_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 209 60 moveto
276 60 lineto
276 75 lineto
209 75 lineto
closepath
stroke
gsave 10 dict begin
242 63 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node115 -> Node146
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 107 moveto
194 97 216 84 230 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 105 moveto
170 112 lineto
180 109 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node116
[ /Rect [ 166 165 214 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensor_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 166 164 moveto
214 164 lineto
214 179 lineto
166 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
190 167 moveto 38 -0.5 (sensor.h) alignedtext
end grestore
end grestore

%	Node116 -> Node115
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 180 156 moveto
174 147 168 136 163 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 157 moveto
185 164 lineto
182 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node139 -> Node115
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 135 156 moveto
141 147 148 136 153 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 133 154 moveto
130 164 lineto
137 157 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node141
[ /Rect [ 200 217 252 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 200 216 moveto
252 216 lineto
252 231 lineto
200 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
226 219 moveto 42 -0.5 (animat.h) alignedtext
end grestore
end grestore

%	Node141 -> Node139
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 203 212 moveto
184 202 157 188 140 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 201 214 moveto
211 216 lineto
203 209 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node141 -> Node146
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 228 208 moveto
231 175 238 100 241 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 226 206 moveto
227 216 lineto
231 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node125
[ /Rect [ 227 269 279 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($utilities_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 227 268 moveto
279 268 lineto
279 283 lineto
227 283 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
253 271 moveto 42 -0.5 (utilities.h) alignedtext
end grestore
end grestore

%	Node125 -> Node141
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 245 261 moveto
240 251 234 240 230 232 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 242 261 moveto
249 268 lineto
246 258 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node125 -> Node146
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 257 260 moveto
258 252 260 241 261 232 curveto
266 171 250 99 244 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 255 258 moveto
255 268 lineto
260 259 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node146 -> Node112
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 214 57 moveto
188 47 149 32 126 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 212 59 moveto
222 60 lineto
214 54 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node143
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 308 112 moveto
337 112 lineto
337 127 lineto
308 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
322 115 moveto 13 -0.5 (list) alignedtext
end grestore
end grestore

%	Node143 -> Node146
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 303 107 moveto
287 97 267 84 254 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 300 108 moveto
310 112 lineto
303 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3093 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)1680
3730 y @beginspecial 35 @llx 35 @lly 113 @urx 121 @ury
557 @rwi @setspecial
%%BeginDocument: bacteria_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 113 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 113 121
%%PageOrientation: Portrait
gsave
35 35 78 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node147
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 10 8 moveto
66 8 lineto
66 23 lineto
10 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 10 8 moveto
66 8 lineto
66 23 lineto
10 23 lineto
closepath
stroke
gsave 10 dict begin
38 11 moveto 46 -0.5 (bacteria.h) alignedtext
end grestore
end grestore

%	Node148
[ /Rect [ 0 61 76 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
77 60 lineto
77 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
38 63 moveto 67 -0.5 (distribution.cc) alignedtext
end grestore
end grestore

%	Node148 -> Node147
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 38 60 moveto
38 53 38 42 38 33 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 41 34 moveto
38 24 lineto
36 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4092 a Fj(Namespaces)275 4279 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 4558 y Fj(11.4.1)113
b(Detailed)36 b(Description)150 4759 y Fp(Global)27 b(include)h(for)f
(all)g(bacteria-related)f(classes.)150 4906 y(Include)i(this)g(\014le)g
(to)f(ha)n(v)n(e)f(access)h(to)g(all)h(bacteria-related)d(classes.)142
5085 y Fq(Author:)311 5185 y Fp(Da)n(vid)j(Gordon)p 150
5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 222 230
222 229 bop -358 70 a Fq(222)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.5)136 b(bacterium.h)45 b(File)h(Reference)150
562 y Fp(The)28 b(in)n(terface)f(for)g(the)h(Bacterium)f(class.)150
709 y Fi(#include)40 b("animat.h")150 855 y(#include)g
("distribution.h")150 1002 y(#include)g("utilities.h")150
1149 y(#include)g Fo(<)p Fi(list)p Fo(>)150 1296 y Fp(Include)28
b(dep)r(endency)g(graph)e(for)h(bacterium.h:)1365 2078
y @beginspecial 35 @llx 35 @lly 265 @urx 173 @ury 1315
@rwi @setspecial
%%BeginDocument: bacterium_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 265 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 265 173
%%PageOrientation: Portrait
gsave
35 35 230 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node149
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 71 8 moveto
138 8 lineto
138 23 lineto
71 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 71 8 moveto
138 8 lineto
138 23 lineto
71 23 lineto
closepath
stroke
gsave 10 dict begin
104 11 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node150
[ /Rect [ 38 61 90 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 38 60 moveto
90 60 lineto
90 75 lineto
38 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
64 63 moveto 42 -0.5 (animat.h) alignedtext
end grestore
end grestore

%	Node150 -> Node149
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 53 moveto
82 43 92 32 98 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 50 moveto
70 60 lineto
78 53 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node159
[ /Rect [ 11 113 63 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($utilities_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 11 112 moveto
63 112 lineto
63 127 lineto
11 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
37 115 moveto 42 -0.5 (utilities.h) alignedtext
end grestore
end grestore

%	Node159 -> Node149
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 30 105 moveto
26 92 22 74 29 60 curveto
40 42 61 30 78 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 27 104 moveto
33 112 lineto
31 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node159 -> Node150
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 45 105 moveto
50 95 56 84 60 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 44 102 moveto
41 112 lineto
48 105 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node176
[ /Rect [ 108 61 182 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 108 60 moveto
182 60 lineto
182 75 lineto
108 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
145 63 moveto 64 -0.5 (distribution.h) alignedtext
end grestore
end grestore

%	Node176 -> Node149
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 53 moveto
126 43 116 32 110 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 131 53 moveto
139 60 lineto
135 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node175
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 200 60 moveto
229 60 lineto
229 75 lineto
200 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
214 63 moveto 13 -0.5 (list) alignedtext
end grestore
end grestore

%	Node175 -> Node149
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 192 56 moveto
167 43 139 31 122 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 191 58 moveto
201 60 lineto
193 54 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2407 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)1680
3354 y @beginspecial 35 @llx 35 @lly 113 @urx 173 @ury
557 @rwi @setspecial
%%BeginDocument: bacterium_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 113 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 113 173
%%PageOrientation: Portrait
gsave
35 35 78 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node183
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 5 8 moveto
72 8 lineto
72 23 lineto
5 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 5 8 moveto
72 8 lineto
72 23 lineto
5 23 lineto
closepath
stroke
gsave 10 dict begin
38 11 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node184
[ /Rect [ 10 61 66 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacteria_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 10 60 moveto
66 60 lineto
66 75 lineto
10 75 lineto
closepath
stroke
gsave 10 dict begin
38 63 moveto 46 -0.5 (bacteria.h) alignedtext
end grestore
end grestore

%	Node184 -> Node183
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 38 60 moveto
38 53 38 42 38 33 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 41 34 moveto
38 24 lineto
36 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node185
[ /Rect [ 0 113 76 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
77 112 lineto
77 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
38 115 moveto 67 -0.5 (distribution.cc) alignedtext
end grestore
end grestore

%	Node185 -> Node184
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 38 112 moveto
38 105 38 94 38 85 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 41 86 moveto
38 76 lineto
36 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3717 a Fj(Namespaces)275 3903 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 4183 y Fj(11.5.1)113
b(Detailed)36 b(Description)150 4383 y Fp(The)28 b(in)n(terface)f(for)g
(the)h(Bacterium)f(class.)142 4579 y Fq(Author:)311 4679
y Fp(Da)n(vid)h(Gordon)p -358 5723 V -192 5823 a Fn(Generated)e(on)f
(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 223 231
223 230 bop 150 70 a Fq(11.6)31 b(b)s(east.h)g(File)f(Reference)2757
b(223)p 150 103 4034 4 v 150 333 a Fl(11.6)136 b(b)t(east.h)45
b(File)h(Reference)150 562 y Fi(#include)40 b Fo(<)p
Fi(vector)p Fo(>)150 709 y Fi(#include)g Fo(<)p Fi(string)p
Fo(>)150 855 y Fi(#include)g("simulation.h")150 1002
y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(b)r(east.h:)1539
1824 y @beginspecial 35 @llx 35 @lly 181 @urx 173 @ury
896 @rwi @setspecial
%%BeginDocument: beast_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 181 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 181 173
%%PageOrientation: Portrait
gsave
35 35 146 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node186
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 51 8 moveto
93 8 lineto
93 23 lineto
51 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 51 8 moveto
93 8 lineto
93 23 lineto
51 23 lineto
closepath
stroke
gsave 10 dict begin
72 11 moveto 32 -0.5 (beast.h) alignedtext
end grestore
end grestore

%	Node187
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 22 112 moveto
62 112 lineto
62 127 lineto
22 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
42 115 moveto 30 -0.5 (vector) alignedtext
end grestore
end grestore

%	Node187 -> Node186
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 34 105 moveto
28 93 23 75 29 60 curveto
36 44 50 31 61 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 31 105 moveto
38 112 lineto
35 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node189
[ /Rect [ 38 61 106 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 38 60 moveto
107 60 lineto
107 75 lineto
38 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
72 63 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node187 -> Node189
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 51 104 moveto
57 95 63 84 68 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 49 102 moveto
46 112 lineto
53 105 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node188
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 83 112 moveto
120 112 lineto
120 127 lineto
83 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
101 115 moveto 27 -0.5 (string) alignedtext
end grestore
end grestore

%	Node188 -> Node186
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 109 105 moveto
115 93 121 75 115 60 curveto
108 44 94 31 83 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 108 102 moveto
106 112 lineto
112 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node188 -> Node189
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 93 105 moveto
88 95 81 84 76 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 90 105 moveto
97 112 lineto
94 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node189 -> Node186
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 51 moveto
72 42 72 31 72 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 70 50 moveto
72 60 lineto
75 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2183 a Fj(Namespaces)275 2365 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 2641 y Fj(De\014nes)275
2823 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(BEGIN)p 990
2823 29 4 v 34 w(SIMULA)-8 b(TION)p 1647 2823 V 35 w(T)g(ABLE)476
2943 y Fg(Denotes)29 b(the)f(b)l(e)l(ginning)g(of)g(the)g(simulation)f
(table.)275 3138 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(ADD)p
891 3138 V 35 w(SIMULA)-8 b(TION)p Fp(\()p 1580 3138
25 4 v 31 w(name,)p 1855 3138 V 57 w(t)n(yp)r(e\))476
3258 y Fg(Cal)t(l)20 b(this)h(onc)l(e)g(with)g(the)h(textual)g(name)f
(and)g(class)h(name)f(of)f(e)l(ach)i(simulation)e(you)i(wish)e(to)i
(make)f(available)476 3350 y(in)27 b(the)h(GUI.)275 3545
y Fk(\210)42 b Fp(#de\014ne)28 b Fq(END)p 884 3545 29
4 v 34 w(SIMULA)-8 b(TION)p 1541 3545 V 35 w(T)g(ABLE)476
3665 y Fg(Cal)t(l)26 b(this)i(to)g(denote)h(the)g(end)f(of)f(your)h
(simulation)g(table,)f(the)i(list)e(of)g(simulations)h(to)g(b)l(e)g
(made)g(available)476 3756 y(in)f(the)h(GUI.)150 4123
y Fj(11.6.1)113 b(Detailed)36 b(Description)142 4262
y Fq(Author:)311 4362 y Fp(Da)n(vid)28 b(Gordon)150 4570
y(The)36 b(main)g(include)g(\014le)g(for)f(the)h(sim)n(ulation)f(en)n
(vironmen)n(t/wx)f(-)i(include)g(this)g(\014le)g(if)g(y)n(ou)f(w)n(an)n
(t)h(to)f(run)150 4670 y(sim)n(ulations)27 b(using)g(the)h(wxWindo)n
(ws-based)e(in)n(terface.)150 4946 y Fj(11.6.2)113 b(De\014ne)38
b(Do)s(cumen)m(tation)150 5146 y Fq(11.6.2.1)93 b(#de\014ne)31
b(ADD)p 1146 5146 V 35 w(SIMULA)-8 b(TION\()p 1841 5146
V 35 w(name,)p 2157 5146 V 65 w(t)m(yp)s(e\))150 5347
y(V)g(alue:)150 5534 y Fd(names.push_back\(_name\);)1312
b(\\)291 5613 y(funcs.push_back\(new)41 b(GetSimulation<_type>\);)p
150 5723 4034 4 v 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 224 232
224 231 bop -358 70 a Fq(224)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fp(Call)23 b(this)g(once)f(with)i(the)f(textual)g(name)g(and)f
(class)g(name)h(of)g(eac)n(h)f(sim)n(ulation)g(y)n(ou)h(wish)f(to)h
(mak)n(e)f(a)n(v)-5 b(ailable)150 432 y(in)28 b(the)g(GUI.)150
579 y(ADD)p 343 579 25 4 v 31 w(SIMULA)-7 b(TION)41 b(m)n(ust)f(only)g
(b)r(e)g(called)g(b)r(et)n(w)n(een)g(BEGIN)p 2345 579
V 30 w(SIMULA)-7 b(TION)p 2913 579 V 30 w(T)g(ABLE)40
b(and)g(END)p 3622 579 V 30 w(-)150 679 y(SIMULA)-7 b(TION)p
693 679 V 30 w(T)g(ABLE.)142 858 y Fq(See)31 b(also:)311
958 y(BEGIN)p 634 958 29 4 v 34 w(SIMULA)-8 b(TION)p
1291 958 V 36 w(T)g(ABLE)311 1058 y(END)p 528 1058 V
34 w(SIMULA)g(TION)p 1185 1058 V 36 w(T)g(ABLE)150 1387
y(11.6.2.2)93 b(#de\014ne)31 b(BEGIN)p 1245 1387 V 34
w(SIMULA)-8 b(TION)p 1902 1387 V 35 w(T)g(ABLE)150 1588
y(V)g(alue:)150 1797 y Fd(namespace)38 b(BEAST)f({)1658
b(\\)150 1876 y(void)36 b(SetupSimulationTable)1382 b(\\)150
1954 y(\(std::vector<std::strin)q(g>&)42 b(names,)1095
b(\\)185 2033 y(std::vector<GetSimulat)q(ionB)q(ase)q(*>&)42
b(funcs\))848 b(\\)150 2112 y({)150 2342 y Fp(Denotes)28
b(the)g(b)r(eginning)f(of)h(the)g(sim)n(ulation)f(table.)150
2489 y(The)34 b(sim)n(ulation)f(table)h(is)g(used)g(to)g(tell)g(the)g
(GUI)h(whic)n(h)e(classes)g(\(deriv)n(ed)g(from)h(Sim)n(ulation\))g
(are)f(to)h(b)r(e)150 2589 y(made)27 b(a)n(v)-5 b(ailable)27
b(in)h(the)g(File)f(men)n(u.)142 2785 y Fq(See)k(also:)311
2884 y(ADD)p 535 2884 V 35 w(SIMULA)-8 b(TION)311 2984
y(END)p 528 2984 V 34 w(SIMULA)g(TION)p 1185 2984 V 36
w(T)g(ABLE)150 3330 y(11.6.2.3)93 b(#de\014ne)31 b(END)p
1139 3330 V 34 w(SIMULA)-8 b(TION)p 1796 3330 V 35 w(T)g(ABLE)150
3531 y(V)g(alue:)150 3740 y Fd(})2223 b(\\)150 3819 y(})150
4049 y Fp(Call)29 b(this)i(to)e(denote)h(the)g(end)g(of)g(y)n(our)e
(sim)n(ulation)i(table,)g(the)g(list)g(of)g(sim)n(ulations)f(to)h(b)r
(e)g(made)f(a)n(v)-5 b(ailable)150 4148 y(in)28 b(the)g(GUI.)142
4344 y Fq(See)j(also:)311 4444 y(BEGIN)p 634 4444 V 34
w(SIMULA)-8 b(TION)p 1291 4444 V 36 w(T)g(ABLE)311 4544
y(END)p 528 4544 V 34 w(SIMULA)g(TION)p 1185 4544 V 36
w(T)g(ABLE)p -358 5723 4034 4 v -192 5823 a Fn(Generated)26
b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 225 233
225 232 bop 150 70 a Fq(11.7)31 b(collisions.h)d(File)j(Reference)2605
b(225)p 150 103 4034 4 v 150 333 a Fl(11.7)136 b(collisions.h)46
b(File)g(Reference)150 562 y Fp(Dra)n(ws)27 b(collisions)f(in)i(the)g
(W)-7 b(orld.)150 709 y Fi(#include)40 b Fo(<)p Fi(list)p
Fo(>)150 855 y Fi(#include)g("drawable.h")150 1002 y
Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(collisions.h:)958
2211 y @beginspecial 35 @llx 35 @lly 461 @urx 277 @ury
2291 @rwi @setspecial
%%BeginDocument: collisions_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 461 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 461 277
%%PageOrientation: Portrait
gsave
35 35 426 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node230
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 122 8 moveto
183 8 lineto
183 23 lineto
122 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 122 8 moveto
183 8 lineto
183 23 lineto
122 23 lineto
closepath
stroke
gsave 10 dict begin
152 11 moveto 51 -0.5 (collisions.h) alignedtext
end grestore
end grestore

%	Node231
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 107 60 moveto
136 60 lineto
136 75 lineto
107 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
121 63 moveto 13 -0.5 (list) alignedtext
end grestore
end grestore

%	Node231 -> Node230
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 130 52 moveto
136 43 142 32 147 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 128 50 moveto
126 60 lineto
133 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node232
[ /Rect [ 153 61 215 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 153 60 moveto
216 60 lineto
216 75 lineto
153 75 lineto
closepath
stroke
gsave 10 dict begin
184 63 moveto 53 -0.5 (drawable.h) alignedtext
end grestore
end grestore

%	Node232 -> Node230
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 174 52 moveto
168 43 162 32 157 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 172 53 moveto
179 60 lineto
176 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node233
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 40 216 moveto
80 216 lineto
80 231 lineto
40 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
60 219 moveto 30 -0.5 (vector) alignedtext
end grestore
end grestore

%	Node233 -> Node232
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 49 209 moveto
33 187 6 142 29 112 curveto
31 109 112 87 156 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 46 209 moveto
54 216 lineto
50 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node246
[ /Rect [ 76 165 146 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($serialfuncs_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 76 164 moveto
147 164 lineto
147 179 lineto
76 179 lineto
closepath
stroke
gsave 10 dict begin
111 167 moveto 61 -0.5 (serialfuncs.h) alignedtext
end grestore
end grestore

%	Node233 -> Node246
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 210 moveto
84 200 96 188 104 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 207 moveto
68 216 lineto
77 211 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node234
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 38 112 moveto
85 112 lineto
85 127 lineto
38 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
61 115 moveto 37 -0.5 (GL/gl.h) alignedtext
end grestore
end grestore

%	Node234 -> Node232
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 87 109 moveto
111 98 145 84 166 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 87 106 moveto
79 112 lineto
89 111 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node235
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 102 112 moveto
156 112 lineto
156 127 lineto
102 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
129 115 moveto 44 -0.5 (GL/glu.h) alignedtext
end grestore
end grestore

%	Node235 -> Node232
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 143 106 moveto
154 96 167 84 176 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 142 103 moveto
137 112 lineto
146 107 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node236
[ /Rect [ 212 113 272 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($vector2d_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 212 112 moveto
272 112 lineto
272 127 lineto
212 127 lineto
closepath
stroke
gsave 10 dict begin
242 115 moveto 50 -0.5 (vector2d.h) alignedtext
end grestore
end grestore

%	Node236 -> Node232
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 226 106 moveto
215 96 201 84 193 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 224 107 moveto
233 112 lineto
227 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node237
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 207 216 moveto
258 216 lineto
258 231 lineto
207 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
232 219 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node237 -> Node236
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 234 208 moveto
236 186 239 145 241 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 232 206 moveto
233 216 lineto
237 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node243
[ /Rect [ 260 165 316 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($random_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 260 164 moveto
316 164 lineto
316 179 lineto
260 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
288 167 moveto 46 -0.5 (random.h) alignedtext
end grestore
end grestore

%	Node237 -> Node243
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 247 210 moveto
257 200 271 188 280 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 246 208 moveto
240 216 lineto
249 211 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node237 -> Node246
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 206 213 moveto
183 202 150 188 129 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 204 215 moveto
214 216 lineto
206 210 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node238
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 299 216 moveto
339 216 lineto
339 231 lineto
299 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
319 219 moveto 30 -0.5 (cmath) alignedtext
end grestore
end grestore

%	Node238 -> Node236
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 325 209 moveto
329 196 332 177 325 164 curveto
321 158 281 138 258 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 324 206 moveto
322 216 lineto
328 208 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node238 -> Node243
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 310 209 moveto
305 199 298 188 293 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 307 209 moveto
314 216 lineto
311 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node239
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 164 164 moveto
205 164 lineto
205 179 lineto
164 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
184 167 moveto 31 -0.5 (float.h) alignedtext
end grestore
end grestore

%	Node239 -> Node236
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 200 158 moveto
211 148 225 136 233 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 199 156 moveto
193 164 lineto
202 159 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node240
[ /Rect [ 372 165 424 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($utilities_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 372 164 moveto
424 164 lineto
424 179 lineto
372 179 lineto
closepath
stroke
gsave 10 dict begin
398 167 moveto 42 -0.5 (utilities.h) alignedtext
end grestore
end grestore

%	Node240 -> Node232
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 390 158 moveto
383 144 369 123 351 112 curveto
347 110 261 88 214 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 386 157 moveto
394 164 lineto
391 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node240 -> Node236
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 367 161 moveto
337 151 291 136 265 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 365 163 moveto
375 164 lineto
367 158 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node243 -> Node236
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 275 157 moveto
266 148 255 136 249 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 273 158 moveto
281 164 lineto
276 155 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node252
[ /Rect [ 290 113 342 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($colours_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 290 112 moveto
343 112 lineto
343 127 lineto
290 127 lineto
closepath
stroke
gsave 10 dict begin
316 115 moveto 43 -0.5 (colours.h) alignedtext
end grestore
end grestore

%	Node243 -> Node252
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 296 156 moveto
302 147 308 136 312 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 294 154 moveto
292 164 lineto
299 156 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node246 -> Node232
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 131 160 moveto
142 152 156 140 165 128 curveto
176 111 181 88 183 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 131 157 moveto
124 164 lineto
134 161 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node246 -> Node236
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 138 161 moveto
163 151 201 136 223 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 138 158 moveto
130 164 lineto
140 163 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node252 -> Node232
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 289 109 moveto
263 99 226 84 203 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 287 111 moveto
297 112 lineto
289 106 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2541 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)725
3965 y @beginspecial 35 @llx 35 @lly 572 @urx 329 @ury
2849 @rwi @setspecial
%%BeginDocument: collisions_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 572 329
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 572 329
%%PageOrientation: Portrait
gsave
35 35 537 294 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node253
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 212 8 moveto
273 8 lineto
273 23 lineto
212 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 212 8 moveto
273 8 lineto
273 23 lineto
212 23 lineto
closepath
stroke
gsave 10 dict begin
242 11 moveto 51 -0.5 (collisions.h) alignedtext
end grestore
end grestore

%	Node254
[ /Rect [ 219 61 265 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 219 60 moveto
265 60 lineto
265 75 lineto
219 75 lineto
closepath
stroke
gsave 10 dict begin
242 63 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node254 -> Node253
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 242 60 moveto
242 53 242 42 242 33 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 245 34 moveto
242 24 lineto
240 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node255
[ /Rect [ 0 113 54 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
55 112 lineto
55 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
27 115 moveto 45 -0.5 (animat.cc) alignedtext
end grestore
end grestore

%	Node255 -> Node254
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 53 112 moveto
54 112 54 112 55 112 curveto
124 94 146 96 212 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 211 81 moveto
220 76 lineto
210 76 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node256
[ /Rect [ 72 113 138 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 72 112 moveto
139 112 lineto
139 127 lineto
72 127 lineto
closepath
stroke
gsave 10 dict begin
105 115 moveto 57 -0.5 (drawable.cc) alignedtext
end grestore
end grestore

%	Node256 -> Node254
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 125 112 moveto
148 103 187 88 214 79 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 214 82 moveto
222 76 lineto
212 77 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node257
[ /Rect [ 156 113 234 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 156 112 moveto
235 112 lineto
235 127 lineto
156 127 lineto
closepath
stroke
gsave 10 dict begin
195 115 moveto 69 -0.5 (worldobject.cc) alignedtext
end grestore
end grestore

%	Node257 -> Node254
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 202 112 moveto
209 104 220 92 229 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 230 85 moveto
235 76 lineto
227 82 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node258
[ /Rect [ 252 113 326 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 252 112 moveto
326 112 lineto
326 127 lineto
252 127 lineto
closepath
stroke
gsave 10 dict begin
289 115 moveto 64 -0.5 (distribution.h) alignedtext
end grestore
end grestore

%	Node258 -> Node254
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 282 112 moveto
275 104 264 92 255 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 257 82 moveto
249 76 lineto
254 85 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node259
[ /Rect [ 201 269 277 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 201 268 moveto
278 268 lineto
278 283 lineto
201 283 lineto
closepath
stroke
gsave 10 dict begin
239 271 moveto 67 -0.5 (distribution.cc) alignedtext
end grestore
end grestore

%	Node259 -> Node258
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 236 268 moveto
232 257 225 234 230 216 curveto
240 176 247 162 271 135 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 273 137 moveto
278 128 lineto
269 133 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node260
[ /Rect [ 239 217 295 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacteria_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 239 216 moveto
295 216 lineto
295 231 lineto
239 231 lineto
closepath
stroke
gsave 10 dict begin
267 219 moveto 46 -0.5 (bacteria.h) alignedtext
end grestore
end grestore

%	Node259 -> Node260
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 243 268 moveto
247 260 253 249 259 240 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 261 242 moveto
263 232 lineto
256 240 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node260 -> Node258
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 266 216 moveto
265 205 263 182 268 164 curveto
270 154 275 143 279 135 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 280 138 moveto
284 128 lineto
276 135 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node261
[ /Rect [ 277 165 343 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacterium_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 277 164 moveto
344 164 lineto
344 179 lineto
277 179 lineto
closepath
stroke
gsave 10 dict begin
310 167 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node260 -> Node261
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 273 216 moveto
279 208 289 196 298 187 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 299 189 moveto
304 180 lineto
296 186 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node261 -> Node258
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 307 164 moveto
304 157 299 146 296 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 298 136 moveto
292 128 lineto
294 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node262
[ /Rect [ 383 165 451 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 383 164 moveto
452 164 lineto
452 179 lineto
383 179 lineto
closepath
stroke
gsave 10 dict begin
417 167 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node262 -> Node254
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 408 164 moveto
393 152 362 129 335 112 curveto
313 99 287 87 268 79 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 271 78 moveto
261 76 lineto
269 82 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node265
[ /Rect [ 382 113 452 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($population_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 382 112 moveto
452 112 lineto
452 127 lineto
382 127 lineto
closepath
stroke
gsave 10 dict begin
417 115 moveto 60 -0.5 (population.h) alignedtext
end grestore
end grestore

%	Node262 -> Node265
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 412 164 moveto
411 157 410 146 411 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 413 138 moveto
412 128 lineto
408 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node263
[ /Rect [ 313 217 385 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 313 216 moveto
385 216 lineto
385 231 lineto
313 231 lineto
closepath
stroke
gsave 10 dict begin
349 219 moveto 62 -0.5 (simulation.cc) alignedtext
end grestore
end grestore

%	Node263 -> Node262
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 359 216 moveto
370 208 387 195 400 185 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 400 188 moveto
407 180 lineto
397 184 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node264
[ /Rect [ 403 217 475 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($glutsimenv_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 403 216 moveto
475 216 lineto
475 231 lineto
403 231 lineto
closepath
stroke
gsave 10 dict begin
439 219 moveto 62 -0.5 (glutsimenv.h) alignedtext
end grestore
end grestore

%	Node264 -> Node262
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 436 216 moveto
433 209 428 198 424 189 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 426 188 moveto
420 180 lineto
422 190 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node265 -> Node254
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 390 112 moveto
361 105 315 92 274 79 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 274 76 moveto
264 76 lineto
273 81 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node265 -> Node262
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 423 156 moveto
424 146 424 136 422 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 421 154 moveto
422 164 lineto
426 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node266
[ /Rect [ 493 217 535 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($beast_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 493 216 moveto
535 216 lineto
535 231 lineto
493 231 lineto
closepath
stroke
gsave 10 dict begin
514 219 moveto 32 -0.5 (beast.h) alignedtext
end grestore
end grestore

%	Node266 -> Node262
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 500 216 moveto
484 207 458 193 439 184 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 441 182 moveto
431 180 lineto
439 187 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4327 a Fj(Namespaces)275 4514 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 4794 y Fj(11.7.1)113
b(Detailed)36 b(Description)150 4994 y Fp(Dra)n(ws)27
b(collisions)f(in)i(the)g(W)-7 b(orld.)142 5190 y Fq(Author:)311
5290 y Fp(T)g(om)28 b(Carden)p 150 5723 V 150 5823 a
Fn(Generated)e(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d
(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 226 234
226 233 bop -358 70 a Fq(226)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.8)136 b(colours.h)45 b(File)g(Reference)150
562 y Fp(A)28 b(handy)f(include)h(whic)n(h)g(pro)n(vides)e(a)h(bunc)n
(h)h(of)f(colours.)150 709 y Fi(#include)40 b("random.h")150
855 y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(colours.h:)1219
1617 y @beginspecial 35 @llx 35 @lly 335 @urx 173 @ury
1663 @rwi @setspecial
%%BeginDocument: colours_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 335 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 335 173
%%PageOrientation: Portrait
gsave
35 35 300 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node267
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 108 8 moveto
161 8 lineto
161 23 lineto
108 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 108 8 moveto
161 8 lineto
161 23 lineto
108 23 lineto
closepath
stroke
gsave 10 dict begin
134 11 moveto 43 -0.5 (colours.h) alignedtext
end grestore
end grestore

%	Node268
[ /Rect [ 106 61 162 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($random_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 106 60 moveto
162 60 lineto
162 75 lineto
106 75 lineto
closepath
stroke
gsave 10 dict begin
134 63 moveto 46 -0.5 (random.h) alignedtext
end grestore
end grestore

%	Node268 -> Node267
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 51 moveto
134 42 134 31 134 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 132 50 moveto
134 60 lineto
137 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node269
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 0 112 moveto
40 112 lineto
40 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
20 115 moveto 30 -0.5 (cmath) alignedtext
end grestore
end grestore

%	Node269 -> Node268
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 45 108 moveto
67 98 98 84 118 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 45 105 moveto
37 112 lineto
47 110 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node270
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 58 112 moveto
99 112 lineto
99 127 lineto
58 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
78 115 moveto 31 -0.5 (cstdlib) alignedtext
end grestore
end grestore

%	Node270 -> Node268
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 93 106 moveto
103 96 117 84 126 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 104 moveto
86 112 lineto
95 107 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node271
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 116 112 moveto
152 112 lineto
152 127 lineto
116 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
134 115 moveto 26 -0.5 (ctime) alignedtext
end grestore
end grestore

%	Node271 -> Node268
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 103 moveto
134 94 134 83 134 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 132 102 moveto
134 112 lineto
137 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node272
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 170 112 moveto
221 112 lineto
221 127 lineto
170 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
195 115 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node272 -> Node268
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 179 106 moveto
167 96 153 84 143 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 107 moveto
186 112 lineto
180 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node273
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 238 112 moveto
299 112 lineto
299 127 lineto
238 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
268 115 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node273 -> Node268
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 241 109 moveto
214 99 176 84 153 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 239 111 moveto
249 112 lineto
241 106 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1947 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)754
3603 y @beginspecial 35 @llx 35 @lly 558 @urx 381 @ury
2779 @rwi @setspecial
%%BeginDocument: colours_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 558 381
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 558 381
%%PageOrientation: Portrait
gsave
35 35 523 346 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node274
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 186 8 moveto
239 8 lineto
239 23 lineto
186 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 186 8 moveto
239 8 lineto
239 23 lineto
186 23 lineto
closepath
stroke
gsave 10 dict begin
212 11 moveto 43 -0.5 (colours.h) alignedtext
end grestore
end grestore

%	Node275
[ /Rect [ 181 61 243 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 181 60 moveto
244 60 lineto
244 75 lineto
181 75 lineto
closepath
stroke
gsave 10 dict begin
212 63 moveto 53 -0.5 (drawable.h) alignedtext
end grestore
end grestore

%	Node275 -> Node274
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 212 60 moveto
212 53 212 42 212 33 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 215 34 moveto
212 24 lineto
210 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node276
[ /Rect [ 0 321 66 335 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 320 moveto
67 320 lineto
67 335 lineto
0 335 lineto
closepath
stroke
gsave 10 dict begin
33 323 moveto 57 -0.5 (drawable.cc) alignedtext
end grestore
end grestore

%	Node276 -> Node275
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 32 320 moveto
29 303 23 260 23 224 curveto
23 224 23 224 23 172 curveto
23 137 125 97 179 79 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 179 82 moveto
188 76 lineto
178 77 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node281
[ /Rect [ 193 269 239 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 193 268 moveto
239 268 lineto
239 283 lineto
193 283 lineto
closepath
stroke
gsave 10 dict begin
216 271 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node276 -> Node281
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 62 320 moveto
92 312 142 299 186 286 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 185 289 moveto
194 284 lineto
184 284 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node277
[ /Rect [ 247 113 323 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 247 112 moveto
323 112 lineto
323 127 lineto
247 127 lineto
closepath
stroke
gsave 10 dict begin
285 115 moveto 66 -0.5 (worldobject.h) alignedtext
end grestore
end grestore

%	Node277 -> Node275
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 274 112 moveto
262 104 244 91 230 81 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 233 80 moveto
223 76 lineto
230 84 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node278
[ /Rect [ 102 321 180 335 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 102 320 moveto
181 320 lineto
181 335 lineto
102 335 lineto
closepath
stroke
gsave 10 dict begin
141 323 moveto 69 -0.5 (worldobject.cc) alignedtext
end grestore
end grestore

%	Node278 -> Node277
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 133 320 moveto
109 295 40 214 80 164 curveto
81 163 180 142 240 130 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 240 133 moveto
249 128 lineto
239 128 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node278 -> Node281
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 152 320 moveto
164 312 183 299 198 289 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 198 292 moveto
205 284 lineto
195 288 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node279
[ /Rect [ 420 217 472 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 420 216 moveto
472 216 lineto
472 231 lineto
420 231 lineto
closepath
stroke
gsave 10 dict begin
446 219 moveto 42 -0.5 (animat.h) alignedtext
end grestore
end grestore

%	Node279 -> Node277
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 440 216 moveto
431 204 411 179 390 164 curveto
368 149 340 138 319 131 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 321 129 moveto
311 128 lineto
319 134 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node294
[ /Rect [ 313 165 381 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensorbase_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 313 164 moveto
382 164 lineto
382 179 lineto
313 179 lineto
closepath
stroke
gsave 10 dict begin
347 167 moveto 59 -0.5 (sensorbase.h) alignedtext
end grestore
end grestore

%	Node279 -> Node294
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 431 216 moveto
415 207 388 193 369 184 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 371 182 moveto
361 180 lineto
369 187 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node297
[ /Rect [ 385 113 421 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($trail_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 385 112 moveto
422 112 lineto
422 127 lineto
385 127 lineto
closepath
stroke
gsave 10 dict begin
403 115 moveto 27 -0.5 (trail.h) alignedtext
end grestore
end grestore

%	Node279 -> Node297
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 443 216 moveto
439 205 431 182 423 164 curveto
419 154 413 143 410 135 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 413 136 moveto
407 128 lineto
409 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node280
[ /Rect [ 388 321 442 335 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 388 320 moveto
443 320 lineto
443 335 lineto
388 335 lineto
closepath
stroke
gsave 10 dict begin
415 323 moveto 45 -0.5 (animat.cc) alignedtext
end grestore
end grestore

%	Node280 -> Node279
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 442 320 moveto
459 314 481 302 492 284 curveto
502 266 483 247 466 236 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 469 235 moveto
459 232 lineto
466 239 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node280 -> Node281
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 390 320 moveto
389 320 389 320 388 320 curveto
325 303 306 303 247 286 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 248 284 moveto
238 284 lineto
247 289 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node281 -> Node277
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 221 268 moveto
230 252 251 214 266 180 curveto
272 165 277 147 281 135 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 283 138 moveto
283 128 lineto
278 137 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node281 -> Node279
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 237 268 moveto
237 268 238 268 239 268 curveto
316 247 339 252 413 234 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 413 237 moveto
422 232 lineto
412 232 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node298
[ /Rect [ 167 165 257 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animatmonitor_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 167 164 moveto
258 164 lineto
258 179 lineto
167 179 lineto
closepath
stroke
gsave 10 dict begin
212 167 moveto 81 -0.5 (animatmonitor.h) alignedtext
end grestore
end grestore

%	Node281 -> Node298
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 216 268 moveto
215 251 213 210 212 188 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 215 190 moveto
212 180 lineto
210 190 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node299
[ /Rect [ 89 165 149 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($collisions_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 89 164 moveto
150 164 lineto
150 179 lineto
89 179 lineto
closepath
stroke
gsave 10 dict begin
119 167 moveto 51 -0.5 (collisions.h) alignedtext
end grestore
end grestore

%	Node281 -> Node299
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 209 268 moveto
193 251 153 209 132 187 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 186 moveto
126 180 lineto
131 189 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node286
[ /Rect [ 207 321 275 335 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 207 320 moveto
276 320 lineto
276 335 lineto
207 335 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
241 323 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node286 -> Node279
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 248 320 moveto
259 307 283 282 308 268 curveto
344 247 357 252 397 240 curveto
402 238 408 236 414 234 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 414 237 moveto
423 232 lineto
413 232 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node286 -> Node281
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 237 320 moveto
233 313 228 302 224 292 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 227 292 moveto
220 284 lineto
222 294 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node285
[ /Rect [ 317 269 383 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacterium_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 317 268 moveto
384 268 lineto
384 283 lineto
317 283 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
350 271 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node285 -> Node279
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 364 268 moveto
380 259 406 245 424 236 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 424 239 moveto
432 232 lineto
422 234 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node291
[ /Rect [ 401 269 483 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($neuralanimat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 401 268 moveto
484 268 lineto
484 283 lineto
401 283 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
442 271 moveto 73 -0.5 (neuralanimat.h) alignedtext
end grestore
end grestore

%	Node291 -> Node279
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 443 268 moveto
444 261 444 250 445 241 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 448 242 moveto
445 232 lineto
443 242 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node294 -> Node277
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 338 164 moveto
328 156 313 143 301 134 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 303 133 moveto
294 128 lineto
300 136 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node295
[ /Rect [ 278 217 326 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensor_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 278 216 moveto
326 216 lineto
326 231 lineto
278 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
302 219 moveto 38 -0.5 (sensor.h) alignedtext
end grestore
end grestore

%	Node295 -> Node294
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 309 216 moveto
315 208 326 196 334 187 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 335 189 moveto
340 180 lineto
332 186 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node296
[ /Rect [ 344 217 402 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($signaller_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 344 216 moveto
402 216 lineto
402 231 lineto
344 231 lineto
closepath
stroke
gsave 10 dict begin
373 219 moveto 48 -0.5 (signaller.h) alignedtext
end grestore
end grestore

%	Node296 -> Node294
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 369 216 moveto
365 208 360 198 355 188 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 358 188 moveto
351 180 lineto
353 190 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node297 -> Node275
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 387 112 moveto
386 112 386 112 385 112 curveto
381 111 301 91 251 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 252 76 moveto
242 76 lineto
251 81 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node298 -> Node275
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 212 164 moveto
212 147 212 106 212 84 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 215 86 moveto
212 76 lineto
210 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node299 -> Node275
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 126 164 moveto
142 147 179 105 199 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 200 85 moveto
205 76 lineto
197 82 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3966 a Fj(Namespaces)275 4152 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 4432 y Fj(11.8.1)113
b(Detailed)36 b(Description)150 4633 y Fp(A)28 b(handy)f(include)h
(whic)n(h)g(pro)n(vides)e(a)h(bunc)n(h)h(of)f(colours.)142
4845 y Fq(Author:)311 4945 y Fp(T)-7 b(om)28 b(Carden)311
5044 y(Da)n(vid)g(Gordon)p -358 5723 V -192 5823 a Fn(Generated)e(on)f
(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 227 235
227 234 bop 150 70 a Fq(11.9)31 b(distribution.cc)f(File)h(Reference)
2455 b(227)p 150 103 4034 4 v 150 333 a Fl(11.9)136 b(distribution.cc)
45 b(File)h(Reference)150 562 y Fp(Implemen)n(tation)28
b(of)f(the)h(Distribution)g(class.)150 709 y Fi(#include)40
b("distribution.h")150 855 y(#include)g("bacteria.h")150
1002 y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(distribution.cc:)
1331 2515 y @beginspecial 35 @llx 35 @lly 281 @urx 329
@ury 1394 @rwi @setspecial
%%BeginDocument: distribution_8cc__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 281 329
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 281 329
%%PageOrientation: Portrait
gsave
35 35 246 294 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node300
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 21 8 moveto
98 8 lineto
98 23 lineto
21 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 21 8 moveto
98 8 lineto
98 23 lineto
21 23 lineto
closepath
stroke
gsave 10 dict begin
59 11 moveto 67 -0.5 (distribution.cc) alignedtext
end grestore
end grestore

%	Node301
[ /Rect [ 14 165 88 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 14 164 moveto
88 164 lineto
88 179 lineto
14 179 lineto
closepath
stroke
gsave 10 dict begin
51 167 moveto 64 -0.5 (distribution.h) alignedtext
end grestore
end grestore

%	Node301 -> Node300
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 52 156 moveto
52 144 53 127 54 112 curveto
56 79 58 40 59 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 50 154 moveto
51 164 lineto
55 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node334
[ /Rect [ 81 61 137 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacteria_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 81 60 moveto
137 60 lineto
137 75 lineto
81 75 lineto
closepath
stroke
gsave 10 dict begin
109 63 moveto 46 -0.5 (bacteria.h) alignedtext
end grestore
end grestore

%	Node301 -> Node334
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 53 156 moveto
55 144 59 126 67 112 curveto
75 97 90 84 99 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 51 154 moveto
52 164 lineto
56 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node335
[ /Rect [ 76 113 142 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacterium_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 76 112 moveto
143 112 lineto
143 127 lineto
76 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
109 115 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node301 -> Node335
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 158 moveto
78 148 92 136 100 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 156 moveto
60 164 lineto
69 159 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node302
[ /Rect [ 92 217 140 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensor_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 92 216 moveto
140 216 lineto
140 231 lineto
92 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
116 219 moveto 38 -0.5 (sensor.h) alignedtext
end grestore
end grestore

%	Node302 -> Node301
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 99 210 moveto
87 201 71 188 61 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 97 211 moveto
106 216 lineto
100 208 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node327
[ /Rect [ 28 217 74 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 28 216 moveto
74 216 lineto
74 231 lineto
28 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
51 219 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node327 -> Node301
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 51 207 moveto
51 198 51 187 51 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 49 206 moveto
51 216 lineto
54 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node320
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 90 268 moveto
130 268 lineto
130 283 lineto
90 283 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
110 271 moveto 30 -0.5 (vector) alignedtext
end grestore
end grestore

%	Node320 -> Node327
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 94 262 moveto
83 252 69 240 60 232 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 263 moveto
101 268 lineto
95 260 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node320 -> Node334
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 126 262 moveto
135 254 144 244 149 232 curveto
168 182 170 161 151 112 curveto
144 96 130 83 120 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 125 259 moveto
120 268 lineto
129 263 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node334 -> Node300
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 96 54 moveto
86 44 74 32 66 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 93 55 moveto
102 60 lineto
97 51 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node319
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 198 112 moveto
245 112 lineto
245 127 lineto
198 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
221 115 moveto 37 -0.5 (sstream) alignedtext
end grestore
end grestore

%	Node319 -> Node334
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 196 108 moveto
175 98 144 84 125 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 194 110 moveto
204 112 lineto
196 105 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node335 -> Node334
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 109 103 moveto
109 94 109 83 109 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 107 102 moveto
109 112 lineto
112 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2878 a Fj(Namespaces)275 3065 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 3344 y Fj(11.9.1)113
b(Detailed)36 b(Description)150 3545 y Fp(Implemen)n(tation)28
b(of)f(the)h(Distribution)g(class.)p 150 5723 V 150 5823
a Fn(Generated)e(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d
(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 228 236
228 235 bop -358 70 a Fq(228)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.10)136 b(distribution.h)46 b(File)f(Reference)150
562 y Fp(Implemen)n(ts)28 b(a)f(t)n(w)n(o-dimensional)f(densit)n(y)h
(distribution.)150 709 y Fi(#include)40 b("sensor.h")150
855 y(#include)g("world.h")150 1002 y Fp(Include)28 b(dep)r(endency)g
(graph)e(for)h(distribution.h:)1605 1590 y @beginspecial
35 @llx 35 @lly 149 @urx 121 @ury 737 @rwi @setspecial
%%BeginDocument: distribution_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 149 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 149 121
%%PageOrientation: Portrait
gsave
35 35 114 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node337
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 19 8 moveto
93 8 lineto
93 23 lineto
19 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 19 8 moveto
93 8 lineto
93 23 lineto
19 23 lineto
closepath
stroke
gsave 10 dict begin
56 11 moveto 64 -0.5 (distribution.h) alignedtext
end grestore
end grestore

%	Node338
[ /Rect [ 0 61 48 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensor_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 0 60 moveto
48 60 lineto
48 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
24 63 moveto 38 -0.5 (sensor.h) alignedtext
end grestore
end grestore

%	Node338 -> Node337
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 34 52 moveto
40 43 46 32 51 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 32 50 moveto
29 60 lineto
36 53 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node363
[ /Rect [ 66 61 112 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 66 60 moveto
112 60 lineto
112 75 lineto
66 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
89 63 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node363 -> Node337
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 79 52 moveto
73 43 66 32 61 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 77 53 moveto
84 60 lineto
81 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1919 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)1543
3018 y @beginspecial 35 @llx 35 @lly 179 @urx 225 @ury
886 @rwi @setspecial
%%BeginDocument: distribution_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 179 225
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 179 225
%%PageOrientation: Portrait
gsave
35 35 144 190 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node370
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 11 8 moveto
85 8 lineto
85 23 lineto
11 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 11 8 moveto
85 8 lineto
85 23 lineto
11 23 lineto
closepath
stroke
gsave 10 dict begin
48 11 moveto 64 -0.5 (distribution.h) alignedtext
end grestore
end grestore

%	Node371
[ /Rect [ 0 165 76 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 164 moveto
77 164 lineto
77 179 lineto
0 179 lineto
closepath
stroke
gsave 10 dict begin
38 167 moveto 67 -0.5 (distribution.cc) alignedtext
end grestore
end grestore

%	Node371 -> Node370
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 36 164 moveto
34 156 31 140 29 128 curveto
25 92 36 51 43 30 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 44 34 moveto
45 24 lineto
39 33 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node372
[ /Rect [ 38 113 94 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacteria_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 38 112 moveto
94 112 lineto
94 127 lineto
38 127 lineto
closepath
stroke
gsave 10 dict begin
66 115 moveto 46 -0.5 (bacteria.h) alignedtext
end grestore
end grestore

%	Node371 -> Node372
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 42 164 moveto
46 156 52 145 58 136 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 60 138 moveto
62 128 lineto
55 136 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node372 -> Node370
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 65 112 moveto
61 95 55 54 50 31 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 53 34 moveto
49 24 lineto
48 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node373
[ /Rect [ 76 61 142 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacterium_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 76 60 moveto
143 60 lineto
143 75 lineto
76 75 lineto
closepath
stroke
gsave 10 dict begin
109 63 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node372 -> Node373
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 112 moveto
78 104 88 92 97 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 98 85 moveto
103 76 lineto
95 82 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node373 -> Node370
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 100 60 moveto
90 52 76 40 64 30 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 29 moveto
57 24 lineto
63 32 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3381 a Fj(Namespaces)275 3568 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 3847 y Fj(11.10.1)113
b(Detailed)36 b(Description)150 4048 y Fp(Implemen)n(ts)28
b(a)f(t)n(w)n(o-dimensional)f(densit)n(y)h(distribution.)142
4260 y Fq(Author:)311 4360 y Fp(Da)n(vid)h(Gordon)p -358
5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 229 237
229 236 bop 150 70 a Fq(11.11)30 b(dra)m(w)m(able.cc)k(File)c
(Reference)2526 b(229)p 150 103 4034 4 v 150 333 a Fl(11.11)136
b(dra)l(w)l(able.cc)46 b(File)g(Reference)150 562 y Fp(Implemen)n
(tation)28 b(of)f(Dra)n(w)n(able.)150 709 y Fi(#include)40
b("drawable.h")150 855 y(#include)g("world.h")150 1002
y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(dra)n(w)n(able.cc:)1576
1578 y @beginspecial 35 @llx 35 @lly 163 @urx 121 @ury
806 @rwi @setspecial
%%BeginDocument: drawable_8cc__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 163 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 163 121
%%PageOrientation: Portrait
gsave
35 35 128 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node374
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 34 8 moveto
101 8 lineto
101 23 lineto
34 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 34 8 moveto
101 8 lineto
101 23 lineto
34 23 lineto
closepath
stroke
gsave 10 dict begin
67 11 moveto 57 -0.5 (drawable.cc) alignedtext
end grestore
end grestore

%	Node375
[ /Rect [ 0 61 62 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 0 60 moveto
63 60 lineto
63 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
31 63 moveto 53 -0.5 (drawable.h) alignedtext
end grestore
end grestore

%	Node375 -> Node374
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 41 52 moveto
48 43 57 32 62 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 39 50 moveto
36 60 lineto
43 53 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node396
[ /Rect [ 80 61 126 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 80 60 moveto
126 60 lineto
126 75 lineto
80 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
103 63 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node396 -> Node374
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 93 52 moveto
86 43 77 32 72 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 91 53 moveto
98 60 lineto
95 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1941 a Fj(Namespaces)275 2127 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 2407 y Fj(11.11.1)113
b(Detailed)36 b(Description)150 2608 y Fp(Implemen)n(tation)28
b(of)f(Dra)n(w)n(able.)p 150 5723 V 150 5823 a Fn(Generated)f(on)e(Sun)
h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 230 238
230 237 bop -358 70 a Fq(230)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.12)136 b(dra)l(w)l(able.h)46 b(File)g(Reference)150
562 y Fp(Include)26 b(this)h(\014le)f(if)h(y)n(ou)e(wish)h(to)h(create)
e(scenery)g(or)g(other)h(non-in)n(teractiv)n(e)e(ob)5
b(jects)26 b(whic)n(h)g(app)r(ear)f(in)i(the)150 662
y(w)n(orld.)150 809 y Fi(#include)40 b Fo(<)p Fi(vector)p
Fo(>)150 955 y Fi(#include)g Fo(<)p Fi(GL/gl.h)p Fo(>)150
1102 y Fi(#include)g Fo(<)p Fi(GL/glu.h)p Fo(>)150 1249
y Fi(#include)g("vector2d.h")150 1396 y(#include)g("colours.h")150
1543 y(#include)g("serialfuncs.h")150 1690 y(#include)g("utilities.h")
150 1837 y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(dra)n(w)n
(able.h:)958 2813 y @beginspecial 35 @llx 35 @lly 461
@urx 225 @ury 2291 @rwi @setspecial
%%BeginDocument: drawable_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 461 225
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 461 225
%%PageOrientation: Portrait
gsave
35 35 426 190 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node407
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 153 8 moveto
216 8 lineto
216 23 lineto
153 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 153 8 moveto
216 8 lineto
216 23 lineto
153 23 lineto
closepath
stroke
gsave 10 dict begin
184 11 moveto 53 -0.5 (drawable.h) alignedtext
end grestore
end grestore

%	Node408
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 40 164 moveto
80 164 lineto
80 179 lineto
40 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
60 167 moveto 30 -0.5 (vector) alignedtext
end grestore
end grestore

%	Node408 -> Node407
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 49 157 moveto
33 135 6 90 29 60 curveto
31 57 112 35 156 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 46 157 moveto
54 164 lineto
50 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node421
[ /Rect [ 76 113 146 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($serialfuncs_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 76 112 moveto
147 112 lineto
147 127 lineto
76 127 lineto
closepath
stroke
gsave 10 dict begin
111 115 moveto 61 -0.5 (serialfuncs.h) alignedtext
end grestore
end grestore

%	Node408 -> Node421
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 158 moveto
84 148 96 136 104 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 155 moveto
68 164 lineto
77 159 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node409
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 38 60 moveto
85 60 lineto
85 75 lineto
38 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
61 63 moveto 37 -0.5 (GL/gl.h) alignedtext
end grestore
end grestore

%	Node409 -> Node407
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 87 57 moveto
111 46 145 32 166 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 87 54 moveto
79 60 lineto
89 59 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node410
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 102 60 moveto
156 60 lineto
156 75 lineto
102 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
129 63 moveto 44 -0.5 (GL/glu.h) alignedtext
end grestore
end grestore

%	Node410 -> Node407
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 143 54 moveto
154 44 167 32 176 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 142 51 moveto
137 60 lineto
146 55 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node411
[ /Rect [ 212 61 272 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($vector2d_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 212 60 moveto
272 60 lineto
272 75 lineto
212 75 lineto
closepath
stroke
gsave 10 dict begin
242 63 moveto 50 -0.5 (vector2d.h) alignedtext
end grestore
end grestore

%	Node411 -> Node407
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 226 54 moveto
215 44 201 32 193 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 224 55 moveto
233 60 lineto
227 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node412
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 207 164 moveto
258 164 lineto
258 179 lineto
207 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
232 167 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node412 -> Node411
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 234 156 moveto
236 134 239 93 241 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 232 154 moveto
233 164 lineto
237 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node418
[ /Rect [ 260 113 316 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($random_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 260 112 moveto
316 112 lineto
316 127 lineto
260 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
288 115 moveto 46 -0.5 (random.h) alignedtext
end grestore
end grestore

%	Node412 -> Node418
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 247 158 moveto
257 148 271 136 280 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 246 156 moveto
240 164 lineto
249 159 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node412 -> Node421
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 206 161 moveto
183 150 150 136 129 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 204 163 moveto
214 164 lineto
206 158 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node413
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 299 164 moveto
339 164 lineto
339 179 lineto
299 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
319 167 moveto 30 -0.5 (cmath) alignedtext
end grestore
end grestore

%	Node413 -> Node411
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 325 157 moveto
329 144 332 125 325 112 curveto
321 106 281 86 258 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 324 154 moveto
322 164 lineto
328 156 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node413 -> Node418
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 310 157 moveto
305 147 298 136 293 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 307 157 moveto
314 164 lineto
311 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node414
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 164 112 moveto
205 112 lineto
205 127 lineto
164 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
184 115 moveto 31 -0.5 (float.h) alignedtext
end grestore
end grestore

%	Node414 -> Node411
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 200 106 moveto
211 96 225 84 233 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 199 104 moveto
193 112 lineto
202 107 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node415
[ /Rect [ 372 113 424 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($utilities_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 372 112 moveto
424 112 lineto
424 127 lineto
372 127 lineto
closepath
stroke
gsave 10 dict begin
398 115 moveto 42 -0.5 (utilities.h) alignedtext
end grestore
end grestore

%	Node415 -> Node407
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 390 106 moveto
383 92 369 71 351 60 curveto
347 58 261 36 214 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 386 105 moveto
394 112 lineto
391 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node415 -> Node411
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 367 109 moveto
337 99 291 84 265 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 365 111 moveto
375 112 lineto
367 106 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node418 -> Node411
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 275 105 moveto
266 96 255 84 249 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 273 106 moveto
281 112 lineto
276 103 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node427
[ /Rect [ 290 61 342 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($colours_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 290 60 moveto
343 60 lineto
343 75 lineto
290 75 lineto
closepath
stroke
gsave 10 dict begin
316 63 moveto 43 -0.5 (colours.h) alignedtext
end grestore
end grestore

%	Node418 -> Node427
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 296 104 moveto
302 95 308 84 312 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 294 102 moveto
292 112 lineto
299 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node421 -> Node407
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 131 108 moveto
142 100 156 88 165 76 curveto
176 59 181 36 183 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 131 105 moveto
124 112 lineto
134 109 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node421 -> Node411
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 138 109 moveto
163 99 201 84 223 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 138 106 moveto
130 112 lineto
140 111 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node427 -> Node407
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 289 57 moveto
263 47 226 32 203 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 287 59 moveto
297 60 lineto
289 54 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3144 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)754
4571 y @beginspecial 35 @llx 35 @lly 558 @urx 329 @ury
2779 @rwi @setspecial
%%BeginDocument: drawable_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 558 329
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 558 329
%%PageOrientation: Portrait
gsave
35 35 523 294 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node428
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 181 8 moveto
244 8 lineto
244 23 lineto
181 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 181 8 moveto
244 8 lineto
244 23 lineto
181 23 lineto
closepath
stroke
gsave 10 dict begin
212 11 moveto 53 -0.5 (drawable.h) alignedtext
end grestore
end grestore

%	Node429
[ /Rect [ 0 269 66 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 268 moveto
67 268 lineto
67 283 lineto
0 283 lineto
closepath
stroke
gsave 10 dict begin
33 271 moveto 57 -0.5 (drawable.cc) alignedtext
end grestore
end grestore

%	Node429 -> Node428
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 32 268 moveto
29 251 23 208 23 172 curveto
23 172 23 172 23 120 curveto
23 85 125 45 179 27 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 179 30 moveto
188 24 lineto
178 25 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node434
[ /Rect [ 193 217 239 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 193 216 moveto
239 216 lineto
239 231 lineto
193 231 lineto
closepath
stroke
gsave 10 dict begin
216 219 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node429 -> Node434
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 62 268 moveto
92 260 142 247 186 234 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 185 237 moveto
194 232 lineto
184 232 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node430
[ /Rect [ 247 61 323 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 247 60 moveto
323 60 lineto
323 75 lineto
247 75 lineto
closepath
stroke
gsave 10 dict begin
285 63 moveto 66 -0.5 (worldobject.h) alignedtext
end grestore
end grestore

%	Node430 -> Node428
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 274 60 moveto
262 52 244 39 230 29 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 233 28 moveto
223 24 lineto
230 32 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node431
[ /Rect [ 102 269 180 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 102 268 moveto
181 268 lineto
181 283 lineto
102 283 lineto
closepath
stroke
gsave 10 dict begin
141 271 moveto 69 -0.5 (worldobject.cc) alignedtext
end grestore
end grestore

%	Node431 -> Node430
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 133 268 moveto
109 243 40 162 80 112 curveto
81 111 180 90 240 78 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 240 81 moveto
249 76 lineto
239 76 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node431 -> Node434
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 152 268 moveto
164 260 183 247 198 237 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 198 240 moveto
205 232 lineto
195 236 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node432
[ /Rect [ 420 165 472 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 420 164 moveto
472 164 lineto
472 179 lineto
420 179 lineto
closepath
stroke
gsave 10 dict begin
446 167 moveto 42 -0.5 (animat.h) alignedtext
end grestore
end grestore

%	Node432 -> Node430
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 440 164 moveto
431 152 411 127 390 112 curveto
368 97 340 86 319 79 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 321 77 moveto
311 76 lineto
319 82 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node447
[ /Rect [ 313 113 381 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensorbase_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 313 112 moveto
382 112 lineto
382 127 lineto
313 127 lineto
closepath
stroke
gsave 10 dict begin
347 115 moveto 59 -0.5 (sensorbase.h) alignedtext
end grestore
end grestore

%	Node432 -> Node447
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 431 164 moveto
415 155 388 141 369 132 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 371 130 moveto
361 128 lineto
369 135 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node450
[ /Rect [ 385 61 421 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($trail_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 385 60 moveto
422 60 lineto
422 75 lineto
385 75 lineto
closepath
stroke
gsave 10 dict begin
403 63 moveto 27 -0.5 (trail.h) alignedtext
end grestore
end grestore

%	Node432 -> Node450
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 443 164 moveto
439 153 431 130 423 112 curveto
419 102 413 91 410 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 413 84 moveto
407 76 lineto
409 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node433
[ /Rect [ 388 269 442 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 388 268 moveto
443 268 lineto
443 283 lineto
388 283 lineto
closepath
stroke
gsave 10 dict begin
415 271 moveto 45 -0.5 (animat.cc) alignedtext
end grestore
end grestore

%	Node433 -> Node432
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 442 268 moveto
459 262 481 250 492 232 curveto
502 214 483 195 466 184 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 469 183 moveto
459 180 lineto
466 187 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node433 -> Node434
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 390 268 moveto
389 268 389 268 388 268 curveto
325 251 306 251 247 234 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 248 232 moveto
238 232 lineto
247 237 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node434 -> Node430
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 221 216 moveto
230 200 251 162 266 128 curveto
272 113 277 95 281 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 283 86 moveto
283 76 lineto
278 85 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node434 -> Node432
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 237 216 moveto
237 216 238 216 239 216 curveto
316 195 339 200 413 182 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 413 185 moveto
422 180 lineto
412 180 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node451
[ /Rect [ 167 113 257 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animatmonitor_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 167 112 moveto
258 112 lineto
258 127 lineto
167 127 lineto
closepath
stroke
gsave 10 dict begin
212 115 moveto 81 -0.5 (animatmonitor.h) alignedtext
end grestore
end grestore

%	Node434 -> Node451
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 216 216 moveto
215 199 213 158 212 136 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 215 138 moveto
212 128 lineto
210 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node452
[ /Rect [ 89 113 149 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($collisions_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 89 112 moveto
150 112 lineto
150 127 lineto
89 127 lineto
closepath
stroke
gsave 10 dict begin
119 115 moveto 51 -0.5 (collisions.h) alignedtext
end grestore
end grestore

%	Node434 -> Node452
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 209 216 moveto
193 199 153 157 132 135 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 134 moveto
126 128 lineto
131 137 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node439
[ /Rect [ 207 269 275 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 207 268 moveto
276 268 lineto
276 283 lineto
207 283 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
241 271 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node439 -> Node432
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 248 268 moveto
259 255 283 230 308 216 curveto
344 195 357 200 397 188 curveto
402 186 408 184 414 182 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 414 185 moveto
423 180 lineto
413 180 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node439 -> Node434
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 237 268 moveto
233 261 228 250 224 240 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 227 240 moveto
220 232 lineto
222 242 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node438
[ /Rect [ 317 217 383 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacterium_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 317 216 moveto
384 216 lineto
384 231 lineto
317 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
350 219 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node438 -> Node432
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 364 216 moveto
380 207 406 193 424 184 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 424 187 moveto
432 180 lineto
422 182 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node444
[ /Rect [ 401 217 483 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($neuralanimat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 401 216 moveto
484 216 lineto
484 231 lineto
401 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
442 219 moveto 73 -0.5 (neuralanimat.h) alignedtext
end grestore
end grestore

%	Node444 -> Node432
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 443 216 moveto
444 209 444 198 445 189 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 448 190 moveto
445 180 lineto
443 190 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node447 -> Node430
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 338 112 moveto
328 104 313 91 301 82 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 303 81 moveto
294 76 lineto
300 84 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node448
[ /Rect [ 278 165 326 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensor_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 278 164 moveto
326 164 lineto
326 179 lineto
278 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
302 167 moveto 38 -0.5 (sensor.h) alignedtext
end grestore
end grestore

%	Node448 -> Node447
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 309 164 moveto
315 156 326 144 334 135 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 335 137 moveto
340 128 lineto
332 134 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node449
[ /Rect [ 344 165 402 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($signaller_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 344 164 moveto
402 164 lineto
402 179 lineto
344 179 lineto
closepath
stroke
gsave 10 dict begin
373 167 moveto 48 -0.5 (signaller.h) alignedtext
end grestore
end grestore

%	Node449 -> Node447
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 369 164 moveto
365 156 360 146 355 136 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 358 136 moveto
351 128 lineto
353 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node450 -> Node428
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 387 60 moveto
386 60 386 60 385 60 curveto
381 59 301 39 251 26 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 252 24 moveto
242 24 lineto
251 29 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node451 -> Node428
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 212 112 moveto
212 95 212 54 212 32 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 215 34 moveto
212 24 lineto
210 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node452 -> Node428
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 126 112 moveto
142 95 179 53 199 31 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 200 33 moveto
205 24 lineto
197 30 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4935 a Fj(Namespaces)275 5123 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 5404 y Fj(De\014nes)275
5592 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(This)f Fp(\()p
Fh(\003)p Fp(this\))p -358 5723 V -192 5823 a Fn(Generated)f(on)f(Sun)f
(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 231 239
231 238 bop 150 70 a Fq(11.12)30 b(dra)m(w)m(able.h)j(File)e(Reference)
2557 b(231)p 150 103 4034 4 v 150 333 a Fj(11.12.1)113
b(Detailed)36 b(Description)150 533 y Fp(Include)26 b(this)h(\014le)f
(if)h(y)n(ou)e(wish)h(to)h(create)e(scenery)g(or)g(other)h(non-in)n
(teractiv)n(e)e(ob)5 b(jects)26 b(whic)n(h)g(app)r(ear)f(in)i(the)150
633 y(w)n(orld.)150 780 y(Ev)n(erything)19 b(that)i(app)r(ears)e(in)i
(the)f(w)n(orld)g(is)g(a)g(Dra)n(w)n(able,)g(and)h(all)f(W)-7
b(orldOb)5 b(jects)19 b(and)i(Animats)f(are)g(deriv)n(ed)150
879 y(from)27 b(it.)142 1059 y Fq(Author:)311 1159 y
Fp(T)-7 b(om)28 b(Carden)311 1258 y(Da)n(vid)g(Gordon)p
150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 232 240
232 239 bop -358 70 a Fq(232)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.13)136 b(dynamicalnet.cc)46 b(File)f(Reference)150
562 y Fp(Implemen)n(tation)28 b(of)f(DynamicalNet.)150
709 y Fi(#include)40 b("dynamicalnet.h")150 855 y Fp(Include)28
b(dep)r(endency)g(graph)e(for)h(dynamicalnet.cc:)1655
1471 y @beginspecial 35 @llx 35 @lly 125 @urx 121 @ury
617 @rwi @setspecial
%%BeginDocument: dynamicalnet_8cc__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 125 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 125 121
%%PageOrientation: Portrait
gsave
35 35 90 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node453
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
88 8 lineto
88 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
88 8 lineto
88 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
44 11 moveto 78 -0.5 (dynamicalnet.cc) alignedtext
end grestore
end grestore

%	Node454
[ /Rect [ 2 61 86 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($dynamicalnet_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 2 60 moveto
87 60 lineto
87 75 lineto
2 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
44 63 moveto 75 -0.5 (dynamicalnet.h) alignedtext
end grestore
end grestore

%	Node454 -> Node453
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 44 51 moveto
44 42 44 31 44 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 42 50 moveto
44 60 lineto
47 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1834 a Fj(Namespaces)275 2021 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 2300 y Fj(11.13.1)113
b(Detailed)36 b(Description)150 2501 y Fp(Implemen)n(tation)28
b(of)f(DynamicalNet.)p -358 5723 V -192 5823 a Fn(Generated)f(on)f(Sun)
f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 233 241
233 240 bop 150 70 a Fq(11.14)30 b(dynamicalnet.h)h(File)g(Reference)
2371 b(233)p 150 103 4034 4 v 150 333 a Fl(11.14)136
b(dynamicalnet.h)46 b(File)f(Reference)150 738 y Fp(This)35
b(\014le)h(con)n(tains)e(the)h(in)n(terface)g(for)g(the)g(DynamicalNet)
g(ob)5 b(ject,)37 b(a)e(fully-recurren)n(t,)h(con)n(tin)n(uous-time)150
837 y(neural)27 b(net)n(w)n(ork.)150 984 y Fi(#include)40
b Fo(<)p Fi(vector)p Fo(>)150 1131 y Fi(#include)g Fo(<)p
Fi(algorithm)p Fo(>)150 1278 y Fi(#include)g Fo(<)p Fi(string)p
Fo(>)150 1425 y Fi(#include)g Fo(<)p Fi(sstream)p Fo(>)150
1572 y Fi(#include)g Fo(<)p Fi(iterator)p Fo(>)150 1719
y Fi(#include)g Fo(<)p Fi(functional)p Fo(>)150 1866
y Fi(#include)g Fo(<)p Fi(numeric)p Fo(>)150 2012 y Fi(#include)g
Fo(<)p Fi(iomanip)p Fo(>)150 2159 y Fi(#include)g Fo(<)p
Fi(cmath)p Fo(>)150 2306 y Fi(#include)g("random.h")150
2453 y(#include)g("serialfuncs.h")150 2600 y Fp(Include)28
b(dep)r(endency)g(graph)e(for)h(dynamicalnet.h:)1199
4874 y @beginspecial 35 @llx 35 @lly 345 @urx 413 @ury
1713 @rwi @setspecial
%%BeginDocument: dynamicalnet_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 345 413
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 345 413
%%PageOrientation: Portrait
gsave
35 35 310 378 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node471
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 215 174 moveto
300 174 lineto
300 189 lineto
215 189 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 215 174 moveto
300 174 lineto
300 189 lineto
215 189 lineto
closepath
stroke
gsave 10 dict begin
257 177 moveto 75 -0.5 (dynamicalnet.h) alignedtext
end grestore
end grestore

%	Node472
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 19 347 moveto
59 347 lineto
59 362 lineto
19 362 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 350 moveto 30 -0.5 (vector) alignedtext
end grestore
end grestore

%	Node472 -> Node471
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 355 moveto
98 353 145 347 178 325 curveto
200 310 204 301 210 276 curveto
215 260 209 218 215 204 curveto
218 197 223 193 230 190 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 69 353 moveto
59 355 lineto
69 358 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node485
[ /Rect [ 107 286 177 300 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($serialfuncs_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 107 285 moveto
178 285 lineto
178 300 lineto
107 300 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
142 288 moveto 61 -0.5 (serialfuncs.h) alignedtext
end grestore
end grestore

%	Node472 -> Node485
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 348 moveto
68 347 69 347 70 346 curveto
92 331 84 313 106 300 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 345 moveto
59 351 lineto
69 350 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node473
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 10 295 moveto
68 295 lineto
68 310 lineto
10 310 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 298 moveto 48 -0.5 (algorithm) alignedtext
end grestore
end grestore

%	Node473 -> Node471
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 76 309 moveto
112 314 162 319 178 309 curveto
210 288 202 268 210 232 curveto
214 217 208 212 214 199 curveto
216 195 219 192 222 190 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 307 moveto
68 308 lineto
78 312 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node473 -> Node485
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 77 299 moveto
86 298 97 298 106 296 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 296 moveto
68 300 lineto
78 301 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node474
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 21 256 moveto
58 256 lineto
58 271 lineto
21 271 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 259 moveto 27 -0.5 (string) alignedtext
end grestore
end grestore

%	Node474 -> Node471
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 256 moveto
68 256 69 255 70 255 curveto
119 239 132 238 178 218 curveto
196 210 199 205 215 198 curveto
222 195 229 192 235 190 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 253 moveto
58 259 lineto
68 258 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node474 -> Node485
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 270 moveto
68 270 69 271 70 271 curveto
87 275 90 279 106 284 curveto
108 284 110 285 112 285 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 68 268 moveto
58 268 lineto
67 273 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node475
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 16 218 moveto
63 218 lineto
63 233 lineto
16 233 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 221 moveto 37 -0.5 (sstream) alignedtext
end grestore
end grestore

%	Node475 -> Node471
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 219 moveto
112 212 178 198 220 190 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 216 moveto
63 221 lineto
73 221 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node475 -> Node485
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 71 234 moveto
94 249 84 268 106 284 curveto
107 284 108 285 108 285 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 232 moveto
63 229 lineto
70 236 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node476
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 17 180 moveto
62 180 lineto
62 195 lineto
17 195 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 183 moveto 35 -0.5 (iterator) alignedtext
end grestore
end grestore

%	Node476 -> Node471
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 70 187 moveto
108 186 172 184 214 183 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 185 moveto
62 187 lineto
72 190 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node476 -> Node485
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 70 195 moveto
103 222 74 256 106 284 curveto
107 284 107 285 108 285 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 193 moveto
62 190 lineto
69 197 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node477
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 9 53 moveto
70 53 lineto
70 68 lineto
9 68 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 56 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node477 -> Node471
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 64 moveto
108 68 149 77 178 99 curveto
206 119 192 143 219 165 curveto
224 169 230 172 236 174 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 80 62 moveto
70 63 lineto
80 67 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node481
[ /Rect [ 114 38 170 52 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($random_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 114 37 moveto
170 37 lineto
170 52 lineto
114 52 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
142 40 moveto 46 -0.5 (random.h) alignedtext
end grestore
end grestore

%	Node477 -> Node481
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 79 55 moveto
90 53 103 52 114 50 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 80 52 moveto
70 56 lineto
80 57 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node478
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 117 139 moveto
168 139 lineto
168 154 lineto
117 154 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
142 142 moveto 41 -0.5 (numeric) alignedtext
end grestore
end grestore

%	Node478 -> Node471
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 154 moveto
177 154 178 154 178 154 curveto
196 160 197 166 214 173 curveto
216 174 217 174 219 174 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 152 moveto
168 151 lineto
177 157 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node479
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 117 107 moveto
167 107 lineto
167 122 lineto
117 122 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
142 110 moveto 40 -0.5 (iomanip) alignedtext
end grestore
end grestore

%	Node479 -> Node471
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 175 121 moveto
176 122 177 122 178 123 curveto
201 138 192 158 214 173 curveto
215 173 216 174 216 174 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 119 moveto
167 118 lineto
175 124 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node480
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 19 20 moveto
59 20 lineto
59 35 lineto
19 35 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 23 moveto 30 -0.5 (cmath) alignedtext
end grestore
end grestore

%	Node480 -> Node471
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 68 25 moveto
103 21 161 18 178 29 curveto
221 57 208 87 214 137 curveto
216 146 215 149 219 159 curveto
223 166 229 171 236 174 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 69 22 moveto
59 26 lineto
69 27 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node480 -> Node481
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 32 moveto
82 35 99 37 114 40 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 69 30 moveto
59 31 lineto
69 35 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node481 -> Node471
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 53 moveto
219 91 173 135 214 173 curveto
215 174 215 174 216 174 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 180 51 moveto
170 48 lineto
177 55 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node485 -> Node471
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 183 279 moveto
209 249 182 216 214 189 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 182 277 moveto
176 285 lineto
185 280 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 5613 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)p
150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 234 242
234 241 bop -358 70 a Fq(234)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 1149
1356 a @beginspecial 35 @llx 35 @lly 369 @urx 277 @ury
1833 @rwi @setspecial
%%BeginDocument: dynamicalnet_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 369 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 369 277
%%PageOrientation: Portrait
gsave
35 35 334 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node487
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 53 8 moveto
138 8 lineto
138 23 lineto
53 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 53 8 moveto
138 8 lineto
138 23 lineto
53 23 lineto
closepath
stroke
gsave 10 dict begin
95 11 moveto 75 -0.5 (dynamicalnet.h) alignedtext
end grestore
end grestore

%	Node488
[ /Rect [ 0 61 88 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($dynamicalnet_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
88 60 lineto
88 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
44 63 moveto 78 -0.5 (dynamicalnet.cc) alignedtext
end grestore
end grestore

%	Node488 -> Node487
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 52 60 moveto
60 52 72 40 82 30 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 83 33 moveto
88 24 lineto
79 29 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node489
[ /Rect [ 106 61 188 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($neuralanimat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 106 60 moveto
189 60 lineto
189 75 lineto
106 75 lineto
closepath
stroke
gsave 10 dict begin
147 63 moveto 73 -0.5 (neuralanimat.h) alignedtext
end grestore
end grestore

%	Node489 -> Node487
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 139 60 moveto
131 52 119 40 109 30 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 112 29 moveto
103 24 lineto
108 33 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node490
[ /Rect [ 111 113 183 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 111 112 moveto
184 112 lineto
184 127 lineto
111 127 lineto
closepath
stroke
gsave 10 dict begin
147 115 moveto 63 -0.5 (unserialiser.h) alignedtext
end grestore
end grestore

%	Node490 -> Node489
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 147 112 moveto
147 105 147 94 147 85 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 150 86 moveto
147 76 lineto
145 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node491
[ /Rect [ 108 165 184 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 108 164 moveto
184 164 lineto
184 179 lineto
108 179 lineto
closepath
stroke
gsave 10 dict begin
146 167 moveto 66 -0.5 (unserialiser.cc) alignedtext
end grestore
end grestore

%	Node491 -> Node490
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 146 164 moveto
146 157 146 146 146 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 148 138 moveto
147 128 lineto
143 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node492
[ /Rect [ 202 165 270 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 202 164 moveto
271 164 lineto
271 179 lineto
202 179 lineto
closepath
stroke
gsave 10 dict begin
236 167 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node492 -> Node490
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 223 164 moveto
208 155 185 142 168 132 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 170 130 moveto
160 128 lineto
168 135 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node495
[ /Rect [ 201 113 271 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($population_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 201 112 moveto
271 112 lineto
271 127 lineto
201 127 lineto
closepath
stroke
gsave 10 dict begin
236 115 moveto 60 -0.5 (population.h) alignedtext
end grestore
end grestore

%	Node492 -> Node495
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 231 164 moveto
230 157 229 146 230 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 232 138 moveto
231 128 lineto
227 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node493
[ /Rect [ 110 217 182 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 110 216 moveto
182 216 lineto
182 231 lineto
110 231 lineto
closepath
stroke
gsave 10 dict begin
146 219 moveto 62 -0.5 (simulation.cc) alignedtext
end grestore
end grestore

%	Node493 -> Node492
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 159 216 moveto
174 207 198 193 215 184 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 215 187 moveto
223 180 lineto
213 182 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node494
[ /Rect [ 200 217 272 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($glutsimenv_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 200 216 moveto
272 216 lineto
272 231 lineto
200 231 lineto
closepath
stroke
gsave 10 dict begin
236 219 moveto 62 -0.5 (glutsimenv.h) alignedtext
end grestore
end grestore

%	Node494 -> Node492
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 236 216 moveto
236 209 236 198 236 189 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 239 190 moveto
236 180 lineto
234 190 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node495 -> Node492
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 242 156 moveto
243 146 243 136 241 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 240 154 moveto
241 164 lineto
245 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node496
[ /Rect [ 290 217 332 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($beast_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 290 216 moveto
332 216 lineto
332 231 lineto
290 231 lineto
closepath
stroke
gsave 10 dict begin
311 219 moveto 32 -0.5 (beast.h) alignedtext
end grestore
end grestore

%	Node496 -> Node492
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 300 216 moveto
288 208 269 195 254 185 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 257 184 moveto
247 180 lineto
254 188 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1719 a Fj(Namespaces)275 1906 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 2185 y Fj(11.14.1)113
b(Detailed)36 b(Description)150 2386 y Fp(This)f(\014le)h(con)n(tains)e
(the)h(in)n(terface)g(for)g(the)g(DynamicalNet)g(ob)5
b(ject,)37 b(a)e(fully-recurren)n(t,)h(con)n(tin)n(uous-time)150
2485 y(neural)27 b(net)n(w)n(ork.)142 2682 y Fq(Author:)311
2781 y Fp(Da)n(vid)h(Gordon)e(biosystems)p -358 5723
V -192 5823 a Fn(Generated)g(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 235 243
235 242 bop 150 70 a Fq(11.15)30 b(feedforw)m(ardnet.h)j(File)d
(Reference)2305 b(235)p 150 103 4034 4 v 150 333 a Fl(11.15)136
b(feedforw)l(ardnet.h)46 b(File)g(Reference)150 782 y
Fi(#include)40 b Fo(<)p Fi(vector)p Fo(>)150 929 y Fi(#include)g
Fo(<)p Fi(string)p Fo(>)150 1076 y Fi(#include)g Fo(<)p
Fi(algorithm)p Fo(>)150 1223 y Fi(#include)g Fo(<)p Fi(cmath)p
Fo(>)150 1370 y Fi(#include)g Fo(<)p Fi(iostream)p Fo(>)150
1516 y Fi(#include)g Fo(<)p Fi(sstream)p Fo(>)150 1663
y Fi(#include)g Fo(<)p Fi(iomanip)p Fo(>)150 1810 y Fi(#include)g
Fo(<)p Fi(numeric)p Fo(>)150 1957 y Fi(#include)g Fo(<)p
Fi(iterator)p Fo(>)150 2104 y Fi(#include)g("random.h")150
2251 y(#include)g("serialfuncs.h")150 2398 y Fp(Include)28
b(dep)r(endency)g(graph)e(for)h(feedforw)n(ardnet.h:)1186
4772 y @beginspecial 35 @llx 35 @lly 351 @urx 413 @ury
1743 @rwi @setspecial
%%BeginDocument: feedforwardnet_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 351 413
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 351 413
%%PageOrientation: Portrait
gsave
35 35 316 378 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node497
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 210 174 moveto
306 174 lineto
306 189 lineto
210 189 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 210 174 moveto
306 174 lineto
306 189 lineto
210 189 lineto
closepath
stroke
gsave 10 dict begin
258 177 moveto 86 -0.5 (feedforwardnet.h) alignedtext
end grestore
end grestore

%	Node498
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 17 352 moveto
57 352 lineto
57 367 lineto
17 367 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
37 355 moveto 30 -0.5 (vector) alignedtext
end grestore
end grestore

%	Node498 -> Node497
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 65 356 moveto
96 351 143 338 174 311 curveto
199 289 200 276 206 245 curveto
208 236 205 211 210 204 curveto
215 197 221 193 228 190 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 353 moveto
57 357 lineto
67 358 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node511
[ /Rect [ 103 248 173 262 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($serialfuncs_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 103 247 moveto
174 247 lineto
174 262 lineto
103 262 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
138 250 moveto 61 -0.5 (serialfuncs.h) alignedtext
end grestore
end grestore

%	Node498 -> Node511
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 64 352 moveto
65 352 66 351 66 351 curveto
98 322 70 289 102 262 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 64 349 moveto
57 356 lineto
67 353 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node499
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 19 297 moveto
56 297 lineto
56 312 lineto
19 312 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
37 300 moveto 27 -0.5 (string) alignedtext
end grestore
end grestore

%	Node499 -> Node497
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 65 309 moveto
95 311 142 310 174 287 curveto
203 265 194 247 206 214 curveto
209 208 206 205 210 201 curveto
215 196 221 192 227 190 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 307 moveto
56 308 lineto
66 312 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node499 -> Node511
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 64 297 moveto
65 297 65 296 66 296 curveto
86 284 83 272 102 262 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 64 294 moveto
56 300 lineto
66 299 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node500
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 8 253 moveto
66 253 lineto
66 268 lineto
8 268 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
37 256 moveto 48 -0.5 (algorithm) alignedtext
end grestore
end grestore

%	Node500 -> Node497
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 269 moveto
110 275 158 281 174 271 curveto
178 268 207 199 210 197 curveto
213 194 217 192 222 190 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 76 267 moveto
66 267 lineto
75 272 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node500 -> Node511
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 258 moveto
83 258 93 257 102 257 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 76 255 moveto
66 259 lineto
76 260 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node501
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 17 83 moveto
57 83 lineto
57 98 lineto
17 98 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
37 86 moveto 30 -0.5 (cmath) alignedtext
end grestore
end grestore

%	Node501 -> Node497
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 65 83 moveto
95 78 141 73 174 93 curveto
175 93 210 164 210 165 curveto
215 169 221 172 227 174 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 80 moveto
57 85 lineto
67 85 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node507
[ /Rect [ 110 102 166 116 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($random_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 110 101 moveto
166 101 lineto
166 116 lineto
110 116 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
138 104 moveto 46 -0.5 (random.h) alignedtext
end grestore
end grestore

%	Node501 -> Node507
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 97 moveto
80 99 96 102 110 104 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 95 moveto
57 95 lineto
66 100 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node502
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 12 136 moveto
63 136 lineto
63 151 lineto
12 151 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
37 139 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node502 -> Node497
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 149 moveto
110 156 173 168 215 174 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 147 moveto
63 148 lineto
73 152 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node502 -> Node507
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 71 133 moveto
84 127 87 121 102 116 curveto
104 115 107 114 110 114 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 71 130 moveto
62 136 lineto
72 135 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node502 -> Node511
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 70 155 moveto
97 183 70 216 102 246 curveto
103 246 103 247 104 247 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 153 moveto
63 148 lineto
68 157 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node503
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 14 213 moveto
61 213 lineto
61 228 lineto
14 228 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
37 216 moveto 37 -0.5 (sstream) alignedtext
end grestore
end grestore

%	Node503 -> Node497
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 70 216 moveto
108 209 173 197 216 190 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 71 213 moveto
61 217 lineto
71 218 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node503 -> Node511
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 70 229 moveto
84 235 87 240 102 246 curveto
104 247 105 247 107 247 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 71 227 moveto
61 226 lineto
70 232 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node504
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 113 31 moveto
163 31 lineto
163 46 lineto
113 46 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
138 34 moveto 40 -0.5 (iomanip) alignedtext
end grestore
end grestore

%	Node504 -> Node497
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 171 45 moveto
172 45 173 46 174 47 curveto
217 87 167 134 210 174 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 173 43 moveto
163 41 lineto
171 48 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node505
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 113 -1 moveto
164 -1 lineto
164 14 lineto
113 14 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
138 2 moveto 41 -0.5 (numeric) alignedtext
end grestore
end grestore

%	Node505 -> Node497
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 172 14 moveto
173 15 173 15 174 16 curveto
225 67 158 124 210 174 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 174 12 moveto
164 10 lineto
172 17 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node506
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 15 177 moveto
60 177 lineto
60 192 lineto
15 192 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
37 180 moveto 35 -0.5 (iterator) alignedtext
end grestore
end grestore

%	Node506 -> Node497
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 68 185 moveto
105 184 166 183 210 183 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 70 183 moveto
60 185 lineto
70 188 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node506 -> Node511
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 68 193 moveto
89 209 80 229 102 246 curveto
103 246 104 247 104 247 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 70 191 moveto
60 188 lineto
67 195 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node507 -> Node497
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 175 117 moveto
199 134 185 157 210 174 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 176 115 moveto
166 112 lineto
174 119 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node511 -> Node497
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 179 241 moveto
197 224 187 204 210 189 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 239 moveto
172 247 lineto
181 242 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 5613 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)p
150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 236 244
236 243 bop -358 70 a Fq(236)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 1352
1404 a @beginspecial 35 @llx 35 @lly 270 @urx 277 @ury
1344 @rwi @setspecial
%%BeginDocument: feedforwardnet_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 270 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 270 277
%%PageOrientation: Portrait
gsave
35 35 235 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node513
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
96 8 lineto
96 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
96 8 lineto
96 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
48 11 moveto 86 -0.5 (feedforwardnet.h) alignedtext
end grestore
end grestore

%	Node514
[ /Rect [ 7 61 89 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($neuralanimat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 7 60 moveto
90 60 lineto
90 75 lineto
7 75 lineto
closepath
stroke
gsave 10 dict begin
48 63 moveto 73 -0.5 (neuralanimat.h) alignedtext
end grestore
end grestore

%	Node514 -> Node513
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 48 60 moveto
48 53 48 42 48 33 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 51 34 moveto
48 24 lineto
46 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node515
[ /Rect [ 12 113 84 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 12 112 moveto
85 112 lineto
85 127 lineto
12 127 lineto
closepath
stroke
gsave 10 dict begin
48 115 moveto 63 -0.5 (unserialiser.h) alignedtext
end grestore
end grestore

%	Node515 -> Node514
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 48 112 moveto
48 105 48 94 48 85 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 51 86 moveto
48 76 lineto
46 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node516
[ /Rect [ 9 165 85 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 9 164 moveto
85 164 lineto
85 179 lineto
9 179 lineto
closepath
stroke
gsave 10 dict begin
47 167 moveto 66 -0.5 (unserialiser.cc) alignedtext
end grestore
end grestore

%	Node516 -> Node515
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 47 164 moveto
47 157 47 146 47 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 49 138 moveto
48 128 lineto
44 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node517
[ /Rect [ 103 165 171 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 103 164 moveto
172 164 lineto
172 179 lineto
103 179 lineto
closepath
stroke
gsave 10 dict begin
137 167 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node517 -> Node515
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 124 164 moveto
109 155 86 142 69 132 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 71 130 moveto
61 128 lineto
69 135 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node520
[ /Rect [ 102 113 172 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($population_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 102 112 moveto
172 112 lineto
172 127 lineto
102 127 lineto
closepath
stroke
gsave 10 dict begin
137 115 moveto 60 -0.5 (population.h) alignedtext
end grestore
end grestore

%	Node517 -> Node520
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 132 164 moveto
131 157 130 146 131 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 133 138 moveto
132 128 lineto
128 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node518
[ /Rect [ 11 217 83 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 11 216 moveto
83 216 lineto
83 231 lineto
11 231 lineto
closepath
stroke
gsave 10 dict begin
47 219 moveto 62 -0.5 (simulation.cc) alignedtext
end grestore
end grestore

%	Node518 -> Node517
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 60 216 moveto
75 207 99 193 116 184 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 116 187 moveto
124 180 lineto
114 182 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node519
[ /Rect [ 101 217 173 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($glutsimenv_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 101 216 moveto
173 216 lineto
173 231 lineto
101 231 lineto
closepath
stroke
gsave 10 dict begin
137 219 moveto 62 -0.5 (glutsimenv.h) alignedtext
end grestore
end grestore

%	Node519 -> Node517
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 137 216 moveto
137 209 137 198 137 189 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 140 190 moveto
137 180 lineto
135 190 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node520 -> Node517
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 143 156 moveto
144 146 144 136 142 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 141 154 moveto
142 164 lineto
146 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node521
[ /Rect [ 191 217 233 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($beast_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 191 216 moveto
233 216 lineto
233 231 lineto
191 231 lineto
closepath
stroke
gsave 10 dict begin
212 219 moveto 32 -0.5 (beast.h) alignedtext
end grestore
end grestore

%	Node521 -> Node517
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 201 216 moveto
189 208 170 195 155 185 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 158 184 moveto
148 180 lineto
155 188 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1766 a Fj(Namespaces)275 1953 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 2233 y Fj(11.15.1)113
b(Detailed)36 b(Description)142 2372 y Fq(Author:)311
2471 y Fp(Da)n(vid)28 b(Gordon)p -358 5723 V -192 5823
a Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 237 245
237 244 bop 150 70 a Fq(11.16)30 b(geneticalgorithm.h)f(File)i
(Reference)2231 b(237)p 150 103 4034 4 v 150 333 a Fl(11.16)136
b(geneticalgorithm.h)48 b(File)d(Reference)150 736 y
Fi(#include)40 b Fo(<)p Fi(vector)p Fo(>)150 883 y Fi(#include)g
Fo(<)p Fi(map)p Fo(>)150 1029 y Fi(#include)g Fo(<)p
Fi(algorithm)p Fo(>)150 1176 y Fi(#include)g Fo(<)p Fi(numeric)p
Fo(>)150 1323 y Fi(#include)g Fo(<)p Fi(sstream)p Fo(>)150
1470 y Fi(#include)g Fo(<)p Fi(iostream)p Fo(>)150 1617
y Fi(#include)g Fo(<)p Fi(iomanip)p Fo(>)150 1764 y Fi(#include)g
Fo(<)p Fi(stack)p Fo(>)150 1911 y Fi(#include)g Fo(<)p
Fi(typeinfo)p Fo(>)150 2058 y Fi(#include)g Fo(<)p Fi(functional)p
Fo(>)150 2204 y Fi(#include)g("random.h")150 2351 y(#include)g
("serialfuncs.h")150 2498 y Fp(Include)28 b(dep)r(endency)g(graph)e
(for)h(geneticalgorithm.h:)1169 4879 y @beginspecial
35 @llx 35 @lly 359 @urx 439 @ury 1783 @rwi @setspecial
%%BeginDocument: geneticalgorithm_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 359 439
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 359 439
%%PageOrientation: Portrait
gsave
35 35 324 404 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node522
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 214 188 moveto
314 188 lineto
314 203 lineto
214 203 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 214 188 moveto
314 188 lineto
314 203 lineto
214 203 lineto
closepath
stroke
gsave 10 dict begin
264 191 moveto 90 -0.5 (geneticalgorithm.h) alignedtext
end grestore
end grestore

%	Node523
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 19 373 moveto
59 373 lineto
59 388 lineto
19 388 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 376 moveto 30 -0.5 (vector) alignedtext
end grestore
end grestore

%	Node523 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 378 moveto
98 373 146 361 178 336 curveto
202 317 205 305 210 276 curveto
213 263 207 228 214 218 curveto
219 211 226 207 233 204 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 69 375 moveto
59 379 lineto
69 380 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node537
[ /Rect [ 107 242 177 256 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($serialfuncs_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 107 241 moveto
178 241 lineto
178 256 lineto
107 256 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
142 244 moveto 61 -0.5 (serialfuncs.h) alignedtext
end grestore
end grestore

%	Node523 -> Node537
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 374 moveto
68 374 69 373 70 372 curveto
109 334 66 292 106 256 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 371 moveto
59 378 lineto
69 376 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node524
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 23 320 moveto
55 320 lineto
55 335 lineto
23 335 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 323 moveto 22 -0.5 (map) alignedtext
end grestore
end grestore

%	Node524 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 63 331 moveto
93 334 143 335 178 314 curveto
203 299 205 286 210 258 curveto
212 248 209 222 214 215 curveto
218 210 223 206 229 204 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 65 329 moveto
55 330 lineto
65 334 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node524 -> Node537
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 64 322 moveto
66 322 68 320 70 319 curveto
96 299 80 274 106 256 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 64 319 moveto
55 325 lineto
65 324 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node525
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 10 252 moveto
68 252 lineto
68 267 lineto
10 267 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 255 moveto 48 -0.5 (algorithm) alignedtext
end grestore
end grestore

%	Node525 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 77 271 moveto
89 279 90 290 106 297 curveto
137 307 151 313 178 297 curveto
208 279 201 259 210 227 curveto
212 219 209 216 214 211 curveto
217 208 221 206 224 204 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 269 moveto
68 266 lineto
76 273 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node525 -> Node537
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 77 256 moveto
86 255 97 254 106 253 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 253 moveto
68 257 lineto
78 258 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node526
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 117 273 moveto
168 273 lineto
168 288 lineto
117 288 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
142 276 moveto 41 -0.5 (numeric) alignedtext
end grestore
end grestore

%	Node526 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 176 273 moveto
177 273 177 272 178 272 curveto
206 250 186 222 214 203 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 175 271 moveto
168 278 lineto
178 275 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node527
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 16 213 moveto
63 213 lineto
63 228 lineto
16 228 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 216 moveto 37 -0.5 (sstream) alignedtext
end grestore
end grestore

%	Node527 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 71 217 moveto
108 213 169 207 214 202 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 214 moveto
63 218 lineto
73 219 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node527 -> Node537
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 228 moveto
87 232 91 235 106 240 curveto
108 240 110 241 112 241 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 226 moveto
63 226 lineto
72 231 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node528
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 14 72 moveto
65 72 lineto
65 87 lineto
14 87 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 75 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node528 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 76 moveto
105 75 148 77 178 99 curveto
202 116 195 131 206 159 curveto
208 163 211 175 214 179 curveto
218 183 224 186 229 188 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 74 moveto
65 77 lineto
75 78 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node533
[ /Rect [ 114 38 170 52 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($random_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 114 37 moveto
170 37 lineto
170 52 lineto
114 52 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
142 40 moveto 46 -0.5 (random.h) alignedtext
end grestore
end grestore

%	Node528 -> Node533
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 71 moveto
88 65 91 59 106 53 curveto
108 52 111 51 114 51 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 68 moveto
65 74 lineto
75 73 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node528 -> Node537
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 90 moveto
117 138 59 191 106 240 curveto
107 241 107 241 108 241 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 89 moveto
65 84 lineto
71 92 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node529
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 117 171 moveto
167 171 lineto
167 186 lineto
117 186 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
142 174 moveto 40 -0.5 (iomanip) alignedtext
end grestore
end grestore

%	Node529 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 176 184 moveto
188 186 201 187 214 189 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 182 moveto
167 183 lineto
177 187 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node530
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 125 139 moveto
159 139 lineto
159 154 lineto
125 154 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
142 142 moveto 24 -0.5 (stack) alignedtext
end grestore
end grestore

%	Node530 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 168 150 moveto
171 151 175 152 178 154 curveto
198 164 195 178 214 188 curveto
214 188 215 188 215 188 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 169 148 moveto
159 148 lineto
168 153 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node531
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 116 107 moveto
168 107 lineto
168 122 lineto
116 122 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
142 110 moveto 42 -0.5 (typeinfo) alignedtext
end grestore
end grestore

%	Node531 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 122 moveto
177 123 178 123 178 123 curveto
205 142 187 169 214 188 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 120 moveto
168 118 lineto
176 124 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node532
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 9 20 moveto
70 20 lineto
70 35 lineto
9 35 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 23 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node532 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 79 24 moveto
114 21 162 19 178 29 curveto
206 47 203 64 210 96 curveto
217 124 206 133 214 161 curveto
217 170 218 173 225 180 curveto
229 183 234 186 239 188 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 80 21 moveto
70 25 lineto
80 26 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node532 -> Node533
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 79 34 moveto
90 36 103 38 114 40 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 80 32 moveto
70 33 lineto
80 37 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node533 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 53 moveto
223 96 168 146 214 188 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 180 51 moveto
170 48 lineto
177 55 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node537 -> Node522
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 183 237 moveto
197 225 196 212 214 203 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 183 234 moveto
175 241 lineto
185 239 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 5613 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)p
150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 238 246
238 245 bop -358 70 a Fq(238)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 1352
1404 a @beginspecial 35 @llx 35 @lly 270 @urx 277 @ury
1344 @rwi @setspecial
%%BeginDocument: geneticalgorithm_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 270 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 270 277
%%PageOrientation: Portrait
gsave
35 35 235 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node540
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 73 8 moveto
173 8 lineto
173 23 lineto
73 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 73 8 moveto
173 8 lineto
173 23 lineto
73 23 lineto
closepath
stroke
gsave 10 dict begin
123 11 moveto 90 -0.5 (geneticalgorithm.h) alignedtext
end grestore
end grestore

%	Node541
[ /Rect [ 3 61 85 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($neuralanimat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 3 60 moveto
86 60 lineto
86 75 lineto
3 75 lineto
closepath
stroke
gsave 10 dict begin
44 63 moveto 73 -0.5 (neuralanimat.h) alignedtext
end grestore
end grestore

%	Node541 -> Node540
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 56 60 moveto
69 52 89 38 105 29 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 105 32 moveto
112 24 lineto
102 28 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node542
[ /Rect [ 3 113 75 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 3 112 moveto
76 112 lineto
76 127 lineto
3 127 lineto
closepath
stroke
gsave 10 dict begin
39 115 moveto 63 -0.5 (unserialiser.h) alignedtext
end grestore
end grestore

%	Node542 -> Node541
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 40 112 moveto
41 105 41 94 42 85 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 44 86 moveto
43 76 lineto
39 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node543
[ /Rect [ 0 165 76 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 164 moveto
76 164 lineto
76 179 lineto
0 179 lineto
closepath
stroke
gsave 10 dict begin
38 167 moveto 66 -0.5 (unserialiser.cc) alignedtext
end grestore
end grestore

%	Node543 -> Node542
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 38 164 moveto
38 157 38 146 38 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 40 138 moveto
39 128 lineto
35 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node544
[ /Rect [ 94 165 162 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 94 164 moveto
163 164 lineto
163 179 lineto
94 179 lineto
closepath
stroke
gsave 10 dict begin
128 167 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node544 -> Node542
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 115 164 moveto
100 155 77 142 60 132 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 62 130 moveto
52 128 lineto
60 135 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node547
[ /Rect [ 93 113 163 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($population_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 93 112 moveto
163 112 lineto
163 127 lineto
93 127 lineto
closepath
stroke
gsave 10 dict begin
128 115 moveto 60 -0.5 (population.h) alignedtext
end grestore
end grestore

%	Node544 -> Node547
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 123 164 moveto
122 157 121 146 122 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 124 138 moveto
123 128 lineto
119 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node545
[ /Rect [ 2 217 74 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 2 216 moveto
74 216 lineto
74 231 lineto
2 231 lineto
closepath
stroke
gsave 10 dict begin
38 219 moveto 62 -0.5 (simulation.cc) alignedtext
end grestore
end grestore

%	Node545 -> Node544
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 51 216 moveto
66 207 90 193 107 184 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 107 187 moveto
115 180 lineto
105 182 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node546
[ /Rect [ 92 217 164 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($glutsimenv_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 92 216 moveto
164 216 lineto
164 231 lineto
92 231 lineto
closepath
stroke
gsave 10 dict begin
128 219 moveto 62 -0.5 (glutsimenv.h) alignedtext
end grestore
end grestore

%	Node546 -> Node544
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 128 216 moveto
128 209 128 198 128 189 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 131 190 moveto
128 180 lineto
126 190 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node547 -> Node540
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 128 112 moveto
126 95 124 54 123 32 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 126 34 moveto
123 24 lineto
121 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node547 -> Node544
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 156 moveto
135 146 135 136 133 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 132 154 moveto
133 164 lineto
137 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node548
[ /Rect [ 182 217 224 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($beast_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 182 216 moveto
224 216 lineto
224 231 lineto
182 231 lineto
closepath
stroke
gsave 10 dict begin
203 219 moveto 32 -0.5 (beast.h) alignedtext
end grestore
end grestore

%	Node548 -> Node544
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 192 216 moveto
180 208 161 195 146 185 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 149 184 moveto
139 180 lineto
146 188 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node549
[ /Rect [ 151 61 233 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($psoalgorithm_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 151 60 moveto
233 60 lineto
233 75 lineto
151 75 lineto
closepath
stroke
gsave 10 dict begin
192 63 moveto 72 -0.5 (psoalgorithm.h) alignedtext
end grestore
end grestore

%	Node549 -> Node540
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 182 60 moveto
171 52 153 39 140 29 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 143 28 moveto
133 24 lineto
140 32 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1766 a Fj(Namespaces)275 1953 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 2233 y Fj(11.16.1)113
b(Detailed)36 b(Description)142 2372 y Fq(Author:)311
2471 y Fp(Da)n(vid)28 b(Gordon)p -358 5723 V -192 5823
a Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 239 247
239 246 bop 150 70 a Fq(11.17)30 b(glutsimen)m(v.h)f(File)i(Reference)
2477 b(239)p 150 103 4034 4 v 150 333 a Fl(11.17)136
b(glutsimen)l(v.h)46 b(File)g(Reference)150 562 y Fp(The)27
b(main)h(include)f(\014le)h(for)f(the)g(sim)n(ulation)g(en)n(vironmen)n
(t/GLUT)f(-)h(include)h(this)g(\014le)f(if)h(y)n(ou)e(w)n(an)n(t)h(to)g
(run)150 661 y(sim)n(ulations)g(using)g(the)h(simple)g(GLUT-based)f(in)
n(terface.)150 808 y Fi(#include)40 b Fo(<)p Fi(iostream)p
Fo(>)150 955 y Fi(#include)g("simulation.h")150 1102
y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(glutsimen)n(v.h:)1618
1979 y @beginspecial 35 @llx 35 @lly 143 @urx 173 @ury
707 @rwi @setspecial
%%BeginDocument: glutsimenv_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 143 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 143 173
%%PageOrientation: Portrait
gsave
35 35 108 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node550
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 5 8 moveto
77 8 lineto
77 23 lineto
5 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 5 8 moveto
77 8 lineto
77 23 lineto
5 23 lineto
closepath
stroke
gsave 10 dict begin
41 11 moveto 62 -0.5 (glutsimenv.h) alignedtext
end grestore
end grestore

%	Node551
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 16 112 moveto
67 112 lineto
67 127 lineto
16 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
41 115 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node551 -> Node550
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 36 105 moveto
32 93 27 75 29 60 curveto
31 47 35 32 38 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 33 103 moveto
38 112 lineto
38 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node552
[ /Rect [ 38 61 106 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 38 60 moveto
107 60 lineto
107 75 lineto
38 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
72 63 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node551 -> Node552
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 50 104 moveto
56 95 62 84 67 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 48 102 moveto
46 112 lineto
53 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node552 -> Node550
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 63 53 moveto
58 43 51 32 46 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 60 53 moveto
67 60 lineto
64 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2342 a Fj(Namespaces)275 2528 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 2808 y Fj(De\014nes)275
2994 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(ST)-8 b(AR)g(T)p
986 2994 29 4 v 35 w(SIMULA)g(TION)p Fp(\()p 1675 2994
25 4 v 31 w(SimClass\))150 3274 y Fj(11.17.1)113 b(Detailed)36
b(Description)150 3475 y Fp(The)27 b(main)h(include)f(\014le)h(for)f
(the)g(sim)n(ulation)g(en)n(vironmen)n(t/GLUT)f(-)h(include)h(this)g
(\014le)f(if)h(y)n(ou)e(w)n(an)n(t)h(to)g(run)150 3574
y(sim)n(ulations)g(using)g(the)h(simple)g(GLUT-based)f(in)n(terface.)
150 3854 y Fj(11.17.2)113 b(De\014ne)38 b(Do)s(cumen)m(tation)150
4054 y Fq(11.17.2.1)92 b(#de\014ne)31 b(ST)-8 b(AR)g(T)p
1288 4054 29 4 v 36 w(SIMULA)g(TION\()p 1984 4054 V 35
w(SimClass\))150 4255 y(V)g(alue:)150 4464 y Fd(int)36
b(main\(int)i(argc,)e(char*)h(argv[]\)\\)150 4543 y({\\)291
4622 y(_SimClass)h(theSimulation;\\)291 4701 y
(glut_start_simulation\(a)q(rgc)q(,)j(argv,)c(&theSimulation\);\\)291
4779 y(return)g(0;\\)150 4858 y(})p 150 5723 4034 4 v
150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 240 248
240 247 bop -358 70 a Fq(240)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.18)136 b(neuralanimat.h)46 b(File)g(Reference)150
562 y Fp(The)21 b(basic)g(Animat)h(comes)e(with)i(no)f(con)n(trol)f
(system,)i(so)f(in)g(the)h(course)e(of)h(deriving)g(a)g(new)g(t)n(yp)r
(e)g(of)h(Animat,)150 661 y(a)27 b(con)n(trol)f(system)i(m)n(ust)g(b)r
(e)g(added.)150 808 y Fi(#include)40 b("animat.h")150
955 y(#include)g("geneticalgorithm)o(.h)o(")150 1102
y(#include)g("feedforwardnet.h)o(")150 1249 y(#include)g
("dynamicalnet.h")150 1396 y(#include)g("serialfuncs.h")150
1543 y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(neuralanimat.h:)
958 2285 y @beginspecial 35 @llx 35 @lly 461 @urx 173
@ury 2291 @rwi @setspecial
%%BeginDocument: neuralanimat_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 461 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 461 173
%%PageOrientation: Portrait
gsave
35 35 426 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node594
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 117 8 moveto
200 8 lineto
200 23 lineto
117 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 117 8 moveto
200 8 lineto
200 23 lineto
117 23 lineto
closepath
stroke
gsave 10 dict begin
158 11 moveto 73 -0.5 (neuralanimat.h) alignedtext
end grestore
end grestore

%	Node595
[ /Rect [ 0 61 52 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 0 60 moveto
52 60 lineto
52 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
26 63 moveto 42 -0.5 (animat.h) alignedtext
end grestore
end grestore

%	Node595 -> Node594
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 53 57 moveto
79 47 116 32 139 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 53 54 moveto
45 60 lineto
55 59 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node621
[ /Rect [ 108 61 208 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($geneticalgorithm_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 108 60 moveto
208 60 lineto
208 75 lineto
108 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
158 63 moveto 90 -0.5 (geneticalgorithm.h) alignedtext
end grestore
end grestore

%	Node621 -> Node594
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 158 51 moveto
158 42 158 31 158 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 156 50 moveto
158 60 lineto
161 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node610
[ /Rect [ 181 113 251 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($serialfuncs_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 181 112 moveto
252 112 lineto
252 127 lineto
181 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
216 115 moveto 61 -0.5 (serialfuncs.h) alignedtext
end grestore
end grestore

%	Node610 -> Node594
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 110 moveto
146 101 108 89 99 76 curveto
95 70 96 66 99 60 curveto
104 50 130 33 145 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 176 112 moveto
186 112 lineto
177 107 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node610 -> Node621
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 200 106 moveto
189 96 175 84 167 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 198 107 moveto
207 112 lineto
201 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node625
[ /Rect [ 226 61 322 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($feedforwardnet_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 226 60 moveto
322 60 lineto
322 75 lineto
226 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
274 63 moveto 86 -0.5 (feedforwardnet.h) alignedtext
end grestore
end grestore

%	Node610 -> Node625
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 232 106 moveto
243 96 257 84 265 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 231 104 moveto
225 112 lineto
234 107 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node626
[ /Rect [ 340 61 424 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($dynamicalnet_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 340 60 moveto
425 60 lineto
425 75 lineto
340 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
382 63 moveto 75 -0.5 (dynamicalnet.h) alignedtext
end grestore
end grestore

%	Node610 -> Node626
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 250 109 moveto
282 99 329 84 358 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 249 107 moveto
240 112 lineto
250 112 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node625 -> Node594
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 249 56 moveto
227 46 195 32 175 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 247 58 moveto
257 60 lineto
249 53 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node626 -> Node594
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 340 58 moveto
297 48 230 32 191 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 339 60 moveto
349 60 lineto
340 55 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2615 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)1369
3645 y @beginspecial 35 @llx 35 @lly 263 @urx 225 @ury
1305 @rwi @setspecial
%%BeginDocument: neuralanimat_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 263 225
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 263 225
%%PageOrientation: Portrait
gsave
35 35 228 190 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node627
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
83 8 lineto
83 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
83 8 lineto
83 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
41 11 moveto 73 -0.5 (neuralanimat.h) alignedtext
end grestore
end grestore

%	Node628
[ /Rect [ 5 61 77 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 5 60 moveto
78 60 lineto
78 75 lineto
5 75 lineto
closepath
stroke
gsave 10 dict begin
41 63 moveto 63 -0.5 (unserialiser.h) alignedtext
end grestore
end grestore

%	Node628 -> Node627
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 41 60 moveto
41 53 41 42 41 33 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 44 34 moveto
41 24 lineto
39 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node629
[ /Rect [ 2 113 78 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 2 112 moveto
78 112 lineto
78 127 lineto
2 127 lineto
closepath
stroke
gsave 10 dict begin
40 115 moveto 66 -0.5 (unserialiser.cc) alignedtext
end grestore
end grestore

%	Node629 -> Node628
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 40 112 moveto
40 105 40 94 40 85 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 42 86 moveto
41 76 lineto
37 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node630
[ /Rect [ 96 113 164 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 96 112 moveto
165 112 lineto
165 127 lineto
96 127 lineto
closepath
stroke
gsave 10 dict begin
130 115 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node630 -> Node628
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 117 112 moveto
102 103 79 90 62 80 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 64 78 moveto
54 76 lineto
62 83 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node633
[ /Rect [ 95 61 165 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($population_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 95 60 moveto
165 60 lineto
165 75 lineto
95 75 lineto
closepath
stroke
gsave 10 dict begin
130 63 moveto 60 -0.5 (population.h) alignedtext
end grestore
end grestore

%	Node630 -> Node633
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 125 112 moveto
124 105 123 94 124 85 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 126 86 moveto
125 76 lineto
121 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node631
[ /Rect [ 4 165 76 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 4 164 moveto
76 164 lineto
76 179 lineto
4 179 lineto
closepath
stroke
gsave 10 dict begin
40 167 moveto 62 -0.5 (simulation.cc) alignedtext
end grestore
end grestore

%	Node631 -> Node630
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 53 164 moveto
68 155 92 141 109 132 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 109 135 moveto
117 128 lineto
107 130 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node632
[ /Rect [ 94 165 166 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($glutsimenv_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 94 164 moveto
166 164 lineto
166 179 lineto
94 179 lineto
closepath
stroke
gsave 10 dict begin
130 167 moveto 62 -0.5 (glutsimenv.h) alignedtext
end grestore
end grestore

%	Node632 -> Node630
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 130 164 moveto
130 157 130 146 130 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 133 138 moveto
130 128 lineto
128 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node633 -> Node630
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 136 104 moveto
137 94 137 84 135 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 102 moveto
135 112 lineto
139 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node634
[ /Rect [ 184 165 226 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($beast_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 184 164 moveto
226 164 lineto
226 179 lineto
184 179 lineto
closepath
stroke
gsave 10 dict begin
205 167 moveto 32 -0.5 (beast.h) alignedtext
end grestore
end grestore

%	Node634 -> Node630
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 194 164 moveto
182 156 163 143 148 133 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 151 132 moveto
141 128 lineto
148 136 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4008 a Fj(Namespaces)275 4194 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 4474 y Fj(11.18.1)113
b(Detailed)36 b(Description)150 4674 y Fp(The)21 b(basic)g(Animat)h
(comes)e(with)i(no)f(con)n(trol)f(system,)i(so)f(in)g(the)h(course)e
(of)h(deriving)g(a)g(new)g(t)n(yp)r(e)g(of)h(Animat,)150
4774 y(a)27 b(con)n(trol)f(system)i(m)n(ust)g(b)r(e)g(added.)150
4921 y(Tw)n(o)e(useful)i(con)n(trol)d(systems)i(are)f(the)h(F)-7
b(eedF)g(orw)n(ardNet)26 b(and)h(DynamicalNet)g(classes.)35
b(FFNAnimat)28 b(and)150 5021 y(DNNAnimat)35 b(pro)n(vide)e(Animats)h
(with)g(these)g(con)n(trol)e(systems)i(built-in)g(and)g(automatically)e
(con\014gured)150 5120 y(from)25 b(the)g(Animat's)g(sensors)e(and)i
(con)n(trols.)34 b(Tw)n(o)24 b(other)h(classes,)f(Ev)n(oFFNAnimat)g
(and)h(Ev)n(oDNNAnimat)150 5220 y(are)33 b(pro)n(vided)g(as)g(ev)n(olv)
-5 b(able)33 b(v)n(ersions)f(in)i(case)g(the)g(only)f(data)h(con)n
(tained)f(in)h(the)h(genot)n(yp)r(e)e(is)h(the)g(ANN)150
5319 y(con\014guration.)h(biosystems)p -358 5723 V -192
5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 241 249
241 248 bop 150 70 a Fq(11.19)30 b(psoalgorithm.h)f(File)i(Reference)
2387 b(241)p 150 103 4034 4 v 150 333 a Fl(11.19)136
b(psoalgorithm.h)46 b(File)g(Reference)150 562 y Fi(#include)40
b("geneticalgorithm)o(.h)o(")150 709 y Fp(Include)28
b(dep)r(endency)g(graph)e(for)h(psoalgorithm.h:)1630
1309 y @beginspecial 35 @llx 35 @lly 137 @urx 121 @ury
677 @rwi @setspecial
%%BeginDocument: psoalgorithm_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 137 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 137 121
%%PageOrientation: Portrait
gsave
35 35 102 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node635
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 9 8 moveto
91 8 lineto
91 23 lineto
9 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 9 8 moveto
91 8 lineto
91 23 lineto
9 23 lineto
closepath
stroke
gsave 10 dict begin
50 11 moveto 72 -0.5 (psoalgorithm.h) alignedtext
end grestore
end grestore

%	Node636
[ /Rect [ 0 61 100 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($geneticalgorithm_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 0 60 moveto
100 60 lineto
100 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
50 63 moveto 90 -0.5 (geneticalgorithm.h) alignedtext
end grestore
end grestore

%	Node636 -> Node635
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 50 51 moveto
50 42 50 31 50 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 48 50 moveto
50 60 lineto
53 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1671 a Fj(Namespaces)275 1858 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 2137 y Fj(11.19.1)113
b(Detailed)36 b(Description)142 2276 y Fq(Author:)311
2376 y Fp(Da)n(vid)28 b(Gordon)e(biosystems)p 150 5723
V 150 5823 a Fn(Generated)g(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e
(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j
(Sim)n(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 242 250
242 249 bop -358 70 a Fq(242)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.20)136 b(random.h)45 b(File)g(Reference)150
562 y Fi(#include)40 b Fo(<)p Fi(cmath)p Fo(>)150 709
y Fi(#include)g Fo(<)p Fi(cstdlib)p Fo(>)150 856 y Fi(#include)g
Fo(<)p Fi(ctime)p Fo(>)150 1003 y Fi(#include)g Fo(<)p
Fi(iostream)p Fo(>)150 1150 y Fi(#include)g Fo(<)p Fi(functional)p
Fo(>)150 1297 y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h
(random.h:)1219 1819 y @beginspecial 35 @llx 35 @lly
335 @urx 121 @ury 1663 @rwi @setspecial
%%BeginDocument: random_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 335 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 335 121
%%PageOrientation: Portrait
gsave
35 35 300 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node655
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 106 8 moveto
162 8 lineto
162 23 lineto
106 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 106 8 moveto
162 8 lineto
162 23 lineto
106 23 lineto
closepath
stroke
gsave 10 dict begin
134 11 moveto 46 -0.5 (random.h) alignedtext
end grestore
end grestore

%	Node656
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 0 60 moveto
40 60 lineto
40 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
20 63 moveto 30 -0.5 (cmath) alignedtext
end grestore
end grestore

%	Node656 -> Node655
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 45 56 moveto
67 46 98 32 118 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 45 53 moveto
37 60 lineto
47 58 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node657
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 58 60 moveto
99 60 lineto
99 75 lineto
58 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
78 63 moveto 31 -0.5 (cstdlib) alignedtext
end grestore
end grestore

%	Node657 -> Node655
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 93 54 moveto
103 44 117 32 126 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 52 moveto
86 60 lineto
95 55 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node658
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 116 60 moveto
152 60 lineto
152 75 lineto
116 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
134 63 moveto 26 -0.5 (ctime) alignedtext
end grestore
end grestore

%	Node658 -> Node655
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 51 moveto
134 42 134 31 134 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 132 50 moveto
134 60 lineto
137 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node659
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 170 60 moveto
221 60 lineto
221 75 lineto
170 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
195 63 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node659 -> Node655
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 179 54 moveto
167 44 153 32 143 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 177 55 moveto
186 60 lineto
180 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node660
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 238 60 moveto
299 60 lineto
299 75 lineto
238 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
268 63 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node660 -> Node655
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 241 57 moveto
214 47 176 32 153 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 239 59 moveto
249 60 lineto
241 54 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2150 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)1236
3267 y @beginspecial 35 @llx 35 @lly 327 @urx 249 @ury
1623 @rwi @setspecial
%%BeginDocument: random_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 327 249
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 327 249
%%PageOrientation: Portrait
gsave
35 35 292 214 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node661
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 226 95 moveto
282 95 lineto
282 110 lineto
226 110 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 226 95 moveto
282 95 lineto
282 110 lineto
226 110 lineto
closepath
stroke
gsave 10 dict begin
254 98 moveto 46 -0.5 (random.h) alignedtext
end grestore
end grestore

%	Node662
[ /Rect [ 110 160 170 174 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($vector2d_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 110 159 moveto
170 159 lineto
170 174 lineto
110 174 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
140 162 moveto 50 -0.5 (vector2d.h) alignedtext
end grestore
end grestore

%	Node662 -> Node661
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 170 165 moveto
177 164 184 161 190 158 curveto
210 146 206 130 218 116 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 219 118 moveto
225 110 lineto
216 115 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node667
[ /Rect [ 8 160 54 174 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 8 159 moveto
54 159 lineto
54 174 lineto
8 174 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
31 162 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node667 -> Node661
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 54 174 moveto
65 178 78 181 90 183 curveto
135 188 152 205 190 183 curveto
218 167 204 144 226 121 curveto
228 119 230 118 232 116 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 233 118 moveto
240 111 lineto
230 114 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node667 -> Node662
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 54 167 moveto
67 167 84 167 100 167 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 100 170 moveto
110 167 lineto
100 165 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node689
[ /Rect [ 95 128 185 142 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensorfunctors_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 95 127 moveto
185 127 lineto
185 142 lineto
95 142 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
140 130 moveto 80 -0.5 (sensorfunctors.h) alignedtext
end grestore
end grestore

%	Node667 -> Node689
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 51 159 moveto
52 159 53 158 54 158 curveto
69 152 73 148 85 144 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 86 146 moveto
95 142 lineto
85 142 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node688
[ /Rect [ 114 96 166 110 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($colours_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 114 95 moveto
167 95 lineto
167 110 lineto
114 110 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
140 98 moveto 43 -0.5 (colours.h) alignedtext
end grestore
end grestore

%	Node688 -> Node661
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 167 103 moveto
181 103 200 103 216 103 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 216 106 moveto
226 103 lineto
216 101 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node689 -> Node661
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 185 128 moveto
187 128 188 128 190 127 curveto
203 123 208 119 217 114 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 218 116 moveto
226 110 lineto
216 112 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node690
[ /Rect [ 98 64 182 78 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($dynamicalnet_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 98 63 moveto
183 63 lineto
183 78 lineto
98 78 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
140 66 moveto 75 -0.5 (dynamicalnet.h) alignedtext
end grestore
end grestore

%	Node690 -> Node661
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 183 77 moveto
185 78 188 78 190 79 curveto
203 83 208 87 217 92 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 217 95 moveto
227 95 lineto
218 90 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node692
[ /Rect [ 92 32 188 46 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($feedforwardnet_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 92 31 moveto
188 31 lineto
188 46 lineto
92 46 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
140 34 moveto 86 -0.5 (feedforwardnet.h) alignedtext
end grestore
end grestore

%	Node692 -> Node661
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 188 46 moveto
189 46 189 47 190 47 curveto
210 59 207 75 219 89 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 218 91 moveto
227 95 lineto
220 87 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node693
[ /Rect [ 90 0 190 14 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($geneticalgorithm_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 90 -1 moveto
190 -1 lineto
190 14 lineto
90 14 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
140 2 moveto 90 -0.5 (geneticalgorithm.h) alignedtext
end grestore
end grestore

%	Node693 -> Node661
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 188 15 moveto
189 15 189 15 190 16 curveto
218 38 201 64 219 87 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 218 89 moveto
226 95 lineto
221 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3632 a Fj(Comp)s(ounds)275 3820 y Fk(\210)42
b Fp(struct)27 b Fq(Random)476 3945 y Fg(F)-6 b(unction)28
b(obje)l(ct)h(version)f(of)g(r)l(andval.)150 4319 y Fj(De\014nes)275
4507 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(M1)f Fp(259200)275
4616 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IA1)f Fp(7141)275
4725 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IC1)f Fp(54773)275
4834 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(RM1)e Fp(\(1.0/M1\))275
4943 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(M2)f Fp(134456)275
5052 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IA2)f Fp(8121)275
5161 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IC2)f Fp(28411)275
5270 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(RM2)e Fp(\(1.0/M2\))275
5379 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(M3)f Fp(243000)275
5488 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IA3)f Fp(4561)275
5597 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IC3)f Fp(51349)p
-358 5723 V -192 5823 a Fn(Generated)f(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 243 251
243 250 bop 150 70 a Fq(11.20)30 b(random.h)h(File)f(Reference)2611
b(243)p 150 103 4034 4 v 150 333 a Fj(F)-9 b(unctions)275
519 y Fk(\210)42 b Fp(\015oat)27 b Fq(ran1)h Fp(\(in)n(t)g
Fh(\003)p Fp(idum\))275 627 y Fk(\210)42 b Fp(in)n(t)27
b Fq(rseed)h Fp(\(in)n(t)g Fh(\003)p Fp(s,)f(b)r(o)r(ol)g(v)n(erb)r
(ose\))275 735 y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(Real)p Fo(>)g Fp(Real)g Fq(randv)-5 b(al)28 b Fp(\(Real)g(limit\))476
859 y Fg(R)l(eturns)h(a)f(\(ne)l(ar\))h(uniform)e(distribute)l(d)i(r)l
(andom)g(numb)l(er)f(in)f(the)i(r)l(ange)f(0..limit,)d(as)j(a)g(R)l(e)l
(al.)275 1059 y Fk(\210)42 b Fp(in)n(t)27 b Fq(irand)h
Fp(\(in)n(t)h(limit\))476 1183 y Fg(R)l(eturns)g(a)f(r)l(andom)g(inte)l
(ger)h(in)e([0..limit-1].)275 1383 y Fk(\210)42 b Fp(b)r(o)r(ol)27
b Fq(brand)i Fp(\(double)e(p\))275 1490 y Fk(\210)42
b Fp(b)r(o)r(ol)27 b Fq(brand)i Fp(\(\015oat)e(p\))275
1598 y Fk(\210)42 b Fp(template)p Fo(<>)27 b Fp(in)n(t)g
Fq(randv)-5 b(al)29 b Fp(\(in)n(t)f(limit\))476 1723
y Fg(T)-6 b(emplate)28 b(sp)l(e)l(cialisation)g(to)h(stop)f(r)l(andval)
h(fr)l(om)e(b)l(eing)h(c)l(al)t(le)l(d)g(with)f(ints.)275
1922 y Fk(\210)42 b Fp(template)p Fo(<>)27 b Fp(b)r(o)r(ol)g
Fq(randv)-5 b(al)29 b Fp(\(b)r(o)r(ol\))275 2030 y Fk(\210)42
b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27 b(Real)p
Fo(>)g Fp(Real)g Fq(gaussrand)h Fp(\(v)n(oid\))476 2155
y Fg(R)l(eturns)h(a)f(normal)t(ly)f(distribute)l(d)i(variable)g(with)e
(zer)l(o)i(me)l(an)f(and)g(unit)f(varianc)l(e.)275 2354
y Fk(\210)42 b Fp(template)p Fo(<)p Fp(t)n(yp)r(ename)27
b(Real)p Fo(>)g Fp(Real)g Fq(normrand)g Fp(\(Real)h(mean,)f(Real)g
(sd\))476 2478 y Fg(R)l(eturns)g(a)e(r)l(andom)i(deviate)f(fr)l(om)f(a)
h(normal)g(distribution)g(with)g(sp)l(e)l(ci\014e)l(d)g(me)l(an)g(and)g
(standar)l(d)i(distribu-)476 2570 y(tion.)150 2941 y
Fj(11.20.1)113 b(Detailed)36 b(Description)142 3080 y
Fq(Author:)311 3179 y Fp(Da)n(v)n(e)27 b(Cli\013)142
3375 y Fq(Date:)311 3474 y Fp(Ma)n(y)22 b(1991)f(utilities)i(Some)g
(general)e(random)h(routines,)h(and)g(some)f(useful)h(#de\014nes)g(Mo)r
(di\014ed)g(b)n(y)f(Da)n(v)n(e)311 3574 y(Gordon)27 b(2002)f(Mo)n(v)n
(ed)g(the)i(#de\014nes)g(elsewhere)f(and)g(turned)h(ev)n(erything)e(in)
n(to)i(C++)e(templates)p 150 5723 V 150 5823 a Fn(Generated)g(on)e(Sun)
h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 244 252
244 251 bop -358 70 a Fq(244)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.21)136 b(sensor.h)45 b(File)h(Reference)150
562 y Fi(#include)40 b("sensorbase.h")150 709 y(#include)g
("sensorfunctors.h)o(")150 855 y Fp(Include)28 b(dep)r(endency)g(graph)
e(for)h(sensor.h:)962 2531 y @beginspecial 35 @llx 35
@lly 459 @urx 381 @ury 2281 @rwi @setspecial
%%BeginDocument: sensor_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 459 381
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 459 381
%%PageOrientation: Portrait
gsave
35 35 424 346 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node695
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 276 8 moveto
324 8 lineto
324 23 lineto
276 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 276 8 moveto
324 8 lineto
324 23 lineto
276 23 lineto
closepath
stroke
gsave 10 dict begin
300 11 moveto 38 -0.5 (sensor.h) alignedtext
end grestore
end grestore

%	Node696
[ /Rect [ 224 61 292 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensorbase_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 224 60 moveto
293 60 lineto
293 75 lineto
224 75 lineto
closepath
stroke
gsave 10 dict begin
258 63 moveto 59 -0.5 (sensorbase.h) alignedtext
end grestore
end grestore

%	Node696 -> Node695
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 270 53 moveto
278 43 288 32 294 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 269 51 moveto
264 60 lineto
272 54 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node697
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 47 320 moveto
87 320 lineto
87 335 lineto
47 335 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
67 323 moveto 30 -0.5 (cmath) alignedtext
end grestore
end grestore

%	Node697 -> Node696
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 54 315 moveto
37 296 10 260 10 224 curveto
10 224 10 224 10 172 curveto
10 148 171 95 233 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 50 315 moveto
59 320 lineto
54 311 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node700
[ /Rect [ 145 113 221 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 145 112 moveto
221 112 lineto
221 127 lineto
145 127 lineto
closepath
stroke
gsave 10 dict begin
183 115 moveto 66 -0.5 (worldobject.h) alignedtext
end grestore
end grestore

%	Node697 -> Node700
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 63 312 moveto
55 281 43 209 75 164 curveto
85 150 126 136 155 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 60 311 moveto
65 320 lineto
65 310 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node702
[ /Rect [ 94 217 154 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($vector2d_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 94 216 moveto
154 216 lineto
154 231 lineto
94 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
124 219 moveto 50 -0.5 (vector2d.h) alignedtext
end grestore
end grestore

%	Node697 -> Node702
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 313 moveto
87 291 110 249 120 232 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 310 moveto
71 320 lineto
78 313 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node706
[ /Rect [ 152 269 208 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($random_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 152 268 moveto
208 268 lineto
208 283 lineto
152 283 lineto
closepath
stroke
gsave 10 dict begin
180 271 moveto 46 -0.5 (random.h) alignedtext
end grestore
end grestore

%	Node697 -> Node706
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 316 moveto
113 306 145 292 164 284 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 92 313 moveto
84 320 lineto
94 318 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node698
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 248 320 moveto
309 320 lineto
309 335 lineto
248 335 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
278 323 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node698 -> Node696
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 283 314 moveto
291 295 304 257 304 224 curveto
304 224 304 224 304 172 curveto
304 133 276 92 264 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 282 310 moveto
281 320 lineto
287 311 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node698 -> Node706
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 256 316 moveto
237 306 211 292 194 284 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 254 318 moveto
264 320 lineto
256 313 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node699
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 240 164 moveto
277 164 lineto
277 179 lineto
240 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
258 167 moveto 27 -0.5 (string) alignedtext
end grestore
end grestore

%	Node699 -> Node696
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 258 156 moveto
258 134 258 93 258 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 256 154 moveto
258 164 lineto
261 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node699 -> Node700
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 240 159 moveto
225 149 206 136 194 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 237 160 moveto
247 164 lineto
240 156 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node700 -> Node696
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 201 107 moveto
216 97 235 84 247 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 201 104 moveto
194 112 lineto
204 108 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node701
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 155 320 moveto
206 320 lineto
206 335 lineto
155 335 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
180 323 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node701 -> Node700
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 196 314 moveto
204 306 213 296 217 284 curveto
239 226 201 152 188 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 195 311 moveto
190 320 lineto
199 315 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node701 -> Node702
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 166 314 moveto
159 306 149 295 143 284 curveto
134 266 128 243 126 232 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 163 315 moveto
172 320 lineto
167 311 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node701 -> Node706
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 180 311 moveto
180 302 180 291 180 284 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 178 310 moveto
180 320 lineto
183 310 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node702 -> Node700
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 135 210 moveto
142 201 150 190 155 180 curveto
166 162 175 139 180 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 207 moveto
130 216 lineto
138 210 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node715
[ /Rect [ 84 165 146 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 84 164 moveto
147 164 lineto
147 179 lineto
84 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
115 167 moveto 53 -0.5 (drawable.h) alignedtext
end grestore
end grestore

%	Node702 -> Node715
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 121 208 moveto
120 199 118 188 116 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 118 207 moveto
123 216 lineto
123 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node706 -> Node702
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 165 262 moveto
155 252 141 240 132 232 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 163 263 moveto
172 268 lineto
166 260 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node719
[ /Rect [ 332 217 422 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensorfunctors_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 332 216 moveto
422 216 lineto
422 231 lineto
332 231 lineto
closepath
stroke
gsave 10 dict begin
377 219 moveto 80 -0.5 (sensorfunctors.h) alignedtext
end grestore
end grestore

%	Node706 -> Node719
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 215 266 moveto
261 253 314 240 347 232 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 215 263 moveto
206 268 lineto
216 268 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node715 -> Node700
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 132 159 moveto
145 149 162 136 173 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 132 156 moveto
125 164 lineto
135 160 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node719 -> Node695
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 371 207 moveto
355 165 314 55 303 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 368 207 moveto
374 216 lineto
373 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node705
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 351 268 moveto
403 268 lineto
403 283 lineto
351 283 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
377 271 moveto 42 -0.5 (typeinfo) alignedtext
end grestore
end grestore

%	Node705 -> Node719
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 377 259 moveto
377 250 377 239 377 232 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 375 258 moveto
377 268 lineto
380 258 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2861 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)1543
4226 y @beginspecial 35 @llx 35 @lly 179 @urx 277 @ury
886 @rwi @setspecial
%%BeginDocument: sensor_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 179 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 179 277
%%PageOrientation: Portrait
gsave
35 35 144 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node720
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 24 8 moveto
72 8 lineto
72 23 lineto
24 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 24 8 moveto
72 8 lineto
72 23 lineto
24 23 lineto
closepath
stroke
gsave 10 dict begin
48 11 moveto 38 -0.5 (sensor.h) alignedtext
end grestore
end grestore

%	Node721
[ /Rect [ 11 61 85 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 11 60 moveto
85 60 lineto
85 75 lineto
11 75 lineto
closepath
stroke
gsave 10 dict begin
48 63 moveto 64 -0.5 (distribution.h) alignedtext
end grestore
end grestore

%	Node721 -> Node720
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 48 60 moveto
48 53 48 42 48 33 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 51 34 moveto
48 24 lineto
46 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node722
[ /Rect [ 0 217 76 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 216 moveto
77 216 lineto
77 231 lineto
0 231 lineto
closepath
stroke
gsave 10 dict begin
38 219 moveto 67 -0.5 (distribution.cc) alignedtext
end grestore
end grestore

%	Node722 -> Node721
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 36 216 moveto
34 208 31 192 29 180 curveto
25 144 36 103 43 82 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 44 86 moveto
45 76 lineto
39 85 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node723
[ /Rect [ 38 165 94 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacteria_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 38 164 moveto
94 164 lineto
94 179 lineto
38 179 lineto
closepath
stroke
gsave 10 dict begin
66 167 moveto 46 -0.5 (bacteria.h) alignedtext
end grestore
end grestore

%	Node722 -> Node723
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 42 216 moveto
46 208 52 197 58 188 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 60 190 moveto
62 180 lineto
55 188 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node723 -> Node721
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 65 164 moveto
61 147 55 106 50 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 53 86 moveto
49 76 lineto
48 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node724
[ /Rect [ 76 113 142 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacterium_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 76 112 moveto
143 112 lineto
143 127 lineto
76 127 lineto
closepath
stroke
gsave 10 dict begin
109 115 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node723 -> Node724
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 164 moveto
78 156 88 144 97 135 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 98 137 moveto
103 128 lineto
95 134 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node724 -> Node721
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 100 112 moveto
90 104 76 92 64 82 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 81 moveto
57 76 lineto
63 84 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4589 a Fj(Namespaces)275 4775 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 5055 y Fj(11.21.1)113
b(Detailed)36 b(Description)142 5194 y Fq(Author:)311
5294 y Fp(Da)n(vid)d(Gordon)e(sensors)g(Include)i(this)g(\014le)f(for)g
(all)g(sensor)g(functionalit)n(y)-7 b(.)51 b Fq(sensorbase.h)31
b Fp(and)i Fq(sen-)311 5393 y(sorfunctors.h)e Fp(are)f(included)h(b)n
(y)f(this)h(\014le.)46 b Fq(sensor.h)30 b Fp(con)n(tains)f(some)h
(useful)i(functions)e(whic)n(h)h(set)311 5493 y(up)d(the)g(most)g
(common)f(t)n(yp)r(es)g(of)h(sensor.)p -358 5723 V -192
5823 a Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 245 253
245 252 bop 150 70 a Fq(11.22)30 b(sensorbase.h)h(File)f(Reference)2490
b(245)p 150 103 4034 4 v 150 333 a Fl(11.22)136 b(sensorbase.h)46
b(File)f(Reference)150 568 y Fp(All)27 b(basic)f(sensor)g(ob)5
b(jects)26 b(are)g(de\014ned)h(in)g(this)g(\014le,)g(but)g(no)g(sensor)
e(functors,)h(or)g(help)r(er)h(functions)g(app)r(ear)150
668 y(here.)150 815 y Fi(#include)40 b Fo(<)p Fi(cmath)p
Fo(>)150 961 y Fi(#include)g Fo(<)p Fi(functional)p Fo(>)150
1108 y Fi(#include)g Fo(<)p Fi(string)p Fo(>)150 1255
y Fi(#include)g("worldobject.h")150 1402 y Fp(Include)28
b(dep)r(endency)g(graph)e(for)h(sensorbase.h:)1215 2662
y @beginspecial 35 @llx 35 @lly 336 @urx 277 @ury 1673
@rwi @setspecial
%%BeginDocument: sensorbase_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 336 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 336 277
%%PageOrientation: Portrait
gsave
35 35 301 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node725
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 144 8 moveto
213 8 lineto
213 23 lineto
144 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 144 8 moveto
213 8 lineto
213 23 lineto
144 23 lineto
closepath
stroke
gsave 10 dict begin
178 11 moveto 59 -0.5 (sensorbase.h) alignedtext
end grestore
end grestore

%	Node726
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 28 216 moveto
68 216 lineto
68 231 lineto
28 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
48 219 moveto 30 -0.5 (cmath) alignedtext
end grestore
end grestore

%	Node726 -> Node725
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 49 208 moveto
52 177 61 105 98 60 curveto
113 42 137 30 154 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 47 206 moveto
48 216 lineto
52 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node729
[ /Rect [ 107 61 183 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 107 60 moveto
183 60 lineto
183 75 lineto
107 75 lineto
closepath
stroke
gsave 10 dict begin
145 63 moveto 66 -0.5 (worldobject.h) alignedtext
end grestore
end grestore

%	Node726 -> Node729
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 53 210 moveto
62 188 79 144 100 112 curveto
112 93 116 88 133 76 curveto
133 76 133 76 134 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 52 206 moveto
51 216 lineto
57 207 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node731
[ /Rect [ 87 165 147 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($vector2d_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 87 164 moveto
147 164 lineto
147 179 lineto
87 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
117 167 moveto 50 -0.5 (vector2d.h) alignedtext
end grestore
end grestore

%	Node726 -> Node731
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 65 211 moveto
78 201 96 188 107 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 65 208 moveto
58 216 lineto
68 212 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node727
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 239 60 moveto
300 60 lineto
300 75 lineto
239 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
269 63 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node727 -> Node725
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 248 56 moveto
230 46 206 32 191 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 246 58 moveto
256 60 lineto
248 53 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node728
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 232 112 moveto
269 112 lineto
269 127 lineto
232 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
250 115 moveto 27 -0.5 (string) alignedtext
end grestore
end grestore

%	Node728 -> Node725
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 240 105 moveto
224 83 196 41 183 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 237 105 moveto
245 112 lineto
241 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node728 -> Node729
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 227 108 moveto
206 98 178 84 160 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 225 110 moveto
235 112 lineto
227 105 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node729 -> Node725
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 155 52 moveto
161 43 168 32 173 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 153 50 moveto
150 60 lineto
157 53 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node730
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 103 216 moveto
154 216 lineto
154 231 lineto
103 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
128 219 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node730 -> Node729
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 139 211 moveto
153 194 177 160 185 128 curveto
186 121 187 118 185 112 curveto
179 97 166 83 156 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 139 207 moveto
135 216 lineto
143 210 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node730 -> Node731
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 124 208 moveto
123 199 121 188 119 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 121 207 moveto
126 216 lineto
126 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node731 -> Node729
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 110 157 moveto
105 145 100 127 105 112 curveto
111 97 125 83 135 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 107 156 moveto
113 164 lineto
111 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node744
[ /Rect [ 114 113 176 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 114 112 moveto
177 112 lineto
177 127 lineto
114 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
145 115 moveto 53 -0.5 (drawable.h) alignedtext
end grestore
end grestore

%	Node731 -> Node744
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 125 157 moveto
130 147 137 136 141 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 124 154 moveto
121 164 lineto
128 157 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node744 -> Node729
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 145 103 moveto
145 94 145 83 145 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 143 102 moveto
145 112 lineto
148 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3006 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)1107
4246 y @beginspecial 35 @llx 35 @lly 389 @urx 277 @ury
1932 @rwi @setspecial
%%BeginDocument: sensorbase_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 389 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 389 277
%%PageOrientation: Portrait
gsave
35 35 354 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node748
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 218 8 moveto
287 8 lineto
287 23 lineto
218 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 218 8 moveto
287 8 lineto
287 23 lineto
218 23 lineto
closepath
stroke
gsave 10 dict begin
252 11 moveto 59 -0.5 (sensorbase.h) alignedtext
end grestore
end grestore

%	Node749
[ /Rect [ 98 61 150 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 98 60 moveto
150 60 lineto
150 75 lineto
98 75 lineto
closepath
stroke
gsave 10 dict begin
124 63 moveto 42 -0.5 (animat.h) alignedtext
end grestore
end grestore

%	Node749 -> Node748
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 143 60 moveto
165 51 201 36 225 27 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 225 30 moveto
233 24 lineto
223 25 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node750
[ /Rect [ 38 165 92 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 38 164 moveto
93 164 lineto
93 179 lineto
38 179 lineto
closepath
stroke
gsave 10 dict begin
65 167 moveto 45 -0.5 (animat.cc) alignedtext
end grestore
end grestore

%	Node750 -> Node749
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 63 164 moveto
61 152 58 129 67 112 curveto
74 98 88 87 100 80 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 100 83 moveto
108 76 lineto
98 78 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node751
[ /Rect [ 76 113 122 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 76 112 moveto
122 112 lineto
122 127 lineto
76 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
99 115 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node750 -> Node751
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 70 164 moveto
75 156 82 145 89 136 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 91 138 moveto
94 128 lineto
87 135 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node751 -> Node749
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 103 112 moveto
107 105 112 94 116 84 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 118 86 moveto
120 76 lineto
113 84 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node754
[ /Rect [ 196 165 270 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 196 164 moveto
270 164 lineto
270 179 lineto
196 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
233 167 moveto 64 -0.5 (distribution.h) alignedtext
end grestore
end grestore

%	Node754 -> Node751
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 214 164 moveto
191 155 153 140 126 131 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 128 129 moveto
118 128 lineto
126 134 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node766
[ /Rect [ 228 61 276 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensor_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 228 60 moveto
276 60 lineto
276 75 lineto
228 75 lineto
closepath
stroke
gsave 10 dict begin
252 63 moveto 38 -0.5 (sensor.h) alignedtext
end grestore
end grestore

%	Node754 -> Node766
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 242 164 moveto
250 156 263 143 269 128 curveto
274 112 267 95 261 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 264 83 moveto
257 76 lineto
260 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node757
[ /Rect [ 88 217 154 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacterium_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 88 216 moveto
155 216 lineto
155 231 lineto
88 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
121 219 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node757 -> Node749
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 99 216 moveto
74 208 38 192 29 180 curveto
26 173 28 170 29 164 curveto
42 118 57 105 96 81 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 97 83 moveto
105 76 lineto
95 79 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node757 -> Node754
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 138 216 moveto
157 207 188 193 209 183 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 209 186 moveto
217 180 lineto
207 181 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node758
[ /Rect [ 110 165 178 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 110 164 moveto
179 164 lineto
179 179 lineto
110 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
144 167 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node758 -> Node749
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 142 164 moveto
139 147 131 106 127 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 130 85 moveto
125 76 lineto
125 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node758 -> Node751
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 137 164 moveto
131 156 120 144 112 135 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 114 134 moveto
106 128 lineto
111 137 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node763
[ /Rect [ 178 113 260 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($neuralanimat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 178 112 moveto
261 112 lineto
261 127 lineto
178 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
219 115 moveto 73 -0.5 (neuralanimat.h) alignedtext
end grestore
end grestore

%	Node763 -> Node749
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 205 112 moveto
189 103 164 89 146 80 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 148 78 moveto
138 76 lineto
146 83 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node766 -> Node748
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 252 60 moveto
252 53 252 42 252 33 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 255 34 moveto
252 24 lineto
250 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node767
[ /Rect [ 294 61 352 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($signaller_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 294 60 moveto
352 60 lineto
352 75 lineto
294 75 lineto
closepath
stroke
gsave 10 dict begin
323 63 moveto 48 -0.5 (signaller.h) alignedtext
end grestore
end grestore

%	Node767 -> Node748
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 313 60 moveto
301 52 283 39 270 29 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 273 28 moveto
263 24 lineto
270 32 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4641 a Fj(Namespaces)275 4848 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 5160 y Fj(11.22.1)113
b(Detailed)36 b(Description)150 5366 y Fp(All)27 b(basic)f(sensor)g(ob)
5 b(jects)26 b(are)g(de\014ned)h(in)g(this)g(\014le,)g(but)g(no)g
(sensor)e(functors,)h(or)g(help)r(er)h(functions)g(app)r(ear)150
5466 y(here.)150 5613 y(If)h(y)n(ou)f(w)n(an)n(t)g(to)g(include)h
(sensors)e(in)i(y)n(our)e(sim)n(ulation,)h(include)h(the)g(\014le)g
Fq(sensor.h)f Fp(instead.)p 150 5723 V 150 5823 a Fn(Generated)f(on)e
(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 246 254
246 253 bop -358 70 a Fq(246)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 142
307 a(Author:)311 407 y Fp(Da)n(vid)e(Gordon)e(sensors)p
-358 5723 V -192 5823 a Fn(Generated)g(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 247 255
247 254 bop 150 70 a Fq(11.23)30 b(serialfuncs.h)h(File)g(Reference)
2494 b(247)p 150 103 4034 4 v 150 333 a Fl(11.23)136
b(serialfuncs.h)46 b(File)f(Reference)150 562 y Fp(A)27
b(bunc)n(h)h(of)f(metho)r(ds,)g(templates)h(and)f(classes)f(for)g(p)r
(erforming)g(quic)n(k)h(stream)f(insertion)h(and)g(extraction,)150
661 y(include)h(this)g(\014le)g(if)g(y)n(ou)f(need)g(to)h(serialise)e
(y)n(our)g(ob)5 b(jects')27 b(data.)150 808 y Fi(#include)40
b Fo(<)p Fi(iostream)p Fo(>)150 955 y Fi(#include)g Fo(<)p
Fi(algorithm)p Fo(>)150 1102 y Fi(#include)g Fo(<)p Fi(iterator)p
Fo(>)150 1249 y Fi(#include)g Fo(<)p Fi(string)p Fo(>)150
1396 y Fi(#include)g Fo(<)p Fi(sstream)p Fo(>)150 1543
y Fi(#include)g Fo(<)p Fi(vector)p Fo(>)150 1689 y Fi(#include)g
Fo(<)p Fi(map)p Fo(>)150 1836 y Fp(Include)28 b(dep)r(endency)g(graph)e
(for)h(serialfuncs.h:)979 2346 y @beginspecial 35 @llx
35 @lly 451 @urx 121 @ury 2241 @rwi @setspecial
%%BeginDocument: serialfuncs_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 451 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 451 121
%%PageOrientation: Portrait
gsave
35 35 416 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node768
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 189 8 moveto
260 8 lineto
260 23 lineto
189 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 189 8 moveto
260 8 lineto
260 23 lineto
189 23 lineto
closepath
stroke
gsave 10 dict begin
224 11 moveto 61 -0.5 (serialfuncs.h) alignedtext
end grestore
end grestore

%	Node769
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 0 60 moveto
51 60 lineto
51 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
25 63 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node769 -> Node768
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 58 moveto
105 45 159 32 192 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 58 55 moveto
49 60 lineto
59 60 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node770
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 68 60 moveto
126 60 lineto
126 75 lineto
68 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
97 63 moveto 48 -0.5 (algorithm) alignedtext
end grestore
end grestore

%	Node770 -> Node768
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 123 57 moveto
148 47 184 32 206 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 123 54 moveto
115 60 lineto
125 59 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node771
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 144 60 moveto
189 60 lineto
189 75 lineto
144 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
166 63 moveto 35 -0.5 (iterator) alignedtext
end grestore
end grestore

%	Node771 -> Node768
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 182 54 moveto
193 44 207 32 215 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 181 52 moveto
175 60 lineto
184 55 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node772
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 206 60 moveto
243 60 lineto
243 75 lineto
206 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
224 63 moveto 27 -0.5 (string) alignedtext
end grestore
end grestore

%	Node772 -> Node768
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 224 51 moveto
224 42 224 31 224 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 222 50 moveto
224 60 lineto
227 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node773
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 260 60 moveto
307 60 lineto
307 75 lineto
260 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
283 63 moveto 37 -0.5 (sstream) alignedtext
end grestore
end grestore

%	Node773 -> Node768
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 267 54 moveto
256 44 242 32 233 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 265 55 moveto
274 60 lineto
268 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node774
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 324 60 moveto
364 60 lineto
364 75 lineto
324 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
344 63 moveto 30 -0.5 (vector) alignedtext
end grestore
end grestore

%	Node774 -> Node768
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 319 57 moveto
296 46 262 32 241 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 317 59 moveto
327 60 lineto
319 54 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node775
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 382 60 moveto
414 60 lineto
414 75 lineto
382 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
398 63 moveto 22 -0.5 (map) alignedtext
end grestore
end grestore

%	Node775 -> Node768
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 375 57 moveto
347 47 289 32 254 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 373 59 moveto
383 60 lineto
375 54 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2674 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)455
4185 y @beginspecial 35 @llx 35 @lly 703 @urx 353 @ury
3496 @rwi @setspecial
%%BeginDocument: serialfuncs_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 703 353
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 703 353
%%PageOrientation: Portrait
gsave
35 35 668 318 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node776
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 587 152 moveto
658 152 lineto
658 167 lineto
587 167 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 587 152 moveto
658 152 lineto
658 167 lineto
587 167 lineto
closepath
stroke
gsave 10 dict begin
622 155 moveto 61 -0.5 (serialfuncs.h) alignedtext
end grestore
end grestore

%	Node777
[ /Rect [ 470 302 530 316 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($vector2d_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 470 301 moveto
530 301 lineto
530 316 lineto
470 316 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
500 304 moveto 50 -0.5 (vector2d.h) alignedtext
end grestore
end grestore

%	Node777 -> Node776
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 530 309 moveto
537 308 545 305 550 300 curveto
593 260 548 214 579 174 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 581 176 moveto
586 167 lineto
577 172 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node799
[ /Rect [ 341 284 403 298 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 341 283 moveto
404 283 lineto
404 298 lineto
341 298 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
372 286 moveto 53 -0.5 (drawable.h) alignedtext
end grestore
end grestore

%	Node799 -> Node776
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 404 292 moveto
443 291 508 285 550 250 curveto
578 226 556 199 582 174 curveto
582 174 583 173 583 173 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 584 175 moveto
591 168 lineto
581 171 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node799 -> Node777
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 404 295 moveto
421 298 442 301 461 304 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 460 306 moveto
470 305 lineto
460 301 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node803
[ /Rect [ 458 118 542 132 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($dynamicalnet_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 458 117 moveto
543 117 lineto
543 132 lineto
458 132 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
500 120 moveto 75 -0.5 (dynamicalnet.h) alignedtext
end grestore
end grestore

%	Node803 -> Node776
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 543 130 moveto
545 131 548 131 550 132 curveto
566 136 569 142 581 149 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 581 152 moveto
591 152 lineto
582 147 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node793
[ /Rect [ 331 112 413 126 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($neuralanimat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 331 111 moveto
414 111 lineto
414 126 lineto
331 126 lineto
closepath
stroke
gsave 10 dict begin
372 114 moveto 73 -0.5 (neuralanimat.h) alignedtext
end grestore
end grestore

%	Node793 -> Node776
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 413 127 moveto
413 127 414 127 414 127 curveto
431 131 434 136 450 141 curveto
492 151 541 156 576 158 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 576 160 moveto
586 159 lineto
576 156 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node793 -> Node803
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 414 121 moveto
425 122 436 123 447 123 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 447 126 moveto
457 123 lineto
447 121 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node805
[ /Rect [ 452 86 548 100 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($feedforwardnet_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 452 85 moveto
548 85 lineto
548 100 lineto
452 100 lineto
closepath
stroke
gsave 10 dict begin
500 88 moveto 86 -0.5 (feedforwardnet.h) alignedtext
end grestore
end grestore

%	Node793 -> Node805
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 407 111 moveto
410 111 412 110 414 110 curveto
428 107 432 104 442 102 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 443 104 moveto
452 100 lineto
442 100 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node806
[ /Rect [ 450 54 550 68 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($geneticalgorithm_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 450 53 moveto
550 53 lineto
550 68 lineto
450 68 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
500 56 moveto 90 -0.5 (geneticalgorithm.h) alignedtext
end grestore
end grestore

%	Node793 -> Node806
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 411 111 moveto
412 111 413 110 414 110 curveto
433 99 430 84 442 73 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 443 75 moveto
450 68 lineto
440 71 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node794
[ /Rect [ 221 112 293 126 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 221 111 moveto
294 111 lineto
294 126 lineto
221 126 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
257 114 moveto 63 -0.5 (unserialiser.h) alignedtext
end grestore
end grestore

%	Node794 -> Node776
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 292 127 moveto
293 127 293 127 294 127 curveto
311 130 314 131 330 135 curveto
384 146 396 154 450 160 curveto
492 164 541 163 575 162 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 576 165 moveto
586 162 lineto
576 160 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node794 -> Node793
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 294 119 moveto
302 119 311 119 320 119 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 320 122 moveto
330 119 lineto
320 117 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node788
[ /Rect [ 115 108 183 122 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 115 107 moveto
184 107 lineto
184 122 lineto
115 122 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
149 110 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node788 -> Node776
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 183 123 moveto
183 123 184 123 184 123 curveto
201 127 204 130 220 135 curveto
363 172 403 186 550 173 curveto
559 172 569 171 578 170 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 578 173 moveto
587 168 lineto
577 168 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node788 -> Node794
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 184 116 moveto
193 116 202 117 210 117 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 210 120 moveto
220 117 lineto
210 115 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node791
[ /Rect [ 8 89 78 103 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($population_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 8 88 moveto
78 88 lineto
78 103 lineto
8 103 lineto
closepath
stroke
gsave 10 dict begin
43 91 moveto 60 -0.5 (population.h) alignedtext
end grestore
end grestore

%	Node788 -> Node791
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 66 106 moveto
80 110 98 113 114 115 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 68 104 moveto
58 104 lineto
67 109 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node791 -> Node776
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 69 88 moveto
72 88 75 87 78 86 curveto
159 61 174 26 257 26 curveto
257 26 257 26 372 26 curveto
452 26 485 0 550 45 curveto
573 60 570 74 578 100 curveto
580 104 584 136 586 140 curveto
587 141 593 144 600 148 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 598 150 moveto
608 152 lineto
600 145 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node791 -> Node788
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 96 moveto
94 98 113 102 127 105 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 125 107 moveto
135 107 lineto
126 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node791 -> Node806
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 93 moveto
155 87 343 73 440 66 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 440 68 moveto
450 65 lineto
440 64 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node805 -> Node776
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 548 99 moveto
549 99 549 100 550 100 curveto
572 113 566 131 580 146 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 579 148 moveto
588 152 lineto
581 144 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node806 -> Node776
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 550 68 moveto
581 90 560 119 580 145 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 579 147 moveto
588 152 lineto
582 144 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4547 a Fj(Namespaces)275 4733 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 5013 y Fj(De\014nes)275
5199 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IMPLEMENT)p
1280 5199 29 4 v 34 w(IOSTREAM)p 1839 5199 V 34 w(CAST)p
Fp(\()p 2164 5199 25 4 v 30 w(T)n(y)-7 b(,)p 2340 5199
V 58 w(Cast\))476 5323 y Fg(Use)31 b(this)g(macr)l(o)g(to)g(cr)l(e)l
(ate)i(a)d(custom)i(output)g(op)l(er)l(ator)h(which)e(simply)f(c)l
(asts)p 2875 5323 24 4 v 60 w(T)-6 b(y)31 b(to)g(the)h(typ)l(e)f(sp)l
(e)l(ci\014e)l(d)476 5414 y(by)p 580 5414 V 56 w(Cast.)275
5613 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IMPLEMENT)p
1280 5613 29 4 v 34 w(IOSTREAM)p 1839 5613 V 34 w(BINAR)-8
b(Y)p 2260 5613 V 34 w(CONVERSION)p Fp(\()p 2984 5613
25 4 v 29 w(T)n(y\))p 150 5723 4034 4 v 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 248 256
248 255 bop -358 70 a Fq(248)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 476
333 a Fg(This)h(macr)l(o)g(is)g(intende)l(d)h(as)g(a)f(quick)h
(solution)f(to)h(the)g(pr)l(oblem)g(of)e(enc)l(o)l(ding)i(structs)i
(and)d(classes)i(into)476 424 y(output)c(str)l(e)l(ams.)275
623 y Fk(\210)42 b Fp(#de\014ne)28 b Fq(IMPLEMENT)p 1280
623 29 4 v 34 w(SERIALISA)-8 b(TION)p Fp(\()p 2100 623
25 4 v 31 w(Name,)p 2391 623 V 57 w(P)n(aren)n(t\))476
748 y Fg(Use)21 b(this)f(macr)l(o)h(to)g(add)g(b)l(asic)g
(serialisation)g(functionality)g(to)g(your)g(derive)l(d)g(classes)h(by)
f(simply)f(serialising)476 839 y(under)28 b(a)g(new)g(name,)f(but)h
(using)g(the)h(p)l(ar)l(ent)g(serialisation)f(metho)l(ds.)275
1038 y Fk(\210)42 b Fp(#de\014ne)i Fq(IMPLEMENT)p 1296
1038 29 4 v 34 w(LO)m(ADER)p Fp(\()p 1767 1038 25 4 v
30 w(Name,)p 2078 1038 V 78 w(T)n(yp)r(e\))g
(Unserialiser::Instance\(\).Add\()p 3418 1038 V 29 w(Name,)358
1138 y(new)27 b(Ob)5 b(jLoader)p Fo(<)p 991 1138 V 28
w Fp(T)n(yp)r(e)p Fo(>)p Fp(\(\)\);)150 1418 y Fj(11.23.1)113
b(Detailed)36 b(Description)150 1618 y Fp(A)27 b(bunc)n(h)h(of)f(metho)
r(ds,)g(templates)h(and)f(classes)f(for)g(p)r(erforming)g(quic)n(k)h
(stream)f(insertion)h(and)g(extraction,)150 1718 y(include)h(this)g
(\014le)g(if)g(y)n(ou)f(need)g(to)h(serialise)e(y)n(our)g(ob)5
b(jects')27 b(data.)142 1930 y Fq(Author:)311 2030 y
Fp(Da)n(vid)h(Gordon)e(serialisation)p -358 5723 4034
4 v -192 5823 a Fn(Generated)g(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 249 257
249 256 bop 150 70 a Fq(11.24)30 b(signaller.h)g(File)h(Reference)2582
b(249)p 150 103 4034 4 v 150 333 a Fl(11.24)136 b(signaller.h)47
b(File)e(Reference)150 562 y Fp(This)22 b(\014le)g(de\014nes)f(a)h
(class)e(whic)n(h)i(can)f(b)r(e)i(m)n(ultiply)f(inherited)g(with)g
(Animat)g(to)g(create)f(a)g(signalling)g(Animat,)150
661 y(and)27 b(some)g(asso)r(ciated)g(sensor)f(functors)h(whic)n(h.)150
808 y Fi(#include)40 b Fo(<)p Fi(map)p Fo(>)150 955 y
Fi(#include)g("sensorbase.h")150 1102 y(#include)g("sensorfunctors.h)o
(")150 1249 y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h
(signaller.h:)945 2922 y @beginspecial 35 @llx 35 @lly
467 @urx 381 @ury 2321 @rwi @setspecial
%%BeginDocument: signaller_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 467 381
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 467 381
%%PageOrientation: Portrait
gsave
35 35 432 346 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node808
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 34 8 moveto
92 8 lineto
92 23 lineto
34 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 34 8 moveto
92 8 lineto
92 23 lineto
34 23 lineto
closepath
stroke
gsave 10 dict begin
63 11 moveto 48 -0.5 (signaller.h) alignedtext
end grestore
end grestore

%	Node809
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 3 60 moveto
35 60 lineto
35 75 lineto
3 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
19 63 moveto 22 -0.5 (map) alignedtext
end grestore
end grestore

%	Node809 -> Node808
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 31 53 moveto
40 44 50 32 57 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 30 51 moveto
25 60 lineto
33 54 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node810
[ /Rect [ 256 61 324 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensorbase_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 256 60 moveto
325 60 lineto
325 75 lineto
256 75 lineto
closepath
stroke
gsave 10 dict begin
290 63 moveto 59 -0.5 (sensorbase.h) alignedtext
end grestore
end grestore

%	Node810 -> Node808
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 249 58 moveto
183 43 163 40 92 24 curveto
92 24 91 24 91 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 248 60 moveto
258 60 lineto
249 55 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node811
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 155 320 moveto
195 320 lineto
195 335 lineto
155 335 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
175 323 moveto 30 -0.5 (cmath) alignedtext
end grestore
end grestore

%	Node811 -> Node810
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 162 315 moveto
145 296 118 260 118 224 curveto
118 224 118 224 118 172 curveto
118 137 224 93 269 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 158 315 moveto
167 320 lineto
162 311 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node814
[ /Rect [ 252 113 328 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 252 112 moveto
328 112 lineto
328 127 lineto
252 127 lineto
closepath
stroke
gsave 10 dict begin
290 115 moveto 66 -0.5 (worldobject.h) alignedtext
end grestore
end grestore

%	Node811 -> Node814
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 172 312 moveto
166 281 159 209 191 164 curveto
201 151 240 136 266 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 169 310 moveto
173 320 lineto
174 310 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node816
[ /Rect [ 220 217 280 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($vector2d_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 220 216 moveto
280 216 lineto
280 231 lineto
220 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
250 219 moveto 50 -0.5 (vector2d.h) alignedtext
end grestore
end grestore

%	Node811 -> Node816
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 183 314 moveto
190 302 202 283 213 268 curveto
223 255 236 240 243 232 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 182 310 moveto
179 320 lineto
187 313 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node820
[ /Rect [ 222 269 278 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($random_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 222 268 moveto
278 268 lineto
278 283 lineto
222 283 lineto
closepath
stroke
gsave 10 dict begin
250 271 moveto 46 -0.5 (random.h) alignedtext
end grestore
end grestore

%	Node811 -> Node820
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 193 315 moveto
208 305 227 292 239 284 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 193 312 moveto
186 320 lineto
196 316 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node812
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 369 320 moveto
430 320 lineto
430 335 lineto
369 335 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
399 323 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node812 -> Node810
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 404 314 moveto
410 295 420 257 420 224 curveto
420 224 420 224 420 172 curveto
420 119 353 89 315 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 403 310 moveto
402 320 lineto
408 311 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node812 -> Node820
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 368 317 moveto
339 307 297 292 272 284 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 367 319 moveto
377 320 lineto
368 314 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node813
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 356 164 moveto
393 164 lineto
393 179 lineto
356 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
374 167 moveto 27 -0.5 (string) alignedtext
end grestore
end grestore

%	Node813 -> Node810
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 367 157 moveto
360 145 349 126 337 112 curveto
325 97 309 84 299 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 364 156 moveto
370 164 lineto
368 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node813 -> Node814
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 354 159 moveto
338 149 316 136 302 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 352 161 moveto
362 164 lineto
355 157 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node814 -> Node810
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 290 103 moveto
290 94 290 83 290 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 288 102 moveto
290 112 lineto
293 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node815
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 281 320 moveto
332 320 lineto
332 335 lineto
281 335 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
306 323 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node815 -> Node814
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 306 312 moveto
305 300 305 283 304 268 curveto
300 214 293 150 291 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 304 310 moveto
306 320 lineto
309 310 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node815 -> Node816
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 303 312 moveto
300 300 294 282 287 268 curveto
279 253 266 240 258 232 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 300 310 moveto
304 320 lineto
305 310 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node815 -> Node820
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 291 314 moveto
281 304 267 292 258 284 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 289 315 moveto
298 320 lineto
292 312 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node816 -> Node814
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 258 209 moveto
262 201 267 190 271 180 curveto
278 161 285 139 288 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 257 206 moveto
254 216 lineto
261 209 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node828
[ /Rect [ 200 165 262 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 200 164 moveto
263 164 lineto
263 179 lineto
200 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
231 167 moveto 53 -0.5 (drawable.h) alignedtext
end grestore
end grestore

%	Node816 -> Node828
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 244 207 moveto
241 198 236 187 234 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 241 207 moveto
247 216 lineto
246 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node820 -> Node816
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 250 259 moveto
250 250 250 239 250 232 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 248 258 moveto
250 268 lineto
253 258 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node832
[ /Rect [ 0 217 90 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensorfunctors_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 216 moveto
90 216 lineto
90 231 lineto
0 231 lineto
closepath
stroke
gsave 10 dict begin
45 219 moveto 80 -0.5 (sensorfunctors.h) alignedtext
end grestore
end grestore

%	Node820 -> Node832
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 215 266 moveto
166 253 110 240 77 232 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 214 268 moveto
224 268 lineto
215 263 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node828 -> Node814
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 247 158 moveto
258 148 272 136 281 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 246 156 moveto
240 164 lineto
249 159 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node832 -> Node808
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 47 207 moveto
50 165 59 55 62 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 45 206 moveto
46 216 lineto
50 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node819
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 19 268 moveto
71 268 lineto
71 283 lineto
19 283 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
45 271 moveto 42 -0.5 (typeinfo) alignedtext
end grestore
end grestore

%	Node819 -> Node832
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 45 259 moveto
45 250 45 239 45 232 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 43 258 moveto
45 268 lineto
48 258 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3285 a Fj(Namespaces)275 3471 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 3751 y Fj(11.24.1)113
b(Detailed)36 b(Description)150 3951 y Fp(This)22 b(\014le)g(de\014nes)
f(a)h(class)e(whic)n(h)i(can)f(b)r(e)i(m)n(ultiply)f(inherited)g(with)g
(Animat)g(to)g(create)f(a)g(signalling)g(Animat,)150
4051 y(and)27 b(some)g(asso)r(ciated)g(sensor)f(functors)h(whic)n(h.)
142 4247 y Fq(Author:)311 4347 y Fp(Da)n(vid)h(Gordon)e(biosystems)p
150 5723 V 150 5823 a Fn(Generated)g(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 250 258
250 257 bop -358 70 a Fq(250)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.25)136 b(sim)l(ulation.cc)46 b(File)g(Reference)150
562 y Fi(#include)40 b("simulation.h")150 709 y Fp(Include)28
b(dep)r(endency)g(graph)e(for)h(sim)n(ulation.cc:)1688
1354 y @beginspecial 35 @llx 35 @lly 109 @urx 121 @ury
537 @rwi @setspecial
%%BeginDocument: simulation_8cc__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 109 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 109 121
%%PageOrientation: Portrait
gsave
35 35 74 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node834
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
72 8 lineto
72 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
72 8 lineto
72 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
36 11 moveto 62 -0.5 (simulation.cc) alignedtext
end grestore
end grestore

%	Node835
[ /Rect [ 2 61 70 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 2 60 moveto
71 60 lineto
71 75 lineto
2 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
36 63 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node835 -> Node834
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 36 51 moveto
36 42 36 31 36 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 34 50 moveto
36 60 lineto
39 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1716 a Fj(Namespaces)275 1903 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 2182 y Fj(11.25.1)113
b(Detailed)36 b(Description)142 2321 y Fq(Author:)311
2421 y Fp(Da)n(vid)28 b(Gordon)e(Implemen)n(tation)i(of)g(the)f(Sim)n
(ulation)h(class.)p -358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f
(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 251 259
251 258 bop 150 70 a Fq(11.26)30 b(sim)m(ulation.h)f(File)i(Reference)
2498 b(251)p 150 103 4034 4 v 150 333 a Fl(11.26)136
b(sim)l(ulation.h)47 b(File)e(Reference)150 3410 y Fi(#include)40
b Fo(<)p Fi(string)p Fo(>)150 3557 y Fi(#include)g Fo(<)p
Fi(vector)p Fo(>)150 3704 y Fi(#include)g Fo(<)p Fi(map)p
Fo(>)150 3850 y Fi(#include)g Fo(<)p Fi(algorithm)p Fo(>)150
3997 y Fi(#include)g Fo(<)p Fi(functional)p Fo(>)150
4144 y Fi(#include)g Fo(<)p Fi(sstream)p Fo(>)150 4291
y Fi(#include)g Fo(<)p Fi(iostream)p Fo(>)150 4438 y
Fi(#include)g Fo(<)p Fi(fstream)p Fo(>)150 4585 y Fi(#include)g
Fo(<)p Fi(typeinfo)p Fo(>)150 4732 y Fi(#include)g("utilities.h")150
4878 y(#include)g("world.h")150 5025 y(#include)g("animat.h")150
5172 y(#include)g("serialfuncs.h")150 5319 y(#include)g
("unserialiser.h")150 5466 y(#include)g("population.h")150
5613 y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(sim)n(ulation.h:)p
150 5723 V 150 5823 a Fn(Generated)f(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 252 260
252 259 bop -358 70 a Fq(252)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 588
3955 a @beginspecial 35 @llx 35 @lly 639 @urx 880 @ury
3178 @rwi @setspecial
%%BeginDocument: simulation_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 639 880
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 639 880
%%PageOrientation: Portrait
gsave
35 35 604 845 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node878
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 419 394 moveto
488 394 lineto
488 409 lineto
419 409 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 419 394 moveto
488 394 lineto
488 409 lineto
419 409 lineto
closepath
stroke
gsave 10 dict begin
453 397 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node919
[ /Rect [ 524 192 594 206 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($population_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 524 191 moveto
594 191 lineto
594 206 lineto
524 206 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
559 194 moveto 60 -0.5 (population.h) alignedtext
end grestore
end grestore

%	Node878 -> Node919
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 472 392 moveto
478 390 484 388 488 384 curveto
546 322 465 257 524 197 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 473 389 moveto
464 394 lineto
474 394 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node879
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 117 451 moveto
154 451 lineto
154 466 lineto
117 466 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
135 454 moveto 27 -0.5 (string) alignedtext
end grestore
end grestore

%	Node879 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 163 456 moveto
208 452 304 442 382 424 curveto
399 420 417 414 431 410 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 164 453 moveto
154 457 lineto
164 458 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node899
[ /Rect [ 210 487 262 501 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 210 486 moveto
262 486 lineto
262 501 lineto
210 501 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
236 489 moveto 42 -0.5 (animat.h) alignedtext
end grestore
end grestore

%	Node879 -> Node899
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 163 466 moveto
163 466 164 466 164 466 curveto
181 472 184 478 200 485 curveto
203 486 206 487 210 488 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 164 464 moveto
154 463 lineto
163 469 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node897
[ /Rect [ 201 414 271 428 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($serialfuncs_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 201 413 moveto
272 413 lineto
272 428 lineto
201 428 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
236 416 moveto 61 -0.5 (serialfuncs.h) alignedtext
end grestore
end grestore

%	Node879 -> Node897
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 162 451 moveto
163 450 164 450 164 450 curveto
182 442 183 434 200 428 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 162 448 moveto
154 454 lineto
164 453 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node880
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 115 187 moveto
155 187 lineto
155 202 lineto
115 202 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
135 190 moveto 30 -0.5 (vector) alignedtext
end grestore
end grestore

%	Node880 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 164 201 moveto
216 216 345 255 382 293 curveto
415 325 390 355 422 388 curveto
425 391 428 393 431 394 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 165 199 moveto
155 198 lineto
164 204 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node889
[ /Rect [ 322 118 368 132 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 322 117 moveto
368 117 lineto
368 132 lineto
322 132 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
345 120 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node880 -> Node889
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 164 186 moveto
184 173 180 158 200 148 curveto
239 127 292 124 322 124 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 163 184 moveto
155 190 lineto
165 188 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node880 -> Node897
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 163 200 moveto
163 201 164 201 164 202 curveto
229 271 136 342 200 412 curveto
200 412 201 413 201 413 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 165 198 moveto
155 196 lineto
163 203 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node880 -> Node919
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 159 183 moveto
160 181 162 180 164 178 curveto
186 157 175 137 200 122 curveto
269 78 302 104 382 109 curveto
430 111 449 94 488 120 curveto
515 137 501 160 524 182 curveto
528 186 534 189 539 191 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 159 180 moveto
151 187 lineto
161 185 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node881
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 119 503 moveto
151 503 lineto
151 518 lineto
119 518 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
135 506 moveto 22 -0.5 (map) alignedtext
end grestore
end grestore

%	Node881 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 161 513 moveto
217 516 347 521 382 497 curveto
407 480 402 465 414 439 curveto
418 430 416 426 422 419 curveto
426 415 430 412 434 410 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 161 511 moveto
151 512 lineto
161 515 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node881 -> Node899
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 160 506 moveto
175 504 194 500 210 498 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 160 503 moveto
151 508 lineto
161 508 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node881 -> Node897
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 159 505 moveto
161 504 162 503 164 502 curveto
192 478 171 450 200 428 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 159 502 moveto
151 508 lineto
161 507 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node911
[ /Rect [ 309 601 381 615 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 309 600 moveto
382 600 lineto
382 615 lineto
309 615 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
345 603 moveto 63 -0.5 (unserialiser.h) alignedtext
end grestore
end grestore

%	Node881 -> Node911
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 159 516 moveto
161 517 163 517 164 518 curveto
182 525 184 532 200 543 curveto
247 571 259 579 309 599 curveto
311 600 312 600 314 600 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 161 514 moveto
151 513 lineto
159 519 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node882
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 106 337 moveto
164 337 lineto
164 352 lineto
106 352 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
135 340 moveto 48 -0.5 (algorithm) alignedtext
end grestore
end grestore

%	Node882 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 173 352 moveto
235 362 358 385 418 396 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 174 350 moveto
164 350 lineto
173 355 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node882 -> Node889
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 170 331 moveto
207 283 158 236 200 186 curveto
210 174 305 139 323 133 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 169 328 moveto
164 337 lineto
173 332 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node882 -> Node899
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 171 360 moveto
202 400 160 445 200 485 curveto
203 488 206 489 210 491 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 172 358 moveto
164 352 lineto
169 361 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node882 -> Node897
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 171 358 moveto
187 375 179 395 200 412 curveto
201 412 202 413 202 413 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 173 357 moveto
164 352 lineto
170 360 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node882 -> Node919
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 169 333 moveto
172 332 174 330 176 328 curveto
242 267 228 216 308 178 curveto
381 143 410 159 488 173 curveto
509 176 530 185 544 191 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 169 330 moveto
161 337 lineto
171 335 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node883
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 9 299 moveto
70 299 lineto
70 314 lineto
9 314 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 302 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node883 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 311 moveto
143 319 275 338 382 371 curveto
402 377 424 387 438 394 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 80 309 moveto
70 310 lineto
80 314 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node888
[ /Rect [ 109 750 161 764 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($utilities_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 109 749 moveto
161 749 lineto
161 764 lineto
109 764 lineto
closepath
stroke
gsave 10 dict begin
135 752 moveto 42 -0.5 (utilities.h) alignedtext
end grestore
end grestore

%	Node883 -> Node888
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 76 321 moveto
129 405 48 674 106 748 curveto
107 749 108 750 109 751 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 319 moveto
70 313 lineto
74 323 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node883 -> Node889
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 76 292 moveto
107 256 74 220 106 179 curveto
136 140 153 135 200 122 curveto
242 110 293 115 322 120 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 290 moveto
70 299 lineto
78 293 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node883 -> Node911
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 72 319 moveto
74 320 76 322 78 323 curveto
100 340 99 353 102 381 curveto
104 392 101 573 106 583 curveto
147 648 196 645 272 633 curveto
292 629 314 622 328 616 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 317 moveto
64 315 lineto
72 322 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node883 -> Node919
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 60 295 moveto
63 294 67 292 70 287 curveto
112 227 70 190 106 128 curveto
146 60 158 11 236 10 curveto
236 10 236 10 345 10 curveto
445 11 479 61 516 153 curveto
519 158 519 159 520 165 curveto
522 170 521 173 524 178 curveto
529 184 535 188 541 191 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 59 293 moveto
51 299 lineto
61 297 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node884
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 112 394 moveto
159 394 lineto
159 409 lineto
112 409 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
135 397 moveto 37 -0.5 (sstream) alignedtext
end grestore
end grestore

%	Node884 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 168 402 moveto
229 402 356 402 418 402 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 169 400 moveto
159 402 lineto
169 405 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node884 -> Node897
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 167 407 moveto
178 409 190 412 200 414 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 169 405 moveto
159 406 lineto
169 410 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node885
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 110 559 moveto
161 559 lineto
161 574 lineto
110 574 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
135 562 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node885 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 170 568 moveto
221 569 318 563 382 518 curveto
408 500 406 485 414 456 curveto
419 441 414 436 422 424 curveto
426 418 432 413 438 410 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 171 566 moveto
161 568 lineto
171 571 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node885 -> Node899
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 168 554 moveto
187 536 178 516 200 501 curveto
203 499 206 497 210 496 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 167 552 moveto
161 560 lineto
170 555 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node885 -> Node897
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 167 554 moveto
203 511 157 467 200 428 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 166 552 moveto
161 561 lineto
169 555 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node885 -> Node911
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 169 577 moveto
185 590 179 608 200 619 curveto
219 627 272 621 308 615 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 171 575 moveto
161 572 lineto
168 579 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node885 -> Node919
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 159 580 moveto
161 581 162 582 164 583 curveto
185 601 176 620 200 633 curveto
225 645 376 628 382 624 curveto
498 547 488 479 520 345 curveto
528 315 522 306 524 276 curveto
525 268 527 213 531 208 curveto
531 207 532 207 532 207 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 162 579 moveto
152 575 lineto
159 583 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node886
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 321 226 moveto
369 226 lineto
369 241 lineto
321 241 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
345 229 moveto 38 -0.5 (fstream) alignedtext
end grestore
end grestore

%	Node886 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 377 237 moveto
379 239 381 240 382 241 curveto
433 288 370 343 418 393 curveto
419 394 419 394 420 394 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 379 235 moveto
369 234 lineto
377 240 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node886 -> Node919
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 377 230 moveto
407 227 451 221 488 213 curveto
505 209 511 204 524 201 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 379 227 moveto
369 231 lineto
379 232 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node887
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 13 787 moveto
65 787 lineto
65 802 lineto
13 802 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 790 moveto 42 -0.5 (typeinfo) alignedtext
end grestore
end grestore

%	Node887 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 800 moveto
147 806 310 810 382 714 curveto
420 663 406 638 414 577 curveto
421 527 415 514 418 464 curveto
419 454 421 428 426 420 curveto
429 416 433 412 438 410 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 798 moveto
65 799 lineto
75 803 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node887 -> Node888
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 784 moveto
88 777 90 770 106 764 curveto
107 764 108 763 109 763 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 782 moveto
65 788 lineto
75 786 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node888 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 169 766 moveto
198 771 240 774 272 759 curveto
371 711 388 664 414 558 curveto
417 546 419 461 419 449 curveto
420 441 418 422 422 417 curveto
424 414 427 412 430 410 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 171 764 moveto
161 764 lineto
170 769 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node888 -> Node899
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 167 744 moveto
234 661 125 580 200 501 curveto
203 498 206 496 210 495 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 166 742 moveto
161 751 lineto
169 745 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node888 -> Node911
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 171 760 moveto
202 760 245 756 272 733 curveto
311 699 273 660 308 623 curveto
311 620 315 618 319 616 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 171 758 moveto
161 760 lineto
171 763 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node889 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 376 128 moveto
378 129 380 130 382 132 curveto
463 216 341 305 418 393 curveto
419 394 419 394 420 394 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 378 126 moveto
368 125 lineto
376 131 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node889 -> Node919
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 377 124 moveto
407 124 453 127 488 147 curveto
510 159 504 175 524 189 curveto
526 190 527 191 529 191 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 378 122 moveto
368 124 lineto
378 127 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node899 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 272 496 moveto
303 497 350 494 382 473 curveto
410 455 397 432 422 413 curveto
424 412 426 411 427 410 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 272 494 moveto
262 496 lineto
272 499 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node899 -> Node889
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 270 487 moveto
271 486 271 486 272 485 curveto
324 425 255 190 308 132 curveto
312 128 317 126 322 125 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 270 484 moveto
262 491 lineto
272 489 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node897 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 280 417 moveto
321 413 381 408 418 405 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 282 414 moveto
272 418 lineto
282 419 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node897 -> Node911
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 279 435 moveto
322 487 256 545 308 599 curveto
308 599 309 600 309 600 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 281 433 moveto
272 428 lineto
277 437 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node897 -> Node919
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 276 407 moveto
327 343 245 275 308 218 curveto
371 162 481 179 532 191 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 275 405 moveto
269 413 lineto
278 408 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node911 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 387 593 moveto
437 532 360 468 418 409 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 386 591 moveto
381 600 lineto
389 594 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node919 -> Node878
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 488 402 moveto
546 340 465 275 524 215 curveto
527 212 530 211 533 209 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 534 211 moveto
543 207 lineto
533 207 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4277 a Fp(This)e(graph)e(sho)n(ws)g(whic)n(h)i
(\014les)g(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)1377
5054 y @beginspecial 35 @llx 35 @lly 259 @urx 173 @ury
1285 @rwi @setspecial
%%BeginDocument: simulation_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 259 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 259 173
%%PageOrientation: Portrait
gsave
35 35 224 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node920
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 92 60 moveto
161 60 lineto
161 75 lineto
92 75 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 92 60 moveto
161 60 lineto
161 75 lineto
92 75 lineto
closepath
stroke
gsave 10 dict begin
126 63 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node923
[ /Rect [ 91 9 161 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($population_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 91 8 moveto
161 8 lineto
161 23 lineto
91 23 lineto
closepath
stroke
gsave 10 dict begin
126 11 moveto 60 -0.5 (population.h) alignedtext
end grestore
end grestore

%	Node920 -> Node923
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 121 60 moveto
120 53 119 42 120 33 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 122 34 moveto
121 24 lineto
117 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node921
[ /Rect [ 0 113 72 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 112 moveto
72 112 lineto
72 127 lineto
0 127 lineto
closepath
stroke
gsave 10 dict begin
36 115 moveto 62 -0.5 (simulation.cc) alignedtext
end grestore
end grestore

%	Node921 -> Node920
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 49 112 moveto
64 103 88 89 105 80 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 105 83 moveto
113 76 lineto
103 78 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node922
[ /Rect [ 90 113 162 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($glutsimenv_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 90 112 moveto
162 112 lineto
162 127 lineto
90 127 lineto
closepath
stroke
gsave 10 dict begin
126 115 moveto 62 -0.5 (glutsimenv.h) alignedtext
end grestore
end grestore

%	Node922 -> Node920
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 126 112 moveto
126 105 126 94 126 85 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 129 86 moveto
126 76 lineto
124 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node923 -> Node920
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 132 52 moveto
133 42 133 32 131 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 130 50 moveto
131 60 lineto
135 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node924
[ /Rect [ 180 113 222 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($beast_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 180 112 moveto
222 112 lineto
222 127 lineto
180 127 lineto
closepath
stroke
gsave 10 dict begin
201 115 moveto 32 -0.5 (beast.h) alignedtext
end grestore
end grestore

%	Node924 -> Node920
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 190 112 moveto
178 104 159 91 144 81 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 147 80 moveto
137 76 lineto
144 84 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 5414 a Fj(Namespaces)275 5597 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)p -358 5723 V -192 5823
a Fn(Generated)g(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 253 261
253 260 bop 150 70 a Fq(11.26)30 b(sim)m(ulation.h)f(File)i(Reference)
2498 b(253)p 150 103 4034 4 v 150 333 a Fj(11.26.1)113
b(Detailed)36 b(Description)142 472 y Fq(Author:)311
571 y Fp(Da)n(vid)24 b(Gordon)f(The)i(Sim)n(ulation)e(class)h(is)g
(really)f(a)g(framew)n(ork)f(of)i(classes)f(pro)n(viding)g(the)h
(facilities)h(for)311 671 y(implemen)n(ting)j(a)e(range)g(of)h
(di\013eren)n(t)g(t)n(yp)r(es)g(of)f(sim)n(ulation.)36
b(SimOb)5 b(ject)28 b(is)e(an)h(in)n(terface)f(class)g(for)h(the)311
770 y(Group)34 b(class,)h(whic)n(h)f(simply)g(adds)g(ob)5
b(jects)34 b(to)g(the)g(Sim)n(ulation,)i(and)e(the)g(P)n(opulation)f
(class)g(whic)n(h)311 870 y(pro)n(vides)23 b(handles)h(GA)h
(functionalit)n(y)-7 b(,)25 b(and)f(the)h(insertion)f(of)g(groups)f(of)
h(Animats)h(\(or)e(other)h(ev)n(olv)-5 b(able)311 970
y(W)e(orldOb)5 b(jects)27 b(in)n(to)h(the)g(W)-7 b(orld.)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 254 262
254 261 bop -358 70 a Fq(254)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.27)136 b(unserialiser.cc)46 b(File)g(Reference)150
562 y Fp(Implemen)n(tation)28 b(of)f(Unserialiser.)150
709 y Fi(#include)40 b("unserialiser.h")150 855 y Fp(Include)28
b(dep)r(endency)g(graph)e(for)h(unserialiser.cc:)1207
2096 y @beginspecial 35 @llx 35 @lly 341 @urx 277 @ury
1693 @rwi @setspecial
%%BeginDocument: unserialiser_8cc__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 341 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 341 277
%%PageOrientation: Portrait
gsave
35 35 306 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node925
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 113 8 moveto
189 8 lineto
189 23 lineto
113 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 113 8 moveto
189 8 lineto
189 23 lineto
113 23 lineto
closepath
stroke
gsave 10 dict begin
151 11 moveto 66 -0.5 (unserialiser.cc) alignedtext
end grestore
end grestore

%	Node926
[ /Rect [ 115 61 187 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 115 60 moveto
188 60 lineto
188 75 lineto
115 75 lineto
closepath
stroke
gsave 10 dict begin
151 63 moveto 63 -0.5 (unserialiser.h) alignedtext
end grestore
end grestore

%	Node926 -> Node925
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 151 51 moveto
151 42 151 31 151 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 149 50 moveto
151 60 lineto
154 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node927
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 43 216 moveto
75 216 lineto
75 231 lineto
43 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
59 219 moveto 22 -0.5 (map) alignedtext
end grestore
end grestore

%	Node927 -> Node926
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 209 moveto
50 187 44 143 61 112 curveto
74 91 83 88 105 80 curveto
109 78 113 77 118 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 52 207 moveto
57 216 lineto
57 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node932
[ /Rect [ 60 165 130 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($serialfuncs_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 60 164 moveto
131 164 lineto
131 179 lineto
60 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
95 167 moveto 61 -0.5 (serialfuncs.h) alignedtext
end grestore
end grestore

%	Node927 -> Node932
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 69 208 moveto
76 199 85 188 90 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 206 moveto
64 216 lineto
71 209 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node928
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 231 164 moveto
292 164 lineto
292 179 lineto
231 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
261 167 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node928 -> Node926
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 248 159 moveto
236 147 216 128 200 112 curveto
186 99 170 84 160 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 244 159 moveto
253 164 lineto
248 155 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node930
[ /Rect [ 252 113 304 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($utilities_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 252 112 moveto
304 112 lineto
304 127 lineto
252 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
278 115 moveto 42 -0.5 (utilities.h) alignedtext
end grestore
end grestore

%	Node928 -> Node930
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 266 156 moveto
269 147 273 136 275 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 264 154 moveto
264 164 lineto
269 155 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node929
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 106 216 moveto
157 216 lineto
157 231 lineto
106 231 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
131 219 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node929 -> Node926
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 138 210 moveto
146 192 161 158 167 128 curveto
170 108 161 87 155 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 137 206 moveto
135 216 lineto
142 208 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node929 -> Node932
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 121 208 moveto
114 199 105 188 100 180 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 119 209 moveto
126 216 lineto
123 206 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node930 -> Node926
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 252 109 moveto
227 99 191 84 169 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 250 111 moveto
260 112 lineto
252 106 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node932 -> Node926
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 81 158 moveto
70 146 58 127 67 112 curveto
78 93 100 82 119 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 159 moveto
87 164 lineto
82 155 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node938
[ /Rect [ 76 113 158 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($neuralanimat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 76 112 moveto
159 112 lineto
159 127 lineto
76 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
117 115 moveto 73 -0.5 (neuralanimat.h) alignedtext
end grestore
end grestore

%	Node932 -> Node938
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 102 155 moveto
105 146 110 135 114 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 100 154 moveto
98 164 lineto
104 156 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node938 -> Node926
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 127 104 moveto
133 95 141 84 146 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 125 102 moveto
122 112 lineto
129 105 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2458 a Fj(Namespaces)275 2645 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 2925 y Fj(11.27.1)113
b(Detailed)36 b(Description)150 3125 y Fp(Implemen)n(tation)28
b(of)f(Unserialiser.)142 3337 y Fq(Author:)311 3437 y
Fp(Da)n(vid)h(Gordon)p -358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)
f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 255 263
255 262 bop 150 70 a Fq(11.28)30 b(unserialiser.h)g(File)h(Reference)
2456 b(255)p 150 103 4034 4 v 150 333 a Fl(11.28)136
b(unserialiser.h)46 b(File)g(Reference)150 562 y Fp(In)n(terface)27
b(of)g(a)h(class)e(and)i(related)f(functors)g(for)g(unserialising)f
(unkno)n(wn)h(t)n(yp)r(es.)150 709 y Fi(#include)40 b
Fo(<)p Fi(map)p Fo(>)150 855 y Fi(#include)g Fo(<)p Fi(functional)p
Fo(>)150 1002 y Fi(#include)g Fo(<)p Fi(iostream)p Fo(>)150
1149 y Fi(#include)g("utilities.h")150 1296 y(#include)g
("serialfuncs.h")150 1443 y(#include)g("neuralanimat.h")150
1590 y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(unserialiser.h:)
1207 2590 y @beginspecial 35 @llx 35 @lly 341 @urx 225
@ury 1693 @rwi @setspecial
%%BeginDocument: unserialiser_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 341 225
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 341 225
%%PageOrientation: Portrait
gsave
35 35 306 190 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node961
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 115 8 moveto
188 8 lineto
188 23 lineto
115 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 115 8 moveto
188 8 lineto
188 23 lineto
115 23 lineto
closepath
stroke
gsave 10 dict begin
151 11 moveto 63 -0.5 (unserialiser.h) alignedtext
end grestore
end grestore

%	Node962
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 43 164 moveto
75 164 lineto
75 179 lineto
43 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
59 167 moveto 22 -0.5 (map) alignedtext
end grestore
end grestore

%	Node962 -> Node961
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 55 157 moveto
50 135 44 91 61 60 curveto
74 39 83 36 105 28 curveto
109 26 113 25 118 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 52 155 moveto
57 164 lineto
57 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node967
[ /Rect [ 60 113 130 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($serialfuncs_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 60 112 moveto
131 112 lineto
131 127 lineto
60 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
95 115 moveto 61 -0.5 (serialfuncs.h) alignedtext
end grestore
end grestore

%	Node962 -> Node967
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 69 156 moveto
76 147 85 136 90 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 67 154 moveto
64 164 lineto
71 157 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node963
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 231 112 moveto
292 112 lineto
292 127 lineto
231 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
261 115 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node963 -> Node961
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 248 107 moveto
236 95 216 76 200 60 curveto
186 47 170 32 160 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 244 107 moveto
253 112 lineto
248 103 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node965
[ /Rect [ 252 61 304 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($utilities_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 252 60 moveto
304 60 lineto
304 75 lineto
252 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
278 63 moveto 42 -0.5 (utilities.h) alignedtext
end grestore
end grestore

%	Node963 -> Node965
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 266 104 moveto
269 95 273 84 275 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 264 102 moveto
264 112 lineto
269 103 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node964
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 106 164 moveto
157 164 lineto
157 179 lineto
106 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
131 167 moveto 41 -0.5 (iostream) alignedtext
end grestore
end grestore

%	Node964 -> Node961
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 138 158 moveto
146 140 161 106 167 76 curveto
170 56 161 35 155 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 137 154 moveto
135 164 lineto
142 156 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node964 -> Node967
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 121 156 moveto
114 147 105 136 100 128 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 119 157 moveto
126 164 lineto
123 154 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node965 -> Node961
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 252 57 moveto
227 47 191 32 169 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 250 59 moveto
260 60 lineto
252 54 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node967 -> Node961
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 81 106 moveto
70 94 58 75 67 60 curveto
78 41 100 30 119 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 78 107 moveto
87 112 lineto
82 103 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node973
[ /Rect [ 76 61 158 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($neuralanimat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 76 60 moveto
159 60 lineto
159 75 lineto
76 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
117 63 moveto 73 -0.5 (neuralanimat.h) alignedtext
end grestore
end grestore

%	Node967 -> Node973
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 102 103 moveto
105 94 110 83 114 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 100 102 moveto
98 112 lineto
104 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node973 -> Node961
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 127 52 moveto
133 43 141 32 146 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 125 50 moveto
122 60 lineto
129 53 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2920 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)1373
3703 y @beginspecial 35 @llx 35 @lly 261 @urx 173 @ury
1295 @rwi @setspecial
%%BeginDocument: unserialiser_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 261 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 261 173
%%PageOrientation: Portrait
gsave
35 35 226 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node995
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 3 8 moveto
76 8 lineto
76 23 lineto
3 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 3 8 moveto
76 8 lineto
76 23 lineto
3 23 lineto
closepath
stroke
gsave 10 dict begin
39 11 moveto 63 -0.5 (unserialiser.h) alignedtext
end grestore
end grestore

%	Node996
[ /Rect [ 0 61 76 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
76 60 lineto
76 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
38 63 moveto 66 -0.5 (unserialiser.cc) alignedtext
end grestore
end grestore

%	Node996 -> Node995
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 38 60 moveto
38 53 38 42 38 33 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 40 34 moveto
39 24 lineto
35 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node997
[ /Rect [ 94 61 162 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 94 60 moveto
163 60 lineto
163 75 lineto
94 75 lineto
closepath
stroke
gsave 10 dict begin
128 63 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node997 -> Node995
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 115 60 moveto
100 51 77 38 60 28 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 62 26 moveto
52 24 lineto
60 31 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1000
[ /Rect [ 93 9 163 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($population_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 93 8 moveto
163 8 lineto
163 23 lineto
93 23 lineto
closepath
stroke
gsave 10 dict begin
128 11 moveto 60 -0.5 (population.h) alignedtext
end grestore
end grestore

%	Node997 -> Node1000
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 123 60 moveto
122 53 121 42 122 33 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 124 34 moveto
123 24 lineto
119 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node998
[ /Rect [ 2 113 74 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 2 112 moveto
74 112 lineto
74 127 lineto
2 127 lineto
closepath
stroke
gsave 10 dict begin
38 115 moveto 62 -0.5 (simulation.cc) alignedtext
end grestore
end grestore

%	Node998 -> Node997
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 51 112 moveto
66 103 90 89 107 80 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 107 83 moveto
115 76 lineto
105 78 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node999
[ /Rect [ 92 113 164 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($glutsimenv_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 92 112 moveto
164 112 lineto
164 127 lineto
92 127 lineto
closepath
stroke
gsave 10 dict begin
128 115 moveto 62 -0.5 (glutsimenv.h) alignedtext
end grestore
end grestore

%	Node999 -> Node997
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 128 112 moveto
128 105 128 94 128 85 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 131 86 moveto
128 76 lineto
126 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1000 -> Node997
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 134 52 moveto
135 42 135 32 133 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 132 50 moveto
133 60 lineto
137 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1001
[ /Rect [ 182 113 224 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($beast_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 182 112 moveto
224 112 lineto
224 127 lineto
182 127 lineto
closepath
stroke
gsave 10 dict begin
203 115 moveto 32 -0.5 (beast.h) alignedtext
end grestore
end grestore

%	Node1001 -> Node997
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 192 112 moveto
180 104 161 91 146 81 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 149 80 moveto
139 76 lineto
146 84 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4066 a Fj(Namespaces)275 4252 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 4532 y Fj(11.28.1)113
b(Detailed)36 b(Description)150 4732 y Fp(In)n(terface)27
b(of)g(a)h(class)e(and)i(related)f(functors)g(for)g(unserialising)f
(unkno)n(wn)h(t)n(yp)r(es.)142 4944 y Fq(Author:)311
5044 y Fp(Da)n(vid)h(Gordon)e(serialisation)p 150 5723
V 150 5823 a Fn(Generated)g(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e
(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j
(Sim)n(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 256 264
256 263 bop -358 70 a Fq(256)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(11.29)136 b(utilities.h)47 b(File)e(Reference)150
562 y Fi(#include)40 b Fo(<)p Fi(typeinfo)p Fo(>)150
709 y Fi(#include)g Fo(<)p Fi(functional)p Fo(>)150 855
y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(utilities.h:)1568
1428 y @beginspecial 35 @llx 35 @lly 167 @urx 121 @ury
826 @rwi @setspecial
%%BeginDocument: utilities_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 167 121
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 167 121
%%PageOrientation: Portrait
gsave
35 35 132 86 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node1002
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 37 8 moveto
89 8 lineto
89 23 lineto
37 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 37 8 moveto
89 8 lineto
89 23 lineto
37 23 lineto
closepath
stroke
gsave 10 dict begin
63 11 moveto 42 -0.5 (utilities.h) alignedtext
end grestore
end grestore

%	Node1003
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 0 60 moveto
52 60 lineto
52 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
26 63 moveto 42 -0.5 (typeinfo) alignedtext
end grestore
end grestore

%	Node1003 -> Node1002
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 36 53 moveto
43 43 53 32 58 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 35 50 moveto
31 60 lineto
39 53 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1004
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 70 60 moveto
131 60 lineto
131 75 lineto
70 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
100 63 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node1004 -> Node1002
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 90 53 moveto
83 43 73 32 68 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 87 53 moveto
95 60 lineto
91 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 1758 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)1128
3460 y @beginspecial 35 @llx 35 @lly 379 @urx 381 @ury
1882 @rwi @setspecial
%%BeginDocument: utilities_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 379 381
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 379 381
%%PageOrientation: Portrait
gsave
35 35 344 346 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node1005
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 159 8 moveto
211 8 lineto
211 23 lineto
159 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 159 8 moveto
211 8 lineto
211 23 lineto
159 23 lineto
closepath
stroke
gsave 10 dict begin
185 11 moveto 42 -0.5 (utilities.h) alignedtext
end grestore
end grestore

%	Node1006
[ /Rect [ 24 61 84 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($vector2d_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 24 60 moveto
84 60 lineto
84 75 lineto
24 75 lineto
closepath
stroke
gsave 10 dict begin
54 63 moveto 50 -0.5 (vector2d.h) alignedtext
end grestore
end grestore

%	Node1006 -> Node1005
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 73 60 moveto
95 51 133 36 158 27 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 158 30 moveto
166 24 lineto
156 25 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1007
[ /Rect [ 60 165 136 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 60 164 moveto
136 164 lineto
136 179 lineto
60 179 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
98 167 moveto 66 -0.5 (worldobject.h) alignedtext
end grestore
end grestore

%	Node1007 -> Node1006
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 91 164 moveto
84 156 73 141 67 128 curveto
61 113 58 95 56 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 59 86 moveto
55 76 lineto
54 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1028
[ /Rect [ 76 113 138 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 76 112 moveto
139 112 lineto
139 127 lineto
76 127 lineto
closepath
stroke
gsave 10 dict begin
107 115 moveto 53 -0.5 (drawable.h) alignedtext
end grestore
end grestore

%	Node1007 -> Node1028
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 99 164 moveto
100 157 102 146 104 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 106 138 moveto
106 128 lineto
101 137 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1009
[ /Rect [ 123 217 175 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 123 216 moveto
175 216 lineto
175 231 lineto
123 231 lineto
closepath
stroke
gsave 10 dict begin
149 219 moveto 42 -0.5 (animat.h) alignedtext
end grestore
end grestore

%	Node1009 -> Node1005
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 150 216 moveto
156 186 175 77 182 34 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 184 34 moveto
184 24 lineto
180 33 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1009 -> Node1007
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 141 216 moveto
133 208 121 196 111 186 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 114 185 moveto
105 180 lineto
110 189 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1011
[ /Rect [ 72 269 118 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 72 268 moveto
118 268 lineto
118 283 lineto
72 283 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
95 271 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node1011 -> Node1006
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 90 268 moveto
81 252 59 214 51 180 curveto
44 145 49 103 52 82 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 54 86 moveto
53 76 lineto
49 85 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1011 -> Node1007
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 95 268 moveto
96 251 97 210 98 188 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 101 190 moveto
98 180 lineto
96 190 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1011 -> Node1009
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 103 268 moveto
111 260 124 248 135 238 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 136 241 moveto
141 232 lineto
132 237 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1017
[ /Rect [ 173 321 241 335 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 173 320 moveto
242 320 lineto
242 335 lineto
173 335 lineto
closepath
stroke
gsave 10 dict begin
207 323 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node1017 -> Node1005
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 231 320 moveto
267 307 332 276 332 224 curveto
332 224 332 224 332 120 curveto
332 90 253 49 211 28 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 212 26 moveto
202 24 lineto
210 30 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1017 -> Node1009
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 198 320 moveto
188 312 174 299 165 284 curveto
158 269 154 251 151 239 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 154 242 moveto
150 232 lineto
149 242 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1017 -> Node1011
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 190 320 moveto
171 311 140 297 119 287 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 121 285 moveto
111 284 lineto
119 290 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1023
[ /Rect [ 232 217 304 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($unserialiser_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 232 216 moveto
305 216 lineto
305 231 lineto
232 231 lineto
closepath
stroke
gsave 10 dict begin
268 219 moveto 63 -0.5 (unserialiser.h) alignedtext
end grestore
end grestore

%	Node1017 -> Node1023
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 216 320 moveto
226 312 240 299 249 284 curveto
257 269 262 251 265 239 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 267 242 moveto
267 232 lineto
262 241 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1016
[ /Rect [ 174 269 240 283 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacterium_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 174 268 moveto
241 268 lineto
241 283 lineto
174 283 lineto
closepath
stroke
gsave 10 dict begin
207 271 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node1016 -> Node1005
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 207 268 moveto
206 251 204 208 204 172 curveto
204 172 204 172 204 120 curveto
204 87 195 49 189 30 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 193 33 moveto
187 24 lineto
188 34 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1016 -> Node1009
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 198 268 moveto
189 260 175 248 164 238 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 167 237 moveto
158 232 lineto
163 241 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1028 -> Node1005
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 113 112 moveto
126 95 158 53 174 31 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 175 34 moveto
179 24 lineto
171 31 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1028 -> Node1006
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 99 112 moveto
91 104 78 92 68 82 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 71 81 moveto
62 76 lineto
67 85 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1023 -> Node1005
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 267 216 moveto
262 192 246 116 218 60 curveto
212 49 204 38 197 30 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 200 30 moveto
192 24 lineto
196 33 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 3823 a Fj(Namespaces)275 4009 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 4289 y Fj(11.29.1)113
b(Detailed)36 b(Description)142 4428 y Fq(Author:)311
4528 y Fp(Da)n(vid)28 b(Gordon)e(utilities)j(This)e(\014le)h(de\014nes)
g(a)f(n)n(um)n(b)r(er)g(of)h(useful)g(functions)g(and)f(functors.)p
-358 5723 V -192 5823 a Fn(Generated)f(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 257 265
257 264 bop 150 70 a Fq(11.30)30 b(w)m(orld.h)i(File)e(Reference)2697
b(257)p 150 103 4034 4 v 150 333 a Fl(11.30)136 b(w)l(orld.h)45
b(File)h(Reference)150 562 y Fi(#include)40 b Fo(<)p
Fi(vector)p Fo(>)150 709 y Fi(#include)g Fo(<)p Fi(deque)p
Fo(>)150 855 y Fi(#include)g Fo(<)p Fi(algorithm)p Fo(>)150
1002 y Fi(#include)g Fo(<)p Fi(functional)p Fo(>)150
1149 y Fi(#include)g("vector2d.h")150 1296 y(#include)g("animat.h")150
1443 y(#include)g("animatmonitor.h")150 1590 y(#include)g
("worldobject.h")150 1737 y(#include)g("collisions.h")150
1884 y(#include)g("random.h")150 2030 y(#include)g("sensorfunctors.h)o
(")150 2177 y Fp(Include)28 b(dep)r(endency)g(graph)e(for)h(w)n
(orld.h:)555 4008 y @beginspecial 35 @llx 35 @lly 655
@urx 425 @ury 3257 @rwi @setspecial
%%BeginDocument: world_8h__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 655 425
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 655 425
%%PageOrientation: Portrait
gsave
35 35 620 390 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node1032
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 564 183 moveto
610 183 lineto
610 198 lineto
564 198 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 564 183 moveto
610 183 lineto
610 198 lineto
564 198 lineto
closepath
stroke
gsave 10 dict begin
587 186 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node1033
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 342 270 moveto
382 270 lineto
382 285 lineto
342 285 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
362 273 moveto 30 -0.5 (vector) alignedtext
end grestore
end grestore

%	Node1033 -> Node1032
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 391 281 moveto
433 285 506 290 528 277 curveto
558 259 548 238 566 210 curveto
569 206 573 202 576 199 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 392 279 moveto
382 280 lineto
392 284 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1060
[ /Rect [ 437 254 527 268 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animatmonitor_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 437 253 moveto
528 253 lineto
528 268 lineto
437 268 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
482 256 moveto 81 -0.5 (animatmonitor.h) alignedtext
end grestore
end grestore

%	Node1033 -> Node1060
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 391 274 moveto
405 272 421 269 436 267 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 392 271 moveto
382 275 lineto
392 276 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1034
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 463 323 moveto
502 323 lineto
502 338 lineto
463 338 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
482 326 moveto 29 -0.5 (deque) alignedtext
end grestore
end grestore

%	Node1034 -> Node1032
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 511 330 moveto
517 329 523 326 528 322 curveto
571 283 524 238 564 198 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 511 327 moveto
502 332 lineto
512 332 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1035
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 333 218 moveto
391 218 lineto
391 233 lineto
333 233 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
362 221 moveto 48 -0.5 (algorithm) alignedtext
end grestore
end grestore

%	Node1035 -> Node1032
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 400 223 moveto
434 220 485 214 528 207 curveto
540 204 553 201 564 198 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 401 220 moveto
391 224 lineto
401 225 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1051
[ /Rect [ 456 184 508 198 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 456 183 moveto
508 183 lineto
508 198 lineto
456 198 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
482 186 moveto 42 -0.5 (animat.h) alignedtext
end grestore
end grestore

%	Node1035 -> Node1051
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 400 217 moveto
417 210 419 203 436 198 curveto
442 196 449 194 456 193 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 400 214 moveto
391 220 lineto
401 219 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1035 -> Node1060
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 400 233 moveto
418 238 419 245 436 252 curveto
438 253 439 253 441 253 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 401 231 moveto
391 230 lineto
400 236 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1036
gsave 10 dict begin
0.000 0.000 0.749 nodecolor
newpath 9 224 moveto
70 224 lineto
70 239 lineto
9 239 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 227 moveto 51 -0.5 (functional) alignedtext
end grestore
end grestore

%	Node1036 -> Node1032
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 79 243 moveto
156 284 151 366 243 366 curveto
243 366 243 366 362 366 curveto
437 366 467 388 528 347 curveto
553 330 552 315 560 287 curveto
566 267 562 261 564 241 curveto
565 232 565 230 566 223 curveto
568 215 566 212 569 206 curveto
571 203 573 201 575 199 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 80 241 moveto
70 239 lineto
78 245 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1043
[ /Rect [ 106 92 162 106 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($random_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 106 91 moveto
162 91 lineto
162 106 lineto
106 106 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
134 94 moveto 46 -0.5 (random.h) alignedtext
end grestore
end grestore

%	Node1036 -> Node1043
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 75 217 moveto
105 180 69 141 106 106 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 74 215 moveto
69 224 lineto
77 218 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1037
[ /Rect [ 213 111 273 125 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($vector2d_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 213 110 moveto
273 110 lineto
273 125 lineto
213 125 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
243 113 moveto 50 -0.5 (vector2d.h) alignedtext
end grestore
end grestore

%	Node1037 -> Node1032
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 283 118 moveto
339 121 444 128 528 157 curveto
547 163 566 175 577 183 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 283 116 moveto
273 118 lineto
283 121 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1052
[ /Rect [ 324 149 400 163 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 324 148 moveto
400 148 lineto
400 163 lineto
324 163 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
362 151 moveto 66 -0.5 (worldobject.h) alignedtext
end grestore
end grestore

%	Node1037 -> Node1052
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 282 123 moveto
284 123 286 124 288 125 curveto
306 131 307 140 324 148 curveto
324 148 325 148 325 148 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 283 121 moveto
273 121 lineto
282 126 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1043 -> Node1032
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 170 93 moveto
243 82 410 66 528 128 curveto
550 139 547 152 564 170 curveto
569 174 574 179 579 183 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 172 90 moveto
162 94 lineto
172 95 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1043 -> Node1037
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 170 106 moveto
184 108 200 111 213 113 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 172 104 moveto
162 104 lineto
171 109 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1062
[ /Rect [ 198 21 288 35 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($sensorfunctors_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 198 20 moveto
288 20 lineto
288 35 lineto
198 35 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
243 23 moveto 80 -0.5 (sensorfunctors.h) alignedtext
end grestore
end grestore

%	Node1043 -> Node1062
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 168 85 moveto
184 68 176 50 198 36 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 167 83 moveto
160 91 lineto
170 87 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1051 -> Node1032
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 518 191 moveto
533 191 550 191 564 191 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 518 189 moveto
508 191 lineto
518 194 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1052 -> Node1032
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 410 160 moveto
443 162 489 168 528 175 curveto
540 177 553 181 564 184 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 410 158 moveto
400 159 lineto
410 162 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1052 -> Node1051
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 408 166 moveto
419 171 422 176 436 182 curveto
442 184 449 185 456 187 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 410 164 moveto
400 163 lineto
408 169 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1060 -> Node1032
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 534 248 moveto
550 232 543 213 564 198 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 533 246 moveto
526 253 lineto
536 250 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1061
[ /Rect [ 452 38 512 52 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($collisions_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 452 37 moveto
513 37 lineto
513 52 lineto
452 52 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
482 40 moveto 51 -0.5 (collisions.h) alignedtext
end grestore
end grestore

%	Node1061 -> Node1032
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 521 49 moveto
524 50 526 51 528 53 curveto
573 93 523 139 564 183 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 523 47 moveto
513 46 lineto
521 52 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1062 -> Node1032
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 297 22 moveto
369 15 491 7 528 29 curveto
579 59 556 97 564 156 curveto
566 164 565 167 569 175 curveto
571 178 574 181 577 183 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 298 19 moveto
288 23 lineto
298 24 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 4337 a(This)h(graph)e(sho)n(ws)g(whic)n(h)i(\014les)g
(directly)f(or)g(indirectly)g(include)h(this)g(\014le:)725
5530 y @beginspecial 35 @llx 35 @lly 572 @urx 277 @ury
2849 @rwi @setspecial
%%BeginDocument: world_8h__dep__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 572 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 572 277
%%PageOrientation: Portrait
gsave
35 35 537 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node1063
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 219 8 moveto
265 8 lineto
265 23 lineto
219 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 219 8 moveto
265 8 lineto
265 23 lineto
219 23 lineto
closepath
stroke
gsave 10 dict begin
242 11 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node1064
[ /Rect [ 0 61 54 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($animat_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 0 60 moveto
55 60 lineto
55 75 lineto
0 75 lineto
closepath
stroke
gsave 10 dict begin
27 63 moveto 45 -0.5 (animat.cc) alignedtext
end grestore
end grestore

%	Node1064 -> Node1063
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 53 60 moveto
54 60 54 60 55 60 curveto
124 42 146 44 212 26 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 211 29 moveto
220 24 lineto
210 24 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1065
[ /Rect [ 72 61 138 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($drawable_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 72 60 moveto
139 60 lineto
139 75 lineto
72 75 lineto
closepath
stroke
gsave 10 dict begin
105 63 moveto 57 -0.5 (drawable.cc) alignedtext
end grestore
end grestore

%	Node1065 -> Node1063
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 125 60 moveto
148 51 187 36 214 27 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 214 30 moveto
222 24 lineto
212 25 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1066
[ /Rect [ 156 61 234 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 156 60 moveto
235 60 lineto
235 75 lineto
156 75 lineto
closepath
stroke
gsave 10 dict begin
195 63 moveto 69 -0.5 (worldobject.cc) alignedtext
end grestore
end grestore

%	Node1066 -> Node1063
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 202 60 moveto
209 52 220 40 229 31 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 230 33 moveto
235 24 lineto
227 30 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1067
[ /Rect [ 252 61 326 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 252 60 moveto
326 60 lineto
326 75 lineto
252 75 lineto
closepath
stroke
gsave 10 dict begin
289 63 moveto 64 -0.5 (distribution.h) alignedtext
end grestore
end grestore

%	Node1067 -> Node1063
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 282 60 moveto
275 52 264 40 255 31 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 257 30 moveto
249 24 lineto
254 33 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1068
[ /Rect [ 201 217 277 231 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($distribution_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 201 216 moveto
278 216 lineto
278 231 lineto
201 231 lineto
closepath
stroke
gsave 10 dict begin
239 219 moveto 67 -0.5 (distribution.cc) alignedtext
end grestore
end grestore

%	Node1068 -> Node1067
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 236 216 moveto
232 205 225 182 230 164 curveto
240 124 247 110 271 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 273 85 moveto
278 76 lineto
269 81 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1069
[ /Rect [ 239 165 295 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacteria_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 239 164 moveto
295 164 lineto
295 179 lineto
239 179 lineto
closepath
stroke
gsave 10 dict begin
267 167 moveto 46 -0.5 (bacteria.h) alignedtext
end grestore
end grestore

%	Node1068 -> Node1069
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 243 216 moveto
247 208 253 197 259 188 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 261 190 moveto
263 180 lineto
256 188 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1069 -> Node1067
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 266 164 moveto
265 153 263 130 268 112 curveto
270 102 275 91 279 83 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 280 86 moveto
284 76 lineto
276 83 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1070
[ /Rect [ 277 113 343 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($bacterium_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 277 112 moveto
344 112 lineto
344 127 lineto
277 127 lineto
closepath
stroke
gsave 10 dict begin
310 115 moveto 57 -0.5 (bacterium.h) alignedtext
end grestore
end grestore

%	Node1069 -> Node1070
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 273 164 moveto
279 156 289 144 298 135 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 299 137 moveto
304 128 lineto
296 134 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1070 -> Node1067
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 307 112 moveto
304 105 299 94 296 85 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 298 84 moveto
292 76 lineto
294 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1071
[ /Rect [ 383 113 451 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 383 112 moveto
452 112 lineto
452 127 lineto
383 127 lineto
closepath
stroke
gsave 10 dict begin
417 115 moveto 59 -0.5 (simulation.h) alignedtext
end grestore
end grestore

%	Node1071 -> Node1063
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 408 112 moveto
393 100 362 77 335 60 curveto
313 47 287 35 268 27 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 271 26 moveto
261 24 lineto
269 30 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1074
[ /Rect [ 382 61 452 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($population_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 382 60 moveto
452 60 lineto
452 75 lineto
382 75 lineto
closepath
stroke
gsave 10 dict begin
417 63 moveto 60 -0.5 (population.h) alignedtext
end grestore
end grestore

%	Node1071 -> Node1074
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 412 112 moveto
411 105 410 94 411 85 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 413 86 moveto
412 76 lineto
408 86 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1072
[ /Rect [ 313 165 385 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($simulation_8cc.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 313 164 moveto
385 164 lineto
385 179 lineto
313 179 lineto
closepath
stroke
gsave 10 dict begin
349 167 moveto 62 -0.5 (simulation.cc) alignedtext
end grestore
end grestore

%	Node1072 -> Node1071
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 359 164 moveto
370 156 387 143 400 133 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 400 136 moveto
407 128 lineto
397 132 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1073
[ /Rect [ 403 165 475 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($glutsimenv_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 403 164 moveto
475 164 lineto
475 179 lineto
403 179 lineto
closepath
stroke
gsave 10 dict begin
439 167 moveto 62 -0.5 (glutsimenv.h) alignedtext
end grestore
end grestore

%	Node1073 -> Node1071
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 436 164 moveto
433 157 428 146 424 137 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 426 136 moveto
420 128 lineto
422 138 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1074 -> Node1063
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 390 60 moveto
361 53 315 40 274 27 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 274 24 moveto
264 24 lineto
273 29 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1074 -> Node1071
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 423 104 moveto
424 94 424 84 422 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 421 102 moveto
422 112 lineto
426 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1075
[ /Rect [ 493 165 535 179 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($beast_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
newpath 493 164 moveto
535 164 lineto
535 179 lineto
493 179 lineto
closepath
stroke
gsave 10 dict begin
514 167 moveto 32 -0.5 (beast.h) alignedtext
end grestore
end grestore

%	Node1075 -> Node1071
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 500 164 moveto
484 155 458 141 439 132 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 441 130 moveto
431 128 lineto
439 135 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 258 266
258 265 bop -358 70 a Fq(258)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fj(Namespaces)275 519 y Fk(\210)42 b Fp(namespace)26
b Fq(BEAST)150 799 y Fj(11.30.1)113 b(Detailed)36 b(Description)142
938 y Fq(Author:)311 1037 y Fp(T)-7 b(om)28 b(Carden)f(framew)n(ork)p
-358 5723 V -192 5823 a Fn(Generated)f(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 259 267
259 266 bop 150 70 a Fq(11.31)30 b(w)m(orldob)5 b(ject.cc)33
b(File)e(Reference)2406 b(259)p 150 103 4034 4 v 150
333 a Fl(11.31)136 b(w)l(orldob)7 b(ject.cc)46 b(File)g(Reference)150
562 y Fp(The)28 b(implemen)n(tation)f(of)h(W)-7 b(orldOb)5
b(ject.)150 709 y Fi(#include)40 b("worldobject.h")150
855 y(#include)g("world.h")150 1002 y Fp(Include)28 b(dep)r(endency)g
(graph)e(for)h(w)n(orldob)5 b(ject.cc:)1655 1916 y @beginspecial
35 @llx 35 @lly 125 @urx 173 @ury 617 @rwi @setspecial
%%BeginDocument: worldobject_8cc__incl.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Thu Oct  2 22:19:50 UTC 2003)
%%For: (david) David Gordon
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 125 173
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 125 173
%%PageOrientation: Portrait
gsave
35 35 90 138 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
10.00 /Helvetica set_font

%	Node1076
gsave 10 dict begin
filled
0.000 0.000 1.000 nodecolor
0.000 0.000 0.000 nodecolor
newpath 0 8 moveto
79 8 lineto
79 23 lineto
0 23 lineto
closepath
fill
0.000 0.000 1.000 nodecolor
newpath 0 8 moveto
79 8 lineto
79 23 lineto
0 23 lineto
closepath
stroke
gsave 10 dict begin
39 11 moveto 69 -0.5 (worldobject.cc) alignedtext
end grestore
end grestore

%	Node1077
[ /Rect [ 1 113 77 127 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($worldobject_8h-source.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 1 112 moveto
77 112 lineto
77 127 lineto
1 127 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
39 115 moveto 66 -0.5 (worldobject.h) alignedtext
end grestore
end grestore

%	Node1077 -> Node1076
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 36 104 moveto
35 96 34 85 33 76 curveto
32 57 36 35 38 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 33 103 moveto
38 112 lineto
38 102 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1099
[ /Rect [ 42 61 88 75 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($world_8h.html) >>
  /Subtype /Link
/ANN pdfmark
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 42 60 moveto
88 60 lineto
88 75 lineto
42 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
65 63 moveto 36 -0.5 (world.h) alignedtext
end grestore
end grestore

%	Node1077 -> Node1099
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 47 104 moveto
52 94 57 84 61 76 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 45 102 moveto
43 112 lineto
50 104 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore

%	Node1099 -> Node1076
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 57 53 moveto
53 43 47 32 43 24 curveto
stroke
gsave 10 dict begin
solid
0.667 0.776 0.439 edgecolor
newpath 54 53 moveto
61 60 lineto
58 50 lineto
closepath
fill
0.667 0.776 0.439 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 150 2278 a Fj(Namespaces)275 2465 y Fk(\210)42
b Fp(namespace)26 b Fq(BEAST)150 2744 y Fj(11.31.1)113
b(Detailed)36 b(Description)150 2945 y Fp(The)28 b(implemen)n(tation)f
(of)h(W)-7 b(orldOb)5 b(ject.)p 150 5723 V 150 5823 a
Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d
(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 260 268
260 267 bop -358 70 a Fq(260)474 b(BEAST)32 b(-)g(Bioinspired)e(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(File)f(Do)s(cumen)m(tation)p -358 103 4034 4 v -358
5723 V -192 5823 a Fn(Generated)c(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 261 269
261 268 bop 150 1003 a Fm(Chapter)65 b(12)150 1465 y
Fr(BEAST)77 b(-)h(Bioinspired)150 1714 y(Ev)-6 b(olutionary)76
b(Agen)-6 b(t)78 b(Sim)-6 b(ulation)150 1963 y(T)-19
b(o)6 b(olkit)77 b(P)-6 b(age)77 b(Do)6 b(cumen)-6 b(tation)150
2492 y Fl(12.1)136 b(F)-11 b(eedF)g(orw)l(ardNet)45 b(source)g(co)t(de)
150 2773 y Fd(#include)38 b("feedforwardnet.h")150 2931
y(using)f(namespace)h(std;)150 3089 y(namespace)g(BEAST)f({)150
3247 y(FeedForwardNet::FeedFor)q(ward)q(Net)q(\(int)42
b(in,)36 b(int)g(out,)h(int)f(hid,)g(bool)h(sig,)f(bool)h(bias\))150
3326 y({)291 3404 y(Init\(in,)h(out,)e(hid,)h(sig,)f(bias\);)150
3483 y(})150 3641 y(void)g(FeedForwardNet::Init\(i)q(nt)42
b(in,)36 b(int)g(out,)g(int)g(hid,)h(bool)f(sig,)h(bool)f(bias\))150
3720 y({)291 3799 y(inputs)h(=)f(in;)291 3878 y(outputs)h(=)f(out;)291
3957 y(hidden)h(=)f(hid;)291 4035 y(sigmoid)h(=)f(sig;)291
4114 y(biasNode)i(=)d(bias;)291 4193 y(inputValues)k(=)c
(vector<float>\(in\);)291 4272 y(outputValues)k(=)c
(vector<float>\(out\);)291 4351 y(hiddenLayer.clear\(\);)291
4430 y(outputLayer.clear\(\);)291 4588 y(//)h(For)g(each)h(hidden)g
(layer)f(neuron,)i(we)d(instantiate)k(a)c(Neuron)i(object.)291
4666 y(//)f(The)g(Neuron)h(is)f(initialised)i(with)f(the)f(number)h(of)
f(weights)h(it)f(needs,)291 4745 y(//)g(which)h(in)f(this)g(case)g(is)g
(one)g(per)h(input.)g(If)e(biasNode)j(has)e(been)h(set)291
4824 y(//)f(to)g(true,)h(an)e(extra)i(weight)g(is)f(added.)h(The)f(use)
g(of)g(this)h(is)e(explained)291 4903 y(//)h(in)g(the)g(fire)g(method.)
291 4982 y(for)g(\(int)h(i=0;)f(i<hidden;)i(++i\))e({)432
5061 y(hiddenLayer.push_back\()q(Neur)q(on\()q(inpu)q(ts)42
b(+)35 b(\(biasNode)j(?)e(1)f(:)h(0\))g(\)\);)291 5140
y(})291 5297 y(//)g(If)g(the)g(hidden)h(layer)g(size)f(is)g(set)g(to)g
(0,)g(normally)h(that)g(would)g(break)f(the)291 5376
y(//)g(network)h(but)f(here)h(I'm)f(taking)h(it)f(to)g(mean)g(the)g
(net)g(is)g(a)g(perceptron)i(\(one)291 5455 y(//)e(layer)h(of)f
(inputs,)h(one)f(layer)h(of)f(outputs,)h(no)f(hidden)h(layer\))g(and)f
(so)g(the)291 5534 y(//)g(output)h(layer)g(neurons)g(have)f(<inputs>,)i
(rather)f(than)g(<hidden>,)h(inputs.)291 5613 y(if)e(\(hid)g(==)g(0\))g
(hid)g(=)g(inputs;)p eop
%%Page: 262 270
262 269 bop -358 70 a Fq(262)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 291
333 a Fd(//)k(Add)g(one)g(neuron)h(per)f(output)h(value)g(to)f(the)g
(output)h(layer,)g(each)g(with)291 412 y(//)f(one)g(weight)h(per)f
(hidden)h(neuron)g(\(since)g(this)g(is)f(the)g(output)h(layer,)291
490 y(//)f(inputs)h(are)f(coming)h(from)g(the)f(hidden)h(layer\))g(and)
f(again)h(an)e(extra)291 569 y(//)h(weight)h(if)f(biasNode)h(is)f(set)g
(to)g(true.)291 648 y(for)g(\(int)h(i=0;)f(i<outputs;)i(++i\))f({)432
727 y(outputLayer.push_back\()q(Neur)q(on\()q(hid)42
b(+)35 b(\(biasNode)j(?)e(1)f(:)h(0\))g(\)\);)291 806
y(})150 885 y(})150 1042 y(FeedForwardNet::~FeedFo)q(rwar)q(dNe)q
(t\(\))150 1121 y({)150 1200 y(})150 1358 y(void)g
(FeedForwardNet::Random)q(ise)q(\(\))150 1437 y({)291
1516 y(vector<Neuron>::iterato)q(r)41 b(i;)291 1673 y(for)36
b(\(i)g(=)g(hiddenLayer.begin\(\);)41 b(i)35 b(!=)h
(hiddenLayer.end\(\);)41 b(++i\))36 b({)432 1752 y
(generate\(i->weights.be)q(gin\()q(\),)42 b(i->weights.end\(\),)e
(RandomNum\);)291 1831 y(})291 1989 y(for)c(\(i)g(=)g
(outputLayer.begin\(\);)41 b(i)35 b(!=)h(outputLayer.end\(\);)41
b(++i\))36 b({)432 2068 y(generate\(i->weights.be)q(gin\()q(\),)42
b(i->weights.end\(\),)e(RandomNum\);)291 2147 y(})150
2226 y(})150 2383 y(vector<float>)f(FeedForwardNet::GetConf)q(igur)q
(ati)q(on\(\))q(con)q(st)150 2462 y({)291 2541 y(//)d(The)g
(configuration)j(data)e(contains)g(no)f(information)i(about)f(the)291
2620 y(//)f(network's)i(dimensions,)g(bias)f(nodes,)g(or)f(activation)i
(function.)291 2778 y(vector<float>)h(config;)291 2857
y(vector<Neuron>::const_i)q(ter)q(ator)j(i;)291 3014
y(//)36 b(Using)h(the)f(STL)g(copy)g(template)i(algorithm)g(instead)f
(of)f(a)g(for)g(loop.)g(Wow!)291 3093 y(for)g(\(i)g(=)g
(hiddenLayer.begin\(\);)41 b(i)35 b(!=)h(hiddenLayer.end\(\);)41
b(++i\))36 b({)432 3172 y(copy\(i->weights.begin\()q(\),)41
b(i->weights.end\(\),)g(back_inserter\(config\)\);)291
3251 y(})291 3409 y(for)36 b(\(i)g(=)g(outputLayer.begin\(\);)41
b(i)35 b(!=)h(outputLayer.end\(\);)41 b(++i\))36 b({)432
3487 y(copy\(i->weights.begin\()q(\),)41 b(i->weights.end\(\),)g
(back_inserter\(config\)\);)291 3566 y(})291 3724 y(return)c(config;)
150 3803 y(})150 3961 y(void)f(FeedForwardNet::SetCon)q(fig)q(urat)q
(ion)q(\(con)q(st)42 b(vector<float>&)d(config\))150
4040 y({)291 4118 y(//)d(The)g(configuration)j(data)e(contains)g(no)f
(information)i(about)f(the)291 4197 y(//)f(network's)i(dimensions,)g
(bias)f(nodes,)g(or)f(activation)i(function.)291 4355
y(//)e(First)h(ensure)g(the)f(incoming)h(vector)g(is)f(the)g(right)h
(size)291 4434 y(unsigned)h(int)e(expectedSize)j(=)c
(static_cast<unsigned)41 b(int>\(GetConfigurationLe)q(ngt)q(h\(\)\))q
(;)291 4592 y(if)36 b(\(config.size\(\))j(!=)d(expectedSize\))j
(return;)e(//)f(Error)h(to)f(go)g(here)291 4749 y
(vector<Neuron>::iterato)q(r)41 b(i;)291 4828 y
(vector<float>::const_it)q(era)q(tor)h(configIter\(config.begin\()q
(\)\);)291 4986 y(//)36 b(Now)g(we)g(move)g(through)i(config,)f
(assigning)h(series)f(of)f(size)g(inputs)h(+)f(biasnode)291
5065 y(//)g(to)g(the)g(weights)h(of)f(each)h(Neuron.)291
5223 y(for)f(\(i)g(=)g(hiddenLayer.begin\(\);)41 b(i)35
b(!=)h(hiddenLayer.end\(\);)41 b(++i\))36 b({)432 5302
y(i->weights)i(=)e(vector<float>\(configIte)q(r,)41 b
(configIter+inputs+\(bia)q(sNo)q(de?1)q(:0\))q(\);)432
5380 y(configIter)d(+=)e(inputs)h(+)f(\(biasNode)i(?)d(1)h(:)f(0\);)291
5459 y(})p -358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 263 271
263 270 bop 150 70 a Fq(12.1)31 b(F)-8 b(eedF)g(orw)m(ardNet)32
b(source)g(co)s(de)2478 b(263)p 150 103 4034 4 v 291
333 a Fd(//)36 b(Same)g(again)h(for)f(output)h(layer)291
412 y(for)f(\(i)g(=)g(outputLayer.begin\(\);)41 b(i)35
b(!=)h(outputLayer.end\(\);)41 b(++i\))36 b({)432 490
y(i->weights)i(=)e(vector<float>\(configIte)q(r,)41 b
(configIter+hidden+\(bia)q(sNo)q(de?1)q(:0\))q(\);)432
569 y(configIter)d(+=)e(hidden)h(+)f(\(biasNode)i(?)d(1)h(:)f(0\);)291
648 y(})291 806 y(//)h(One)g(more)h(error)f(check:)291
885 y(if)g(\(configIter)i(!=)e(config.end\(\)\))j(true;)e(//)f(Another)
h(error)291 1042 y(return;)150 1121 y(})150 1279 y(float)g
(FeedForwardNet::Neuron::)q(Weig)q(hte)q(dSum)q(\(ve)q(ctor)q(<fl)q
(oat>)q(&)k(input\)const)150 1358 y({)291 1437 y(if)36
b(\(input.size\(\))j(>)d(weights.size\(\)\))j({)432 1516
y(std::cerr)f(<<)e("Error:)h(too)f(many)h(inputs!")g(<<)f(std::endl;)
291 1595 y(})291 1752 y(//)g(All)g(we're)h(doing)g(here)f(is)g(moving)h
(through)g(the)f(input)h(values)g(\(which)g(will)291
1831 y(//)f(always)h(be)f(either)h(the)f(net's)h(inputs)g(or)f(the)g
(outputs)h(of)f(the)g(hidden)h(layer\))291 1910 y(//)f(and)g
(multiplying)j(them)d(by)g(their)h(respective)h(weights)291
1989 y(return)f(inner_product\(input.beg)q(in\()q(\),)k(input.end\(\),)
e(weights.begin\(\),)h(0.0f\);)291 2147 y(//)c(Note)g(that)h(the)f
(output)h(from)f(this)h(function)g(isn't)g(ready)g(to)f(be)g(passed)h
(onto)291 2226 y(//)f(the)g(next)h(layer)f(yet)g(-)g(this)g(weighted)i
(sum)e(needs)h(to)f(be)g(\(optionally\))i(biased)291
2304 y(//)e(and)g(put)g(through)i(the)e(activation)i(function)f(-)f
(either)h(sigmoid)g(or)f(threshold.)150 2383 y(})150
2541 y(void)g(FeedForwardNet::Fire\(\))150 2620 y({)291
2699 y(vector<float>)j(hiddenOutput;)321 b(//)36 b(A)g(holding)h(space)
g(for)f(the)g(output)291 2778 y(outputValues.clear\(\);)535
b(//)36 b(of)g(the)g(hidden)h(layer,)g(to)f(pass)h(to)291
2857 y(float)g(output;)813 b(//)36 b(the)g(output)h(layer)g(neurons.)
291 3014 y(//)f(If)g(the)g(size)g(of)g(the)g(hidden)h(layer)g(is)f(set)
g(to)g(0,)g(this)g(particular)i(ANN)f(class)291 3093
y(//)f(recognises)i(that)f(to)e(mean)i(there)g(is)e(no)h(hidden)h
(layer,)g(and)f(so)g(the)g(input)291 3172 y(//)g(values)h(should)g(be)f
(processed)i(directly)f(by)f(the)g(output)h(layer.)g(When)g(this)291
3251 y(//)f(happens)h(-)f(i.e.)g(there)h(is)f(only)g(one)g(round)h(of)f
(neural)h(processing)h(-)e(you)g(have)291 3330 y(//)g(a)g(perceptron.)i
(Normally)g(a)d(zero-neuron)k(hidden)e(layer)f(would)h(just)f(break)h
(the)291 3409 y(//)f(network,)i(but)e(here)g(we're)h(forcing)g
(something)h(else)e(to)g(happen.)291 3487 y(if)g(\(hidden)h(==)f(0\))g
(hiddenOutput)j(=)c(inputValues;)291 3645 y(vector<Neuron>::const_i)q
(ter)q(ator)42 b(currentNeuron\(hiddenLay)q(er.b)q(egi)q(n\(\)\))q(;)
291 3803 y(for)36 b(\(;)g(currentNeuron)j(!=)d(hiddenLayer.end\(\);)k
(++currentNeuron\))g({)432 3882 y(output)d(=)f
(currentNeuron->WeightedS)q(um\()q(inpu)q(tVa)q(lues)q(\);)432
4040 y(if)g(\(biasNode\))i({)573 4118 y(//)e(All)g(this)h(bit)f(does)g
(is)g(pick)h(the)f(last)g(value)h(on)f(the)g(current)573
4197 y(//)g(neuron's)i(vector)f(of)f(weights)h(and)f(subtract)i(it)e
(from)g(the)573 4276 y(//)g(weighted)i(sum:)573 4355
y(output)f(+=)f(currentNeuron->weights)q(.bac)q(k\(\))q(;)573
4434 y(//)g(The)g(idea)h(is)f(that)g(rather)h(than)g(insist)g(on)e(a)h
(neuron)h(coming)g(up)f(with)573 4513 y(//)g(outputs)i(that)e(are)g
(simply)h(positive)h(or)e(negative,)h(we)f(might)h(have)f(a)573
4592 y(//)g(neuron)h(which)g(produces)h(a)d(high)i(valued)g(output)g
(which)f(we)g(want)h(to)573 4671 y(//)f(tone)h(down.)f(So)g(we)g
(subtract)i(the)e(bias)g(value,)h(which)g(is)f(just)g(stored)573
4749 y(//)g(at)g(the)g(end)g(of)g(the)g(weights)i(for)e(convenience,)j
(from)d(the)g(neuron's)573 4828 y(//)g(output.)i(The)e(end)g(result)h
(is)f(a)f(much)i(more)f(flexible)i(network.)432 4907
y(})432 5065 y(//)e(Now)g(the)g(value)h(is)f(processed)i(by)e(either)h
(a)e(threshold)j(function,)g(which)432 5144 y(//)e(will)h(make)f(our)g
(hard-computed)j(output)e(into)g(nothing)g(more)f(than)h(a)e(0)h(or)g
(1,)432 5223 y(//)g(or)g(a)g(sigmoid)h(function)g(which)g(will)g(make)f
(values)h(<0)f(a)f(bit)i(lower,)g(and)432 5302 y(//)f(values)h(>0)f(a)g
(bit)g(higher.)h(The)f(net)g(would)h(work)f(without)i(this)e(stage,)h
(but)432 5380 y(//)f(not)g(very)h(well.)432 5459 y(output)g(=)f
(ActivationFunction\(outpu)q(t\);)p 150 5723 V 150 5823
a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 264 272
264 271 bop -358 70 a Fq(264)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 432
333 a Fd(//)k(Now)g(we)g(store)h(the)f(outputs)h(of)f(each)h(neuron)g
(ready)f(to)g(be)g(passed)h(onto)f(the)432 412 y(//)g(next)h(layer.)432
490 y(hiddenOutput.push_back)q(\(out)q(put)q(\);)291
569 y(})291 727 y(//)f(Now)g(we)g(do)g(exactly)h(the)f(same)h(thing)f
(over)h(again)g(for)f(the)g(output)h(layer.)g(Note)291
806 y(//)f(that)g(in)g(this)h(net)f(we)g(will)g(never)h(have)f(more)h
(than)f(one)g(hidden)h(layer,)g(so)f(I've)291 885 y(//)g(simply)h
(written)g(out)f(the)h(firing)g(code)f(twice,)h(once)f(for)h(each)f
(layer.)h(Many-)291 964 y(//)f(layered)h(ANN)f(implementations)k(would)
d(most)f(likely)h(do)f(this)g(bit)h(as)e(a)h(loop,)291
1042 y(//)g(with)g(one)h(iteration)g(per)g(layer.)291
1121 y(for)f(\(currentNeuron)k(=)35 b(outputLayer.begin\(\);)468
1200 y(currentNeuron)k(!=)c(outputLayer.end\(\);)41 b
(++currentNeuron\))f({)432 1279 y(output)d(=)f
(currentNeuron->WeightedS)q(um\()q(hidd)q(enO)q(utpu)q(t\);)432
1437 y(if)g(\(biasNode\))i({)573 1516 y(output)f(+=)f
(currentNeuron->weights)q(.bac)q(k\(\))q(;)432 1595 y(})432
1752 y(output)h(=)f(ActivationFunction\(outpu)q(t\);)432
1910 y(//)g(These)h(are)f(the)g(values)h(we'll)g(be)f(giving)h(to)f
(the)g(user)g(when)h(they)f(request)432 1989 y(//)g(the)g(output)h
(with)g(GetOutput\(\);)432 2068 y(outputValues.push_back)q(\(out)q(put)
q(\);)291 2226 y(})150 2304 y(})150 2462 y(float)g
(FeedForwardNet::Activati)q(onFu)q(nct)q(ion\()q(flo)q(at)k(n\))150
2541 y({)291 2620 y(if)36 b(\(sigmoid\))i({)432 2699
y(//)e(This)h(is)e(the)i(sigmoid)g(function,)h(refer)e(to)g(the)g
(lecture)i(notes)e(or)g(a)g(good)432 2778 y(//)g(book)h(on)e(ANNs)i
(for)f(a)g(better)h(diagram)g(than)f(this.)432 2857 y(//)432
2935 y(//)107 b(1)35 b(|)248 b(.-''')142 b(The)36 b(sigmoid)i(function)
f(is)f(somewhere)i(between)f(an)432 3014 y(//)177 b(|)212
b(/)318 b(identity)38 b(function)f(\(i.e.)g(returns)g(whatever)h(you)
432 3093 y(//)177 b(|)g(/)353 b(put)36 b(in\))g(and)h(a)e(threshold)j
(\(returns)g(0)d(for)h(<=)g(0,)432 3172 y(//)107 b(0)35
b(|__.-'_______)145 b(1)36 b(for)g(>)f(0\).)i(When)f(plotted)h(it's)g
(a)e(smooth)i(curve,)432 3251 y(//)177 b(-10)142 b(0)106
b(10)142 b(just)37 b(like)f(the)g(one)g(to)g(the)g(left.)432
3330 y(//)432 3409 y(return)h(static_cast<float>\(1.0)42
b(/)35 b(\(1.0)i(+)e(exp\(-n)i(/)f(FFN_ACTIVATION_RESPONSE)q(\)\)\);)
291 3487 y(})291 3566 y(else)h({)432 3645 y(//)f(This)h(is)e(just)i(a)e
(threshold)j(function.)g(You'll)f(want)g(to)e(use)i(sigmoid)g(for)432
3724 y(//)f(most)h(ANN)f(applications,)j(this)d(is)g(really)h(more)f
(use)h(for)f(testing,)h(e.g.)432 3803 y(//)f(with)h(the)f(XOR)g
(problem)h(\(although)h(of)e(course)h(that)f(can)g(be)g(done)h(with)432
3882 y(//)f(sigmoid)h(too\))432 3961 y(return)g(n)f(>)f(0.0f)i(?)e
(1.0f)i(:)e(0.0f;)291 4040 y(})150 4118 y(})150 4276
y(void)h(FeedForwardNet::Serial)q(ise)q(\(ost)q(rea)q(m&)41
b(out\)const)150 4355 y({)291 4434 y(out)36 b(<<)g("FeedForwardNet\\n")
432 4513 y(<<)g(setprecision\(36\))432 4592 y(<<)g(inputs)h(<<)f(endl)
432 4671 y(<<)g(outputs)h(<<)f(endl)432 4749 y(<<)g(hidden)h(<<)f(endl)
432 4828 y(<<)g(\(sigmoid)i(?)d("sigmoid")j(:)e("threshold"\))i(<<)e
(endl)432 4907 y(<<)g(\(biasNode)i(?)e("biasnode")i(:)d("nobiasnode"\))
k(<<)d(endl;)291 5065 y(ostream_iterator<float>)42 b(outIter\(out,)d
("\\n"\);)291 5144 y(copy\(inputValues.begin\()q(\),)j
(inputValues.end\(\),)e(outIter\);)291 5223 y(copy\(outputValues.begin)
q(\(\),)i(outputValues.end\(\),)f(outIter\);)291 5380
y(vector<float>)e(config)e(=)f(GetConfiguration\(\);)291
5459 y(copy\(config.begin\(\),)41 b(config.end\(\),)e(outIter\);)150
5538 y(})p -358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 265 273
265 272 bop 150 70 a Fq(12.1)31 b(F)-8 b(eedF)g(orw)m(ardNet)32
b(source)g(co)s(de)2478 b(265)p 150 103 4034 4 v 150
412 a Fd(void)36 b(FeedForwardNet::Unseri)q(ali)q(se\(i)q(str)q(eam&)42
b(in\))150 490 y({)291 569 y(string)37 b(name;)291 648
y(in)f(>>)g(name;)291 727 y(if)g(\(name)h(!=)f("FeedForwardNet"\))k({)
432 806 y(throw)d(SerialException\(SERIAL_)q(ERRO)q(R_W)q(RONG)q(_TY)q
(PE,)42 b(name,)1209 885 y("This)36 b(object)h(is)f(type)h
(FeedForwardNet"\);)291 964 y(})291 1121 y(in)f(>>)g(inputs)397
1200 y(>>)g(outputs)397 1279 y(>>)g(hidden)397 1358 y(>>)g
(switcher\("sigmoid",)41 b(sigmoid\))397 1437 y(>>)36
b(switcher\("biasnode",)41 b(biasNode\);)291 1595 y(Init\(inputs,)e
(outputs,)e(hidden,)h(sigmoid,)f(biasNode\);)h(//)e(Looks)h(a)f(little)
h(fishy)291 1752 y(copy_from_istream\(input)q(Val)q(ues.)q(beg)q
(in\(\))q(,)k(inputValues.end\(\),)g(in\);)291 1831 y
(copy_from_istream\(outpu)q(tVa)q(lues)q(.be)q(gin\()q(\),)h
(outputValues.end\(\),)e(in\);)291 1989 y(vector<float>)f
(config\(GetConfiguration)q(Len)q(gth\()q(\)\);)291 2068
y(copy_from_istream\(confi)q(g.b)q(egin)q(\(\),)j(config.end\(\),)d
(in\);)291 2226 y(SetConfiguration\(config)q(\);)150
2304 y(})150 2462 y(string)e(FeedForwardNet::ToStrin)q(g\(\)c)q(ons)q
(t)150 2541 y({)291 2620 y(//)f(I'm)g(not)g(going)h(to)f(comment)h
(this)g(because,)g(well,)g(it's)f(just)h(too)f(boring.)291
2778 y(ostringstream)j(out;)291 2857 y(vector<Neuron>::const_i)q(ter)q
(ator)j(i;)291 2935 y(vector<float>::const_it)q(era)q(tor)g(j;)291
3093 y(out)36 b(<<)g(setprecision\(2\))k(<<)c
(setiosflags\(ios::fixed\))432 3172 y(<<)g("Input)h(values:")h(<<)e
(endl;)291 3330 y(for)g(\(j)g(=)g(inputValues.begin\(\);)41
b(j)35 b(!=)h(inputValues.end\(\);)41 b(++j\))36 b({)432
3409 y(out)g(<<)g(setw\(FFN_COLSIZE\))k(<<)c(*j;)291
3487 y(})291 3645 y(out)g(<<)g(endl)h(<<)e(endl)432 3724
y(<<)h("Hidden)h(layer)g(weights:)h(")d(<<)h(endl;)291
3882 y(for)g(\(i)g(=)g(hiddenLayer.begin\(\);)41 b(i)35
b(!=)h(hiddenLayer.end\(\);)41 b(++i\))36 b({)432 3961
y(for)g(\(j)g(=)g(i->weights.begin\(\);)41 b(j)35 b(!=)h
(i->weights.end\(\))k(-)35 b(1;)h(++j\))h({)573 4040
y(out)g(<<)e(setw\(FFN_COLSIZE\))41 b(<<)35 b(*j;)432
4118 y(})432 4197 y(if)h(\(biasNode\))i(out)e(<<)g(")g(bias:)h(";)432
4276 y(out)f(<<)g(setw\(FFN_COLSIZE\))k(<<)c(*j)g(<<)g(endl;)291
4355 y(})291 4513 y(out)g(<<)g(endl)432 4592 y(<<)g("Output)h(layer)g
(weights:)h(")d(<<)h(endl;)291 4749 y(for)g(\(i)g(=)g
(outputLayer.begin\(\);)41 b(i)35 b(!=)h(outputLayer.end\(\);)41
b(++i\))36 b({)432 4828 y(for)g(\(j)g(=)g(i->weights.begin\(\);)41
b(j)35 b(!=)h(i->weights.end\(\))k(-)35 b(1;)h(++j\))h({)573
4907 y(out)g(<<)e(setw\(FFN_COLSIZE\))41 b(<<)35 b(*j;)432
4986 y(})432 5065 y(if)h(\(biasNode\))i(out)e(<<)g(")g(bias:)h(";)432
5144 y(out)f(<<)g(setw\(FFN_COLSIZE\))k(<<)c(*j)g(<<)g(endl;)291
5223 y(})291 5380 y(out)g(<<)g(endl)432 5459 y(<<)g("Output)h(values:)h
(")d(<<)h(endl;)p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 266 274
266 273 bop -358 70 a Fq(266)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 291
333 a Fd(for)k(\(j)g(=)g(outputValues.begin\(\);)41 b(j)36
b(!=)f(outputValues.end\(\);)41 b(++j\))c({)432 412 y(out)f(<<)g
(setw\(FFN_COLSIZE\))k(<<)c(*j;)291 490 y(})291 648 y(out)g(<<)g(endl)h
(<<)e(endl;)291 806 y(return)i(out.str\(\);)150 885 y(})150
1042 y(int)f(FeedForwardNet::GetConf)q(igu)q(rati)q(onL)q(engt)q(h\(\))
q(cons)q(t)150 1121 y({)291 1200 y(return)h(hidden)g(*)f(inputs)h(+)e
(outputs)j(*)d(hidden)538 1279 y(+)h(\(biasNode)i(?)d(1)h(:)f(0\))h(*)g
(\(hidden)h(+)f(outputs\);)150 1358 y(})150 1516 y(ostream&)i
(operator<<)g(\(ostream&)g(out,)e(const)h(FeedForwardNet&)i(ffn\))150
1595 y({)291 1673 y(ffn.Serialise\(out\);)291 1752 y(return)e(out;)150
1831 y(})150 1989 y(istream&)h(operator>>)g(\(istream&)g(in,)e
(FeedForwardNet&)j(ffn\))150 2068 y({)291 2147 y
(ffn.Unserialise\(in\);)291 2226 y(return)e(in;)150 2304
y(})150 2462 y(})f(//)f(namespace)j(BEAST)p -358 5723
V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 267 275
267 274 bop 150 70 a Fq(12.2)31 b(DynamicalNet)g(source)g(co)s(de)2571
b(267)p 150 103 4034 4 v 150 333 a Fl(12.2)136 b(DynamicalNet)46
b(source)f(co)t(de)150 565 y Fd(#include)38 b("dynamicalnet.h")150
723 y(using)f(namespace)h(std;)150 881 y(namespace)g(BEAST)f({)150
1038 y(DynamicalNet::Dynamical)q(Net\()q(int)42 b(i,)36
b(int)g(o,)g(int)g(t,)g(bool)g(mi,)g(bool)h(mo\))150
1117 y({)291 1196 y(Init\(i,)g(o,)f(t,)g(mi,)g(mo\);)150
1275 y(})150 1433 y(DynamicalNet::~Dynamica)q(lNet)q(\(\))150
1512 y({)150 1590 y(})150 1748 y(void)g(DynamicalNet::Init\(int)42
b(i,)36 b(int)g(o,)g(int)g(t,)g(bool)g(mi,)g(bool)h(mo\))150
1827 y({)291 1906 y(inputs)g(=)f(vector<float>\(i\);)291
1985 y(outputs)h(=)f(vector<float>\(o\);)291 2064 y(neuronStates)j(=)c
(vector<float>\(t\);)291 2143 y(multiInputNodes)40 b(=)35
b(mi;)291 2221 y(multiOutputNodes)40 b(=)c(mo;)291 2300
y(neurons.clear\(\);)291 2458 y(int)g(neuronInputs)j(=)d
(multiInputNodes)j(?)d(i)f(:)h(0,)432 2537 y(neuronOutputs)j(=)d
(multiOutputNodes)k(?)35 b(o)h(:)f(0,)432 2616 y(neuronInChl)k(=)c(-1,)
432 2695 y(neuronOutChl)k(=)d(-1;)291 2852 y(for)g(\(int)h(n)e(=)h(0;)g
(n)f(<)h(t;)g(++n\))g({)432 2931 y(if)g(\(!multiInputNodes\))41
b({)573 3010 y(neuronInChl)e(=)c(n)h(<)g(i)f(?)h(n)f(:)h(-1;)432
3089 y(})432 3168 y(if)g(\(!multiOutputNodes\))41 b({)573
3247 y(neuronOutChl)e(=)d(n)f(+)h(\(o)g(-)f(t\);)573
3326 y(if)h(\(neuronOutChl)j(<)d(0)f(||)h(neuronOutChl)j(>=)d(o\))g({)
715 3404 y(neuronOutChl)i(=)e(-1;)573 3483 y(})432 3562
y(})432 3641 y(neurons.push_back\(Neur)q(on\(n)q(eur)q(onIn)q(put)q(s,)
41 b(neuronOutputs,)f(t,)1314 3720 y(neuronInChl,)f(neuronOutChl,)g
(this\)\);)291 3799 y(})291 3878 y(Reset\(\);)150 3957
y(})150 4114 y(void)d(DynamicalNet::Reset\(\))150 4193
y({)291 4272 y(fill\(neuronStates.begin)q(\(\),)42 b
(neuronStates.end\(\),)f(0.0f\);)150 4351 y(})150 4509
y(void)36 b(DynamicalNet::SetInput)q(Cha)q(nnel)q(\(in)q(t)41
b(neuron,)c(int)g(channel\))150 4588 y({)291 4666 y(if)f
(\(multiInputNodes)k(||)c(channel)h(<)f(0)432 4745 y(||)g(channel)h(>)f
(static_cast<int>\(inputs)q(.siz)q(e\(\))q(\)\))41 b(return;)291
4903 y(vector<Neuron>::iterato)q(r)g(i)36 b(=)f(neurons.begin\(\);)291
4982 y(for)h(\(;)g(i)g(!=)g(neurons.end\(\);)j(++i\))d({)432
5061 y(if)g(\(i->inputChannel)k(==)c(channel\))h({)573
5140 y(i->inputWeights.clear\()q(\);)432 5218 y(})291
5297 y(})291 5455 y(neurons[neuron].inputCh)q(ann)q(el)k(=)36
b(channel;)291 5534 y(neurons[neuron].inputWe)q(igh)q(ts)41
b(=)36 b(vector<float>\(1\);)150 5613 y(})p 150 5723
V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 268 276
268 275 bop -358 70 a Fq(268)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
412 a Fd(void)k(DynamicalNet::SetOutpu)q(tCh)q(anne)q(l\(i)q(nt)41
b(neuron,)d(int)e(channel\))150 490 y({)291 569 y(if)g
(\(multiInputNodes)k(||)c(channel)h(<)f(0)432 648 y(||)g(channel)h(>)f
(static_cast<int>\(output)q(s.si)q(ze\()q(\)\)\))42 b(return;)291
806 y(vector<Neuron>::iterato)q(r)f(i)36 b(=)f(neurons.begin\(\);)291
885 y(for)h(\(;)g(i)g(!=)g(neurons.end\(\);)j(++i\))d({)432
964 y(if)g(\(i->outputChannel)k(==)c(channel\))i({)573
1042 y(i->outputWeights.clear)q(\(\);)432 1121 y(})291
1200 y(})291 1358 y(neurons[neuron].outputC)q(han)q(nel)k(=)35
b(channel;)291 1437 y(neurons[neuron].outputW)q(eig)q(hts)42
b(=)35 b(vector<float>\(1\);)150 1516 y(})150 1673 y(void)h
(DynamicalNet::Randomis)q(e\(\))150 1752 y({)291 1831
y(for_each\(neurons.begin\()q(\),)42 b(neurons.end\(\),)d
(mem_fun_ref\(&Neuron::Ran)q(dom)q(ise\))q(\);)150 1910
y(})150 2068 y(void)d(DynamicalNet::Neuron::)q(Ran)q(domi)q(se\()q(\))
150 2147 y({)291 2226 y(generate\(inputWeights.b)q(egi)q(n\(\),)42
b(inputWeights.end\(\),)f(RandomNum\);)291 2304 y
(generate\(outputWeights.)q(beg)q(in\(\))q(,)g(outputWeights.end\(\),)g
(RandomNum\);)291 2383 y(generate\(weights.begin\()q(\),)h
(weights.end\(\))d(-)c(1,)h(RandomNum\);)291 2462 y(bias)h(=)e
(*\(weights.end\(\))40 b(-)35 b(2\);)291 2541 y(timeConstant)k(=)c
(randval\(69.0f\))40 b(+)35 b(1.0f;)291 2620 y(weights.back\(\))k(=)d
(static_cast<float>\(log\()q(stat)q(ic_)q(cast)q(<do)q(uble)q(>\(t)q
(imeC)q(ons)q(tant)q(\)\)\))q(;)150 2699 y(})150 2857
y(void)g(DynamicalNet::Fire\(\))150 2935 y({)291 3014
y(//)g(Clear)h(the)f(output)h(values)291 3093 y
(fill\(outputs.begin\(\),)k(outputs.end\(\),)f(0.0f\);)291
3251 y(//)c(Call)g(Fire)h(on)f(every)g(neuron)291 3330
y(for_each\(neurons.begin\()q(\),)42 b(neurons.end\(\),)d
(mem_fun_ref\(&Neuron::Fir)q(e\)\))q(;)291 3487 y(//)d(Store)h(the)f
(output)h(value)g(of)e(each)i(neuron)g(for)f(next)g(time.)291
3566 y(transform\(neurons.begin)q(\(\),)42 b(neurons.end\(\),)d
(neuronStates.begin\(\),)i(mem_fun_ref\(&Neuron::G)q(etOu)q(tpu)q
(t\)\);)150 3645 y(})150 3803 y(void)36 b(DynamicalNet::Neuron::)q(Fir)
q(e\(\))150 3882 y({)291 3961 y(//)g(Start)h(off)f(with)g(the)g
(negative)i(of)e(last)g(round's)i(activation.)291 4040
y(float)f(deltaActivation)i(=)d(-activation;)291 4197
y(//)g(Add)g(weighted)i(sum)e(of)g(the)g(other)h(neurons')g(**output**)
h(values)291 4276 y(//)e(\(output)h(value)g(=)f(sigmoid\(activation)k
(-)c(bias\))291 4355 y(deltaActivation)k(+=)c
(inner_product\(parent->neu)q(ron)q(Stat)q(es.)q(begi)q(n\(\))q(,)1456
4434 y(parent->neuronStates.end\()q(\),)1456 4513 y(weights.begin\(\),)
j(0.0f\);)291 4671 y(//)d(Apply)h(any)f(input)h(values)291
4749 y(//)f(...)g(if)g(there)h(is)f(no)f(particular)k(input)d(channel,)
291 4828 y(if)g(\(inputChannel)j(==)d(-1\))g({)432 4907
y(//)g(...)g(but)g(we)g(have)h(input)f(weights:)432 4986
y(if)g(\(!inputWeights.empty\(\)\))42 b({)573 5065 y(//)36
b(Add)g(a)g(weighted)i(sum)e(of)g(the)g(current)h(inputs)g(and)f(this)h
(neuron's)573 5144 y(//)f(input)h(weights.)573 5223 y(deltaActivation)j
(+=)c(inner_product\(parent->in)q(put)q(s.be)q(gin)q(\(\),)1738
5302 y(parent->inputs.end\(\),)1738 5380 y(inputWeights.begin\(\),)41
b(0.0f\);)432 5459 y(})291 5538 y(})p -358 5723 V -192
5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 269 277
269 276 bop 150 70 a Fq(12.2)31 b(DynamicalNet)g(source)g(co)s(de)2571
b(269)p 150 103 4034 4 v 291 333 a Fd(//)36 b(...)g(if)g(only)g(one)h
(input)f(channel)i(goes)e(to)g(this)g(node:)291 412 y(else)h({)432
490 y(//)f(Add)g(the)g(unweighted)j(input)d(value.)432
569 y(deltaActivation)k(+=)c(parent->inputs[inputChan)q(nel])q(;)291
648 y(})291 806 y(//)g(Divide)h(by)f(the)g(time)g(constant)291
885 y(deltaActivation)k(/=)c(timeConstant;)291 1042 y(//)g(And)g(add)g
(to)g(the)g(previous)i(activation)291 1121 y(activation)g(+=)e
(deltaActivation;)291 1279 y(//)g(Bias)g(and)h(squash)291
1358 y(output)g(=)f(Sigmoid\(activation)k(-)c(bias\);)291
1516 y(//)g(Send)g(output)h(values)g(\(if)g(this)f(or)g(all)g(neurons)h
(are)f(output)h(neurons\))291 1595 y(//)f(...)g(if)g(there)h(is)f(no)f
(particular)k(output)e(channel,)291 1673 y(if)f(\(outputChannel)j(==)d
(-1\))g({)432 1752 y(//)g(...)g(but)g(we)g(have)h(output)g(weights:)432
1831 y(if)f(\(!outputWeights.empty\(\))q(\))41 b({)573
1910 y(//)36 b(Add)g(the)h(neuron's)g(output)g(to)f(each)g(output)h
(channel,)h(weighted)g(by)573 1989 y(//)e(the)g(neuron's)i(output)f
(weights.)573 2068 y(vector<float>::iterato)q(r)k(i)36
b(=)f(parent->outputs.begin\()q(\),)1420 2147 y(j)h(=)f
(outputWeights.begin\(\);)573 2226 y(for)i(\(;)e(i)h(!=)g
(parent->outputs.end\(\);)41 b(++i,)c(++j\))f({)715 2304
y(*i)f(+=)h(*j)g(*)g(output;)573 2383 y(})432 2462 y(})291
2541 y(})291 2620 y(//)g(...)g(or)g(for)g(just)h(one)f(output)h
(neuron:)291 2699 y(else)g({)432 2778 y(parent->outputs[output)q(Chan)q
(nel)q(])k(+=)36 b(output;)291 2857 y(})150 2935 y(})150
3093 y(vector<float>)j(DynamicalNet::GetConfig)q(urat)q(ion)q(\(\)co)q
(nst)150 3172 y({)291 3251 y(vector<float>)g(config;)291
3330 y(vector<Neuron>::const_i)q(ter)q(ator)j(i)36 b(=)f
(neurons.begin\(\);)291 3409 y(for)h(\(;)g(i)g(!=)g(neurons.end\(\);)j
(++i\))d({)432 3487 y(i->GetConfiguration\(co)q(nfig)q(\);)291
3566 y(})291 3724 y(return)h(config;)150 3803 y(})150
3961 y(void)f(DynamicalNet::Neuron::)q(Get)q(Conf)q(igu)q(rati)q(on\()q
(vect)q(or<)q(floa)q(t>&)42 b(config\)const)150 4040
y({)291 4118 y(copy\(inputWeights.begin)q(\(\),)g
(inputWeights.end\(\),)f(back_inserter\(config\)\);)291
4197 y(copy\(outputWeights.begi)q(n\(\))q(,)g(outputWeights.end\(\),)g
(back_inserter\(config\)\);)291 4276 y(copy\(weights.begin\(\),)g
(weights.end\(\),)f(back_inserter\(config\)\);)150 4355
y(})150 4513 y(void)c(DynamicalNet::SetConfi)q(gur)q(atio)q(n\(c)q
(onst)42 b(vector<float>&)d(config\))150 4592 y({)291
4671 y(vector<Neuron>::iterato)q(r)i(i)36 b(=)f(neurons.begin\(\);)291
4749 y(vector<float>::const_it)q(era)q(tor)42 b(j)35
b(=)h(config.begin\(\);)291 4907 y(do)g({)432 4986 y(j)g(=)f
(i->SetConfiguration\(j\))q(;)291 5065 y(})h(while)g(\(++i)h(!=)f
(neurons.end\(\)\);)150 5144 y(})150 5302 y(vector<float>::const_it)q
(erat)q(or)150 5380 y(DynamicalNet::Neuron::S)q(etCo)q(nfi)q(gura)q
(tio)q(n\(ve)q(cto)q(r<fl)q(oat)q(>::c)q(ons)q(t_it)q(era)q(tor)42
b(config\))150 5459 y({)291 5538 y(//)36 b(First)h(come)f(the)g(input)h
(weights...)p 150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 270 278
270 277 bop -358 70 a Fq(270)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 291
333 a Fd(if)k(\(inputChannel)j(==)d(-1\))g({)432 412
y(copy\(config,)j(config)e(+)f(inputWeights.size\(\),)41
b(inputWeights.begin\(\)\);)432 490 y(config)c(+=)f
(inputWeights.size\(\);)291 569 y(})291 648 y(//)g(...)g(or)g(the)g
(input)h(weight...)291 727 y(else)g(if)e(\(!inputWeights.empty\(\))q
(\))41 b({)432 806 y(inputWeights.front\(\))g(=)36 b(*config;)432
885 y(++config;)291 964 y(})291 1121 y(//)g(Then)g(the)h(output)g
(weights...)291 1200 y(if)f(\(outputChannel)j(==)d(-1\))g({)432
1279 y(copy\(config,)j(config)e(+)f(outputWeights.size\(\),)41
b(outputWeights.begin\(\)\);)432 1358 y(config)c(+=)f
(outputWeights.size\(\);)291 1437 y(})291 1516 y(//)g(...)g(or)g(just)g
(one)h(output)g(weight...)291 1595 y(else)g(if)e
(\(!outputWeights.empty\()q(\)\))42 b({)432 1673 y
(outputWeights.front\(\))g(=)35 b(*config;)432 1752 y(++config;)291
1831 y(})291 1989 y(//)h(Then)g(the)h(remainder)g(are)g(the)f(internal)
h(weights)291 2068 y(copy\(config,)i(config)e(+)e(weights.size\(\),)40
b(weights.begin\(\)\);)291 2226 y(bias)d(=)e(*\(weights.end\(\))40
b(-)35 b(2\);)291 2304 y(timeConstant)k(=)c(static_cast<float>\(exp)q
(\(st)q(atic)q(_ca)q(st<d)q(oub)q(le>\()q(wei)q(ghts)q(.ba)q(ck\(\))q
(\)\)\))q(;)291 2462 y(if)h(\(timeConstant)j(<)d(1.0f\))g({)432
2541 y(timeConstant)j(=)d(1.0f)g(+)g(2)f(*)h(\(1.0f)g(-)g
(timeConstant\);)432 2620 y(weights.back\(\))k(=)35 b
(static_cast<float>\(log\()q(sta)q(tic_)q(cas)q(t<do)q(ubl)q(e>\(t)q
(ime)q(Cons)q(tan)q(t\)\)\))q(;)291 2699 y(})291 2857
y(return)i(config)g(+)f(weights.size\(\);)150 2935 y(})150
3093 y(void)g(DynamicalNet::Serialis)q(e\(o)q(stre)q(am&)42
b(out\)const)150 3172 y({)291 3251 y(out)36 b(<<)g("DynamicalNet\\n")
432 3330 y(<<)g(setprecision\(36\))432 3409 y(<<)g
(static_cast<int>\(inputs)q(.si)q(ze\(\))q(\))41 b(<<)36
b(endl)432 3487 y(<<)g(static_cast<int>\(output)q(s.s)q(ize\()q(\)\))42
b(<<)35 b(endl)432 3566 y(<<)h(static_cast<int>\(neuron)q(s.s)q(ize\()q
(\)\))42 b(<<)35 b(endl)432 3645 y(<<)h(\(multiInputNodes)k(?)c
("multi_in")i(:)d("single_in"\))k(<<)d(endl)432 3724
y(<<)g(\(multiOutputNodes)k(?)c("multi_out")i(:)e("single_out"\))j(<<)d
(endl;)291 3882 y(vector<float>)j(config)e(=)f(GetConfiguration\(\);)
291 3961 y(copy\(config.begin\(\),)41 b(config.end\(\),)e
(ostream_iterator<float>)q(\(ou)q(t,)i("\\n"\)\);)150
4040 y(})150 4197 y(void)36 b(DynamicalNet::Unserial)q(ise)q(\(ist)q
(rea)q(m&)41 b(in\))150 4276 y({)291 4355 y(string)c(name;)291
4434 y(in)f(>>)g(name;)291 4513 y(if)g(\(name)h(!=)f("DynamicalNet"\))j
({)432 4592 y(throw)e(SerialException\(SERIAL_)q(ERRO)q(R_W)q(RONG)q
(_TY)q(PE,)42 b(name,)1209 4671 y("This)36 b(object)h(is)f(type)h
(DynamicalNet"\);)291 4749 y(})291 4907 y(int)f(i,)g(o,)g(t;)291
4986 y(bool)h(mi,)f(mo;)291 5144 y(in)g(>>)g(i)f(>>)h(o)g(>>)g(t)f(>>)h
(switcher\("multi_in",)41 b(mi\))36 b(>>)g(switcher\("multi_out",)41
b(mo\);)291 5223 y(Init\(i,)c(o,)f(t,)g(mi,)g(mo\);)291
5380 y(vector<float>)j(config\(GetConfiguration)q(Len)q(gth\()q(\)\);)
291 5459 y(copy_from_istream\(confi)q(g.b)q(egin)q(\(\),)j
(config.end\(\),)d(in\);)291 5538 y(SetConfiguration\(config)q(\);)p
-358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 271 279
271 278 bop 150 70 a Fq(12.2)31 b(DynamicalNet)g(source)g(co)s(de)2571
b(271)p 150 103 4034 4 v 150 333 a Fd(})150 490 y(string)37
b(DynamicalNet::ToString\()q(\)con)q(st)150 569 y({)291
648 y(ostringstream)i(out;)291 727 y(ostream_iterator<float>)j
(outIter\(out,)d(")c("\);)291 885 y(out)h(<<)g("Input)h(values:")h(<<)e
(endl;)291 964 y(copy\(inputs.begin\(\),)41 b(inputs.end\(\),)e
(outIter\);)291 1042 y(out)d(<<)g(endl)h(<<)e("Output)j(values:")f(<<)f
(endl;)291 1121 y(copy\(outputs.begin\(\),)41 b(outputs.end\(\),)f
(outIter\);)291 1200 y(out)c(<<)g(endl)h(<<)e("Activation)k(states:")e
(<<)f(endl;)291 1279 y(copy\(neuronStates.begin)q(\(\),)42
b(neuronStates.end\(\),)f(outIter\);)291 1358 y(out)36
b(<<)g(endl)h(<<)e("Neurons:")k(<<)c(endl;)291 1437 y
(transform\(neurons.begin)q(\(\),)42 b(neurons.end\(\),)644
1516 y(ostream_iterator<string)q(>\(ou)q(t,)g("\\n"\),)644
1595 y(mem_fun_ref\(&Neuron::To)q(Stri)q(ng\))q(\);)291
1673 y(out)36 b(<<)g(endl;)291 1831 y(return)h(out.str\(\);)150
1910 y(})150 2068 y(string)g(DynamicalNet::Neuron::T)q(oStr)q(ing)q
(\(\)co)q(nst)150 2147 y({)291 2226 y(ostringstream)i(out;)291
2304 y(ostream_iterator<float>)j(outIter\(out,)d(")c("\);)291
2462 y(if)h(\(!inputWeights.empty\(\)\))42 b({)432 2541
y(out)36 b(<<)g("Input)h(weight\(s\):")i(<<)d(endl;)432
2620 y(copy\(inputWeights.begi)q(n\(\),)42 b(inputWeights.end\(\),)f
(outIter\);)432 2699 y(out)36 b(<<)g(endl;)291 2778 y(})291
2857 y(out)g(<<)g("Hidden)h(layer)g(weight\(s\):")i(<<)c(endl;)291
2935 y(copy\(weights.begin\(\),)41 b(weights.end\(\))e(-)d(2,)g
(outIter\);)291 3014 y(out)g(<<)g(endl)h(<<)e("Bias:)i(")f(<<)g(bias)g
(<<)g(")g(Time)g(constant:)i(")e(<<)f(timeConstant)432
3093 y(<<)h(endl;)291 3172 y(if)g(\(!outputWeights.empty\(\))q(\))41
b({)432 3251 y(out)36 b(<<)g("Output)i(weight\(s\):")g(<<)e(endl;)432
3330 y(copy\(outputWeights.beg)q(in\(\))q(,)41 b
(outputWeights.end\(\),)g(outIter\);)432 3409 y(out)36
b(<<)g(endl;)291 3487 y(})291 3645 y(return)h(out.str\(\);)150
3724 y(})150 3882 y(int)f(DynamicalNet::GetConfig)q(ura)q(tion)q(Len)q
(gth\()q(\)co)q(nst)150 3961 y({)291 4040 y(int)g(numNeurons)i(=)e
(static_cast<int>\(neuron)q(s.si)q(ze\()q(\)\),)432 4118
y(numInputs)73 b(=)36 b(static_cast<int>\(inputs)q(.siz)q(e\(\))q(\),)
432 4197 y(numOutputs)i(=)e(static_cast<int>\(output)q(s.si)q(ze\()q
(\)\);)291 4355 y(return)h(numNeurons)h(*)e(numNeurons)432
4434 y(+)g(\(multiInputNodes)k(?)35 b(numNeurons)j(*)e(numInputs)i(:)d
(0\))432 4513 y(+)h(\(multiOutputNodes)k(?)c(numNeurons)i(*)d
(numOutputs)j(:)e(0\);)150 4592 y(})150 4749 y(ostream&)i
(operator<<\(ostream&)i(out,)d(const)f(DynamicalNet&)j(dnn\))150
4828 y({)291 4907 y(dnn.Serialise\(out\);)291 4986 y(return)e(out;)150
5065 y(})150 5223 y(istream&)h(operator>>\(istream&)i(in,)c
(DynamicalNet&)j(dnn\))150 5302 y({)291 5380 y(dnn.Unserialise\(in\);)
291 5459 y(return)e(in;)150 5538 y(})p 150 5723 V 150
5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 272 280
272 279 bop -358 70 a Fq(272)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
412 a Fd(})k(//)f(namespace)j(BEAST)p -358 5723 V -192
5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)
h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 273 281
273 280 bop 150 70 a Fq(12.3)31 b(Bacterium)f(source)i(co)s(de)2735
b(273)p 150 103 4034 4 v 150 333 a Fl(12.3)136 b(Bacterium)45
b(source)g(co)t(de)150 565 y Fd(#include)38 b("bacterium.h")150
723 y(using)f(namespace)h(std;)150 881 y(namespace)g(BEAST)f({)150
1038 y(Bacterium::Bacterium\(\):)150 1117 y(reproductionCost\(0.4\),)
150 1196 y(energyRate\(0.005\),)150 1275 y(sporeEnergyRate\(0.01\),)150
1354 y(attractantCost\(0.01\),)k(repellentCost\(0.01\),)150
1433 y(deathThreshold\(0.0\),)150 1512 y(tumbleTime\(10.0\),)f
(tumbleScale\(10.0\),)150 1590 y(reproductionThreshold\(0)q(.4\),)150
1669 y(sporulationThreshold\(0.)q(25\),)150 1748 y
(consumptionRate\(0.1\),)h(attractantRate\(0.5\),)g
(repellentRate\(4.0\),)150 1827 y(swarmRadius\(20.0\),)f
(swarmInfluence\(0.5\),)150 1906 y(gradientInfluence\(0.8\),)150
1985 y(nutrientResponse\(0.8\),)i(attractantResponse\(0.8\),)g
(repellentResponse\(0.8\),)150 2064 y(attractantThreshold\(0.5)q(\),)f
(repellentThreshold\(0.5)q(\),)150 2143 y(nutrientDist\(NULL\),)g
(attractantDist\(NULL\),)150 2221 y(repellentDist\(NULL\),)g
(trailDist\(NULL\),)150 2300 y(energy\(1.0\),)e(totalEnergy\(0.1\),)h
(lastNutrient\(0.0\),)150 2379 y(currentNutrient\(0.0\),)h
(currentAttractant\(0.0\))q(,)g(currentRepellent\(0.0\),)150
2458 y(nextCheck\(0\),)e(swarmSize\(0\))150 2537 y({)291
2616 y(SetInitRandom\(true\);)291 2695 y(SetSpeed\(40.0\);)150
2773 y(})150 2931 y(Bacterium::~Bacterium\(\))150 3010
y({)291 3089 y(for_each\(offspring.begi)q(n\(\))q(,)i
(offspring.end\(\),)f(deleter<Bacterium>\(\)\);)150 3168
y(})150 3326 y(void)c(Bacterium::Update\(\))150 3404
y({)291 3483 y(CheckBoundary\(\);)291 3562 y(ReadDistributions\(\);)291
3641 y(UpdateDistributions\(\);)291 3799 y(SetVelocity\(\(1.0)k(-)c
(gradientInfluence\))k(*)c(GetVelocity\(\))j(+)609 3878
y(gradientInfluence)h(*)609 3957 y(\()35 b(nutrientResponse)40
b(*)c(GetNutrientGradient\(\))609 4035 y(+)f(attractantResponse)41
b(*)35 b(GetAttractantGradient\()q(\))609 4114 y(-)g(repellentResponse)
40 b(*)c(GetRepellentGradient\(\)\))q(\);)291 4193 y
(SetVelocity\(\(1.0)k(-)c(swarmInfluence\))j(*)d(GetVelocity\(\))609
4272 y(+)f(swarmInfluence)40 b(*)35 b(GetSwarmVelocity\(\)\);)291
4430 y(GetVelocity\(\).SetLength)q(\(Ge)q(tMax)q(Spe)q(ed\(\))q(\);)291
4588 y(UpdateEnergy\(\);)291 4745 y(//)h(Apply)h(velocity)g(changes)h
(and)e(clean)g(up.)291 4824 y(FinishUpdate\(\);)150 4903
y(})150 5061 y(void)g(Bacterium::CheckBounda)q(ry\()q(\))150
5140 y({)291 5218 y(if)g(\(GetLocation\(\).x)k(<=)c(0.0\))g({)432
5297 y(SetVelocityX\(-GetVeloc)q(ity\()q(\).x)q(\);)432
5376 y(SetLocationX\(0.0\);)41 b(})291 5455 y(if)36 b
(\(GetLocation\(\).x)k(>=)c(GetWorld\(\).GetWidth\(\)\))41
b({)432 5534 y(SetVelocityX\(-GetVeloc)q(ity\()q(\).x)q(\);)432
5613 y(SetLocationX\(GetWorld\()q(\).Ge)q(tWi)q(dth\()q(\))g(-)36
b(1.0\);)h(})p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 274 282
274 281 bop -358 70 a Fq(274)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 291
333 a Fd(if)k(\(GetLocation\(\).y)k(<=)c(0.0\))g({)432
412 y(SetVelocityY\(-GetVeloc)q(ity\()q(\).y)q(\);)432
490 y(SetLocationY\(0.0\);)41 b(})291 569 y(if)36 b
(\(GetLocation\(\).y)k(>=)c(GetWorld\(\).GetHeight\(\)\))42
b({)432 648 y(SetVelocityY\(-GetVeloc)q(ity\()q(\).y)q(\);)432
727 y(SetLocationY\(GetWorld\()q(\).Ge)q(tHe)q(ight)q(\(\))g(-)35
b(1.0\);)i(})150 806 y(})150 964 y(void)f(Bacterium::ReadDistrib)q(uti)
q(ons\()q(\))150 1042 y({)291 1121 y(if)g(\(nutrientDist)j(!=)d(NULL\))
h(currentNutrient)i(=)d(nutrientDist->GetDensity)q(\(Get)q(Loc)q(atio)q
(n\(\)\))q(;)291 1200 y(if)g(\(attractantDist)k(!=)35
b(NULL\))i(currentAttractant)j(=)c(attractantDist->GetDensi)q(ty\()q
(GetL)q(ocat)q(ion)q(\(\)\);)291 1279 y(if)g(\(repellentDist)j(!=)d
(NULL\))h(currentRepellent)j(=)35 b(repellentDist->GetDens)q(ity\()q
(Get)q(Loca)q(tion)q(\(\)\))q(;)150 1358 y(})150 1516
y(void)h(Bacterium::UpdateDistr)q(ibu)q(tion)q(s\(\))150
1595 y({)291 1673 y(if)g(\(nutrientDist)j(!=)d(NULL\))h({)432
1831 y(double)g(amount)g(=)f(consumptionRate)j(<=)d(currentNutrient)k
(?)35 b(consumptionRate)40 b(:)c(currentNutrient;)432
1910 y(energy)h(+=)f(amount;)432 1989 y(totalEnergy)j(+=)d(amount;)432
2068 y(nutrientDist->AddDensi)q(ty\(G)q(etL)q(ocat)q(ion)q(\(\),)42
b(static_cast<DistReal>\(-a)q(moun)q(t\)\))q(;)432 2226
y(if)71 b(\(!isSpore\))39 b({)573 2304 y(if)d(\(currentNutrient)k(>=)c
(attractantThreshold\))41 b(ReleaseAttractant\(\);)573
2383 y(if)36 b(\(currentNutrient)k(<)c(repellentThreshold\))k
(ReleaseRepellent\(\);)432 2462 y(})291 2541 y(})291
2699 y(if)c(\(trailDist)i(!=)e(NULL\))h({)432 2778 y(if)f
(\(trailDist->GetDensity\()q(Get)q(Loca)q(tio)q(n\(\)\))42
b(<=)36 b(0.0\))573 2857 y(trailDist->SetDensity\()q(Get)q(Loca)q(tio)q
(n\(\),)42 b(0.5\);)291 2935 y(})150 3014 y(})150 3172
y(void)36 b(Bacterium::ReleaseAttr)q(act)q(ant\()q(\))150
3251 y({)291 3330 y(if)g(\(attractantDist)k(==)35 b(NULL\))i(return;)
291 3487 y(double)g(amount)g(=)f(currentNutrient)j(*)d(attractantRate;)
291 3566 y(double)h(cost)g(=)e(amount)i(*)f(attractantCost;)291
3724 y(if)g(\(energy)h(>=)f(cost\))h(energy)g(-=)f(cost;)291
3803 y(else)h({)432 3882 y(amount)g(=)f(energy)h(/)e(attractantCost;)
432 3961 y(energy)i(=)f(0.0;)291 4040 y(})291 4197 y
(attractantDist->AddDens)q(ity)q(\(Get)q(Loc)q(atio)q(n\(\))q(,)41
b(static_cast<DistReal>\(a)q(mou)q(nt\)\))q(;)150 4276
y(})150 4434 y(void)36 b(Bacterium::ReleaseRepe)q(lle)q(nt\(\))150
4513 y({)291 4592 y(if)g(\(repellentDist)j(==)d(NULL\))h(return;)291
4749 y(double)g(amount)g(=)f(\(repellentThreshold)k(-)c
(\(repellentThreshold)41 b(-)35 b(currentNutrient\)\))785
4828 y(/)h(repellentThreshold)k(*)c(repellentRate;)291
4907 y(double)h(cost)g(=)e(amount)i(*)f(repellentCost;)291
5065 y(if)g(\(energy)h(>=)f(cost\))h(energy)g(-=)f(cost;)291
5144 y(else)h({)432 5223 y(//)f(If)g(the)g(amount)h(is)f(too)g
(expensive,)i(release)g(as)d(much)i(as)f(possible.)432
5302 y(amount)h(=)f(energy)h(/)e(repellentCost;)432 5380
y(energy)i(=)f(0.0;)291 5459 y(})p -358 5723 V -192 5823
a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 275 283
275 282 bop 150 70 a Fq(12.3)31 b(Bacterium)f(source)i(co)s(de)2735
b(275)p 150 103 4034 4 v 291 333 a Fd(repellentDist->AddDensi)q(ty\()q
(GetL)q(oca)q(tion)q(\(\),)42 b(static_cast<DistReal>\(am)q(oun)q
(t\)\);)150 412 y(})150 569 y(Vector2D)c(Bacterium::GetSwarmVeloci)q
(ty\()q(\))150 648 y({)291 727 y(return)f(swarmSize)h(>)e(0)432
806 y(?)g(swarmTotalVel)j(*=)d(1.0)g(/)f(static_cast<double>\(sw)q(arm)
q(Size)q(\))432 885 y(:)h(GetVelocity\(\);)150 964 y(})150
1121 y(Vector2D)i(Bacterium::GetTumblingVel)q(oci)q(ty\(\))150
1200 y({)291 1279 y(--nextCheck;)291 1358 y(if)e(\(nextCheck)i(<=)e
(0\))g({)432 1437 y(SetNextCheck\(\);)432 1516 y(if)g(\(nextCheck)i(<=)
e(0\))g(tumblingVelocity.SetAng)q(le\(r)q(and)q(val\()q(TWO)q(PI\)\))q
(;)291 1595 y(})291 1673 y(return)h(tumblingVelocity;)150
1752 y(})150 1910 y(Vector2D)h(Bacterium::GetNutrientGra)q(die)q
(nt\(\))150 1989 y({)291 2068 y(return)f(nutrientDist)i(!=)d(NULL)432
2147 y(?)g(nutrientDist->GetGradien)q(t\(G)q(etLo)q(cat)q(ion\()q
(\)\).)q(GetN)q(orm)q(alis)q(ed\()q(\))432 2226 y(:)g(Vector2D\(0.0,)j
(0.0\);)150 2304 y(})150 2462 y(Vector2D)f(Bacterium::GetAttractantG)q
(rad)q(ient)q(\(\))150 2541 y({)291 2620 y(return)f(attractantDist)i
(!=)d(NULL)432 2699 y(?)g(attractantDist->GetGradi)q(ent)q(\(Get)q(Loc)
q(atio)q(n\(\))q(\).Ge)q(tNo)q(rmal)q(ise)q(d\(\))432
2778 y(:)g(Vector2D\(0.0,)j(0.0\);)150 2857 y(})150 3014
y(Vector2D)f(Bacterium::GetRepellentGr)q(adi)q(ent\()q(\))150
3093 y({)291 3172 y(return)f(repellentDist)i(!=)d(NULL)432
3251 y(?)g(repellentDist->GetGradie)q(nt\()q(GetL)q(oca)q(tion)q
(\(\)\))q(.Get)q(Nor)q(mali)q(sed)q(\(\))432 3330 y(:)g(Vector2D\(0.0,)
j(0.0\);)150 3409 y(})150 3566 y(void)d(Bacterium::UpdateEnerg)q(y\(\))
150 3645 y({)291 3724 y(if)g(\(!isSpore\))i(energy)f(-=)f(energyRate)i
(*)e(fabs\(GetMaxSpeed\(\)\);)291 3803 y(energy)h(-=)f
(sporeEnergyRate;)291 3961 y(//)g(Sporulate)i(depending)g(on)e(energy.)
291 4040 y(isSpore)h(=)f(energy)h(<=)f(sporulationThreshold;)291
4197 y(//)g(Ensure)h(energy)g(never)g(goes)f(below)291
4276 y(if)g(\(energy)h(<=)f(0.0\))h(energy)g(=)e(0.0;)291
4434 y(//)h(If)g(the)g(energy)h(level)g(is)f(below)g(the)g
(deathThreshold,)k(die)c(next)h(frame.)291 4513 y(if)f(\(energy)h(<=)f
(deathThreshold\))k({)432 4592 y(if)c(\(trailDist)i(!=)e(NULL\))h
(trailDist->SetDensity\(Ge)q(tLo)q(cati)q(on\()q(\),)k(1.0\);)432
4671 y(SetDead\(true\);)291 4749 y(})291 4907 y(//)36
b(If)g(there)h(is)e(enough)i(energy)g(to)f(reproduce,)i(do)e(so.)291
4986 y(if)g(\(energy)h(>=)f(reproductionThreshold)41
b(&&)432 5065 y(energy)c(>=)f(reproductionCost\))k(Reproduce\(\);)150
5144 y(})150 5302 y(void)c(Bacterium::FinishUpdat)q(e\(\))150
5380 y({)291 5459 y(//)g(Update)h(the)f(location)i(with)e(the)g
(velocity.)291 5538 y(OffsetLocation\(GetVeloc)q(ity)q(\(\))41
b(*)36 b(GetTimeStep\(\)\);)p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 276 284
276 283 bop -358 70 a Fq(276)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 291
412 a Fd(swarmSize)38 b(=)e(0;)291 490 y(swarmTotalVel.x)k(=)35
b(swarmTotalVel.y)40 b(=)35 b(0.0;)150 569 y(})150 727
y(void)h(Bacterium::Interact\(Wo)q(rld)q(Obje)q(ct*)42
b(obj\))150 806 y({)291 885 y(if)36 b(\(dynamic_cast<Distribut)q(ion*)q
(>\(o)q(bj\)\))42 b(return;)291 964 y(Animat::Interact\(obj\);)150
1042 y(})150 1200 y(void)36 b(Bacterium::UniInteract)q(\(Wo)q(rldO)q
(bje)q(ct*)42 b(obj\))150 1279 y({)291 1358 y(Bacterium*)c(b;)291
1437 y(if)e(\(IsKindOf\(obj,)j(b\))d(&&)g(\(b->GetLocation\(\))k(-)c
(GetLocation\(\)\).GetLength)q(Squa)q(red)q(\(\))1138
1516 y(<)g(\(swarmRadius)i(*)e(swarmRadius\)\))j({)432
1595 y(swarmTotalVel)g(+=)d(b->GetVelocity\(\);)432 1673
y(++swarmSize;)291 1752 y(})291 1910 y(Animat::UniInteract\(obj)q(\);)
150 1989 y(})150 2147 y(void)g(Bacterium::SetNextChec)q(k\(\))150
2226 y({)291 2304 y(double)72 b(gradNutrient)39 b(=)d(currentNutrient)j
(-)d(lastNutrient,)573 2383 y(gradAttractant)k(=)35 b
(currentAttractant)40 b(-)c(lastAttractant,)573 2462
y(gradRepellent)j(=)d(currentRepellent)k(-)35 b(lastRepellent;)291
2620 y(nextCheck)j(=)e(static_cast<int>\(tumbleTi)q(me)1279
2699 y(+)g(gradNutrient)i(*)e(tumbleScale)i(*)e(tumbleTime)1279
2778 y(+)g(gradAttractant)j(*)d(attractantResponse)k(*)c(tumbleTime)
1279 2857 y(-)g(gradRepellent)j(*)c(repellentResponse)40
b(*)c(tumbleTime\);)291 3014 y(lastNutrient)j(=)c(currentNutrient;)150
3093 y(})150 3251 y(void)h(Bacterium::Reproduce\(\))150
3330 y({)291 3409 y(energy)h(-=)f(reproductionCost;)291
3487 y(energy)h(/=)f(2.0;)291 3566 y(Bacterium*)i(baby)f(=)e(new)h
(Bacterium\(*this\);)291 3724 y(double)h(o)f(=)f(randval\(TWOPI\);)291
3803 y(SetLocation\(Vector2D\(Ge)q(tLo)q(cati)q(on\()q(\),)41
b(GetRadius\(\),)e(o\)\);)291 3882 y(baby->SetLocation\(Vecto)q(r2D)q
(\(Get)q(Loc)q(atio)q(n\(\))q(,)i(-GetRadius\(\),)e(o\)\);)291
4040 y(baby->Reset\(\);)291 4118 y(GetWorld\(\).Add\(baby\);)291
4197 y(offspring.push_back\(bab)q(y\);)150 4276 y(})150
4434 y(void)d(Bacterium::GetOffsprin)q(g\(s)q(td::)q(lis)q(t<Ba)q(cte)q
(rium)q(*>&)42 b(babies\)const)150 4513 y({)291 4592
y(std::list<Bacterium*>::)q(con)q(st_i)q(ter)q(ator)g(i)36
b(=)f(offspring.begin\(\);)291 4749 y(for)h(\(;)g(i)g(!=)g
(offspring.end\(\);)j(++i\))e({)432 4828 y(babies.push_back\(*i\);)432
4907 y(\(*i\)->GetOffspring\(bab)q(ies\))q(;)291 4986
y(})150 5065 y(})150 5223 y(std::list<Bacterium*>)k
(Bacterium::GetOffsprin)q(g\(\)c)q(ons)q(t)150 5302 y({)291
5380 y(std::list<Bacterium*>)g(result;)291 5459 y
(GetOffspring\(result\);)291 5538 y(return)c(result;)p
-358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 277 285
277 284 bop 150 70 a Fq(12.3)31 b(Bacterium)f(source)i(co)s(de)2735
b(277)p 150 103 4034 4 v 150 333 a Fd(})150 490 y(void)36
b(Bacterium::GetOffsprin)q(g\(s)q(td::)q(lis)q(t<Ba)q(cte)q(rium)42
b(const*>&)c(babies\)const)150 569 y({)291 648 y
(std::list<Bacterium*>::)q(con)q(st_i)q(ter)q(ator)k(i)36
b(=)f(offspring.begin\(\);)291 806 y(for)h(\(;)g(i)g(!=)g
(offspring.end\(\);)j(++i\))e({)432 885 y(babies.push_back\(*i\);)432
964 y(\(*i\)->GetOffspring\(bab)q(ies\))q(;)291 1042
y(})150 1121 y(})150 1279 y(string)g(Bacterium::ToString\(\)co)q(nst)
150 1358 y({)291 1437 y(ostringstream)i(out;)291 1516
y(out)d(<<)g("N:)g(")g(<<)g(currentNutrient)j(<<)d(")g(A:)g(")f(<<)h
(currentAttractant)432 1595 y(<<)g(")g(R:)g(")f(<<)h(currentRepellent)k
(<<)c(")f(E:)h(")g(<<)g(energy)432 1673 y(<<)g(")g(T:)g(")f(<<)h
(totalEnergy;)291 1752 y(return)h(out.str\(\);)150 1831
y(})150 1989 y(void)f(Bacterium::OnClick\(\))150 2068
y({)291 2147 y(GetLogStream\(\))291 2226 y(<<)g("Reproduction)j
(threshold:)f(")106 b(<<)36 b(reproductionThreshold)41
b(<<)36 b('\\n')291 2304 y(<<)g("Consumption)j(rate:)d(")318
b(<<)36 b(consumptionRate)k(<<)c('\\n')291 2383 y(<<)g("Attractant)i
(rate:)f(")353 b(<<)36 b(attractantRate)j(<<)d('\\n')291
2462 y(<<)g("Repellent)i(rate:)f(")388 b(<<)36 b(repellentRate)j(<<)d
('\\n')291 2541 y(<<)g("Swarm)h(radius:)g(")459 b(<<)36
b(swarmRadius)j(<<)c('\\n')291 2620 y(<<)h("Swarm)h(influence:)h(")353
b(<<)36 b(swarmInfluence)j(<<)d('\\n')291 2699 y(<<)g("Gradient)i
(influence:)g(")247 b(<<)36 b(gradientInfluence)k(<<)c('\\n')291
2778 y(<<)g("Nutrient)i(response:)g(")282 b(<<)36 b(nutrientResponse)k
(<<)c('\\n')291 2857 y(<<)g("Attractant)i(response:)g(")212
b(<<)36 b(attractantResponse)41 b(<<)35 b('\\n')291 2935
y(<<)h("Repellent)i(response:)g(")247 b(<<)36 b(repellentResponse)k(<<)
c('\\n')291 3014 y(<<)g("Attractant)i(threshold:)h(")176
b(<<)36 b(attractantThreshold)41 b(<<)36 b('\\n')291
3093 y(<<)g("Repellent)i(threshold:)g(")212 b(<<)36 b
(repellentThreshold)41 b(<<)35 b('\\n')291 3172 y(<<)h("Radius:)i(")670
b(<<)36 b(GetRadius\(\))j(<<)c('\\n')291 3251 y(<<)h("Speed:)h(")706
b(<<)36 b(GetSpeed\(\))i(<<)e("\\n\\n";)150 3330 y(})150
3487 y(})g(//)f(namespace)j(BEAST)p 150 5723 V 150 5823
a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 278 286
278 285 bop -358 70 a Fq(278)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(12.4)136 b(Braiten)l(b)t(erg)45 b(source)g(co)t(de)150
565 y Fd(//)36 b(Vim)g(users:)h(for)f(increased)i(viewing)f(pleasure)h
(:set)e(ts=4)150 723 y(#include)i("beast.h")150 802 y(#include)g
("animat.h")150 881 y(#include)g("sensor.h")150 1038
y(using)f(namespace)h(BEAST;)150 1196 y(//)e(Dots)g(are)g(just)h
(WorldObjects)i(with)d(the)g(colour)h(set)f(to)g(yellow)h(and)f(the)150
1275 y(//)g(radius)h(set)f(to)g(10.)g(The)g(constructor)j(just)d
(allows)h(you)f(to)g(specify)h(a)150 1354 y(//)f(location.)i(Dot)e
(relies)h(on)f(the)g(default)h(non-solid)h(setting)f(for)150
1433 y(//)f(WorldObject,)j(which)d(means)h(that)f(instead)i(of)e
(bumping)h(into)f(Dots,)h(Animats)150 1512 y(//)f(slide)h(over)f(them.)
150 1590 y(class)h(Dot)f(:)f(public)i(WorldObject)150
1669 y({)150 1748 y(public:)291 1827 y(Dot\(Vector2D)i(l)c(=)h
(Vector2D\(\)\):WorldObject)q(\(l,)42 b(0.0,)36 b
(10.0\){SetColour\(ColourP)q(ale)q(tte[)q(COLO)q(UR_)q(YELL)q(OW])q
(\);})291 1906 y(virtual)h(~Dot\(\){})291 2064 y(//)f(This)g(simply)h
(adjusts)h(the)e(standard)h(serialisation)i(\(save)e(to)f(file\))h
(code)291 2143 y(//)f(so)g(that)g(the)g(object)h(remembers)h(it's)f(a)e
('Dot',)i(rather)g(than)g(a)291 2221 y(//)f('WorldObject')j(-)d(since)g
(there)h(are)f(no)g(properties)i(in)e(Dot)g(which)291
2300 y(//)g(WorldObject)i(doesn't)g(have,)e(it's)h(not)f(necessary)i
(to)e(add)g(any)g(new)291 2379 y(//)g(serialisation)j(code.)291
2458 y(IMPLEMENT_SERIALISATION)q(\("D)q(ot",)j(WorldObject\))150
2537 y(};)150 2695 y(//)36 b(Braitenberg)i(is)e(a)g(basic)g(bot)h
(inherited)g(from)g(the)f(Animat)h(class,)g(with)f(two)150
2773 y(//)g(sensors)h(representing)i(the)d(Braitenberg's)j(left)d(and)h
(right)f(light)h(sensors,)150 2852 y(//)f(a)f(radius)i(of)f(10)g(and)g
(a)g(minimum)h(speed)g(of)f(0,)g(ensuring)h(that)g(the)f(Braitenberg)
150 2931 y(//)g(does)g(not)g(go)g(backwards)i(when)f(its)f(control)h
(output)g(is)f(0.)150 3010 y(class)h(Braitenberg)h(:)e(public)h(Animat)
150 3089 y({)150 3168 y(public:)291 3247 y(Braitenberg\(\))291
3326 y({)432 3404 y(This.Add\("left",)j(ProximitySensor<Dot>\(PI)q(/2,)
i(75.0,)37 b(-1\)\);)432 3483 y(This.Add\("right",)j
(ProximitySensor<Dot>\(P)q(I/2)q(,)h(75.0,)c(1\)\);)432
3641 y(This.SetInitRandom\(tru)q(e\);)432 3799 y
(This.SetMinSpeed\(0.0\);)432 3878 y(This.SetMaxSpeed\(95.0\))q(;)432
4035 y(This.Radius)i(=)c(10.0;)291 4114 y(})150 4193
y(};)150 4351 y(//)h(This)g(is)g(a)g(Braitenberg)i(with)f(the)f
(control)h(function)h(overloaded)g(so)e(that)g(the)150
4430 y(//)g(left)g(sensor)h(feeds)g(the)f(left)h(motor,)g(and)f(the)g
(right)h(sensor)g(feeds)f(the)g(right)150 4509 y(//)g(motor.)150
4588 y(class)h(Braitenberg2a)i(:)c(public)i(Braitenberg)150
4666 y({)150 4745 y(public:)291 4824 y(virtual)g(void)g(Control\(\))291
4903 y({)432 4982 y(This.Controls["left"])42 b(=)35 b
(This.Sensors["left"]->G)q(etO)q(utpu)q(t\(\))q(;)432
5061 y(This.Controls["right"])42 b(=)35 b(This.Sensors["right"]-)q(>Ge)
q(tOut)q(put)q(\(\);)291 5140 y(})150 5218 y(};)150 5297
y(#include)j(<map>)150 5376 y(//)e(This)g(is)g(a)g(Braitenberg)i(with)f
(the)f(control)h(function)h(overloaded)g(so)e(that)g(the)150
5455 y(//)g(left)g(sensor)h(feeds)g(the)f(right)h(motor,)g(and)f(the)g
(right)h(sensor)g(feeds)g(the)f(left)150 5534 y(//)g(motor.)150
5613 y(class)h(Braitenberg2b)i(:)c(public)i(Braitenberg)p
-358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 279 287
279 286 bop 150 70 a Fq(12.4)31 b(Braiten)m(b)s(erg)g(source)h(co)s(de)
2673 b(279)p 150 103 4034 4 v 150 333 a Fd({)150 412
y(public:)291 490 y(virtual)37 b(void)g(Control\(\))291
569 y({)432 648 y(This.Controls["left"])42 b(=)35 b
(This.Sensors["right"]->)q(Get)q(Outp)q(ut\()q(\);)432
727 y(This.Controls["right"])42 b(=)35 b(This.Sensors["left"]->)q(Get)q
(Outp)q(ut\()q(\);)291 806 y(})150 885 y(};)150 1042
y(//)h(Sets)g(up)g(a)g(simple)h(simulation)h(with)e(a)g(series)h(of)f
(positioned)i(dots)e(and)g(two)150 1121 y(//)g(Braitenberg)i(vehicles.)
150 1200 y(class)f(BraitenbergSimulation)k(:)36 b(public)h(Simulation)
150 1279 y({)291 1358 y(Group<WorldObject>)k(ExampleWorld;)150
1516 y(public:)291 1595 y(BraitenbergSimulation\(\))291
1673 y({)432 1752 y(//)36 b(We)g(set)g(up)g(the)g(ExampleWorld)j(by)d
(filling)h(it)f(with)g(instances)i(of)432 1831 y(//)e(the)g(two)g
(types)h(of)f(Braitenbergs.)432 1910 y(ExampleWorld.push_back)q(\(new)
42 b(Braitenberg2a\);)432 1989 y(ExampleWorld.push_back)q(\(new)g
(Braitenberg2b\);)432 2147 y(//)36 b(Now)g(the)g(Dots)h(are)f(added,)h
(initialised)h(with)f(their)g(locations)g(in)432 2226
y(//)f(the)g(world.)432 2304 y(ExampleWorld.push_back)q(\(new)42
b(Dot\(Vector2D\(150.0,)f(100.0\)\)\);)432 2383 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(200.0,)f(100.0\)\)\);)
432 2462 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(250.0,)f
(100.0\)\)\);)432 2541 y(ExampleWorld.push_back)q(\(new)h
(Dot\(Vector2D\(300.0,)f(100.0\)\)\);)432 2620 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(350.0,)f(100.0\)\)\);)
432 2699 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(400.0,)f
(100.0\)\)\);)432 2778 y(ExampleWorld.push_back)q(\(new)h
(Dot\(Vector2D\(400.0,)f(150.0\)\)\);)432 2857 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(400.0,)f(200.0\)\)\);)
432 2935 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(400.0,)f
(250.0\)\)\);)432 3014 y(ExampleWorld.push_back)q(\(new)h
(Dot\(Vector2D\(400.0,)f(300.0\)\)\);)432 3093 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(400.0,)f(350.0\)\)\);)
432 3172 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(350.0,)f
(350.0\)\)\);)432 3251 y(ExampleWorld.push_back)q(\(new)h
(Dot\(Vector2D\(300.0,)f(350.0\)\)\);)432 3330 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(250.0,)f(350.0\)\)\);)
432 3409 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(200.0,)f
(350.0\)\)\);)432 3487 y(ExampleWorld.push_back)q(\(new)h
(Dot\(Vector2D\(200.0,)f(400.0\)\)\);)432 3566 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(200.0,)f(450.0\)\)\);)
432 3645 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(200.0,)f
(500.0\)\)\);)432 3724 y(ExampleWorld.push_back)q(\(new)h
(Dot\(Vector2D\(200.0,)f(550.0\)\)\);)432 3803 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(250.0,)f(550.0\)\)\);)
432 3882 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(300.0,)f
(550.0\)\)\);)432 3961 y(ExampleWorld.push_back)q(\(new)h
(Dot\(Vector2D\(350.0,)f(550.0\)\)\);)432 4040 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(400.0,)f(550.0\)\)\);)
432 4118 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(450.0,)f
(550.0\)\)\);)432 4197 y(ExampleWorld.push_back)q(\(new)h
(Dot\(Vector2D\(500.0,)f(550.0\)\)\);)432 4276 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(550.0,)f(550.0\)\)\);)
432 4355 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(600.0,)f
(550.0\)\)\);)432 4434 y(ExampleWorld.push_back)q(\(new)h
(Dot\(Vector2D\(600.0,)f(500.0\)\)\);)432 4513 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(600.0,)f(450.0\)\)\);)
432 4592 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(600.0,)f
(400.0\)\)\);)432 4671 y(ExampleWorld.push_back)q(\(new)h
(Dot\(Vector2D\(600.0,)f(350.0\)\)\);)432 4749 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(550.0,)f(350.0\)\)\);)
432 4828 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(500.0,)f
(350.0\)\)\);)432 4907 y(ExampleWorld.push_back)q(\(new)h
(Dot\(Vector2D\(500.0,)f(300.0\)\)\);)432 4986 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(500.0,)f(250.0\)\)\);)
432 5065 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(500.0,)f
(200.0\)\)\);)432 5144 y(ExampleWorld.push_back)q(\(new)h
(Dot\(Vector2D\(500.0,)f(150.0\)\)\);)432 5223 y
(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(500.0,)f(100.0\)\)\);)
432 5302 y(ExampleWorld.push_back)q(\(new)h(Dot\(Vector2D\(500.0,)76
b(50.0\)\)\);)432 5459 y(//)36 b(All)g(the)g(objects)i(in)e(our)g
(ExampleWorld)i(Group)f(have)g(now)f(been)432 5538 y(//)g(configured)i
(and)e(can)h(now)f(be)g(added)g(to)g(the)g(World.)p 150
5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 280 288
280 287 bop -358 70 a Fq(280)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 432
333 a Fd(Add\("ExampleWorld",)41 b(ExampleWorld\);)432
490 y(//)36 b(Because)h(we)f(just)h(want)f(the)g(braitenbergs)j(to)d
(go)g(on)g(indefinitely,)432 569 y(//)g(the)g(time)h(limit)f(is)g(set)g
(to)g(-1.)432 648 y(SetTimeSteps\(-1\);)291 727 y(})150
806 y(};)p -358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 281 289
281 288 bop 150 70 a Fq(12.5)31 b(Shrew)g(source)h(co)s(de)2913
b(281)p 150 103 4034 4 v 150 333 a Fl(12.5)136 b(Shrew)44
b(source)h(co)t(de)150 541 y Fd(//)36 b(Vim)g(users:)h(for)f(increased)
i(viewing)f(pleasure)h(:set)e(ts=4)150 699 y(#include)i("animat.h")150
778 y(#include)g("sensor.h")150 935 y(//)e(For)g(more)g(information)j
(on)d(this)g(file,)h(take)f(a)g(look)g(at)g(Tutorial)i(1)d(in)h(the)150
1014 y(//)g(BEAST)h(documentation.)150 1172 y(using)g(namespace)h
(BEAST;)150 1330 y(class)f(Shrew)f(:)g(public)h(Animat)g(//)f(Shrew)h
(is)e(derived)j(from)e(Animat)150 1409 y({)150 1487 y(public:)291
1566 y(Shrew\(\))291 1645 y({)432 1724 y(This.Add\("left",)k
(ProximitySensor<Shrew>\()q(PI/)q(5,)h(200.0,)c(-PI/20\)\);)432
1803 y(This.Add\("right",)j(ProximitySensor<Shrew>)q(\(PI)q(/5,)i
(200.0,)37 b(PI/20\)\);)432 1961 y(This.SetInitRandom\(tru)q(e\);)112
b(//)36 b(Start)h(in)f(random)h(locations)432 2118 y(This.Radius)i(=)c
(10.0;)319 b(//)36 b(Shrews)h(are)f(a)g(little)h(bigger)g(than)f(usual)
291 2197 y(})291 2276 y(virtual)h(~Shrew\(\){})291 2434
y(virtual)g(void)g(Control\(\))291 2513 y({)432 2592
y(This.Controls["left"])42 b(=)35 b(This.Sensors["right"]->)q(Get)q
(Outp)q(ut\()q(\);)432 2670 y(This.Controls["right"])42
b(=)35 b(This.Sensors["left"]->)q(Get)q(Outp)q(ut\()q(\);)291
2749 y(})150 2828 y(};)150 2986 y(class)i(ShrewSimulation)i(:)d(public)
h(Simulation)150 3065 y({)291 3144 y(Group<Shrew>)i(grpShrew;)150
3301 y(public:)291 3380 y(ShrewSimulation\(\):)291 3459
y(grpShrew\(30\))291 3538 y({)432 3617 y(This.Add\("Shrews",)i
(This.grpShrew\);)291 3696 y(})150 3775 y(};)p 150 5723
V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 282 290
282 289 bop -358 70 a Fq(282)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(12.6)136 b(Mouse)44 b(source)h(co)t(de)150 565
y Fd(//)36 b(Vim)g(users:)h(for)f(increased)i(viewing)f(pleasure)h
(:set)e(ts=4)150 723 y(#include)i("neuralanimat.h")150
802 y(#include)g("sensor.h")150 881 y(#include)g("population.h")150
1038 y(using)f(namespace)h(std;)150 1117 y(using)f(namespace)h(BEAST;)
150 1275 y(//)e(A)f(Cheese)i(is)f(a)g(small,)h(yellow)g(WorldObject)h
(which)f(changes)g(position)h(when)150 1354 y(//)e(the)g(Eaten)h
(method)g(is)f(called)h(on)e(it)h(\(i.e.)h(a)f(Mouse)g(collides)i(with)
e(it\))150 1433 y(class)h(Cheese)g(:)e(public)i(WorldObject)150
1512 y({)150 1590 y(public:)291 1669 y(Cheese\(\))291
1748 y({)432 1827 y(This.Radius)i(=)c(2.5f;)919 b(//)36
b(Cheeses)h(are)f(quite)h(small)432 1906 y(This.SetColour\(ColourP)q
(alet)q(te[)q(COLO)q(UR_)q(YELL)q(OW])q(\);//)42 b(Cheeses)37
b(are)f(yellow)432 1985 y(This.InitRandom)k(=)35 b(true;)778
b(//)36 b(Cheases)h(are)f(scattered)291 2064 y(})291
2143 y(virtual)h(~Cheese\(\){})291 2300 y(//)f(When)g(a)g(Cheese)h(is)f
(Eaten,)h(it)f(reappears)i(in)d(a)h(random)h(location.)291
2379 y(void)g(Eaten\(\))291 2458 y({)432 2537 y(This.Location)i(=)d
(This.MyWorld->RandomLoca)q(tio)q(n\(\);)291 2616 y(})150
2695 y(};)150 2852 y(//)g(This)g(Mouse)h(uses)f(a)g(simple)h
(calculation)h(to)e(forage)h(for)f(cheese.)150 2931 y(class)h(Mouse)f
(:)g(public)h(Animat)150 3010 y({)150 3089 y(public:)291
3168 y(Mouse\(\))291 3247 y({)432 3326 y(This.Add\("angle",)j
(NearestAngleSensor<Che)q(ese)q(>\(\)\))q(;)432 3404
y(This.InitRandom)g(=)35 b(true;)291 3483 y(})291 3641
y(//)h(This)g(incredibly)j(simple)e(control)g(function)g(is)f(all)g(a)g
(Mouse)h(needs)f(to)291 3720 y(//)g(forage)h(successfully)i(-)c(can)h
(our)h(neural)g(nets)f(do)g(as)g(well?)291 3799 y(virtual)h(void)g
(Control\(\))291 3878 y({)432 3957 y(double)g(o)f(=)f
(This.Sensors["angle"]-)q(>Ge)q(tOut)q(put)q(\(\);)432
4035 y(This.Controls["right"])42 b(=)35 b(0.5)i(-)e(\(o)h(>)g(0.0)g(?)f
(o)h(:)f(0.0\);)432 4114 y(This.Controls["left"])42 b(=)35
b(0.5)h(+)g(\(o)g(<)f(0.0)h(?)g(o)g(:)f(0.0\);)291 4193
y(})291 4351 y(//)h(This)g(is)g(called)h(when)g(a)e(Mouse)i(collides)h
(with)e(any)g(object)h(in)f(the)g(World.)291 4430 y(//)g(If)g(the)g
(object)h(is)f(a)f(Cheese,)j(the)e(Eaten)h(method)g(is)e(called)i(on)f
(Cheese.)291 4509 y(virtual)h(void)g(OnCollision\(WorldObject*)42
b(obj\))291 4588 y({)432 4666 y(Cheese*)c(cheese;)432
4824 y(if)e(\(IsKindOf\(obj,cheese\)\))42 b({)573 4903
y(cheese->Eaten\(\);)432 4982 y(})432 5140 y(Animat::OnCollision\(ob)q
(j\);)291 5218 y(})150 5297 y(};)150 5455 y(//)36 b(This)g(mouse)h
(uses)f(a)g(FeedForwardNet)j(to)d(locate)h(the)f(nearest)i(cheese)f
(using)f(a)150 5534 y(//)g(NearestAngleSensor.)41 b(No)35
b(GA)h(or)g(other)h(learning)g(algorithm)h(is)e(involved.)150
5613 y(class)h(NeuralMouse)h(:)e(Mouse)p -358 5723 V
-192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 283 291
283 290 bop 150 70 a Fq(12.6)31 b(Mouse)f(source)i(co)s(de)2898
b(283)p 150 103 4034 4 v 150 333 a Fd({)150 412 y(public:)291
490 y(NeuralMouse\(\):)39 b(myBrain\(1,)g(2,)c(2,)h(false\))291
569 y({)432 648 y(vector<float>)j(ffnConfig;)432 727
y(ffnConfig.push_back\(-1)q(.0f\))q(;)i(//)36 b(1st)g(input)h(1st)f
(weight)432 806 y(ffnConfig.push_back\()41 b(0.0f\);)c(//)f(1st)g
(input)h(bias)432 885 y(ffnConfig.push_back\()k(1.0f\);)c(//)f(2nd)g
(input)h(1st)f(weight)432 964 y(ffnConfig.push_back\()41
b(0.0f\);)c(//)f(2nd)g(input)h(bias)432 1121 y(ffnConfig.push_back\()k
(0.0f\);)c(//)f(1st)g(hidden)h(1st)f(weight)h(\(for)g(input)g(1\))432
1200 y(ffnConfig.push_back\()k(1.0f\);)c(//)f(1st)g(hidden)h(2nd)f
(weight)h(\(for)g(input)g(2\))432 1279 y(ffnConfig.push_back\(-0)q
(.5f\))q(;)k(//)36 b(1st)g(hidden)h(bias)432 1358 y
(ffnConfig.push_back\()k(1.0f\);)c(//)f(2nd)g(hidden)h(1st)f(weight)h
(\(for)g(input)g(1\))432 1437 y(ffnConfig.push_back\()k(0.0f\);)c(//)f
(2nd)g(hidden)h(2nd)f(weight)h(\(for)g(input)g(2\))432
1516 y(ffnConfig.push_back\(-0)q(.5f\))q(;)k(//)36 b(2nd)g(hidden)h
(bias)432 1673 y(This.myBrain.SetConfig)q(urat)q(ion)q(\(ffn)q(Con)q
(fig\))q(;)291 1752 y(})291 1910 y(//)f(Here)g(the)h(single)g(sensor)g
(output)g(is)e(set)i(as)e(the)i(input)f(for)g(the)h(FFN,)f(the)291
1989 y(//)g(FFN)g(is)g(fired)h(once)f(and)g(the)g(two)h(controls)g(are)
f(set)g(to)g(the)g(output)h(values.)291 2068 y(//)f(Note)g(that)h(the)f
(original)i(Mouse::Control)h(method)e(is)f(overridden)i(by)e(this)g
(one.)291 2147 y(virtual)h(void)g(Control\(\))291 2226
y({)432 2304 y(This.myBrain.SetInput\()q(0,)k(This.Sensors["angle"]-)q
(>Ge)q(tOut)q(put)q(\(\)\);)432 2462 y(This.myBrain.Fire\(\);)432
2620 y(This.Controls["left"])h(=)35 b(myBrain.GetOutput\(0\);)432
2699 y(This.Controls["right"])42 b(=)35 b(myBrain.GetOutput\(1\);)291
2778 y(})150 2935 y(private:)291 3014 y(FeedForwardNet)k(myBrain;)150
3093 y(};)150 3251 y(//)d(In)g(an)g(ideal)g(world,)h(EvoMouse)h(would)f
(inherit)g(from)f(Mouse,)h(thereby)h(getting)150 3330
y(//)e(the)g(same)g(OnCollision)j(function)e(and)g(initialisation)i
(code)d(as)g(Mouse,)h(but)150 3409 y(//)f(it's)g(more)h(convenient)h
(to)e(inherit)h(from)f(EvoFFNAnimat)j(which)e(gives)g(us)e(all)150
3487 y(//)h(the)g(GA)g(and)g(FFN)g(code.)h(Multiple)g(inheritance)i
(would)e(be)e(another)j(option,)f(but)150 3566 y(//)f(introduces)i(a)e
(host)g(of)g(other)h(unwanted)g(complications.)150 3645
y(class)g(EvoMouse)g(:)f(public)h(EvoFFNAnimat)150 3724
y({)150 3803 y(public:)291 3882 y(EvoMouse\(\):)i(cheesesFound\(0\))291
3961 y({)432 4040 y(This.Add\("angle",)h(NearestAngleSensor<Che)q(ese)q
(>\(\)\))q(;)150 4118 y(//)c(An)g(alternative)i(to)e(the)g
(NearestAngleSensor)41 b(is)35 b(the)i(Proximity)g(Sensor,)h(which)150
4197 y(//)e(gives)h(less)f(precise)h(directional)i(information,)f(but)f
(does)f(let)g(the)g(mouse)h(know)150 4276 y(//)f(how)g(far)g(away)h
(the)f(cheese)h(is.)150 4355 y(//)212 b(This.Add\("proximity",)42
b(ProximitySensor<Cheese>\(P)q(I/8)q(,)f(80.0,)c(0.0\)\);)432
4434 y(This.InitRandom)j(=)35 b(true;)432 4513 y(This.InitFFN\(4\);)291
4592 y(})291 4749 y(//)h(This)g(is)g(identical)i(to)e(the)g
(OnCollision)j(method)e(for)f(Mouse,)h(except)g(here)f(we)291
4828 y(//)g(are)g(also)h(recording)g(the)g(number)g(of)e(cheeses)j
(eaten.)291 4907 y(virtual)f(void)g(OnCollision\(WorldObject*)42
b(obj\))291 4986 y({)432 5065 y(Cheese*)c(cheese;)432
5223 y(if)e(\(IsKindOf\(obj,cheese\)\))42 b({)573 5302
y(cheesesFound++;)573 5380 y(cheese->Eaten\(\);)432 5459
y(})p 150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 284 292
284 291 bop -358 70 a Fq(284)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 432
333 a Fd(EvoFFNAnimat::OnCollis)q(ion\()q(obj)q(\);)291
412 y(})291 569 y(//)k(The)g(EvoMouse's)i(fitness)g(is)d(the)i(amount)g
(of)e(cheese)i(collected,)i(divided)e(by)291 648 y(//)f(the)g(power)h
(usage,)g(so)f(a)f(mouse)i(is)f(penalised)i(for)e(simply)h(charging)g
(around)291 727 y(//)f(as)g(fast)g(as)g(possible)i(and)e(randomly)h
(collecting)i(cheese)e(-)e(it)h(needs)h(to)f(find)291
806 y(//)g(its)g(target)h(carefully.)291 885 y(virtual)g(float)g
(GetFitness\(\)const)291 964 y({)432 1042 y(return)g(This.cheesesFound)
j(>)c(0)g(?)f(static_cast<float>\(This)q(.ch)q(eese)q(sFo)q(und\))42
b(/)36 b(This.DistanceTravelled.as)q(<flo)q(at>)q(\(\))41
b(:)36 b(0;)291 1121 y(})291 1279 y(//)g(Overloading)i(the)f(ToString)g
(method)g(allows)g(us)f(to)g(output)h(a)e(small)i(amount)g(of)291
1358 y(//)f(information)i(which)f(is)f(visible)h(in)f(the)g(status)h
(bar)f(of)g(the)g(GUI)h(when)f(a)291 1437 y(//)g(mouse)h(is)f(clicked)h
(on.)291 1516 y(virtual)g(string)g(ToString\(\)const)291
1595 y({)432 1673 y(ostringstream)i(out;)432 1752 y(out)d(<<)g(")g
(Power)h(used:)f(")g(<<)g(This.PowerUsed;)432 1831 y(return)h
(out.str\(\);)291 1910 y(})150 2068 y(private:)291 2147
y(int)f(cheesesFound;)110 b(//)36 b(The)g(number)h(of)f(cheeses)h
(collected)h(for)e(this)g(run.)150 2226 y(};)150 2383
y(class)h(MouseSimulation)i(:)d(public)h(Simulation)150
2462 y({)291 2541 y(GeneticAlgorithm<EvoMou)q(se>)42
b(theGA;)291 2620 y(Population<EvoMouse>)f(theMice;)150
2699 y(//)71 b(Group<Mouse>)39 b(theMice;)291 2778 y(Group<Cheese>)g
(theCheeses;)150 2935 y(public:)291 3014 y(MouseSimulation\(\):)291
3093 y(theGA\(0.7f,)g(0.05f\),)e(//)f(Crossover)i(probability)g(of)e
(0.7,)g(mutation)i(probability)g(of)e(0.05)150 3172 y(//)71
b(theMice\(30\),)286 b(//)36 b(30)g(mice)g(are)g(in)g(the)g
(population.)291 3251 y(theMice\(30,)j(theGA\),)e(//)f(30)g(mice)g(are)
g(in)g(the)g(population.)291 3330 y(theCheeses\(30\))216
b(//)36 b(30)g(cheeses)h(are)f(around)h(at)f(one)g(time.)291
3409 y({)432 3487 y(//)g(We're)h(using)g(a)e(rank)i(selection)g
(method.)h(Consult)f(the)f(BEAST)432 3566 y(//)g(documentation)j(for)d
(GeneticAlgorithm,)k(the)d(ar23)f(course)h(slides)g(or)432
3645 y(//)f(a)g(good)g(book)h(on)e(GAs)i(for)f(more)g(details.)432
3724 y(This.theGA.SetSelectio)q(n\(GA)q(_RA)q(NK\);)432
3803 y(//)g(The)g(ranking)i(selection)f(pressure)h(is)e(set)g(to)g(2.)
432 3882 y(This.theGA.SetParamete)q(r\(GA)q(_RA)q(NK_S)q(PRE)q(SSUR)q
(E,)42 b(2.0\);)432 4040 y(This.SetTimeSteps\(100\))q(;)432
4197 y(This.Add\("Mice",)e(This.theMice\);)432 4276 y
(This.Add\("Cheeses",)h(This.theCheeses\);)291 4355 y(})150
4434 y(};)p -358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 285 293
285 292 bop 150 70 a Fq(12.7)31 b(Predator/Prey)i(source)f(co)s(de)2552
b(285)p 150 103 4034 4 v 150 339 a Fl(12.7)136 b(Predator/Prey)46
b(source)f(co)t(de)150 565 y Fd(//)36 b(Vim)g(users:)h(for)f(increased)
i(viewing)f(pleasure)h(:set)e(ts=4)150 723 y(#include)i
("neuralanimat.h")150 802 y(#include)g("sensor.h")150
881 y(#include)g("population.h")150 1038 y(using)f(namespace)h(std;)150
1117 y(using)f(namespace)h(BEAST;)150 1275 y(//)e(Forward)h
(declaration)i(for)d(Prey)150 1354 y(class)h(Predator;)150
1512 y(//)f(A)f(Prey)i(is)f(a)f(small)i(Animat)g(which)g(can)f(be)g
(evolved)h(with)f(a)g(GA,)g(uses)h(a)150 1590 y(//)f(feed)g(forward)i
(neural)f(network)g(and)f(has)g(two)g(Predator-detecting)41
b(sensors.)150 1669 y(//)36 b(It)g(records)h(the)f(number)h(of)f(times)
h(it)f(has)g(been)g(eaten)h(and)f(the)g(inverse)h(of)150
1748 y(//)f(this)g(number)h(becomes)h(its)e(fitness)h(score.)150
1827 y(class)g(Prey)f(:)g(public)h(EvoFFNAnimat)150 1906
y({)150 1985 y(public:)291 2064 y(//)f(Prey)g(is)g(initialised)j(with)d
(1)g(for)g(its)g(timesEaten)i(score,)f(since)g(otherwise)291
2143 y(//)f(we)g(might)h(end)f(up)g(dividing)h(by)f(zero)g(in)g(the)g
(fitness)i(function.)291 2221 y(Prey\(\):)f(timesEaten\(1\))291
2300 y({)432 2379 y(//)f(Two)g(Predator-detecting)41
b(sensors)c(are)f(added.)432 2458 y(Add\("right",)j
(ProximitySensor<Predato)q(r>\(P)q(I/1)q(.05,)j(100.0,)37
b(-PI/2\)\);)432 2537 y(Add\("left",)i(ProximitySensor<Predator)q
(>\(PI)q(/1.)q(05,)j(100.0,)37 b(PI/2\)\);)432 2695 y(//)f(The)g
(FeedForwardNet)k(is)35 b(initialised)k(with)d(four)h(hidden)g(nodes)f
(-)g(the)432 2773 y(//)g(number)h(of)f(inputs)h(and)f(outputs)h(is)f
(decided)i(by)d(the)i(number)g(of)e(sensors)432 2852
y(//)h(\(2\))g(and)g(the)h(number)g(of)e(controls)j(\(2\).)e(The)h
(InitFFN)g(function)g(determines)432 2931 y(//)f(these)h(values)g(and)f
(configures)i(the)e(network)i(accordingly.)432 3010 y(InitFFN\(4\);)432
3089 y(SetInitRandom\(true\);)432 3168 y(This.MinSpeed)h(=)d(0;)432
3247 y(This.MaxSpeed)j(=)d(100;)291 3326 y(})291 3483
y(//)g(As)g(with)g(Cheeses,)i(when)e(a)g(Predator)h(collides)h(with)e
(a)g(Prey,)h(the)f(Eaten)291 3562 y(//)g(method)h(is)f(called)h(and)f
(the)g(prey)h(is)e(repositioned)k(somewhere)f(random)291
3641 y(//)e(in)g(the)g(World.)291 3720 y(void)h(Eaten\(\))291
3799 y({)432 3878 y(timesEaten++;)432 3957 y(This.Location)i(=)d
(static_cast<World&>\(This)q(.My)q(Worl)q(d\).)q(Rand)q(omL)q(ocat)q
(ion)q(\(\);)291 4035 y(})291 4193 y(float)h(GetFitness\(\)const)291
4272 y({)432 4351 y(return)g(1.0f)g(/)e(static_cast<float>\(tim)q(esEa)
q(ten)q(\);)291 4430 y(})291 4588 y(//)h(This)g(just)h(lets)f(us)g
(track)h(the)f(performance)i(of)e(individual)i(Prey)f(in)f(the)g(GUI.)
291 4666 y(virtual)h(string)g(ToString\(\)const)291 4745
y({)432 4824 y(ostringstream)i(out;)432 4903 y(out)d(<<)g("Times)h
(eaten:)g(")f(<<)g(timesEaten)i(<<)e(")f(Current)j(fitness:)f(")f(<<)g
(GetFitness\(\);)432 4982 y(return)h(out.str\(\);)291
5061 y(})150 5218 y(private:)291 5297 y(int)f(timesEaten;)150
5376 y(};)150 5534 y(//)g(The)g(Predator)i(class)e(is)g(an)g(Animat)h
(which)g(can)f(be)g(evolved)h(in)f(a)f(GA)h(and)g(uses)h(a)150
5613 y(//)f(feed)g(forward)i(neural)f(network.)g(It's)g(fitness)g
(score)g(depends)g(on)f(how)g(many)p 150 5723 V 150 5823
a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 286 294
286 293 bop -358 70 a Fq(286)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fd(//)k(Prey)g(it)g(manages)h(to)f(collide)i(with.)150
412 y(class)f(Predator)g(:)f(public)h(EvoFFNAnimat)150
490 y({)150 569 y(public:)291 648 y(Predator\(\):preyEaten\(0\))291
727 y({)432 806 y(Add\("left",)i(ProximitySensor<Prey>\(PI)q(/5,)j
(200.0,)37 b(-PI/20\)\);)432 885 y(Add\("right",)i
(ProximitySensor<Prey>\(P)q(I/5,)j(200.0,)37 b(PI/20\)\);)432
1042 y(InitFFN\(4\);)432 1121 y(SetInitRandom\(true\);)432
1279 y(This.MinSpeed)i(=)d(0;)432 1358 y(This.MaxSpeed)j(=)d(100;)432
1437 y(This.Radius)j(=)c(10.0;)291 1516 y(})291 1673
y(void)i(OnCollision\(WorldObject*)42 b(obj\))291 1752
y({)432 1831 y(Prey*)37 b(ptr;)432 1989 y(if)f(\(IsKindOf\(obj,ptr\)\))
41 b({)573 2068 y(preyEaten++;)573 2147 y(ptr->Eaten\(\);)432
2226 y(})432 2383 y(FFNAnimat::OnCollision)q(\(obj)q(\);)291
2462 y(})291 2620 y(float)c(GetFitness\(\)const)j({)c(return)h
(preyEaten;)h(})291 2778 y(virtual)f(string)g(ToString\(\)const)291
2857 y({)432 2935 y(ostringstream)i(out;)432 3014 y(out)d(<<)g("Meals)h
(had:)g(")e(<<)h(preyEaten)i(<<)e(")f(Current)j(fitness:)f(")f(<<)g
(GetFitness\(\);)432 3093 y(return)h(out.str\(\);)291
3172 y(})150 3330 y(private:)291 3409 y(int)f(preyEaten;)150
3487 y(};)150 3724 y(class)h(ChaseSimulation)i(:)d(public)h(Simulation)
150 3803 y({)291 3882 y(GeneticAlgorithm<Predat)q(or>)42
b(gaPred;)291 3961 y(GeneticAlgorithm<Prey>)g(gaPrey;)291
4040 y(Population<Predator>)f(popPred;)291 4118 y(Population<Prey>)f
(popPrey;)150 4276 y(public:)291 4355 y(ChaseSimulation\(\):)291
4434 y(gaPred\(0.7f,)f(0.1f\),)e(gaPrey\(0.7f,)i(0.1f\),)291
4513 y(popPred\(30,gaPred\),)i(popPrey\(30,gaPrey\))291
4592 y({)432 4671 y(gaPred.SetSelection\(GA)q(_RAN)q(K\);)432
4749 y(gaPred.SetParameter\(GA)q(_RAN)q(K_S)q(PRES)q(SUR)q(E,)g(2.0\);)
432 4907 y(gaPrey.SetSelection\(GA)q(_RAN)q(K\);)432
4986 y(gaPrey.SetParameter\(GA)q(_RAN)q(K_S)q(PRES)q(SUR)q(E,)g(2.0\);)
432 5144 y(//)36 b(Although)i(the)e(population)i(size)e(for)h(both)f
(Predator)i(and)e(Prey)g(is)432 5223 y(//)g(30,)g(it)g(would)h(be)f
(chaos)g(if)g(we)g(were)h(trying)g(to)e(assess)i(60)f(individuals)432
5302 y(//)g(at)g(once)g(\(although)i(it)e(still)h(works)g(after)f(a)g
(fashion)h(and)f(takes)h(less)432 5380 y(//)f(time)h(-)e(remove)i
(these)g(two)f(lines)h(to)f(see)g(that)g(happening\).)j(Instead)432
5459 y(//)d(5)g(Predators)i(are)e(assessed)h(against)h(10)d(Prey.)i
(There)g(are)f(30)g(assessments,)432 5538 y(//)g(and)g(each)h(time)f
(the)g(Simulation)i(class)f(makes)g(sure)f(that)h(the)f(next)g(5)p
-358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 287 295
287 294 bop 150 70 a Fq(12.7)31 b(Predator/Prey)i(source)f(co)s(de)2552
b(287)p 150 103 4034 4 v 432 333 a Fd(//)36 b(Prey)h(and)f(the)g(next)g
(10)g(Predators)i(are)e(picked.)432 412 y(popPred.SetTeamSize\(5\))q(;)
432 490 y(popPrey.SetTeamSize\(10)q(\);)432 569 y
(SetAssessments\(30\);)432 727 y(Add\("Predators",)k(popPred\);)432
806 y(Add\("Prey",)f(popPrey\);)291 885 y(})150 964 y(};)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 288 296
288 295 bop -358 70 a Fq(288)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(12.8)136 b(Bacteria)46 b(example)g(source)f(co)t(de)150
565 y Fd(//)36 b(Vim)g(users:)h(for)f(increased)i(viewing)f(pleasure)h
(:set)e(ts=4)150 723 y(#include)i("wxsimenv.h")150 802
y(#include)g("simulation.h")150 881 y(#include)g("bacteria.h")150
1038 y(using)f(namespace)h(std;)150 1117 y(using)f(namespace)h(BEAST;)
150 1275 y(class)f(TestBacterium)i(:)c(public)i(Bacterium)150
1354 y({)150 1433 y(public:)291 1512 y(TestBacterium\(\))j({)432
1590 y(//)c(These)h(variables)h(should)f(remain)g(constant)g(for)f(the)
h(whole)f(simulation.)432 1669 y(//)g(They)h(represent)g(universal)h
(constraints)h(within)e(which)f(the)h(bacteria)g(must)432
1748 y(//)f(survive.)i(You)e(are)g(free)g(to)g(alter)h(them,)g(but)f
(consider)h(each)g(time)f(how)g(it)432 1827 y(//)g(affects)h(the)g
(realism)g(of)f(the)g(simulation.)i(Note)f(that)f(for)g(our)g
(purposes,)432 1906 y(//)g(the)g(most)h(realistic)h(values)f(will)f
(not)g(necessarily)j(give)d(the)g(best)432 1985 y(//)g(results,)i(and)e
(also)g(that)h(the)f(values)h(below)g(are)f(neither)h(realistic)h(nor)
432 2064 y(//)e(effective.)432 2143 y(SetReproductionCost\(0.)q(4\);)
112 b(//)36 b(Amount)h(of)f(energy)h(lost)f(in)g(reproduction)432
2221 y(SetEnergyRate\(0.005\);)253 b(//)36 b(Rate)h(of)e(energy)i(use)g
(\(*)e(speed\))432 2300 y(SetSporeEnergyRate\(0.0)q(1\);)112
b(//)36 b(Energy)h(used)g(whether)g(moving)g(or)f(not)432
2379 y(SetAttractantCost\(0.01)q(\);)147 b(//)36 b(Cost)h(to)e(release)
j(one)e(unit)g(of)g(attractant)432 2458 y(SetRepellentCost\(0.01\))q(;)
182 b(//)36 b(Cost)h(to)e(release)j(one)e(unit)g(of)g(repellent)432
2537 y(SetDeathThreshold\(0.0\))q(;)182 b(//)36 b(Minimum)h(energy)g
(before)g(bacterium)h(dies)432 2695 y(//)e(These)h(variables)h(might)e
(change)h(as)f(a)g(result)h(of)f(a)f(genetic)j(algorithm,)g(or)432
2773 y(//)e(your)h(own)f(experimentation.)k(In)35 b(most)i(cases,)g(an)
f(effect)h(can)f(be)g(switched)432 2852 y(//)g(off)g(by)g(setting)h
(the)g(relevant)g(variable)h(to)e(0.0.)432 2931 y
(SetReproductionThresho)q(ld\(1)q(0.0)q(\);)41 b(//)36
b(The)g(amount)h(of)f(energy)h(needed)g(before)1561 3010
y(//)f(the)g(bacterium)i(reproduces)g(\(divides\))432
3089 y(SetSporulationThreshol)q(d\(0.)q(25\))q(;)76 b(//)36
b(Energy)h(level)g(at)f(sporulation)432 3168 y(SetConsumptionRate\(0.1)
q(\);)147 b(//)36 b(Maximum)h(food)g(consumed)g(per)g(timestep)432
3247 y(SetAttractantRate\(0.5\))q(;)182 b(//)36 b(Amount)h(of)f
(attractant)i(released/food)h(unit)432 3326 y(SetRepellentRate\(4.0\);)
218 b(//)36 b(Rate)h(of)e(repellent/inverse)41 b(of)35
b(food)432 3404 y(SetSwarmRadius\(0.0\);)288 b(//)36
b(Radius)h(in)f(which)h(velocities)h(are)e(summed)432
3483 y(SetSwarmInfluence\(0.0\))q(;)182 b(//)36 b(Degree)h(of)f
(influence)i(of)e(swarm)g(velocity)432 3562 y(SetGradientInfluence\(1)q
(.0\);)77 b(//)36 b(Degree)h(of)f(influence)i(of)e(all)g(gradients)432
3641 y(SetNutrientResponse\(1.)q(0\);)112 b(//)36 b(Relative)i(change)f
(in)f(direction)h(wrt)432 3720 y(SetAttractantResponse\()q(0.0\))q(;)k
(//)36 b(nutrient,)i(attractant)g(and)e(repellent)432
3799 y(SetRepellentResponse\(0)q(.0\);)77 b(//)36 b(respectively)432
3878 y(SetAttractantThreshold)q(\(0.5)q(\);/)q(/)41 b(Minimum)c(food)g
(to)f(trigger)h(attractant)432 3957 y(SetRepellentThreshold\()q(0.5\))q
(;)k(//)36 b(Minimum)h(food)g(to)f(trigger)h(repellent)432
4114 y(//)f(This)h(decides)g(the)f(amount)h(of)f(energy)h(bacteria)g
(start)g(with.)g(If)f(you)g(find)432 4193 y(//)g(your)h(bacteria)g
(dying)g(as)f(soon)g(as)g(the)g(simulation)i(starts,)g(it)d(might)i(be)
432 4272 y(//)f(worth)h(increasing)h(this,)f(but)f(if)g(their)g
(consumption)j(rate)d(does)h(not)f(allow)432 4351 y(//)g(them)h(to)e
(reach)i(equilibrium)i(with)d(the)g(amount)h(of)f(food)g(available)i
(it)e(will)432 4430 y(//)g(usually)h(be)f(worth)h(adjusting)h(the)e
(above)h(variables)h(instead.)432 4509 y(SetEnergy\(1.0\);)432
4666 y(//)e(The)g(speed)h(is)f(always)h(constant,)h(and)e(influences)i
(energy)f(consumption.)432 4745 y(SetSpeed\(40.0\);)291
4824 y(})291 4982 y(virtual)g(~TestBacterium\(\))j({})150
5061 y(};)150 5218 y(//)c(Sets)g(up)g(a)g(few)g(bacteria)h(which)g
(demonstrate)i(their)d(gradient-following)41 b(ability.)150
5297 y(class)c(BacteriaGradientSim)j(:)c(public)h(Simulation)150
5376 y({)150 5455 y(protected:)291 5534 y(//)f(An)g(object)h(to)f(help)
g(us)g(put)g(bacteria)i(into)e(the)g(World.)291 5613
y(Group<TestBacterium>)147 b(grpBacteria;)p -358 5723
V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 289 297
289 296 bop 150 70 a Fq(12.8)31 b(Bacteria)h(example)f(source)g(co)s
(de)2446 b(289)p 150 103 4034 4 v 291 333 a Fd(//)36
b(An)g(object)h(to)f(help)g(us)g(put)g(distributions)j(into)e(the)f
(World.)291 412 y(Group<WorldObject>)217 b(grpWorld;)291
490 y(//)36 b(Pointers)i(to)d(Distributions,)40 b(so)c(we)f(can)i(keep)
f(track)h(of)f(them)g(for)g(the)291 569 y(//)g(duration)i(of)d(the)i
(simulation.)291 648 y(Distribution)427 b(*nutrient,)1138
727 y(*trail;)150 806 y(public:)291 885 y(//)36 b(Constructor)i(for)f
(our)f(Simulation,)i(in)e(which)h(Distributions)i(are)d(set)g(up)g(and)
291 964 y(//)g(everything)i(is)e(put)g(into)h(the)f(World.)291
1042 y(BacteriaGradientSim\(\):)291 1121 y(grpBacteria\(30\))291
1200 y({)432 1279 y(GetWorld\(\).Toggle\(DISP)q(LAY_)q(COL)q(LISI)q
(ONS)q(\);)432 1358 y(GetWorld\(\).Toggle\(DISP)q(LAY_)q(TRA)q(ILS\))q
(;)432 1437 y(GetWorld\(\).Toggle\(DISP)q(LAY_)q(MON)q(ITOR)q(\);)432
1516 y(GetWorld\(\).Toggle\(DISP)q(LAY_)q(SEN)q(SORS)q(\);)432
1673 y(//)g(Set)g(up)g(a)g(new)g(400)g(x)g(300)g(cell)g(distribution.)
432 1752 y(nutrient)i(=)d(new)i(Distribution\(400,)j(300,)c(1\);)432
1831 y(nutrient->SetColour\(1.)q(0f,)42 b(1.0f,)36 b(1.0f\);)h(//)f
(Set)g(the)h(colour)g(to)e(white.)432 1910 y(nutrient->SetDiffusion)q
(Spee)q(d\(1)q(\);)41 b(//)36 b(Make)h(it)f(diffuse)h(once)f(per)g
(timestep.)432 1989 y(nutrient->Plot\(0.5\);)429 b(//)36
b(Set)g(each)h(point)g(to)e(0.5.)432 2068 y(//)h(Add)g(a)g(Gaussian)h
(blob)g(to)f(give)g(the)g(bacteria)i(a)d(gradient)j(to)e(climb.)432
2147 y(nutrient->Filter\(plus<)q(doub)q(le>)q(\(\),)42
b(Gaussian2D\(200,)d(150,)e(30.0,)f(5000.0\)\);)432 2226
y(nutrient->SetMaxConc\(2)q(.0\);)218 b(//)36 b(Max)g(display)i
(density)f(is)f(3.)432 2304 y(grpWorld.push_back\(nut)q(rien)q(t\);)112
b(//)36 b(Put)g(it)g(into)h(the)f(grpWorld)h(object.)432
2462 y(//)f(Set)g(up)g(a)g(new)g(800)g(x)g(600)g(distribution.)432
2541 y(trail)h(=)f(new)g(Distribution\(800,)k(600,)c(1\);)432
2620 y(trail->SetColour\(1.0f,)42 b(1.0f,)37 b(1.0f\);)g(//)e(Set)i
(the)f(colour)h(to)f(orange.)432 2699 y(trail->Plot\(0.0\);)534
b(//)36 b(Zero)h(the)f(distribution.)432 2778 y
(grpWorld.push_back\(tra)q(il\);)218 b(//)36 b(Put)g(it)g(into)h(the)f
(grpWorld)h(object.)432 2935 y(Add\("Bacteria",)j(grpBacteria\);)109
b(//)36 b(Add)g(the)h(bacteria)g(to)f(the)g(World.)432
3014 y(Add\("Distributions",)41 b(grpWorld\);)d(//)e(Add)g(the)h
(distributions)i(to)c(the)i(World.)432 3172 y(//)f(Ignore)h(the)f
(funny)h(syntax;)g(this)g(just)f(gives)h(each)f(Bacterium)i(a)e
(pointer)432 3251 y(//)g(to)g(the)g(nutrient)i(and)e(trail)h
(distributions.)432 3330 y(grpBacteria.ForEach<Di)q(stri)q(but)q(ion*)q
(>\(&)q(Bact)q(eri)q(um::)q(Set)q(Nutr)q(ien)q(tDis)q(t,)42
b(nutrient\);)432 3409 y(grpBacteria.ForEach<Di)q(stri)q(but)q(ion*)q
(>\(&)q(Bact)q(eri)q(um::)q(Set)q(Trai)q(lDi)q(st,)g(trail\);)432
3566 y(//)36 b(This)h(makes)f(the)g(first)h('assessment')i(go)d(on)g
(for)g(ever.)432 3645 y(SetTimeSteps\(-1\);)291 3724
y(})150 3882 y(};)150 4040 y(//)g(Now)g(the)g(bacteria)i(will)e(be)g
(adjusted)i(to)d(demonstrate)k(swarming.)150 4118 y(class)e
(BacteriaSwarmSim)j(:)35 b(public)i(BacteriaGradientSim)150
4197 y({)150 4276 y(public:)291 4355 y(BacteriaSwarmSim\(\))291
4434 y({)432 4513 y(grpBacteria.ForEach<do)q(uble)q(>\(&)q(Bact)q(eri)q
(um::)q(Set)q(Swar)q(mRa)q(dius)q(,)k(20.0\);)432 4592
y(grpBacteria.ForEach<do)q(uble)q(>\(&)q(Bact)q(eri)q(um::)q(Set)q
(Swar)q(mIn)q(flue)q(nce)q(,)g(0.5\);)291 4671 y(})150
4749 y(};)150 4907 y(class)c(BacteriaRepellentSim)k(:)35
b(public)i(BacteriaSwarmSim)150 4986 y({)150 5065 y(protected:)291
5144 y(//)f(A)g(pointer)h(to)f(our)g(repellent)i(object.)291
5223 y(Distribution)h(*repellent;)150 5380 y(public:)291
5459 y(BacteriaRepellentSim\(\))291 5538 y({)p 150 5723
V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 290 298
290 297 bop -358 70 a Fq(290)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 432
333 a Fd(//)k(Make)h(and)f(add)g(a)f(new,)i(nasty)g(pink)f
(distribution)j(for)d(repellent.)432 412 y(repellent)i(=)e(new)g
(Distribution\(400,)k(300,)c(1\);)432 490 y(repellent->SetColour\(1)q
(.0f,)42 b(0.5f,)37 b(0.5f\);)432 569 y(repellent->SetDiffusio)q(nSpe)q
(ed\()q(2\);)432 648 y(repellent->Plot\(0.0\);)432 727
y(repellent->SetMaxConc\()q(1.5f)q(\);)432 806 y
(nutrient->SetDiffusion)q(Spee)q(d\(1)q(\);)k(//)36 b(Make)h(it)f
(diffuse)h(like)f(nutrients.)432 885 y(grpWorld.push_back\(rep)q(elle)q
(nt\))q(;)432 1042 y(//)g(Tell)h(the)f(bacteria)h(about)g(it.)432
1121 y(grpBacteria.ForEach<Di)q(stri)q(but)q(ion*)q(>\(&)q(Bact)q(eri)q
(um::)q(Set)q(Repe)q(lle)q(ntDi)q(st,)42 b(repellent\);)432
1279 y(//)36 b(Make)h(them)f(respond)h(to)f(repellents.)432
1358 y(grpBacteria.ForEach<do)q(uble)q(>\(&)q(Bact)q(eri)q(um::)q(Set)q
(Repe)q(lle)q(ntRe)q(spo)q(nse,)42 b(0.5\);)432 1516
y(//)36 b(Just)h(for)f(a)f(laugh,)i(plot)g(some)f(noise,)h(keep)g(the)f
(bacteria)h(guessing...)432 1595 y(nutrient->Filter\(plus<)q(doub)q
(le>)q(\(\),)42 b(GaussianNoise\(0.0,)e(0.5\)\);)291
1673 y(})150 1752 y(};)150 1910 y(//)c(Now)g(we)g(have)g(reproduction,)
j(repellent)f(and)e(swarming.)150 1989 y(class)h(BacteriaReproSim)j(:)
35 b(public)i(BacteriaRepellentSim)150 2068 y({)150 2147
y(public:)291 2226 y(BacteriaReproSim\(\))291 2304 y({)432
2383 y(//)f(In)g(principle)i(the)e(bacteria)i(could)e(have)h
(reproduced)h(in)e(the)g(previous)432 2462 y(//)g(simulations,)j(but)d
(the)g(reproduction)j(threshold)f(was)e(too)g(high.)432
2541 y(grpBacteria.ForEach<do)q(uble)q(>\(&)q(Bact)q(eri)q(um::)q(Set)q
(Repr)q(odu)q(ctio)q(nTh)q(resh)q(old)q(,)41 b(0.4\);)432
2620 y(grpBacteria.ForEach<do)q(uble)q(>\(&)q(Bact)q(eri)q(um::)q(Set)q
(Cons)q(ump)q(tion)q(Rat)q(e,)g(0.2\);)291 2778 y(})150
2857 y(};)150 3014 y(//)36 b(Now)g(we)g(have)g(reproduction,)j
(repellent)f(and)e(swarming.)150 3093 y(class)h(BacteriaAttractantSim)k
(:)36 b(public)h(BacteriaReproSim)150 3172 y({)150 3251
y(protected:)291 3330 y(//)f(A)g(pointer)h(to)f(our)g(attractant)i
(object.)291 3409 y(Distribution)h(*attractant;)150 3566
y(public:)291 3645 y(BacteriaAttractantSim\(\))291 3724
y({)432 3803 y(//)d(Make)h(and)f(add)g(a)f(new,)i(slimey)g(green)g
(distribution)h(for)e(attractant.)432 3882 y(attractant)i(=)e(new)g
(Distribution\(400,)k(300,)d(1\);)432 3961 y(attractant->SetColour\()q
(0.5f)q(,)k(1.0f,)c(0.5f\);)432 4040 y(attractant->SetDiffusi)q(onSp)q
(eed)q(\(2\);)432 4118 y(attractant->Plot\(0.0\);)432
4197 y(attractant->SetMaxConc)q(\(1.5)q(f\);)432 4276
y(attractant->Update\(\);)432 4355 y(grpWorld.push_back\(att)q(ract)q
(ant)q(\);)432 4513 y(//)f(Tell)h(the)f(bacteria)h(about)g(it.)432
4592 y(grpBacteria.ForEach<Di)q(stri)q(but)q(ion*)q(>\(&)q(Bact)q(eri)q
(um::)q(Set)q(Attr)q(act)q(antD)q(ist)q(,)k(attractant\);)432
4749 y(//)36 b(Make)h(them)f(respond)h(to)f(attractants.)432
4828 y(grpBacteria.ForEach<do)q(uble)q(>\(&)q(Bact)q(eri)q(um::)q(Set)q
(Attr)q(act)q(antR)q(esp)q(onse)q(,)41 b(0.5\);)291 4907
y(})150 4986 y(};)150 5144 y(BEGIN_SIMULATION_TABLE)291
5223 y(ADD_SIMULATION\("Bacteri)q(aGr)q(adie)q(nt")q(,)g
(BacteriaGradientSim\))291 5302 y(ADD_SIMULATION\("Bacteri)q(aSw)q
(arm")q(,)g(BacteriaSwarmSim\))291 5380 y(ADD_SIMULATION\("Bacteri)q
(aRe)q(pell)q(ent)q(",)g(BacteriaRepellentSim\))291 5459
y(ADD_SIMULATION\("Bacteri)q(aRe)q(pro")q(,)g(BacteriaReproSim\))291
5538 y(ADD_SIMULATION\("Bacteri)q(aAt)q(trac)q(tan)q(t",)h
(BacteriaAttractantSim\))p -358 5723 V -192 5823 a Fn(Generated)26
b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 291 299
291 298 bop 150 70 a Fq(12.8)31 b(Bacteria)h(example)f(source)g(co)s
(de)2446 b(291)p 150 103 4034 4 v 150 333 a Fd(END_SIMULATION_TABLE)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 292 300
292 299 bop -358 70 a Fq(292)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(12.9)136 b(A)44 b(short)h(user's)g(guide)150
576 y Fp(This)29 b(guide)g(explains)f(brie\015y)h(ho)n(w)f(to)h(use)g
(the)h(graphical)d(in)n(terface)i(to)g Fq(BEAST)p Fp(,)g(and)g(the)g
(commandline)150 675 y(batc)n(h)35 b(mo)r(de.)60 b(These)35
b(are)f(curren)n(tly)g(the)i(only)e(in)n(terface)h(options,)h(although)
f(the)h(library)d(do)r(es)i(pro)n(vide)150 775 y(scop)r(e)f(for)g
(users)g(to)h(implemen)n(t)g(their)f(o)n(wn)g(in)n(terfaces,)i(e.g.)57
b(an)35 b(Activ)n(eX)g(in)n(terface)f(allo)n(wing)f Fq(BEAST)150
874 y Fp(demos)27 b(to)h(run)f(in)h(w)n(eb)f(pages)g(\(I)h(can)f
(dream!\).)150 1223 y Fj(12.9.1)113 b(The)37 b(Graphical)g(User)h(In)m
(terface)150 1437 y Fq(12.9.1.1)93 b(Starting)32 b(BEAST)150
1652 y Fp(T)-7 b(o)36 b(run)h(the)g(program,)g(y)n(ou)e(need)i(t)n(w)n
(o)f(things:)55 b(the)37 b(b)r(east)g(executable)f(\(called)g('b)r
(east'\))h(and)g(a)f(plugin.)150 1751 y(Plugins)29 b(are)g(usually)g
(kno)n(wn)g(as)g('shared)g(ob)5 b(jects')29 b(to)h(Lin)n(ux)f(users,)h
(or)f('dynamically)g(link)n(ed)g(libraries')g(in)150
1851 y(Windo)n(ws)23 b(parlance.)35 b Fq(BEAST)24 b Fp(do)r(esn't)f(do)
h(an)n(ything)f(at)g(all)g(without)h(ha)n(ving)f(at)h(least)f(one)g
(plugin)h(loaded.)150 1950 y(Plugins)32 b(ha)n(v)n(e)h(the)g(extension)
g('.so')g(on)g(Lin)n(ux)g(or)f('.dll')i(on)f(Windo)n(ws)g(and)g(are)f
(pro)r(duced)h(automatically)150 2050 y(when)h(y)n(ou)g(compile)g(some)
g Fq(BEAST)h Fp(co)r(de)f(with)h(the)f(pro)n(vided)f(mak)n(e\014le.)57
b(T)-7 b(o)34 b(get)g Fq(BEAST)h Fp(running)e(a)150 2150
y(plugin)28 b(called)f(plugin.so,)g(y)n(ou)g(w)n(ould)g(t)n(yp)r(e:)150
2407 y Fd(beast)37 b(./plugin.so)150 2685 y Fp(assuming)27
b(plugin.so)g(is)g(in)h(y)n(our)e(curren)n(t)h(directory)-7
b(.)150 3017 y Fq(12.9.1.2)93 b(Running)31 b(sim)m(ulations)e(in)i(the)
h(GUI)150 3231 y Fp(T)-7 b(o)29 b(start)g(a)g(sim)n(ulation,)g(go)g(to)
g(the)h Fa(File)37 b Fp(men)n(u)29 b(and)h(clic)n(k)f(on)g(the)h(sim)n
(ulation)f(of)g(y)n(our)f(c)n(hoice)h(from)g(a)g(list)150
3331 y(of)g(up)h(to)f(ten.)42 b(The)29 b(sim)n(ulation)g(should)g(no)n
(w)g(start)f(in)i(the)f(main)h(windo)n(w.)41 b(An)n(y)29
b(log)g(output)g(\(e.g.)42 b(\014tness)150 3430 y(scores\))34
b(will)j(app)r(ear)d(in)i(the)h(log)e(windo)n(w)g(b)r(elo)n(w.)61
b(Di\013eren)n(t)36 b(elemen)n(ts)g(ma)n(y)f(b)r(e)h(displa)n(y)n(ed)f
(b)n(y)g(toggling)150 3530 y(the)30 b(options)f(in)g(the)h
Fa(View)39 b Fp(men)n(u,)30 b(e.g.)42 b(y)n(ou)29 b(can)g(switc)n(h)g
(o\013)h(the)g(monitors,)f(trails,)g(collisions)f(or)h(ev)n(en)g(the)
150 3630 y(animats.)150 3777 y(The)23 b(sim)n(ulation)g(can)g(b)r(e)h
(paused)f(and)g(reset)g(in)h(the)g Fa(Simulation)30 b
Fp(men)n(u.)36 b Fa(High)30 b(sp)l(e)l(e)l(d)j Fp(mo)r(de)23
b(can)g(b)r(e)h(selected)150 3876 y(from)d(this)h(men)n(u)f(or)f(b)n(y)
h(pressing)g([space])f(in)i(the)f(main)h(windo)n(w.)34
b(When)22 b(high)f(sp)r(eed)h(mo)r(de)f(is)g(activ)-5
b(ated,)23 b(the)150 3976 y(sim)n(ulation)f(runs)h(as)f(fast)h(as)f(p)r
(ossible)g(but)i(do)r(es)e(not)h(up)r(date)g(the)g(displa)n(y)f
(\(except)h(during)g(screen)f(redra)n(ws\).)150 4308
y Fq(12.9.1.3)93 b(In)m(teracting)33 b(with)e(the)h(w)m(orld)150
4522 y Fp(Y)-7 b(ou)34 b(can)g(grab)f(hold)h(of)g(an)n(ything)f(whic)n
(h)h(isn't)g(\014xed)g(do)n(wn,)i(this)e(includes)g(all)g(animats)f
(and)h(an)n(y)g(other)150 4622 y(ob)5 b(jects)36 b(whic)n(h)h(ha)n(v)n
(e)f(their)g(mo)n(v)n(eable)g(prop)r(ert)n(y)f(set)i(to)g(true.)64
b(When)37 b(y)n(ou)f(clic)n(k)h(on)f(an)h(ob)5 b(ject,)39
b(it)e(will)150 4721 y(usually)e(displa)n(y)f(some)h(information)g(in)g
(the)h(status)f(bar)f(and)i(can)e(also)h(output)g(information)g(to)g
(the)h(log)150 4821 y(windo)n(w)27 b(\(programmers)e(note:)37
b(these)28 b(are)e(ac)n(hiev)n(ed)h(with)h Fq(T)-8 b(oString)59
b Fp(and)28 b Fq(OnClic)m(k)59 b Fp(resp)r(ectiv)n(ely)-7
b(.\))150 4968 y(T)g(o)25 b(c)n(hange)f(the)i(orien)n(tation)e(of)h
(the)h(curren)n(t)e(grabb)r(ed)g(ob)5 b(ject,)26 b(while)f(holding)g
(do)n(wn)g(with)h(the)g(left)f(button,)150 5067 y(clic)n(k)31
b(and)g(hold)g(the)g(righ)n(t.)47 b(Y)-7 b(ou)31 b(can)g(no)n(w)f(spin)
h(the)h(ob)5 b(ject)31 b(around)f(b)n(y)g(mo)n(ving)g(the)i(mouse)f
(around)f(the)150 5167 y(screen.)36 b(Animats)28 b(are)f(not)g(able)g
(to)h(mo)n(v)n(e)e(while)i(under)g(the)g(in\015uence)f(of)h(the)g
(mouse)f(p)r(oin)n(ter.)150 5314 y(Anno)n(yingly)-7 b(,)40
b(clic)n(king)d(on)g(ob)5 b(jects)38 b(often)g(leads)f(to)g(them)i(b)r
(eing)f(mo)n(v)n(ed)f(sligh)n(tly)g(whic)n(h)h(can)f(adv)n(ersely)150
5414 y(a\013ect)27 b(the)g(sim)n(ulation)f(\(it's)h(the)g(uncertain)n
(t)n(y)e(principle)i(at)f(w)n(ork)f(again...\).)36 b(T)-7
b(o)26 b(a)n(v)n(oid)f(this,)i(y)n(ou)f(can)g(cycle)150
5513 y(through)j(the)i(animats)e(b)n(y)h(pressing)f(tab)h(and)g
(shift-tab)g(to)g(go)f(bac)n(kw)n(ards.)42 b(\(Programmers:)c(in)31
b(this)f(case)150 5613 y Fq(OnSelect)59 b Fp(is)27 b(called.\))37
b(This)28 b(option)f(is)h(also)e(a)n(v)-5 b(ailable)26
b(in)i(the)g Fa(World)37 b Fp(men)n(u.)p -358 5723 V
-192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 293 301
293 300 bop 150 70 a Fq(12.9)31 b(A)h(short)f(user's)g(guide)2843
b(293)p 150 103 4034 4 v 150 333 a(12.9.1.4)93 b(Sa)m(ving)32
b(and)g(loading)150 533 y Fp(Dep)r(ending)c(on)e(the)i(sim)n(ulation,)e
(groups)g(of)h(animats)f(or)g(ob)5 b(jects)26 b(ma)n(y)h(b)r(e)g(sa)n
(v)n(ed)e(and)i(loaded)f(through)h(the)150 633 y Fa(File)32
b Fp(men)n(u.)k(When)25 b(a)g(p)r(opulation)f(-)h(that)g(is,)g(a)f
(group)g(of)h(animats)f(whic)n(h)h(are)e(b)r(eing)i(ev)n(olv)n(ed)e
(using)i(a)f(GA)h(-)150 732 y(is)j(sa)n(v)n(ed,)e(the)i(parameters)e
(and)h(history)g(of)h(the)g(GA)g(are)e(sa)n(v)n(ed)h(with)h(them,)g
(and)g(the)g(data)f(stored)g(usually)150 832 y(corresp)r(onds)j(to)h
(the)h(genot)n(yp)r(es)e(of)h(the)h(p)r(opulation)f(rather)g(than)g
(the)h(con\014guration)e(of)h(the)h(Animats)g(in)150
932 y(the)24 b(w)n(orld.)34 b(On)24 b(reloading)d(sa)n(v)n(ed)h(p)r
(opulations,)i(the)g(n)n(um)n(b)r(er)f(of)h(generations)d(for)i(that)h
(p)r(opulation)f(will)h(not)150 1031 y(b)r(e)i(re\015ected)g(in)h(the)f
(status)g(bar,)g(but)g(will)h(app)r(ear)e(in)h(log)f(windo)n(w)h
(output.)37 b(The)26 b(reason)e(for)i(this)g(is)g(that)h(if)150
1131 y(the)i(n)n(um)n(b)r(er)g(of)f(generations)f(registered)h(b)n(y)g
(the)h(sim)n(ulation)f(w)n(ere)g(link)n(ed)h(to)f(the)i(n)n(um)n(b)r
(er)e(of)h(generations)150 1231 y(for)35 b(an)n(y)f(giv)n(en)h(p)r
(opulation)g(in)g(the)h(sim)n(ulation,)h(things)e(w)n(ould)g(cease)f
(to)h(mak)n(e)f(sense)h(when)h(comparing)150 1330 y(di\013eren)n(t)28
b(generations)e(of)h(t)n(w)n(o)g(co)r(ev)n(olv)n(ed)f(p)r(opulations.)
150 1610 y Fj(12.9.2)113 b(Batc)m(h)37 b(mo)s(de)150
1810 y Fp(F)-7 b(or)22 b(long)g(sim)n(ulations)f(the)i(GUI)g(is)g(an)f
(unnecessary)f(burden.)35 b(Batc)n(h)22 b(mo)r(de)g(allo)n(ws)f(y)n(ou)
h(to)h(run)f(sim)n(ulations)150 1910 y(from)k(the)g(commandline)g
(without)h(using)f(the)h(GUI.)f(Batc)n(h)g(mo)r(de)g(only)g(w)n(orks)f
(for)g(sim)n(ulations)h(with)h(\014nite)150 2010 y(runs,)e
(generations,)e(assessmen)n(ts)g(and)i(timesteps)g(\(programmers:)32
b(the)25 b(default)g(is)g(one)f(run,)h(in\014nite)g(gener-)150
2109 y(ations,)j(1)h(assessmen)n(t)e(and)i(1000)e(timesteps)i(-)f(c)n
(hange)g(these)h(from)f(the)h(constructors)e(of)i(y)n(our)e(Sim)n
(ulation)150 2209 y(ob)5 b(jects.\))150 2356 y(The)28
b(syn)n(tax)e(for)h(running)h(in)g(batc)n(h)f(mo)r(de)h(is:)150
2565 y Fd(beastbatch)38 b([plugin])g([simname])g([<grpname>)g
(<filename>)g(...])150 2795 y Fp(Where)32 b Fi(plugin)d
Fp(is)j(the)h(name)e(of)h(y)n(our)f(compiled)h(sim)n(ulation,)g
Fi(simname)d Fp(is)j(the)h(name)e(of)h(the)h(sim)n(ulation)150
2894 y(y)n(ou)e(wish)h(to)f(run,)i(as)e(normally)g(found)h(in)g(the)g
Fa(File)39 b Fp(men)n(u.)49 b(Y)-7 b(ou)32 b(ma)n(y)f(optionally)g(sp)r
(ecify)h(groups)e(to)i(b)r(e)150 2994 y(sa)n(v)n(ed)24
b(at)i(the)g(end)g(of)g(the)g(sim)n(ulation)f(b)n(y)h(including)g(the)g
(name)f(of)h(the)g(group)f(\()p Fi(grpname)p Fp(\))e(and)j(a)f
Fi(filename)150 3094 y Fp(to)i(sa)n(v)n(e)g(to.)36 b(T)-7
b(o)27 b(sa)n(v)n(e)g(more)f(than)i(one)f(group,)g(include)h
(additional)f(pairs)f(at)i(the)g(end)g(of)f(the)h(command.)150
3240 y(The)23 b(only)g(situation)f(in)h(whic)n(h)g(y)n(ou)f(w)n(on't)h
(w)n(an)n(t)f(to)h(sp)r(ecify)g(group)f(and)h(\014le)g(names)g(on)f
(the)h(commandline)g(is)150 3340 y(if)j(y)n(ou)f(ha)n(v)n(e)f(implemen)
n(ted)i(y)n(our)f(o)n(wn)g(co)r(de)g(for)g(sa)n(ving)f(results,)i(or)e
(are)h(only)g(in)n(terested)g(in)h(the)g(log)f(output)150
3440 y(whic)n(h)j(will)f(b)r(e)h(redirected)f(to)h(standard)e(out.)150
3587 y(An)i(example)f(commandline)h(to)f(run)h(batc)n(h)f(mo)r(de:)150
3796 y Fd(./demos)37 b(-batch)g(Chase)g(Predators)h(predators.pop)h
(Prey)d(prey.pop)150 4026 y Fp(Note)27 b(that)g(this)g(w)n(on't)g(w)n
(ork,)e(since)i(the)g(supplied)h(co)r(de)e(has)g(in\014nite)i
(generations,)d(but)j(hop)r(efully)f(y)n(ou)f(get)150
4125 y(the)i(picture.)p 150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h
(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f
(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 294 302
294 301 bop -358 70 a Fq(294)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(12.10)136 b(T)-11 b(utorial)45 b(0:)61 b(A)44
b(note)i(on)e(the)i(co)t(de)150 571 y Fp(The)27 b(co)r(ding)g(st)n(yle)
f(of)h(the)h Fq(BEAST)f Fp(examples)f(ma)n(y)h(app)r(ear)f(un)n(usual)g
(to)h(a)g(seasoned)e(C++)h(programmer,)150 671 y(ha)n(ving)g(more)h(in)
g(common)g(with)h(ob)5 b(ject)27 b(orien)n(ted)f(scripting)h(languages)
e(and)i(higher-lev)n(el)f(languages)f(suc)n(h)150 770
y(as)d(C#.)35 b(The)23 b(t)n(w)n(o)f(main)h(departures)e(from)h(usual)h
(C++)f(st)n(yle)g(are)f(the)i(use)g(of)g(prop)r(erties,)f(and)h(the)g
(presence)150 870 y(of)28 b(a)f(fak)n(e)g Fi(This)f Fp(reference.)150
1195 y Fj(12.10.1)113 b(Prop)s(erties)150 1405 y Fp(Prop)r(erties)19
b(are)g(used)i(to)f(wrap)f(mem)n(b)r(er)i(v)-5 b(ariables)19
b(of)h(classes)f(in)i(the)f(same)g(w)n(a)n(y)f(as)h(accessors)e(and)i
(m)n(utators.)150 1505 y(Unlik)n(e)27 b(accessors)d(and)i(m)n(utators)g
(prop)r(erties)f(do)i(not)f(app)r(ear)g(as)g(function)h(calls,)f(but)h
(rather)f(lo)r(ok)g(lik)n(e)g(the)150 1604 y(original)g(v)-5
b(ariables.)36 b(So,)27 b(instead)g(of)h(writing:)150
1845 y Fd(object.SetRadius\(3\);)150 2107 y Fp(W)-7 b(e)28
b(can)f(write:)150 2348 y Fd(object.Radius)39 b(=)d(3;)150
2610 y Fp(What)23 b(are)g(the)g(b)r(ene\014ts)h(of)f(this?)36
b(Ultimately)24 b(prop)r(erties)e(will)h(allo)n(w)f(more)g(readable)g
(co)r(de)h(\(although)g(their)150 2710 y Fq(BEAST)28
b Fp(implemen)n(tation)g(is)f(only)g(in)h(its)g(infancy\),)g
(replacing:)150 2951 y Fd(object.SetRadius\(object)q(.Get)q(Rad)q
(ius\()q(\))41 b(+)36 b(5\);)150 3213 y Fp(with)150 3454
y Fd(object.Radius)j(+=)d(5;)150 3716 y Fp(In)26 b(the)g(mean)n(time,)g
(they)f(mainly)h(aid)f(co)r(de)h(readabilit)n(y)-7 b(.)35
b(One)25 b(other)g(minor)g(feature)g(whic)n(h)h(is)f(really)g(useful)
150 3815 y(when)k(de\014ning)g(\014tness)g(functions)g(whic)n(h)g
(require)e(t)n(yp)r(ecasting)i(in)g(order)e(to)i(a)n(v)n(oid)e
(compiler)h(errors)f(is)i(the)150 3915 y(as)e(template)h(metho)r(d.)37
b(Instead)28 b(of)f(writing:)150 4156 y Fd(fitness)37
b(=)f(static_cast<float>\(objec)q(t.G)q(etPo)q(wer)q(Used)q(\(\)\))q(;)
150 4418 y Fp(w)n(e)27 b(can)g(write)150 4659 y Fd(fitness)37
b(=)f(object.PowerUsed.as<floa)q(t>\()q(\);)150 4921
y Fp(whic)n(h)28 b(is)f(sligh)n(tly)g(shorter)f(and)i(a)f(whole)g(lot)h
(more)e(readable.)150 5067 y(If)19 b(y)n(ou're)f(a)h(hardcore)e(C++)h
(programmer)f(and)i(y)n(ou're)f(concerned)g(ab)r(out)h(sp)r(eed)g(and)g
(other)f(o)n(v)n(erheads)f(when)150 5167 y(using)34 b(prop)r(erties)f
(then)h(y)n(es,)h(y)n(our)e(fears)g(are)g(correct:)48
b(referencing)33 b(a)h(prop)r(ert)n(y)f(rather)f(than)j(a)e(mem)n(b)r
(er)150 5267 y(function)24 b(directly)f(do)r(es)g(lead)g(to)h(one)f
(additional)f(dereference)h(although)g(it)g(is)h(hop)r(ed)f(that)h(a)f
(go)r(o)r(d)g(compiler)150 5366 y(will)30 b(optimise)g(this)h(a)n(w)n
(a)n(y)-7 b(.)42 b(In)n(ternally)-7 b(,)31 b(prop)r(erties)e(are)g(not)
h(used)g(within)h(the)g Fq(BEAST)f Fp(library)-7 b(,)30
b(they)g(are)150 5466 y(simply)e(made)f(a)n(v)-5 b(ailable)26
b(for)h(con)n(v)n(enience)g(when)h(programming)d(through)i(the)h(API.)
150 5613 y(In)g Fq(BEAST)p Fp(,)g(prop)r(erties)e(are)h(normally)g
(named)g(as)g(the)h(capitalised)f(form)g(of)h(the)g(v)-5
b(ariable)26 b(they)i(wrap.)p -358 5723 V -192 5823 a
Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 295 303
295 302 bop 150 70 a Fq(12.10)30 b(T)-8 b(utorial)32
b(0:)42 b(A)32 b(note)f(on)h(the)g(co)s(de)2351 b(295)p
150 103 4034 4 v 150 333 a Fj(12.10.2)113 b(tutorial0)p
1038 333 34 4 v 38 w(2)150 533 y Fp(The)28 b Fi(This)e
Fp(reference)g(is)i(de\014ned)g(exactly)f(lik)n(e)g(this:)150
742 y Fd(#define)37 b(This)g(\(*this\))150 972 y Fp(And)30
b(is)g(used)f(to)h(clarify)f(co)r(de)g(b)n(y)h(making)f(the)h(scop)r(e)
f(of)g(mem)n(b)r(er)h(v)-5 b(ariables)28 b(explicit)i(in)g(functions)g
(whic)n(h)150 1072 y(use)e(them.)39 b(Admittedly)30 b(w)n(e)e(could)g
(just)h(as)e(easily)h(write)g Fi(this-)p Fo(>)d Fp(to)j(ac)n(hiev)n(e)f
(the)i(same)f(result,)g(but)h Fi(This)150 1171 y Fp(just)f(lo)r(oks)f
(neater.)36 b(So)27 b(there.)p 150 5723 4034 4 v 150
5823 a Fn(Generated)f(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Page: 296 304
296 303 bop -358 70 a Fq(296)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(12.11)136 b(T)-11 b(utorial)45 b(1:)61 b(Building)45
b(y)l(our)g(\014rst)f(Animat)150 564 y Fp(In)28 b(this)g(tutorial)f(w)n
(e)g(are)g(going)f(to:)275 803 y Fk(\210)42 b Fp(In)n(tro)r(duce)27
b(the)h(C++)e(in)n(terface)h(for)g(animats)275 980 y
Fk(\210)42 b Fp(Deriv)n(e)27 b(a)g(new,)g(mo)n(ving)g(animat)g(from)h
(the)g(Animat)g(base)f(class)275 1158 y Fk(\210)42 b
Fp(Pla)n(y)26 b(with)i(some)f(v)n(ery)f(simple)i(emergen)n(t)f(b)r(eha)
n(viour)150 1397 y(First)h(of)g(all,)g(here's)f(a)g(\(v)n(ery\))h(cut)g
(do)n(wn)g(v)n(ersion)e(of)i(the)g(animati's)g(C++)f(in)n(terface,)g
(con)n(tained)h(in)g(header)150 1496 y(\014le)g Fq(animat.h)p
Fp(:)150 1714 y Fd(class)37 b(Animat)g(:)e(public)i(WorldObject)150
1793 y({)150 1872 y(public:)291 1951 y(Animat\(\);)291
2030 y(~Animat\(\);)291 2109 y(virtual)g(void)143 b(Init\(\);)291
2187 y(void)425 b(Add\(std::string)39 b(name,)e(Sensor*)g(s\);)291
2345 y(virtual)g(void)143 b(Control\(\){})291 2503 y(virtual)37
b(void)143 b(OnCollision\(WorldObject*)42 b(r\){})150
2661 y(protected:)291 2739 y(SensorContainer)e(sensors;)291
2818 y(ToolContainer)f(tools;)291 2897 y(ControlContainer)h(controls;)
291 3055 y(Vector2D)285 b(velocity;)291 3134 y(int)460
b(maximumSpeed;)291 3213 y(double)355 b(maxRotateSpeed;)150
3292 y(};)150 3530 y Fp(As)26 b(y)n(ou)e(can)i(see,)f(Animat)h(is)g
(deriv)n(ed)e(from)i(W)-7 b(orldOb)5 b(ject,)25 b(whic)n(h)g(itself)i
(is)e(deriv)n(ed)g(from)g(Dra)n(w)n(able,)f(so)h(to)150
3630 y(really)f(understand)g(what)g(the)h(Animat)g(class)f(is)h(and)f
(isn146t)g(for,)g(w)n(e)g(need)h(a)f(quic)n(k)g(o)n(v)n(erview)f(of)i
(Dra)n(w)n(able)150 3729 y(and)i(W)-7 b(orldOb)5 b(ject.)150
3876 y(Dra)n(w)n(able)37 b(is)i(a)f(base)g(class)g(for)g(an)n(ything)g
(in)h(the)g(W)-7 b(orld)38 b(whic)n(h)h(y)n(ou)f(see)g(on)h(the)g
(screen,)h(so)f(animats,)150 3976 y(obstacles)29 b(and)h(ob)5
b(jects)29 b(in)h(the)h(w)n(orld,)e(and)h(also)f(displa)n(y)g(features)
h(suc)n(h)f(as)h(collision)f(dots,)h(animat)g(trails)150
4076 y(and)f(sensor)f(output)i(are)e(all)h(deriv)n(ed)g(from)g(Dra)n(w)
n(able.)40 b(The)30 b(only)f(features)f(of)i(Dra)n(w)n(able)e(imp)r
(ortan)n(t)h(here)150 4175 y(are:)291 4393 y Fd(virtual)37
b(void)143 b(Init\(\);)291 4551 y(Vector2D)426 b(location;)291
4630 y(double)496 b(orientation;)150 4868 y Fp(The)26
b(lo)r(cation)g(of)g(ob)5 b(jects)25 b(is)h(stored)g(as)f(a)h(v)n
(ector)f(from)h(the)g(b)r(ottom)g(left)h(corner)e(of)h(the)h(screen,)e
(so)h(lo)r(cation)150 4968 y(is)c(really)f(just)i(x,y)f(co)r
(ordinates.)34 b(The)22 b(orien)n(tation,)g(as)g(with)h(all)f(orien)n
(tations)e(in)j(the)f(program,)g(is)g(in)g(radians)150
5067 y(going)29 b(an)n(ti-clo)r(c)n(kwise)f(and)i(coun)n(ting)g(from)g
(east.)44 b(Init)31 b(is)f(called)g(at)g(the)g(start)g(of)g(a)g(sim)n
(ulation)f(and)h(giv)n(es)150 5167 y(the)e(ob)5 b(ject)27
b(the)h(c)n(hance)f(to)h(set)f(itself)h(up.)150 5314
y(W)-7 b(orldOb)5 b(ject)20 b(is)h(deriv)n(ed)g(from)f(Dra)n(w)n(able)g
(and)g(is)h(the)h(base)e(class)g(for)h(ev)n(erything)e(in)n(v)n(olv)n
(ed)h(in)h(sim)n(ulations)f(-)150 5414 y(animats,)26
b(obstacles)g(and)g(other)g(ob)5 b(jects)26 b(\(but)h(not)f(collision)g
(dots,)g(trails)g(or)g(other)g(displa)n(y)f(features)h(whic)n(h)150
5513 y(are)36 b(purely)g(Dra)n(w)n(able\).)64 b(W)-7
b(orldOb)5 b(ject)36 b(pro)n(vides)g(features)g(suc)n(h)h(as)f
(collision)g(detection,)j(and)e(lifecycle)150 5613 y(metho)r(ds)29
b(suc)n(h)g(as)f(Up)r(date)h(whic)n(h)g(is)g(called)f(at)h(the)g(start)
g(of)f(eac)n(h)g(frame)h(and)f(is)h(where)g(the)g(animat)f(do)r(es)p
-358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 297 305
297 304 bop 150 70 a Fq(12.11)30 b(T)-8 b(utorial)32
b(1:)42 b(Building)30 b(y)m(our)j(\014rst)f(Animat)2036
b(297)p 150 103 4034 4 v 150 333 a Fp(most)24 b(of)h(its)g
(145thinking146)d(and)i(mo)n(ving,)g(usually)g(dep)r(enden)n(t)i(on)e
(sensor)f(outputs,)j(but)f(w)n(e'll)f(b)r(e)h(lo)r(oking)150
432 y(at)i(ho)n(w)g(animats)h(are)e(con)n(trolled)g(in)i(more)f(detail)
h(later.)150 579 y(No)n(w)f(w)n(e)h(can)g(lo)r(ok)f(at)h(the)g(con)n
(ten)n(ts)f(of)h(the)h(Animat)f(class.)37 b(Animats)29
b(are)d(mobile,)j(so)e(they)h(ha)n(v)n(e)f(a)g(v)n(ector)150
679 y(describing)37 b(their)i(v)n(elo)r(cit)n(y)-7 b(.)68
b(They)38 b(are)g(equipp)r(ed)h(with)g(sensors,)g(whic)n(h)f(come)g(in)
h(a)f(v)-5 b(ariet)n(y)37 b(of)i(shap)r(es)150 778 y(and)g(sizes)f(and)
g(tell)h(them)g(ab)r(out)g(their)g(en)n(vironmen)n(t,)h(and)f(to)r
(ols,)i(whic)n(h)d(let)h(them)g(manipulate)g(their)150
878 y(en)n(vironmen)n(t.)56 b(The)34 b(Con)n(trolCon)n(tainer)e(is)i
(really)f(just)i(a)f(series)f(of)h(real)f(v)-5 b(alues,)36
b(the)f(\014rst)f(t)n(w)n(o)f(of)h(whic)n(h)150 978 y(con)n(trol)f(the)
h(left)h(and)f(righ)n(t)f(wheels.)56 b(This)34 b(t)n(w)n(o-wheel)f
(approac)n(h)f(w)n(orks)g(a)i(little)h(lik)n(e)e(trac)n(ks)g(on)h(a)f
(tank)150 1077 y(and)28 b(giv)n(es)e(the)j(animat)e(a)h(full)g(range)f
(of)h(mo)n(v)n(emen)n(t)e(from)i(as)f(few)h(inputs)h(as)e(p)r(ossible.)
37 b(The)28 b(sensors,)f(to)r(ols)150 1177 y(and)f(con)n(trols)f
(attributes)h(are)f(actually)g(maps,)i(a)e(class)h(pro)n(vided)f(b)n(y)
h(C++'s)f(Standard)g(T)-7 b(emplate)27 b(Library)150
1277 y(whic)n(h)j(w)n(orks)e(something)i(lik)n(e)f(a)h(v)n(ector,)f
(but)i(lets)f(us)g(en)n(umerate)f(the)h(con)n(ten)n(ts)g(using)f(an)n
(y)g(t)n(yp)r(e.)45 b(In)30 b(this)150 1376 y(case,)d(string)g(is)g
(used,)h(so)f(to)g(set)h(the)g(sp)r(eed)g(of)f(eac)n(h)g(wheel)h(to)f
(zero,)g(simply)g(put:)150 1582 y Fd(Controls["left"])40
b(=)35 b(0.0;)150 1660 y(Controls["right"])40 b(=)c(0.0;)150
1887 y Fp(As)24 b(it)g(is,)g(the)g(v)-5 b(anilla)23 b(Animat)h(class)f
(ab)r(o)n(v)n(e)f(w)n(on146t)f(do)j(an)n(ything.)35 b(Y)-7
b(ou)23 b(could)g(mak)n(e)g(some)g(plain)h(animats)150
1986 y(and)f(put)g(them)g(in)n(to)g(a)f(sim)n(ulation)g(but)h
(they146ll)f(just)h(sit)g(there.)35 b(T)-7 b(o)22 b(mak)n(e)g(animats)g
(whic)n(h)h(do)f(something,)150 2086 y(w)n(e)27 b(need)h(to)f(deriv)n
(e)g(a)g(new)h(class)f(from)g(the)h(one)f(pro)n(vided.)150
2365 y Fj(12.11.1)113 b(Making)37 b(Dancing)h(Animats)150
2565 y Fp(W)-7 b(e're)32 b(going)e(to)i(mak)n(e)f(Animats)h(whic)n(h)g
(follo)n(w)f(eac)n(h)g(other)g(around,)h(doing)f(the)h(conga.)48
b(If)32 b(y)n(ou'd)f(\014nd)h(a)150 2665 y(biological)23
b(metaphor)h(more)g(con)n(vincing,)h(w)n(e)f(are)g(going)g(to)h(create)
e(Musk)i(Shrews.)36 b(Juv)n(enile)24 b(Musk)h(Shrews)150
2765 y(follo)n(w)30 b(their)h(mother)f(around)f(b)n(y)i(forming)f(a)g
('cara)n(v)-5 b(an',)30 b(whic)n(h)g(is)h(just)g(a)g(trail)f(of)g
(shrews)g(biting)h(the)g(tail)150 2864 y(of)e(the)h(shrew)f(in)h(fron)n
(t.)42 b(Since)30 b(shrews)f(are)f(b)r(orn)h(blind,)i(this)f(b)r(eha)n
(viour)e(is)i(imp)r(ortan)n(t)f(to)g(their)h(surviv)-5
b(al,)150 2964 y(and)26 b(if)h(the)f(mother)g(is)g(lost,)g(a)g(desp)r
(erate)g(shrew)f(at)h(the)h(fron)n(t)f(of)g(a)g(cara)n(v)-5
b(an)24 b(will)i(clamp)g(on)g(to)g(whatev)n(er)f(is)150
3063 y(in)h(fron)n(t)e(of)i(it,)g(ev)n(en)f(if)g(it's)h(the)f(bac)n(k)g
(of)g(the)h(cara)n(v)-5 b(an.)34 b(Although)25 b(not)g(as)g(impressiv)n
(e)f(as)h(\015o)r(c)n(ks)f(and)h(shoals,)150 3163 y(this)31
b(is)g(still)g(a)g(simple)g(form)f(of)h(emergen)n(t)f(b)r(eha)n(viour:)
43 b(b)n(y)30 b(follo)n(wing)g(a)g(simple)i(rule,)f("follo)n(w)f(the)h
(nearest)150 3263 y(shrew)c(in)h(fron)n(t)f(of)h(y)n(ou",)e(shrews)h
(pro)r(duce)g(the)h(more)f(complex)g(b)r(eha)n(viour)f(of)i(forming)f
(cara)n(v)-5 b(ans.)150 3410 y(Our)21 b(shrew)g(will)h(b)r(e)g(a)f
(simple)h(t)n(w)n(o-sensor)d(animat,)j(wired)f(up)h(lik)n(e)g(a)f
(Braiten)n(burg)f(v)n(ehicle)h(with)h(t)n(w)n(o)f(sensors)150
3509 y(eac)n(h)28 b(driving)g(the)h(opp)r(osite)g(wheel.)40
b(The)29 b(\014le)g(w)n(e're)f(ab)r(out)g(to)h(write)g(will)g(b)r(e)g
(a)f(.cc)h(\014le,)g(called)g(something)150 3609 y(lik)n(e)e
('shrew.cc'.)150 3756 y(First)g(of)h(all,)f(w)n(e)h(need)f(to)h
(include)g(the)g(in)n(terface)f(header:)150 3961 y Fd(#include)38
b("wxsimenv.h")150 4187 y Fp(And)28 b(also)f(the)h(header)e(for)h(the)h
(Animat)h(class,)d(and)i(the)g(header)e(for)i(sensors:)150
4393 y Fd(#include)38 b("animat.h")150 4472 y(#include)g("sensor.h")150
4698 y Fp(Next)c(w)n(e)g(sp)r(ecify)g(the)g(namespace,)h(GASimEn)n(v.)
55 b(Ev)n(erything)32 b(in)j(the)f(sim)n(ulation)f(en)n(vironmen)n(t)g
(resides)150 4797 y(within)28 b(this)g(namespace.)150
5003 y Fd(using)37 b(namespace)h(GASimEnv;)150 5229 y
Fp(No)n(w)30 b(to)g(create)f(our)h(new)g(animat,)h(whic)n(h)f(will)g(b)
r(e)h(called)f Fi(Shrew)p Fp(.)43 b(The)30 b(whole)g(de\014nition)h
(for)e(the)i(class)e(is)150 5329 y(b)r(elo)n(w,)e(including)h(all)f
(metho)r(ds.)150 5534 y Fd(class)37 b(Shrew)f(:)g(public)h(Animat)g(//)
f(Shrew)h(is)e(derived)j(from)e(Animat)150 5613 y({)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 298 306
298 305 bop -358 70 a Fq(298)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fd(public:)291 412 y(Shrew\(\))291 490 y({)432
569 y(This.Add\("left",)40 b(ProximitySensor<Shrew>\()q(PI/)q(5,)h
(200.0,)c(-PI/20\)\);)432 648 y(This.Add\("right",)j
(ProximitySensor<Shrew>)q(\(PI)q(/5,)i(200.0,)37 b(PI/20\)\);)432
806 y(This.InitRandom)j(=)35 b(true;)178 b(//)36 b(Start)h(in)f(random)
h(locations)432 964 y(This.Radius)i(=)c(10.0;)319 b(//)36
b(Shrews)h(are)f(a)g(little)h(bigger)g(than)f(usual)291
1042 y(})291 1121 y(virtual)h(~Shrew\(\){})291 1279 y(virtual)g(void)g
(Control\(\))291 1358 y({)432 1437 y(This.Controls["left"])42
b(=)35 b(This.Sensors["right"]->)q(Get)q(Outp)q(ut\()q(\);)432
1516 y(This.Controls["right"])42 b(=)35 b(This.Sensors["left"]->)q(Get)
q(Outp)q(ut\()q(\);)291 1595 y(})150 1673 y(};)150 1875
y Fp(Note)i(that)g(the)g(o)n(v)n(erridden)e(Con)n(trol)h(metho)r(d)h
(has)f(the)h(k)n(eyw)n(ord)e Fi(virtual)f Fp(this)j(is)g(imp)r(ortan)n
(t)f(b)r(ecause)150 1975 y(it)d(ensures)e(that)i(ev)n(en)f(though)g
(the)h(sim)n(ulation)f(en)n(vironmen)n(t)f(do)r(esn't)i(kno)n(w)f
(whether)g(it)h(con)n(tains)e(plain)150 2075 y(animats,)38
b(sp)r(ecial)f(deriv)n(ed)e(animats)h(or)g(a)g(mixture,)j(the)e
(correct)e(con)n(trol)g(function)i(will)g(b)r(e)g(selected)f(at)150
2174 y(run)n(time.)f(Without)24 b(the)g(virtual)f(k)n(eyw)n(ord,)f(the)
h(new)h(Con)n(trol)e(metho)r(d)h(migh)n(t)g(b)r(e)h(ignored)e(and)h
(the)h(original)150 2274 y(empt)n(y)k(one)f(used)g(instead.)150
2421 y(No)n(w)g(that)h(w)n(e)f(ha)n(v)n(e)g(de\014ned)h(the)g(shrew,)f
(all)g(that's)h(left)g(to)f(do)h(is)f(set)h(up)g(the)g(sim)n(ulation.)
150 2602 y Fd(class)37 b(ShrewSimulation)i(:)d(public)h(Simulation)150
2681 y({)291 2760 y(Group<Shrew>)i(grpShrew;)150 2918
y(public:)291 2996 y(ShrewSimulation\(\):)291 3075 y(grpShrew\(30\))291
3154 y({)432 3233 y(This.Add\("Shrews",)i(grpShrew\);)291
3312 y(})150 3391 y(};)150 3593 y Fp(The)25 b(class)g
Fi(ShrewSimulation)19 b Fp(has)25 b(simply)g(b)r(een)h(deriv)n(ed)e
(from)h Fi(Simulation)p Fp(.)32 b(A)26 b(data)f(mem)n(b)r(er)g(has)g(b)
r(een)150 3692 y(added)30 b(called)g Fi(grpShrew)p Fp(,)e(whic)n(h)j
(is)f(a)g Fi(Group)e Fp(of)j Fi(Shrews)p Fp(.)43 b(A)31
b Fi(Group)d Fp(is)i(really)g(just)h(a)f Fi(vector)e
Fp(with)j(some)150 3792 y(additional)h(metho)r(ds)i(for)e(adding)h(its)
g(con)n(ten)n(ts)f(to)h(the)h Fi(World)p Fp(.)51 b Fi(ShrewSimulation')
o(s)27 b Fp(constructor)k(only)150 3892 y(do)r(es)d(t)n(w)n(o)g
(things:)38 b Fi(grpShrew)25 b Fp(is)k(con\014gured)e(to)i(create)e(30)
h(shrews,)f(and)i(then)g(the)f(group)g(is)g(added)g(to)h(the)150
3991 y Fi(World)d Fp(and)h(giv)n(en)g(the)h(name,)f("Shrews".)150
4138 y(Finally)-7 b(,)29 b(w)n(e)f(need)h(to)f(tell)h(the)g(sim)n
(ulation)f(en)n(vironmen)n(t)f(ab)r(out)i(the)f(new)h(sim)n(ulation)f
(class.)38 b(This)29 b(is)f(done)150 4238 y(using)f(macros:)150
4419 y Fd(BEGIN_SIMULATION_TABLE)291 4498 y(ADD_SIMULATION\("Shrews")q
(,)41 b(ShrewSimulation\))150 4577 y(END_SIMULATION_TABLE)150
4779 y Fp(As)22 b(y)n(ou)e(can)h(see,)i(sim)n(ulations)e(go)f(in)n(to)h
(a)h(table,)g(and)g(it's)f(p)r(ossible)h(to)f(compile)g(the)h(sim)n
(ulation)f(en)n(vironmen)n(t)150 4878 y(with)28 b(up)g(to)f(ten)h(sim)n
(ulations)f(whic)n(h)h(are)e(started)h(from)h(the)g(File)g(men)n(u.)150
5025 y(T)-7 b(o)27 b(compile)h(the)g(sim)n(ulation,)f(just)h(t)n(yp)r
(e)g(\(assuming)f(the)h(ab)r(o)n(v)n(e)e(co)r(de)h(is)h(sa)n(v)n(ed)e
(in)i(the)g(\014le)g(shrew.cc\):)150 5172 y(mak)n(e)f(shrew)150
5319 y(And)h(after)f(a)h(few)g(momen)n(ts)f(y)n(ou)g(will)g(b)r(e)h
(able)g(to)f(see)g(y)n(our)g(sim)n(ulation)g(in)h(action)f(b)n(y)g(t)n
(yping:)150 5466 y(./shrew)150 5613 y(Y)-7 b(ou)28 b(should)f(then)h(b)
r(e)g(lo)r(oking)f(at)g(a)g(screen)g(full)h(of)g(quite)g(confused,)f
(dancing)g(shrew-b)r(ots.)p -358 5723 V -192 5823 a Fn(Generated)f(on)f
(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 299 307
299 306 bop 150 70 a Fq(12.11)30 b(T)-8 b(utorial)32
b(1:)42 b(Building)30 b(y)m(our)j(\014rst)f(Animat)2036
b(299)p 150 103 4034 4 v 150 333 a Fj(12.11.2)113 b(More)37
b(things)g(to)g(try)150 533 y Fp(Y)-7 b(ou)54 b(can)g(see)g(from)g(the)
g(co)r(de)g(ab)r(o)n(v)n(e)f(ho)n(w)h(simple)g(it)h(is)f(to)g(set)g(up)
h(sensors)d(and)i(to)g(turn)h(sen-)150 633 y(sor)46 b(outputs)h(in)n
(to)f(wheel)h(inputs.)95 b(By)47 b(adding)f(more)g(sensors)f(y)n(ou)h
(can)h(create)f(more)g(complex)g(b)r(e-)150 732 y(ha)n(viours)31
b(including)i(steering)f(and)g(rudimen)n(tary)g(\015o)r(c)n(king.)51
b(F)-7 b(or)32 b(inspiration,)h(tak)n(e)f(a)g(lo)r(ok)g(at)h(this)g
(page:)150 832 y Fi(http://www.red3d)o(.co)o(m/)o(cw)o(r/b)o(oi)o(ds/)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 300 308
300 307 bop -358 70 a Fq(300)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(12.12)136 b(T)-11 b(utorial)45 b(2:)60 b(Adding)44
b(Ob)7 b(jects)46 b(and)e(In)l(teractiv)l(e)j(Animats)150
562 y Fp(In)28 b(this)g(tutorial)f(w)n(e)g(are)g(going)f(to:)275
777 y Fk(\210)42 b Fp(Add)28 b(ob)5 b(jects)27 b(to)g(the)h(w)n(orld)
275 946 y Fk(\210)42 b Fp(Mak)n(e)26 b(the)i(animats)f(in)n(teract)g
(with)h(those)g(ob)5 b(jects)275 1114 y Fk(\210)42 b
Fp(Hand-co)r(de)27 b(a)g(simple)h(neural)f(con)n(troller)275
1283 y Fk(\210)42 b Fp(Create)26 b(more)h(sp)r(ecialised)g(ob)5
b(jects)27 b(with)h(inheritance)275 1451 y Fk(\210)42
b Fp(T)-7 b(ak)n(e)26 b(a)h(lo)r(ok)g(at)h(ho)n(w)f(sensors)f(w)n(ork)
150 1666 y(Some)d(sim)n(ulations)g(need)g(only)h(animats)e(to)i(b)r(e)g
(presen)n(t)e(in)i(the)g(w)n(orld,)f(but)h(sometimes)f(it)h(will)g(b)r
(e)g(necessary)150 1766 y(to)34 b(in)n(tro)r(duce)g(new)h(t)n(yp)r(es)f
(of)g(ob)5 b(ject)34 b(whic)n(h)h(represen)n(t)e(other)g(features)h
(suc)n(h)g(as)g(w)n(alls,)h(fo)r(o)r(d)g(or)e(holes)h(in)150
1865 y(the)26 b(ground.)35 b(If)26 b(y)n(our)f(sim)n(ulation)g
(requires)f(the)i(animats)g(to)f(ha)n(v)n(e)g(an)g(in)n(teractiv)n(e)f
(relationship)h(with)h(those)150 1965 y(ob)5 b(jects,)25
b(suc)n(h)g(as)g(eating)g(fo)r(o)r(d)g(or)g(falling)g(in)g(holes,)g(y)n
(ou)g(will)g(need)h(to)f(add)g(a)g(small)g(amoun)n(t)g(of)g(co)r(de)g
(whic)n(h)150 2065 y(pro)r(duces)i(this)h(resp)r(onse.)150
2347 y Fj(12.12.1)113 b(Making)37 b(a)h(Cheese)g(Collecting)d(Animat)
150 2548 y Fp(F)-7 b(or)38 b(this)h(tutorial)f(w)n(e're)f(going)g(to)i
(mak)n(e)e(a)h(new)h(t)n(yp)r(e)g(of)f(animat)g(whic)n(h)h(lo)r(oks)e
(for)h(c)n(heese.)69 b('Cheese-)150 2648 y(CollectingAnimat')24
b(is)f(rather)g(long,)h(so)f(w)n(e'll)h(call)f(it)h(Mouse.)35
b(Mouse's)23 b(w)n(orld)g(has)g(only)g(t)n(w)n(o)g(t)n(yp)r(es)h(of)g
(thing)150 2747 y(in:)37 b(other)27 b(mice,)h(and)f(c)n(heese.)36
b(Cheeses)27 b(will)h(b)r(e)g(represen)n(ted)f(b)n(y)g(y)n(ello)n(w)f
(dots.)150 2894 y(W)-7 b(e'll)35 b(giv)n(e)f(Mouse)f(a)i(simpler)f
(sensor)f(than)h(Shrew)h(had,)h(called)e(a)g(NearestAngleSensor.)55
b(All)35 b(this)g(tells)150 2994 y(us)d(is)g(the)h(angle)e(to)h(the)h
(nearest)e(ob)5 b(ject)32 b(of)g(a)g(sp)r(eci\014ed)h(t)n(yp)r(e:)46
b(negativ)n(e)31 b(angles)g(for)h(ob)5 b(jects)32 b(on)g(the)g(left,)
150 3093 y(p)r(ositiv)n(e)26 b(angles)g(for)g(ob)5 b(jects)26
b(on)g(the)h(righ)n(t)f(and)g(zero)g(for)g(ob)5 b(jects)26
b(dead)g(ahead.)36 b(Initially)26 b(Mouse)g(will)h(ha)n(v)n(e)150
3193 y(a)d(simple)g(hand-co)r(ded)g(con)n(troller)e(whic)n(h)j(orien)n
(ts)e(him)i(to)n(w)n(ards)d(the)j(nearest)e(Cheese)h(and)g(then)h(mo)n
(v)n(es)e(him)150 3293 y(forw)n(ard,)j(but)i(later)f(on)g(w)n(e'll)h
(replace)e(this)i(con)n(troller)e(with)i(an)f(equiv)-5
b(alen)n(t)28 b(neural)f(net)n(w)n(ork.)150 3440 y(As)h(b)r(efore)f(w)n
(e)g(need)h(to)f(#include)i(the)f(\014les)f(wxsimen)n(v.h,)g
Fq(animat.h)g Fp(and)g Fq(sensor.h)p Fp(.)150 3651 y
Fd(#include)38 b("wxsimenv.h")150 3729 y(#include)g("animat.h")150
3808 y(#include)g("sensor.h")150 4040 y Fp(No)n(w,)26
b(w)n(e'll)f(de\014ne)h(the)h(Cheese)e(class.)35 b(Since)26
b(c)n(heese)g(is)f(just)i(a)e(stationary)f(ob)5 b(ject,)26
b(it)h(can)e(b)r(e)h(deriv)n(ed)f(from)150 4140 y(W)-7
b(orldOb)5 b(ject.)150 4351 y Fd(class)37 b(Cheese)g(:)e(public)i
(WorldObject)150 4430 y({)150 4509 y(public:)291 4588
y(Cheese\(\))291 4666 y({)432 4745 y(This.Radius)i(=)c(2.5f;)743
b(//)36 b(Cheeses)h(are)f(quite)h(small)432 4824 y
(This.SetColour\(ColourP)q(alet)q(te[)q(COLO)q(UR_)q(YELL)q(OW])q
(\);//)42 b(Cheeses)37 b(are)f(yellow)432 4903 y(This.InitRandom)k(=)35
b(true;)602 b(//)36 b(Cheases)h(are)f(scattered)291 4982
y(})291 5061 y(virtual)h(~Cheese\(\){})291 5218 y(//)f(When)g(a)g
(Cheese)h(is)f(Eaten,)h(it)f(reappears)i(in)d(a)h(random)h(location.)
291 5297 y(void)g(Eaten\(\))291 5376 y({)432 5455 y(This.Location)i(=)d
(myWorld->RandomLocation\()q(\);)291 5534 y(})150 5613
y(};)p -358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 301 309
301 308 bop 150 70 a Fq(12.12)30 b(T)-8 b(utorial)32
b(2:)42 b(Adding)31 b(Ob)5 b(jects)32 b(and)h(In)m(teractiv)m(e)g
(Animats)1447 b(301)p 150 103 4034 4 v 150 333 a Fp(The)30
b(constructor)e(for)i(Cheese)f(sets)h(the)g(radius)f(to)h(2.5,)g(the)g
(colour)f(to)g(y)n(ello)n(w,)h(and)f(the)i(initRandom)f(\015ag)150
432 y(to)c(true)g(so)g(that)h(c)n(heeses)e(will)i(b)r(e)g(randomly)e
(scattered)g(throughout)h(the)h(w)n(orld.)35 b(As)27
b(b)r(efore,)f(Cheese)g(b)r(ears)150 532 y(the)i(mandatory)e(virtual)h
(destructor.)150 679 y(One)35 b(new)g(metho)r(d)h(has)e(b)r(een)i
(added,)h(called)d(Eaten.)59 b(When)36 b(a)e(Mouse)h(bumps)g(in)n(to)g
(a)g(Cheese,)i(he)e(will)150 778 y(call)f(Eaten)h(on)f(the)h(c)n
(heese,)h(whic)n(h)f(then)g(causes)f(the)h(c)n(heese)f(to)h(b)r(e)g
(relo)r(cated)f(elsewhere)g(in)h(the)g(w)n(orld.)150
878 y(m)n(yW)-7 b(orld)26 b(is)g(a)g(p)r(oin)n(ter)g(to)g(whic)n(hev)n
(er)g(w)n(orld)f(the)i(c)n(heese)e(is)i(in.)37 b(RandomLo)r(cation)25
b(is)h(a)g(metho)r(d)h(of)f(W)-7 b(orld)150 978 y(whic)n(h)28
b(returns)e(a)i(pair)e(of)i(random)f(co)r(ordinates)f(somewhere)g(in)i
(the)g(b)r(oundary)f(of)h(the)f(w)n(orld.)150 1125 y(No)n(w)g(to)h
(de\014ne)f(Mouse:)150 1316 y Fd(class)37 b(Mouse)f(:)g(public)h
(Animat)150 1395 y({)150 1473 y(public:)291 1552 y(Mouse\(\))291
1631 y({)432 1710 y(This.Add\("angle",)j(NearestAngleSensor<Che)q(ese)q
(>\(\)\))q(;)432 1789 y(This.InitRandom)g(=)35 b(true;)291
1868 y(})291 2026 y(virtual)i(void)g(Control\(\))291
2104 y({)432 2183 y(double)g(o)f(=)f(This.Sensors["angle"]-)q(>Ge)q
(tOut)q(put)q(\(\);)432 2262 y(This.Controls["right"])42
b(=)35 b(0.5)i(-)e(\(o)h(>)g(0.0)g(?)f(o)h(:)f(0.0\);)432
2341 y(This.Controls["left"])42 b(=)35 b(0.5)h(+)g(\(o)g(<)f(0.0)h(?)g
(o)g(:)f(0.0\);)291 2420 y(})291 2578 y(virtual)i(void)g
(OnCollision\(WorldObject*)42 b(obj\))291 2656 y({)432
2735 y(Cheese*)c(cheese;)432 2893 y(if)e(\(IsKindOf\(obj,cheese\)\))42
b({)573 2972 y(cheese->Eaten\(\);)432 3051 y(})432 3209
y(Animat::OnCollision\(ob)q(j\);)291 3287 y(})150 3366
y(};)150 3578 y Fp(As)34 b(b)r(efore,)g(Mouse)f(is)h(deriv)n(ed)f(from)
g(Animat.)55 b(The)34 b(constructor)e(adds)h(just)h(one)f(sensor)f
(this)i(time,)i(the)150 3678 y(v)n(ery)27 b(simple)i
(NearestAngleSensor)e(whic)n(h)h(has)h(a)f(range)f(b)r(ey)n(ond)h(the)h
(limit)h(of)e(the)h(W)-7 b(orld)29 b(\(i.e.)40 b(unlimited)150
3777 y(for)27 b(our)g(purp)r(oses\),)g(and)g(as)g(usual)h(tells)f
(Mouse)g(to)h(start)f(in)h(a)f(random)g(place)g(in)h(the)g(w)n(orld.)
150 3924 y(The)22 b(Con)n(trol)e(metho)r(d)i(do)r(es)g(a)f(couple)g(of)
h(simple)g(calculations)e(whic)n(h)i(giv)n(e)f(Mouse)g(the)h(b)r(eha)n
(viour)e(w)n(e)i(w)n(an)n(t:)150 4024 y(the)k(righ)n(t)e(wheel)h(go)r
(es)f(at)h(half)h(sp)r(eed)f(plus)g(the)h(left)n(w)n(ards)e(magnitude)h
(of)g(the)h(angle)e(to)h(the)h(nearest)e(c)n(heese,)150
4124 y(the)i(left)h(wheel)e(go)r(es)g(at)h(half)g(sp)r(eed)g(plus)f
(the)i(righ)n(t)n(w)n(ards)c(magnitude)i(of)h(the)g(angle,)g(again)e
(something)h(lik)n(e)150 4223 y(a)i(Braiten)n(burg)f(v)n(ehicle.)150
4370 y(This)f(time)h(the)f(OnCollision)f(metho)r(d)i(is)f(also)f(o)n(v)
n(erridden.)34 b(OnCollision)24 b(is)i(called)e(on)h(an)g(ob)5
b(ject)25 b(whenev)n(er)150 4470 y(it)37 b(is)g(in)n(v)n(olv)n(ed)f(in)
h(a)g(collision.)64 b(The)37 b(argumen)n(t)f(is)h(a)f(p)r(oin)n(ter)h
(to)g(the)g(ob)5 b(ject)37 b(Mouse)f(is)h(colliding)g(with.)150
4569 y(Because)22 b(ev)n(ery)g(ob)5 b(ject)23 b(in)g(the)h(w)n(orld)e
(is)h(deriv)n(ed)g(from)g(W)-7 b(orldOb)5 b(ject,)23
b(a)g(handy)g(feature)g(of)g(C++)f(kno)n(wn)h(as)150
4669 y(p)r(olymorphism)j(allo)n(ws)f(us)h(to)g(use)g(a)g(p)r(oin)n(ter)
g(to)h(W)-7 b(orldOb)5 b(ject)25 b(to)i(p)r(oin)n(t)f(to)g(an)n(y)g(ob)
5 b(ject)26 b(of)h(a)e(class)h(deriv)n(ed)150 4769 y(from)k(W)-7
b(orldOb)5 b(ject.)43 b(The)31 b(ob)5 b(ject)29 b(b)r(eing)i(passed)e
(in)n(to)h(OnCollision)f(migh)n(t)h(b)r(e)g(a)g(Cheese,)g(or)f(it)i
(migh)n(t)f(b)r(e)150 4868 y(another)24 b(Mouse)h(-)g(b)r(oth)g(t)n(yp)
r(es)g(of)h(ob)5 b(jects)24 b(can)h(b)r(e)h(passed)e(in,)i(and)f(then)h
(a)e(test)i(can)f(b)r(e)g(done)g(to)g(determine)150 4968
y(ho)n(w)i(Mouse)g(acts.)150 5115 y(W)-7 b(e)27 b(don't)f(w)n(an)n(t)g
(our)f(mice)i(to)f(b)r(e)h(cannibals)e(so)h(w)n(e)g(need)g(to)g(test)h
(the)g(ob)5 b(ject)26 b(for)g(c)n(heesiness.)35 b(This)26
b(is)g(done)150 5214 y(using)d(a)g(system)h(kno)n(wn)f(as)g(Run)n(time)
h(T)n(yp)r(e)f(Iden)n(ti\014cation)h(\(R)-7 b(TTI\),)24
b(but)g(in)g(the)g(sim)n(ulation)f(en)n(vironmen)n(t,)150
5314 y(R)-7 b(TTI)28 b(is)f(encapsulated)g(in)n(to)g(t)n(w)n(o)g
(functions:)37 b(IsA)28 b(and)f(IsKindOf.)37 b(Both)27
b(functions)h(tak)n(e)f(t)n(w)n(o)g(p)r(oin)n(ters)g(as)150
5414 y(argumen)n(ts:)38 b(a)28 b(p)r(oin)n(ter)h(to)g(the)g(ob)5
b(ject)28 b(b)r(eing)h(tested)g(and)g(an)g(empt)n(y)f(p)r(oin)n(ter)h
(of)g(the)g(t)n(yp)r(e)g(w)n(e)f(are)g(testing)150 5513
y(for.)37 b(Both)27 b(functions)h(return)f(a)g(b)r(o)r(ol)h(-)f(true)h
(if)g(a)f(matc)n(h)h(is)f(made,)h(false)f(if)h(not.)37
b(IsA)28 b(will)g(only)f(return)g(true)150 5613 y(if)32
b(the)f(t)n(yp)r(e)h(of)f(b)r(oth)h(p)r(oin)n(ters)e(is)h(exactly)g
(the)g(same,)h(whereas)e(IsKindOf)h(will)g(return)g(true)g(if)h(the)f
(ob)5 b(ject)p 150 5723 V 150 5823 a Fn(Generated)26
b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h
(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6
b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 302 310
302 309 bop -358 70 a Fq(302)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fp(b)r(eing)g(tested)g(is)g(of)g(exactly)f(the)i(same)e(t)n(yp)r
(e,)i(or)e(if)i(it's)f(of)g(a)f(t)n(yp)r(e)h(deriv)n(ed)g(from)f(the)i
(t)n(yp)r(e)f(b)r(eing)g(tested.)150 432 y(W)-7 b(e'll)28
b(lo)r(ok)f(at)h(this)f(in)h(more)f(detail)h(later.)150
579 y(If)j(IsA)g(or)f(IsKindOf)g(return)h(true,)g(the)g(test)g(p)r(oin)
n(ter)g(whic)n(h)f(w)n(as)g(passed)g(in)h(\(in)g(this)g(case)f(a)h(p)r
(oin)n(ter)f(to)g(a)150 679 y(Cheese\))e(will)h(b)r(e)g(made)f(to)g(p)r
(oin)n(t)h(to)f(the)h(ob)5 b(ject)28 b(whic)n(h)h(has)f(successfully)g
(passed)f(the)i(test.)40 b(No)n(w)28 b(that)g(w)n(e)150
778 y(ha)n(v)n(e)e(a)i(Cheese)f(p)r(oin)n(ter)g(to)g(the)h(ob)5
b(ject,)28 b(w)n(e)f(can)g(call)h(Cheese)f(metho)r(ds)h(on)f(it,)h(so)f
(Eaten)g(is)g(called.)150 925 y(Finally)-7 b(,)24 b(once)f(the)h(o)n(v)
n(erridden)d(OnCollision)i(metho)r(d)g(is)h(o)n(v)n(er,)e(Animat's)i
(nativ)n(e)f(OnCollision)f(metho)r(d)i(still)150 1025
y(has)34 b(w)n(ork)e(to)j(do,)g(suc)n(h)f(as)g(stopping)f(the)i(Animat)
g(going)e(through)g(solid)h(obstacles)f(\(other)h(mice)g(in)h(this)150
1125 y(case\))27 b(so)g(Animat::OnCollision)g(is)g(called,)h(passing)e
(the)i(ob)5 b(j)28 b(p)r(oin)n(ter)f(through.)150 1271
y(The)h(Sim)n(ulation)f(is)h(set)f(up)h(in)g(m)n(uc)n(h)f(the)h(same)f
(w)n(a)n(y)g(as)g(b)r(efore,)g(but)h(with)g(t)n(w)n(o)f(Group)g(ob)5
b(jects:)150 1468 y Fd(class)37 b(MouseSimulation)i(:)d(public)h
(Simulation)150 1547 y({)291 1626 y(Group<Mouse>)i(theMice;)291
1705 y(Group<Cheese>)g(theCheeses;)150 1863 y(public:)291
1941 y(MouseSimulation\(\):)291 2020 y(theMice\(30\))291
2099 y(theCheeses\(50\))291 2178 y({)432 2257 y(This.Add\("Mice",)h
(theMice\);)432 2336 y(This.Add\("Cheeses",)h(theCheeses\);)291
2415 y(})150 2494 y(};)150 2711 y Fp(And)28 b(the)g(usual)f(sim)n
(ulation)g(table:)150 2908 y Fd(BEGIN_SIMULATION_TABLE)291
2987 y(ADD_SIMULATION\("Mice",)42 b(MouseSimulation\))150
3066 y(END_SIMULATION_TABLE)150 3283 y Fp(Compile)27
b(and)h(run)f(as)g(b)r(efore)h(and)f(y)n(ou)g(should)g(b)r(e)h(lo)r
(oking)f(at)g(a)g(bunc)n(h)h(of)g(greedy)e(mice.)150
3561 y Fj(12.12.2)113 b(In)m(tro)s(ducing)36 b(Neural)h(Con)m(trollers)
150 3761 y Fp(Tw)n(o)f(t)n(yp)r(es)g(of)g(Arti\014cial)g(Neural)g(Net)n
(w)n(ork)f(\(ANN\))j(are)d(pro)n(vided)h(with)g(the)h(sim)n(ulation)f
(en)n(vironmen)n(t:)150 3861 y(F)-7 b(eedF)g(orw)n(ardNet,)22
b(whic)n(h)g(is)g(a)f(feed-forw)n(ard)g(net)n(w)n(ork)f(with)j(one)e
(hidden)i(la)n(y)n(er;)f(and)g(DynamicalNet)g(whic)n(h)150
3961 y(is)38 b(a)g(fully-recurran)n(t)f(dynamical)h(neural)g(net)n(w)n
(ork.)67 b(F)-7 b(or)38 b(more)g(details)g(on)g(these)h(t)n(w)n(o)e
(classes)g(and)i(the)150 4060 y(net)n(w)n(orks)26 b(they)i(implemen)n
(t,)g(see)f(their)h(do)r(cumen)n(tation.)150 4207 y(As)j(a)f(test)h(of)
g(the)g(F)-7 b(eedF)g(orw)n(ardNet)30 b(class)f(and)i(a)f
(demonstration)g(of)h(one)f(w)n(a)n(y)g(of)g(using)h(it,)h(w)n(e)e
(will)h(co)r(de)150 4307 y(the)d(simple)g(con)n(troller)d(used)j(b)n(y)
f(the)h(mouse)f(in)n(to)h(an)f(equiv)-5 b(alen)n(t)28
b(neural)e(net)n(w)n(ork.)150 4454 y(This)i(is)f(what)h(the)g
(con\014guration)e(of)i(the)g(neural)f(net)n(w)n(ork)f(will)i(lo)r(ok)f
(lik)n(e:)36 b(Note)28 b(that)g(eac)n(h)f(no)r(de's)h(output)150
4553 y(will)h(b)r(e)h(put)f(through)g(a)g(simple)g(threshold)f
(function,)i(rather)e(than)i(the)f(sigmoid)f(function)i(normally)e
(used)150 4653 y(in)34 b(this)h(t)n(yp)r(e)f(of)g(neural)f(net)n(w)n
(ork.)55 b(The)34 b(t)n(w)n(o)g(w)n(eigh)n(ts)f(at)h(the)g(input)h(no)r
(des)f(ensure)g(that)g(if)g(the)h(angle)e(is)150 4753
y(p)r(ositiv)n(e,)e(one)f(side)g(of)g(the)h(net)n(w)n(ork)e(is)h(activ)
-5 b(ated,)31 b(if)g(the)g(angle)f(is)g(negativ)n(e)f(the)i(other)f
(side)g(is)g(activ)-5 b(ated.)150 4852 y(The)29 b(bias)f(v)-5
b(alues)29 b(of)g(-0.5)e(at)i(the)g(t)n(w)n(o)f(output)i(no)r(des)e
(ensure)h(that)g(eac)n(h)f(output)h(is)g(at)g(least)f(0.5,)g(as)h(in)g
(the)150 4952 y(original.)57 b(T)-7 b(o)34 b(adjust)h(the)g(mouse)f(to)
h(use)g(this)g(neural)f(net)n(w)n(ork,)h(w)n(e)f(need)h(to)g(mak)n(e)e
(the)j(follo)n(wing)d(co)r(de)150 5051 y(c)n(hanges:)150
5198 y(The)28 b(header)e(\014le)i(for)f(F)-7 b(eedF)g(orw)n(ardNet)27
b(needs)g(to)h(b)r(e)g(included:)150 5395 y Fd(#include)38
b("feedforwardnet.h")150 5613 y Fp(A)28 b(priv)-5 b(ate)27
b(mem)n(b)r(er)h(m)n(ust)f(b)r(e)h(added)g(for)f(the)h(F)-7
b(eedF)g(orw)n(ardNet)26 b(ob)5 b(ject:)p -358 5723 V
-192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 303 311
303 310 bop 150 70 a Fq(12.12)30 b(T)-8 b(utorial)32
b(2:)42 b(Adding)31 b(Ob)5 b(jects)32 b(and)h(In)m(teractiv)m(e)g
(Animats)1447 b(303)p 150 103 4034 4 v 150 333 a Fd(private:)291
412 y(FeedForwardNet)39 b(myBrain;)150 621 y Fp(The)29
b(ab)r(o)n(v)n(e)f(con\014guration)g(m)n(ust)h(b)r(e)h(set)g(up)f(in)h
(m)n(yBrain)e(when)h(the)h(Mouse)f(is)g(constructed.)42
b(T)-7 b(o)29 b(do)g(this,)150 721 y(c)n(hange)d(the)i(Mouse)f
(constructor)g(to:)150 910 y Fd(Mouse\(\):)150 988 y(myBrain\(1,)38
b(2,)e(2,)g(false\))150 1067 y({)291 1146 y(vector<float>)j(ffnConfig;)
291 1225 y(ffnConfig.push_back\()i(1.0f\);)c(//)f(1st)g(input)h(1st)f
(weight)291 1304 y(ffnConfig.push_back\()41 b(0.0f\);)c(//)f(1st)g
(input)h(bias)291 1383 y(ffnConfig.push_back\(-1.)q(0f\))q(;)k(//)36
b(2nd)g(input)h(1st)f(weight)291 1462 y(ffnConfig.push_back\()41
b(0.0f\);)c(//)f(2nd)g(input)h(bias)291 1540 y(ffnConfig.push_back\()k
(1.0f\);)c(//)f(1st)g(hidden)h(1st)f(weight)h(\(for)g(input)f(1\))291
1619 y(ffnConfig.push_back\()41 b(0.0f\);)c(//)f(1st)g(hidden)h(2nd)f
(weight)h(\(for)g(input)f(2\))291 1698 y(ffnConfig.push_back\(-0.)q
(5f\))q(;)41 b(//)36 b(1st)g(hidden)h(bias)291 1777 y
(ffnConfig.push_back\()k(0.0f\);)c(//)f(2nd)g(hidden)h(1st)f(weight)h
(\(for)g(input)f(1\))291 1856 y(ffnConfig.push_back\()41
b(1.0f\);)c(//)f(2nd)g(hidden)h(2nd)f(weight)h(\(for)g(input)f(2\))291
1935 y(ffnConfig.push_back\(-0.)q(5f\))q(;)41 b(//)36
b(2nd)g(hidden)h(bias)291 2093 y(This.myBrain.SetConfigu)q(rat)q(ion\()
q(ffn)q(Conf)q(ig\))q(;)291 2250 y(This.Add\("angle",)j
(NearestAngleSensor<Che)q(ese>)q(\(\)\))q(;)291 2329
y(This.InitRandom)g(=)35 b(true;)150 2408 y(})150 2618
y Fp(The)22 b(line)h(m)n(yBrain\(1,)f(2,)h(2,)g(true\))f(con\014gures)f
(the)h(built-in)h(F)-7 b(eedF)g(orw)n(ardNet)21 b(with)i(one)f(input,)i
(t)n(w)n(o)e(hidden)150 2717 y(la)n(y)n(ers,)k(t)n(w)n(o)i(outputs)g
(and)g(the)g(false)g(sp)r(eci\014es)g(that)h(a)e(simple)h(threshold)g
(function)h(should)f(b)r(e)g(used)g(rather)150 2817 y(than)g(the)g
(sigmoid)f(function.)150 2964 y(The)32 b(v)n(ector)e(created)h(in)h
(the)g(constructor)e(con)n(tains)g(the)i(v)-5 b(alues)32
b(from)f(the)h(diagram.)47 b(The)32 b(F)-7 b(eedF)g(orw)n(ard-)150
3063 y(Net146s)23 b(SetCon\014guration)f(metho)r(d)i(inserts)g(those)f
(v)-5 b(alues)24 b(in)n(to)f(the)h(correct)f(places)g(in)h(the)g(net)n
(w)n(ork.)34 b(This)150 3163 y(metho)r(d)40 b(of)g(con\014guring)e(net)
n(w)n(orks)g(is)i(not)f(v)n(ery)g(h)n(uman-friendly)-7
b(,)42 b(but)e(this)g(net)n(w)n(ork)f(w)n(asn146t)e(really)150
3263 y(designed)26 b(to)g(b)r(e)h(hand-con\014gured.)34
b(Ho)n(w)n(ev)n(er)25 b(the)h(idea)g(of)g(con\014guring)f(the)i(net)n
(w)n(ork)e(using)h(a)f(\014xed-length)150 3362 y(list)k(of)g(v)-5
b(alues)28 b(is)g(ideal)h(for)f(a)g(Genetic)h(Algorithm)g
(\(surprise!\))39 b(whic)n(h)29 b(w)n(e146ll)e(b)r(e)i(lo)r(oking)e(at)
i(in)g(the)g(next)150 3462 y(tutorial.)150 3609 y(Finally)-7
b(,)21 b(the)f(Mouse)f(needs)h(a)f(new)h(Con)n(trol)e(metho)r(d)i(whic)
n(h)f(feeds)h(the)g(input)h(from)e(the)h(sensor)e(in)n(to)h(m)n(yBrain)
150 3708 y(and)27 b(then)i(sets)e(the)h(motors)e(using)i(the)g(net)n(w)
n(ork146s)c(output.)150 3897 y Fd(virtual)37 b(void)g(Control\(\))150
3976 y({)291 4055 y(This.myBrain.SetInput\(0)q(,)k
(sensors["angle"]->GetO)q(utpu)q(t\(\))q(\);)291 4213
y(This.myBrain.Fire\(\);)291 4370 y(This.Controls["left"])g(=)36
b(This.myBrain.GetOutput\()q(0\);)291 4449 y(This.Controls["right"])42
b(=)35 b(This.myBrain.GetOutput)q(\(1\);)150 4528 y(})150
4738 y Fp(Compile)d(and)f(run)h(the)g(no)n(w-brain)n(y)e(Mouse)h(class)
g(and)h(the)g(mice)g(should)f(exhibit)h(exactly)g(the)g(same)f(b)r(e-)
150 4837 y(ha)n(viour)25 b(as)h(their)h(non-neural)e(predecessors.)35
b(So)26 b(m)n(uc)n(h)h(for)f(neural)g(nets,)h(but)g(at)g(least)f(w)n(e)
h(kno)n(w)f(it)h(w)n(orks!)150 5113 y Fj(12.12.3)113
b(Making)37 b(Mice)g(Pic)m(ky)150 5314 y Fp(Some)c(mice)g(will)g(eat)g
(an)n(ything,)h(as)e(long)h(as)f(it's)h(c)n(heese.)53
b(Some)33 b(mice)g(prefer)g(gruy)n(ere)e(and)i(w)n(on't)f(touc)n(h)150
5414 y(an)n(ything)38 b(else)h(and)g(some)f(other)h(mice)g(w)n(on't)g
(touc)n(h)g(the)g(fancy)g(stu\013)h(and)e(stic)n(k)h(to)g(plain)g(old)g
(c)n(heese.)150 5513 y(W)-7 b(e're)29 b(going)f(to)h(set)g(up)g(this)h
(sim)n(ulation)e(no)n(w,)h(to)g(demonstrate)f(the)i(use)f(of)g
(inheritance)g(in)g(constructing)150 5613 y(sim)n(ulations)e(and)g
(also)g(the)h(di\013erence)f(b)r(et)n(w)n(een)h(IsA)f(and)h(IsKindOf.)p
150 5723 V 150 5823 a Fn(Generated)e(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 304 312
304 311 bop -358 70 a Fq(304)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fp(First,)c(w)n(e'll)f(create)g(a)g(couple)g(of)h(new)f(c)n
(heeses)g(b)n(y)g(inheriting)h(from)f(the)h(c)n(heese)f(base)g(class.)
150 535 y Fd(class)37 b(Stilton)g(:)f(public)h(Cheese)150
613 y({)291 692 y(Stilton\(\))291 771 y({)432 850 y
(This.SetColour\(0.2f,)k(1.0f,)c(0.2f\);)291 929 y(})291
1008 y(virtual)g(~Stilton\(\){})150 1087 y(};)150 1244
y(class)g(Gruyere)g(:)f(public)h(Cheese)150 1323 y({)291
1402 y(Gruyere\(\))291 1481 y({)432 1560 y(This.SetColour\(1.0f,)k
(0.5f,)c(0.0f\);)291 1639 y(})291 1718 y(virtual)g(~Gruyere\(\){})150
1797 y(};)150 2019 y Fp(Both)h(of)g(these)h(new)f(classes)f(are)g(iden)
n(tical)h(to)h(c)n(heese)e(except)h(for)g(their)g(colour)f(and)i(their)
f(t)n(yp)r(e.)69 b(The)150 2119 y(diameter)25 b(and)h(initRandom)f
(\015ag)g(are)g(set)h(automatically)e(b)r(ecause)h(when)h(a)f(class)g
(is)g(constructed,)h(all)f(of)h(its)150 2219 y(base)h(class)g
(constructors)e(are)i(called)g(automatically)-7 b(.)150
2365 y(No)n(w)27 b(w)n(e'll)h(create)e(t)n(w)n(o)h(new)h(kinds)f(of)h
(mouse:)36 b Fi(PickyMouse)24 b Fp(and)j Fi(OldFashionedMouse)o
Fp(.)150 2567 y Fd(class)37 b(PickyMouse)h(:)d(public)i(Mouse)150
2646 y({)150 2725 y(public:)291 2804 y(virtual)g(~PickyMouse\(\){})291
2962 y(virtual)g(void)g(OnCollision\(WorldObject*)42
b(obj\))291 3041 y({)432 3119 y(Gruyere*)c(cheese;)432
3277 y(if)e(\(IsA\(obj,)i(cheese\)\))g({)573 3356 y(cheese->Eaten\(\);)
432 3435 y(})432 3593 y(This.Animat::OnCollisi)q(on\(o)q(bj\))q(;)291
3672 y(})150 3750 y(};)150 3908 y(class)f(OldFashionedMouse)j(:)35
b(public)i(Mouse)150 3987 y({)150 4066 y(public:)291
4145 y(virtual)g(~OldFashionedMouse\(\){})291 4303 y(virtual)g(void)g
(OnCollision\(WorldObject*)42 b(obj\))291 4381 y({)432
4460 y(Cheese*)c(cheese;)432 4618 y(if)e(\(IsA\(obj,)i(cheese\)\))g({)
573 4697 y(cheese->Eaten\(\);)432 4776 y(})432 4934 y
(This.Animat::OnCollisi)q(on\(o)q(bj\))q(;)291 5012 y(})150
5091 y(};)150 5314 y Fp(This)c(time,)i(only)d(OnCollision)g(needs)h(to)
g(b)r(e)g(o)n(v)n(erridden.)54 b(In)34 b(b)r(oth)g(cases)f(IsA)h(is)f
(used,)j(rather)d(than)h(Is-)150 5414 y(KindOf.)i(Th)n(us,)25
b(ev)n(en)g(though)f(Gruy)n(ere)g(is)h(a)g(kind)g(of)g(c)n(heese,)g
(OldF)-7 b(ashionedMouse)23 b(w)n(on't)i(ha)n(v)n(e)f(an)n(ything)150
5513 y(to)29 b(do)g(with)h(it.)43 b(Either)29 b(IsA)h(or)e(IsKindOf)h
(could)h(ha)n(v)n(e)e(b)r(een)i(used)f(in)h(the)g(co)r(de)f(for)g(Pic)n
(kyMouse)e(b)r(ecause)150 5613 y(Gruy)n(ere)f(is)i(the)g(only)f(class)g
(in)g(the)h(w)n(orld)f(whic)n(h)h(is)f(a)g(kind)h(of)g(Gruy)n(ere.)p
-358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 305 313
305 312 bop 150 70 a Fq(12.12)30 b(T)-8 b(utorial)32
b(2:)42 b(Adding)31 b(Ob)5 b(jects)32 b(and)h(In)m(teractiv)m(e)g
(Animats)1447 b(305)p 150 103 4034 4 v 150 333 a Fp(Add)40
b(four)g(more)f(groups)f(to)i(y)n(our)f(sim)n(ulation)g(-)h(one)f(for)h
(eac)n(h)f(of)h(the)g(new)g(classes)e(-)i(and)g(adjust)g(the)150
432 y(n)n(um)n(b)r(ers)30 b(accordingly)-7 b(,)29 b(then)h(see)g(what)g
(sort)g(of)g(c)n(haos)e(ensues!)45 b(It)30 b(migh)n(t)g(also)f(help)i
(to)f(add)g(constructors)150 532 y(to)d(the)h(di\013eren)n(t)g(mice)g
(to)f(set)h(their)g(colours)e(so)g(that)i(it's)g(clear)f(whic)n(h)g(t)n
(yp)r(e)h(is)g(whic)n(h.)150 807 y Fj(12.12.4)113 b(Mo)s(difying)37
b(Sensors)150 1007 y Fp(But...)56 b(there)33 b(is)h(a)f(problem.)54
b(Y)-7 b(our)34 b(mice)f(migh)n(t)h(kno)n(w)f(what)h(kind)f(of)h(c)n
(heese)f(they)h(lik)n(e)f(but)h(they)g(ha)n(v)n(e)150
1107 y(no)c(w)n(a)n(y)e(of)i(recognising)e(whic)n(h)i(is)g(whic)n(h)f
(from)h(a)f(distance.)44 b(They)30 b(all)f(still)h(ha)n(v)n(e)f(the)h
(same)g(sensor)e(whic)n(h)150 1206 y(simply)c(senses)f(an)n(y)f(c)n
(heese)h(in)h(the)g(hierarc)n(h)n(y)-7 b(,)23 b(so)g(they)h(c)n(harge)e
(to)n(w)n(ards)f(the)j(nearest)f(piece)h(of)f(c)n(heese)g(and)h(if)150
1306 y(it's)j(not)g(the)h(righ)n(t)e(kind,)i(they)f(just)h(carry)d(on)i
(c)n(harging)e(to)n(w)n(ards)g(it)j(b)r(ecause)e(it's)i(still)f(the)h
(nearest)e(c)n(heese.)150 1453 y(What)i(w)n(e)f(need)h(to)f(do)h(is)f
(mo)r(dify)h(the)g(sensor)e(so)h(that)h(it)g(detects)g(particular)e(t)n
(yp)r(es)i(of)f(c)n(heese.)150 1600 y(Sensors)33 b(in)j(the)f(sim)n
(ulation)f(en)n(vironmen)n(t)g(are)f(v)n(ery)h(\015exible)h(and)f(can)h
(b)r(e)g(com)n(bined)f(and)h(mixed)g(up)g(in)150 1699
y(v)-5 b(arious)26 b(w)n(a)n(ys.)36 b(There)27 b(are)f(four)i(elemen)n
(ts)f(to)h(ev)n(ery)e(sensor:)275 1900 y Fk(\210)42 b
Fp(A)27 b(sensor)g(class)f(whic)n(h)i(decides)f(whic)n(h)h(individuals)
f(in)h(the)g(w)n(orld)f(to)g(lo)r(ok)g(at:)451 2054 y
Fq({)41 b Fp(The)28 b(basic)f(Sensor)f(class)h(will)h(consider)e
(individuals)i(in)g(the)g(whole)f(w)n(orld.)451 2176
y Fq({)41 b Fp(AreaSensor)26 b(can)h(tak)n(e)g(on)g(a)h(sp)r(eci\014ed)
f(shap)r(e)h(and)f(only)g(lo)r(oks)g(at)h(individuals)f(in)h(that)g
(area.)451 2297 y Fq({)41 b Fp(T)-7 b(ouc)n(hSensor)26
b(will)i(only)f(consider)g(individuals)g(touc)n(hing)g(the)h(sensor's)e
(o)n(wner.)451 2418 y Fq({)41 b Fp(BeamSensor)23 b(casts)g(a)h(ra)n(y)e
(of)i(a)g(certain)g(angle)f(scop)r(e)g(and)h(radius)g(out)g(from)f(a)h
(particular)f(p)r(oin)n(t.)540 2518 y(A)28 b(scop)r(e)e(of)h(0)g(mak)n
(es)f(a)h(laser)e(whic)n(h)i(only)g(sees)g(dead)f(ahead,)h(a)g(scop)r
(e)f(of)h(2)g(x)g(pi)g(\(360)f(degrees\))540 2617 y(will)i(detect)g(an)
f(ob)5 b(ject)28 b(within)g(range)e(in)i(an)n(y)f(direction.)275
2772 y Fk(\210)42 b Fp(A)27 b(matc)n(hing)h(function)g(whic)n(h)f
(decides)h(whether)f(or)g(not)g(an)h(ob)5 b(ject)27 b(is)h(of)f(in)n
(terest)g(to)h(the)g(sensor.)275 2926 y Fk(\210)42 b
Fp(An)36 b(ev)-5 b(aluation)34 b(function)j(whic)n(h)e(obtains)g
(certain)g(information)g(ab)r(out)g(the)h(ob)5 b(ject,)37
b(e.g.)61 b(ho)n(w)35 b(far)358 3026 y(a)n(w)n(a)n(y)24
b(it)j(is,)f(what)h(the)f(angle)g(to)g(it)h(is,)f(ho)n(w)g(big)g(it)h
(is)f(or)g(p)r(erhaps)g(just)h(k)n(eeps)e(a)h(coun)n(t)g(of)h(the)f(n)n
(um)n(b)r(er)358 3125 y(of)h(ob)5 b(jects)27 b(sensed.)275
3280 y Fk(\210)42 b Fp(A)d(scaling)f(function)h(whic)n(h)g(tak)n(es)f
(the)i(output)f(of)g(the)g(ev)-5 b(aluation)39 b(function)g(and)g(mo)r
(di\014es)g(it)g(to)358 3379 y(represen)n(t)23 b(suitable)i(output.)36
b(F)-7 b(or)25 b(example,)g(the)g(NearestAngleSensor's)e(scaling)g
(function)j(tak)n(es)e(the)358 3479 y(angle)34 b(ev)-5
b(aluator's)33 b(output)j(and)f(scales)f(it)i(from)e(the)i(range)e(+/-)
f(pi)j(to)f(+/-)f(1,)i(whic)n(h)f(is)g(easier)f(to)358
3578 y(w)n(ork)25 b(with.)37 b(A)28 b(distance)f(sensor)e(usually)i
(has)f(to)h(scale)g(dep)r(ending)g(on)g(the)g(range)f(of)h(the)h
(sensor)d(and)358 3678 y(in)36 b(the)h(case)e(of)i(the)g(Pro)n(ximit)n
(ySensor)c(used)j(in)h(tutorial)f(one,)i(the)f(sensor)e(output)i(is)f
(in)n(v)n(erted)g(so)358 3778 y(that)27 b(smaller)f(distances)h(result)
g(in)g(greater)e(output.)38 b(The)27 b(scaling)f(function)i(migh)n(t)f
(also)f(incorp)r(orate)358 3877 y(features)h(suc)n(h)g(as)g(random)f
(noise)h(to)h(sim)n(ulate)f(real)g(sensors.)150 4078
y(Sensor)36 b(functions)i(aren't)e(really)g(functions)i(at)f(all,)i
(but)e(instead)g(are)g(function)g(ob)5 b(jects)37 b(\(or)f(functors\))h
(-)150 4178 y(classes)27 b(with)h(the)h(paren)n(thesis)d(op)r(erator)h
(\(or)g(op)r(erator\(\))g(\))h(o)n(v)n(erloaded)e(so)h(that)h(an)g(ob)5
b(ject)28 b(can)f(app)r(ear)g(to)150 4277 y(b)r(e)32
b(used)f(as)f(a)h(function.)48 b(F)-7 b(or)31 b(more)f(details)h(on)g
(ho)n(w)g(sensors)e(w)n(ork,)i(lo)r(ok)g(in)g(the)h(Sensors)e(section)h
(of)g(the)150 4377 y(do)r(cumen)n(tation.)150 4524 y(So)k(there)g(is)h
(really)e(no)h(suc)n(h)h(thing)f(as)g(a)g(NearestAngleSensor,)h(it's)f
(just)h(a)f(bunc)n(h)h(of)g(function)g(ob)5 b(jects)150
4623 y(attac)n(hed)24 b(to)h(a)f(class.)35 b(NearestAngleSensor)23
b(is)i(really)e(a)i(function)g(that)g(sets)g(up)g(a)f(Sensor)g(with)h
(the)g(correct)150 4723 y(ob)5 b(jects)27 b(and)h(returns)e(a)i(p)r
(oin)n(ter)f(to)g(that)h(sensor:)150 4903 y Fd(template)38
b(<class)f(T>)150 4982 y(Sensor*)g(NearestAngleSensor\(\))150
5061 y({)291 5140 y(Sensor*)g(s)f(=)g(new)g(Sensor\(Vector2D\(0.0,)41
b(0.0\),)36 b(0.0\);)291 5218 y(s->SetMatchingFunction\()q(new)42
b(MatchKindOf<T>\);)291 5297 y(s->SetEvaluationFunctio)q(n\(n)q(ew)f
(EvalNearestAngle\(s,)g(1000.0\)\);)291 5376 y
(s->SetScalingFunction\(n)q(ew)h(ScaleLinear\(-PI,)d(PI,)e(-1.0,)f
(1.0\)\);)291 5534 y(return)h(s;)150 5613 y(})p 150 5723
V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 306 314
306 313 bop -358 70 a Fq(306)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fp(So)41 b(to)g(c)n(hange)g(the)g(matc)n(hing)g(function)h(of)f
Fi(PickyMouse)p Fp(,)g(simply)h(add)f(this)h(line)f(to)g(the)h
Fi(PickyMouse)150 432 y Fp(constructor:)150 641 y Fd(sensors["cheese)e
(sensor"]->SetMatchingFunc)q(tio)q(n\(ne)q(w)h(MatchExact<Gruyere>\);)
150 871 y Fp(The)30 b(old)g(matc)n(hing)f(function)i(will)f(b)r(e)g
(deleted)h(and)f(a)f(new)h(Gruy)n(ere)f(matc)n(her)g(will)h(replace)f
(it.)45 b(A)30 b(similar)150 971 y(thing)e(can)f(b)r(e)h(done)f(for)g
(the)h Fi(OldFashionedMouse)150 1251 y Fj(12.12.5)113
b(Things)37 b(to)g(try)275 1451 y Fk(\210)42 b Fp(Set)24
b(the)h(fourth)f(parameter)e(of)j(the)f(constructor)f(for)g(m)n(yBrain)
g(to)h(true)g(so)g(that)g(a)g(sigmoid)g(activ)-5 b(ation)358
1551 y(function)34 b(is)g(used)g(rather)f(than)h(a)g(threshold.)55
b(See)34 b(if)h(y)n(ou)e(can)h(adjust)g(the)g(neural)g(net)g(w)n(eigh)n
(ts)f(to)358 1650 y(comp)r(ensate.)275 1816 y Fk(\210)42
b Fp(Duplicate)30 b(the)g(Eaten)e(metho)r(d)j(of)e(Cheese)g(inside)h
(Pic)n(kyMouse)e(and)h(c)n(hange)f(OldF)-7 b(ashionedMouse)358
1916 y(so)26 b(that)i(he)g(eats)f(Pic)n(kyMouse)f(instead)h(of)h
(Cheese.)p -358 5723 V -192 5823 a Fn(Generated)e(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 307 315
307 314 bop 150 70 a Fq(12.13)30 b(T)-8 b(utorial)32
b(3:)42 b(In)m(tro)s(ducing)32 b(the)g(Genetic)f(Algorithm)1685
b(307)p 150 103 4034 4 v 150 333 a Fl(12.13)136 b(T)-11
b(utorial)45 b(3:)61 b(In)l(tro)t(ducing)44 b(the)i(Genetic)f
(Algorithm)150 562 y Fp(In)28 b(this)g(tutorial)f(w)n(e)g(will:)275
772 y Fk(\210)42 b Fp(Replace)32 b(the)i(hand-con\014gured)e(neural)h
(net)g(from)g(tutorial)g(2)g(with)h(an)f(equiv)-5 b(alen)n(t)33
b(net,)j(dev)n(elop)r(ed)358 872 y(using)27 b(a)g(GA.)275
1036 y Fk(\210)42 b Fp(Set)28 b(up)f(a)h(predator-prey)d(sim)n(ulation)
i(and)g(co-ev)n(olv)n(e)e(more)i(complex)g(con)n(trollers.)150
1247 y(In)c(tutorial)g(t)n(w)n(o,)g(w)n(e)g(replaced)f(a)h(hand-co)r
(ded)g(con)n(troller)e(with)j(a)e(neural)h(equiv)-5 b(alen)n(t.)35
b(It)24 b(didn146t)e(allo)n(w)g(us)150 1346 y(to)27 b(do)h(an)n(ything)
e(new,)i(but)g(did)g(pro)n(v)n(e)e(the)i(neural)f(net)g(w)n(orks.)36
b(In)27 b(the)h(\014rst)f(part)h(of)f(this)h(tutorial,)f(w)n(e146ll)150
1446 y(get)k(rid)g(of)g(the)g(hand-con\014gured)f(neural)g(net)n(w)n
(ork)g(and)h(ev)n(olv)n(e)e(a)i(new)g(one)g(using)f(a)h(Genetic)g
(Algorithm.)150 1546 y(Again)c(w)n(e)g(w)n(on146t)f(b)r(e)i(doing)f(an)
n(ything)g(new,)h(but)g(it)g(should)f(b)r(e)h(a)g(reasonable)d(test)j
(for)f(the)h(GA.)150 1825 y Fj(12.13.1)113 b(Using)37
b(the)g(GA)150 2025 y Fp(The)d(Genetic)g(Algorithm)f(class)g(pro)n
(vided)g(with)h(the)g(sim)n(ulation)g(en)n(vironmen)n(t)f(has)g(n)n
(umerous)g(features,)150 2125 y(only)20 b(a)h(few)g(of)f(whic)n(h)h
(will)g(b)r(e)g(useful)g(in)g(an)n(y)f(giv)n(en)g(sim)n(ulation.)34
b(The)21 b(default)g(con\014guration)e(corresp)r(onds)g(as)150
2224 y(closely)25 b(as)h(p)r(ossible)g(to)g(the)h(original)d(GA)j(dev)n
(elop)r(ed)f(b)n(y)g(John)f(Holland.)37 b(It)26 b(uses)g
(roulette-wheel)g(selection)150 2324 y(and)33 b(single-p)r(oin)n(t)g
(crosso)n(v)n(er.)50 b(The)33 b(m)n(utation)h(op)r(erator)d(has)i
(di\013eren)n(t)g(defaults)h(dep)r(ending)f(on)g(whether)150
2424 y(y)n(our)c(genes)h(are)g(binary)-7 b(,)30 b(in)n(teger)g(or)g
(real)f(v)-5 b(alued.)46 b(If)31 b(y)n(ou)f(create)g(a)g(GA)h(whic)n(h)
f(w)n(orks)f(on)h(the)h(b)r(o)r(ol)g(t)n(yp)r(e,)150
2523 y(a)h(simple)h(NOT)g(function)g(is)f(used.)53 b(T)-7
b(o)32 b(ev)n(olv)n(e)f(neural)h(net)n(w)n(orks)f(ho)n(w)n(ev)n(er,)h
(w)n(e)g(need)h(to)g(w)n(ork)e(with)i(real)150 2623 y(v)-5
b(alues,)26 b(in)g(whic)n(h)g(case)f(the)h(default)h(m)n(utation)e(op)r
(erator)g(is)g(a)h(normally)f(distributed)h(random)f(function,)i(so)150
2722 y(genes)g(ma)n(y)g(b)r(e)h(m)n(utated)g(b)n(y)f(v)n(ery)f(high)i
(v)-5 b(alues)27 b(o)r(ccasionally)-7 b(,)26 b(but)i(usually)f(smaller)
g(c)n(hanges)f(will)i(o)r(ccur.)150 2869 y(GeneticAlgorithm)e(is)f
(actually)g(a)h(class)e(template)i(whic)n(h)g(tak)n(es)f(for)g(its)h
(template)g(parameters)e(the)i(t)n(yp)r(e)g(of)150 2969
y(the)g(individuals)g(to)g(b)r(e)h(ev)n(olv)n(ed)d(\(and)i(also)f(the)i
(t)n(yp)r(e)f(of)g(the)g(m)n(utation)g(function,)h(although)e(w)n(e)h
(can)f(ignore)150 3069 y(that)e(parameter)e(as)g(w)n(e)h(will)h(b)r(e)g
(using)f(its)g(default\).)36 b(The)23 b(class)e(sp)r(eci\014ed)i(for)f
(the)h(\014rst)f(template)h(parameter)150 3168 y(needs)k(to)h(con)n
(tain)f(certain)g(metho)r(ds)h(b)r(efore)f(the)h(GA)g(can)f(w)n(ork)f
(on)i(it:)275 3379 y Fk(\210)42 b Fp(It)22 b(m)n(ust)g(ha)n(v)n(e)e(a)i
(GetGenot)n(yp)r(e)g(metho)r(d,)h(whic)n(h)f(returns)f(a)g(v)n(ector)g
(of)g(genes)g(\(genot)n(yp)r(e\))h(corresp)r(ond-)358
3478 y(ing)27 b(to)g(the)h(ob)5 b(ject146s)26 b(con\014guration)g
(\(phenot)n(yp)r(e\).)275 3643 y Fk(\210)42 b Fp(It)35
b(m)n(ust)g(ha)n(v)n(e)e(a)i(SetGenot)n(yp)r(e)g(metho)r(d,)i(whic)n(h)
e(tak)n(es)f(a)g(v)n(ector)g(of)h(genes)f(for)g(its)h(argumen)n(t)f
(and)358 3742 y(con\014gures)26 b(an)h(individual)h(accordingly)-7
b(.)275 3907 y Fk(\210)42 b Fp(It)22 b(m)n(ust)h(ha)n(v)n(e)f(a)g
(GetFitness)h(metho)r(d,)h(whic)n(h)e(returns)g(a)h(\015oat)f(corresp)r
(onding)e(to)j(the)g(individual146s)358 4007 y(\014tness,)32
b(the)f(higher)g(the)g(b)r(etter.)48 b(F)-7 b(or)30 b(roulette)h(wheel)
g(selection,)h(\014tness)f(scores)f(m)n(ust)h(b)r(e)g(p)r(ositiv)n(e.)
358 4106 y(\(If)k(y)n(our)f(individuals)g(don146t)g(alw)n(a)n(ys)f(pro)
r(duce)h(p)r(ositiv)n(e)g(\014tness)h(scores,)g(the)h(GA)f(can)f(clamp)
h(or)358 4206 y(scale)26 b(them,)j(see)e
(GeneticAlgorithm::SetFitnessFix)h(for)f(details\).)150
4416 y(There)33 b(are)f(a)g(n)n(um)n(b)r(er)h(of)g(other)g(features)f
(required)h(b)n(y)f(the)i(GA)f(for)g(ev)n(olv)-5 b(able)32
b(individuals,)i(so)f(to)g(mak)n(e)150 4516 y(things)22
b(as)g(easy)g(as)f(p)r(ossible,)j(an)e(abstract)f(base)h(class)g
(called)g(Ev)n(olv)n(er)e(is)i(supplied.)36 b(If)22 b(y)n(ou)g(inherit)
h(from)f(this)150 4615 y(class)27 b(and)h(pro)n(vide)e(suitable)i
(GetGenot)n(yp)r(e,)g(SetGenot)n(yp)r(e)g(and)g(GetFitness)g(metho)r
(ds,)h(the)f(other)f(details)150 4715 y(will)h(b)r(e)g(\014lled)g(in)g
(automatically)-7 b(.)150 4862 y(But)35 b(w)n(ait!)59
b(Y)-7 b(ou)35 b(don146t)e(ev)n(en)i(need)g(to)g(inherit)g(y)n(our)f(o)
n(wn)g(Ev)n(olv)n(er!)56 b(An)36 b(Animat)f(class)f(with)i(a)e(built)
150 4962 y(in)c(feed-forw)n(ard)d(net)n(w)n(ork)h(and)h(GA)h
(compatibilit)n(y)f(is)g(already)f(pro)n(vided,)g(called)h(Ev)n
(oFFNAnimat.)42 b(Ev)n(o-)150 5061 y(FFNAnimat)30 b(returns)e(the)h
(neural)f(net146s)g(con\014guration)f(v)n(ector)g(as)h(its)h(genot)n
(yp)r(e,)g(it)g(initialises)g(the)g(net)150 5161 y(with)h(one)g(input)h
(p)r(er)f(sensor)e(and)i(one)f(output)i(p)r(er)f(con)n(trol)e(\(i.e.)45
b(the)30 b(righ)n(t)f(and)h(left)g(wheels)g(in)g(the)h(basic)150
5260 y(Animat\))d(and)g(there)f(is)h(also)e(an)i(automated)f(Con)n
(trol)f(metho)r(d.)150 5407 y(The)i(co)r(de)f(for)g(the)h(ev)n(olving)e
(feed-forw)n(ard)g(net)i(mouse)f(lo)r(oks)g(lik)n(e)g(this:)150
5613 y Fd(class)37 b(EvoMouse)g(:)f(public)h(EvoFFNAnimat)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 308 316
308 315 bop -358 70 a Fq(308)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fd({)150 412 y(public:)291 490 y(EvoMouse\(\):)39
b(cheesesFound\(0\))291 569 y({)432 648 y(This.Add\("angle",)h
(NearestAngleSensor<Che)q(ese)q(>\(\)\))q(;)432 727 y(This.InitRandom)g
(=)35 b(true;)432 806 y(This.InitFFN\(4\);)291 885 y(})291
1042 y(virtual)i(void)g(OnCollision\(WorldObject*)42
b(obj\))291 1121 y({)432 1200 y(Cheese*)c(cheese;)432
1358 y(if)e(\(IsKindOf\(obj,cheese\)\))42 b({)573 1437
y(cheesesFound++;)573 1516 y(cheese->Eaten\(\);)432 1595
y(})432 1752 y(This.EvoFFNAnimat::OnC)q(olli)q(sio)q(n\(ob)q(j\);)291
1831 y(})291 1989 y(virtual)37 b(float)g(GetFitness\(\)const)291
2068 y({)432 2147 y(return)g(cheesesFound)i(>)d(0)f(?)h
(static_cast<float>\(chees)q(esFo)q(und)q(\))41 b(/)36
b(static_cast<float>\(powerU)q(sed)q(\))41 b(:)36 b(0;)291
2226 y(})291 2383 y(virtual)h(string)g(ToString\(\)const)291
2462 y({)432 2541 y(ostringstream)i(out;)432 2620 y(out)d(<<)g(")g
(Power)h(used:)f(")g(<<)g(powerUsed;)432 2699 y(return)h(out.str\(\);)
291 2778 y(})150 2935 y(private:)291 3014 y(int)f(cheesesFound;)110
b(//)36 b(The)g(number)h(of)f(cheeses)h(collected)h(for)e(this)g(run.)
150 3093 y(};)150 3329 y Fp(The)21 b(constructor)e(sets)i(up)g(the)g
(sensor)e(and)i(initRandom)f(as)h(b)r(efore,)g(but)h(no)n(w)e(also)g
(initialises)g(c)n(heesesF)-7 b(ound)150 3429 y(to)30
b(0)f(and)g(calls)h(InitFFN)g(to)g(set)g(up)g(a)f(feed-forw)n(ard)f
(net)n(w)n(ork)g(with)j(t)n(w)n(o)e(hidden)h(no)r(des.)43
b(The)30 b(n)n(um)n(b)r(er)f(of)150 3529 y(inputs)d(is)g(one,)g(since)f
(there)h(is)g(only)f(one)h(sensor)e(and)i(the)g(n)n(um)n(b)r(er)f(of)h
(outputs)g(is)g(t)n(w)n(o,)f(one)h(for)f(eac)n(h)g(wheel.)150
3628 y(This)i(1-2-2)d(setup)j(matc)n(hes)f(the)h(hand-con\014gured)e
(net)n(w)n(ork)h(so)g(there)g(is)h(go)r(o)r(d)f(reason)f(to)h(b)r
(eliev)n(e)h(that)g(the)150 3728 y(GA)h(will)g(b)r(e)g(able)f(to)h
(\014nd)g(a)f(suitable)g(net)n(w)n(ork.)150 3875 y(OnCollision)k(is)h
(exactly)f(as)h(b)r(efore)g(except)g(that)g(eac)n(h)f(c)n(heese)h
(eaten)g(incremen)n(ts)f(c)n(heesesF)-7 b(ound)32 b(b)n(y)f(one,)150
3974 y(and)c(Ev)n(oFFNAnimat::OnCollision)g(is)g(no)n(w)g(called)g(at)h
(the)g(end.)150 4121 y(Finally)-7 b(,)26 b(GetFitness)h(returns)e(the)h
(n)n(um)n(b)r(er)f(of)h(c)n(heeses)f(found,)h(divided)h(b)n(y)e(p)r(o)n
(w)n(erUsed)g(whic)n(h)g(is)h(the)g(total)150 4221 y(activ)-5
b(ation)32 b(of)h(all)g(the)g(con)n(trols)e(for)h(the)i(duration)e(of)h
(the)g(assessmen)n(t.)51 b(This)33 b(p)r(enalises)f(mice)h(that)g(latc)
n(h)150 4321 y(on)n(to)h(the)h(unrealistic)f(tactic)h(of)f(going)g(as)g
(fast)g(as)g(p)r(ossible)h(in)g(one)f(direction,)i(pic)n(king)e(up)h
(more)f(c)n(heese)150 4420 y(simply)28 b(due)f(to)h(the)g(greater)e
(area)g(co)n(v)n(ered.)150 4567 y(W)-7 b(e)35 b(also)e(need)h(to)g(set)
h(up)f(the)h(sim)n(ulation.)56 b(This)34 b(time,)j(instead)d(of)g(a)g
(Group,)i(the)e(mice)h(will)f(go)f(in)n(to)h(a)150 4667
y(P)n(opulation.)i(This)27 b(is)h(a)f(similar)g(con)n(tainer)f(to)i
(Group)f(but)h(also)f(has)g(an)g(asso)r(ciated)f(GA)j(whic)n(h)e(is)h
(used)f(on)150 4766 y(the)h(p)r(opulation)f(at)h(the)g(end)g(of)f(eac)n
(h)g(assessmen)n(t.)150 4982 y Fd(class)37 b(MouseSimulation)i(:)d
(public)h(Simulation)150 5061 y({)291 5140 y(Population<EvoMouse>)288
b(theMice;)291 5218 y(GeneticAlgorithm<EvoMou)q(se>)77
b(theGA;)291 5297 y(Group<Cheese>)533 b(theCheeses;)150
5455 y(public:)291 5534 y(MouseSimulation\(\):)291 5613
y(theGA\(0.7f,)39 b(0.05f\),)p -358 5723 V -192 5823
a Fn(Generated)26 b(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h
(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n
(ulation)e(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p
eop
%%Page: 309 317
309 316 bop 150 70 a Fq(12.13)30 b(T)-8 b(utorial)32
b(3:)42 b(In)m(tro)s(ducing)32 b(the)g(Genetic)f(Algorithm)1685
b(309)p 150 103 4034 4 v 291 333 a Fd(theMice\(30,)39
b(theGA\),)291 412 y(theCheeses\(50\))291 490 y({)432
569 y(This.theGA.SetSelectio)q(n\(GA)q(_RA)q(NK\);)432
648 y(This.theGA.SetParamete)q(r\(GA)q(_RA)q(NK_S)q(PRE)q(SSUR)q(E,)j
(2.0\);)432 806 y(This.Add\("Mice",)287 b(theMice\);)432
885 y(This.Add\("Cheeses",)182 b(theCheeses\);)291 964
y(})150 1042 y(};)150 1274 y Fp(The)34 b(P)n(opulation)f(of)h('ev)n
(omice')f(is)h(con\014gured)f(with)i(a)e(reference)h(to)g(a)f(GA)i
(whic)n(h)f(w)n(orks)e(on)i(Ev)n(oMouse)150 1373 y(ob)5
b(jects,)27 b(this)h(GA)g(will)g(therefore)f(b)r(e)h(used)f(at)h(the)g
(end)g(of)f(eac)n(h)g(generation.)150 1520 y(Rather)d(than)h(using)f
(roulette)g(wheel)g(selection,)h(rank)e(selection)h(has)g(b)r(een)h(sp)
r(eci\014ed)g(with)g(a)f(selection)g(pres-)150 1620 y(sure)f(of)i(t)n
(w)n(o.)35 b(This)24 b(means)f(that)i(at)f(the)g(end)h(of)f(the)g
(generations)f(the)h(individuals')g(c)n(hances)f(of)h(repro)r(ducing)
150 1719 y(dep)r(end)33 b(on)f(ho)n(w)g(they)g(rank)f(in)i(the)g(o)n(v)
n(erall)d(p)r(opulation.)50 b(Selection)33 b(pressure)d(ranges)h(b)r
(et)n(w)n(een)h(one)g(and)150 1819 y(t)n(w)n(o,)27 b(one)h(means)f
(that)h(all)g(individuals)g(ha)n(v)n(e)e(an)i(equal)f(c)n(hance)g(of)h
(going)f(on)g(to)h(the)g(next)g(generation)f(\(not)150
1919 y(v)n(ery)i(useful!\))47 b(whereas)30 b(t)n(w)n(o)f(means)i(that)g
(in)f(a)h(p)r(opulation)f(of)h(t)n(w)n(elv)n(e,)f(the)h(sixth)g
(individual)g(has)f(half)h(as)150 2018 y(m)n(uc)n(h)e(c)n(hance)g(of)g
(repro)r(ducing)f(as)h(the)g(b)r(est,)i(the)e(third)h(has)e(three)i
(quarters)d(the)j(c)n(hance)f(of)g(the)g(b)r(est,)i(the)150
2118 y(nin)n(th)d(has)f(one)g(quarter)g(the)h(c)n(hance)e(of)i(the)g(b)
r(est)g(and)g(so)e(on.)150 2265 y(F)-7 b(or)30 b(information)g(on)g
(the)h(other)f(options)g(and)g(selection)g(metho)r(ds)h(a)n(v)-5
b(ailable,)30 b(see)g(the)h(GeneticAlgorithm)150 2364
y(do)r(cumen)n(tation.)150 2511 y(Compile)d(and)h(run)f(the)h(sim)n
(ulation)f(same)g(as)g(usual.)39 b(This)29 b(time)g(the)g(animats)f
(start)f(o\013)i(w)n(andering)e(ab)r(out)150 2611 y(with)36
b(no)g(idea)f(ab)r(out)h(c)n(heese)f(or)g(its)h(uses.)61
b(A)n(t)36 b(the)g(end)g(of)g(a)g(certain)f(p)r(erio)r(d)h(\(the)g
(time)g(limit)h(defaults)150 2710 y(to)32 b(1000)f(time)i(steps\))f
(the)h(animats)f(will)g(b)r(e)h(tak)n(en)f(out)g(of)h(the)g(w)n(orld)e
(and)h(put)h(through)f(the)h(GA.)f(Their)150 2810 y(o\013spring)24
b(then)h(app)r(ear)e(as)h(the)h(next)g(generation.)34
b(T)-7 b(o)24 b(mak)n(e)g(this)h(pro)r(cess)e(go)h(faster,)g(go)g(to)g
(the)h(Sim)n(ulation)150 2910 y(men)n(u)31 b(and)h(clic)n(k)e(on)h
(High)h(Sp)r(eed.)48 b(The)32 b(displa)n(y)e(will)i(stop)f(up)r(dating)
g(and)h(the)f(sim)n(ulation)g(en)n(vironmen)n(t)150 3009
y(will)25 b(go)f(at)h(the)g(highest)g(sp)r(eed)g(y)n(our)f(mac)n(hine)g
(is)h(capable)f(of.)36 b(After)26 b(a)e(few)h(more)f(generations,)g
(clic)n(k)h(cancel)150 3109 y(and)34 b(see)g(if)h(y)n(our)e(mice)i(are)
e(doing)h(an)n(ything)f(useful.)58 b(Y)-7 b(ou)34 b(should)h(exp)r(ect)
f(to)g(see)g(go)r(o)r(d)g(results)g(for)g(this)150 3209
y(particular)26 b(sim)n(ulation)h(after)h(ab)r(out)f(200)f
(generations.)150 3490 y Fj(12.13.2)113 b(Co)s(ev)m(olutionary)36
b(Sim)m(ulations)150 3691 y Fp(No)n(w)30 b(w)n(e'll)g(try)g(creating)f
(something)h(more)g(complex,)g(a)g(co)r(ev)n(olutionary)e(sim)n
(ulation)i(where)g(t)n(w)n(o)g(p)r(opula-)150 3790 y(tions)j(are)f(ev)n
(olving)f(and)i(the)g(\014tness)g(of)g(eac)n(h)f(is)h(dep)r(enden)n(t)h
(in)f(some)g(w)n(a)n(y)e(on)i(the)g(\014tness)g(of)g(the)h(other.)150
3890 y(In)i(this)g(case,)h(w)n(e'll)f(ev)n(olv)n(e)e(predators)g(and)i
(prey)-7 b(.)61 b(The)36 b Fi(Predator)d Fp(class)i(will)h(b)r(e)g
(similar)f(to)h Fi(Mouse)p Fp(,)g(in)150 3990 y(that)30
b(it)h(has)e(to)h(seek)f(out)h(prey)f(and)h(receiv)n(es)e(a)i(p)r(oin)n
(t)g(for)f(ev)n(ery)g Fi(Prey)f Fp(ob)5 b(ject)30 b(it)g(m)n(unc)n(hes)
g(on.)44 b Fi(Prey)28 b Fp(will)150 4089 y(b)r(e)33 b(p)r(enalised)g
(eac)n(h)f(time)h(they)g(get)g(m)n(unc)n(hed.)52 b(T)-7
b(o)32 b(mak)n(e)g(things)h(in)n(teresting,)g(w)n(e'll)g(giv)n(e)f
(predators)f(t)n(w)n(o)150 4189 y(long-range,)26 b(forw)n(ard)h(facing)
i(pro)n(ximit)n(y)e(sensors,)g(a)i(little)g(lik)n(e)f(the)h(ey)n(es)f
(of)h(a)f(ha)n(wk)g(or)f(cat,)i(and)g(the)g(prey)150
4288 y(will)c(ha)n(v)n(e)f(short-range,)f(sidew)n(a)n(ys-facing)g(pro)n
(ximit)n(y)h(sensors)f(lik)n(e)i(\014sh)g(and)g(ro)r(den)n(ts)f(-)h(if)
h(it)f(mak)n(es)f(sense)h(in)150 4388 y(nature,)i(it)h(should)g(mak)n
(e)e(sense)h(here.)150 4535 y(Here)g(is)h(the)g(co)r(de)f(for)g(b)r
(oth)h(the)g Fi(Predator)d Fp(and)i Fi(Prey)f Fp(classes.)150
4745 y Fd(//)36 b(Forward)h(declaration)i(for)d(Prey)150
4824 y(class)h(Predator;)150 4982 y(class)g(Prey)f(:)g(public)h
(EvoFFNAnimat)150 5061 y({)150 5140 y(public:)291 5218
y(Prey\(\):timesEaten\(1\))291 5297 y({)432 5376 y(This.Add\("right",)j
(ProximitySensor<Predat)q(or>)q(\(PI/)q(1.0)q(5,)h(100.0,)c(-PI/2\)\);)
432 5455 y(This.Add\("left",)j(ProximitySensor<Predato)q(r>\()q(PI/1)q
(.05)q(,)h(100.0,)c(PI/2\)\);)432 5613 y(This.InitFFN\(4\);)p
150 5723 V 150 5823 a Fn(Generated)26 b(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 310 318
310 317 bop -358 70 a Fq(310)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 432
333 a Fd(This.InitRandom)40 b(=)35 b(true;)432 412 y(This.MinSpeed)k(=)
d(0;)432 490 y(This.MaxSpeed)j(=)d(100;)291 569 y(})291
727 y(void)h(Eaten\(\))291 806 y({)432 885 y(This.timesEaten++;)432
964 y(This.Location)i(=)d(myWorld->RandomLocation\()q(\);)291
1042 y(})291 1200 y(float)h(GetFitness\(\)const)291 1279
y({)432 1358 y(return)g(1.0f)g(/)e(static_cast<float>\(Thi)q(s.ti)q
(mes)q(Eate)q(n\);)291 1437 y(})150 1595 y(private:)291
1673 y(int)h(timesEaten;)150 1752 y(};)150 1910 y(class)h(Predator)g(:)
f(public)h(EvoFFNAnimat)150 1989 y({)150 2068 y(public:)291
2147 y(Predator\(\):preyEaten\(0\))291 2226 y({)432 2304
y(This.Add\("left",)j(ProximitySensor<Prey>\(P)q(I/5)q(,)h(200.0,)c
(-PI/20\)\);)432 2383 y(This.Add\("right",)j(ProximitySensor<Prey>\()q
(PI/)q(5,)h(200.0,)c(PI/20\)\);)432 2541 y(This.InitFFN\(4\);)432
2620 y(This.InitRandom)j(=)35 b(true;)432 2778 y(This.MinSpeed)k(=)d
(0;)432 2857 y(This.MaxSpeed)j(=)d(100;)432 2935 y(This.Radius)j(=)c
(10.0;)291 3014 y(})291 3172 y(void)i(OnCollision\(WorldObject*)42
b(obj\))291 3251 y({)432 3330 y(Prey*)37 b(ptr;)432 3487
y(if)f(\(IsKindOf\(obj,ptr\)\))41 b({)573 3566 y(This.preyEaten++;)573
3645 y(ptr->Eaten\(\);)432 3724 y(})432 3882 y(This.FFNAnimat::OnColl)q
(isio)q(n\(o)q(bj\);)291 3961 y(})291 4118 y(float)c
(GetFitness\(\)const)j({)c(return)h(preyEaten;)h(})150
4276 y(private:)291 4355 y(int)e(preyEaten;)150 4434
y(};)150 4669 y Fp(Note)c(that)g(there)g(is)f(a)h(forw)n(ard)e
(declaration)g(of)i Fi(Predator)d Fp(ab)r(o)n(v)n(e)h(the)j
Fi(Prey)d Fp(class,)i(whic)n(h)g(simply)g(states)150
4769 y(that)e(there)g(is)f(a)h(class)e(called)i('Predator'.)41
b(This)30 b(is)g(to)f(get)h(round)f(the)h(problem)f(of)h(classes)e
(whic)n(h)i(refer)f(to)150 4868 y(eac)n(h)i(other)h(-)f(one)h(m)n(ust)g
(b)r(e)h(de\014ned)f(after)g(the)g(other,)h(and)f(b)r(oth)g(con)n(tain)
g(metho)r(ds)g(whic)n(h)g(use)g(p)r(oin)n(ters)150 4968
y(to)j(the)g(other,)h(so)e(one)g(is)h(b)r(ound)g(to)f(\014nd)h(itself)h
(referring)d(to)h(a)h(t)n(yp)r(e)g(whic)n(h)f(has)g(not)h(y)n(et)g(b)r
(een)g(de\014ned.)150 5067 y(The)g(forw)n(ard)e(declaration)h(simply)g
(lets)h(the)h(compiler)e(kno)n(w)g(that)h(the)g(t)n(yp)r(e)g
Fi(Predator)d Fp(do)r(es)i(exist)h(and)150 5167 y(so)f(there's)g(no)h
(need)g(to)f(get)h(upset)g(when)f Fi(Prey)g Fp(starts)f(talking)i(ab)r
(out)f Fi(Predator)e Fp(ob)5 b(jects)34 b(whic)n(h)h(aren't)150
5267 y(y)n(et)29 b(de\014ned.)41 b(By)28 b(the)i(time)f
Fi(Predator)d Fp(is)j(de\014ned,)g(the)h(compiler)e(kno)n(ws)g(all)g
(ab)r(out)h Fi(Prey)p Fp(,)f(so)g(it's)h(safe)g(for)150
5366 y Fi(Predator)24 b Fp(to)k(manipulate)f Fi(Prey)f
Fp(ob)5 b(jects)28 b(and)f(call)g(mem)n(b)r(er)h(functions.)150
5513 y(The)36 b(only)g(other)f(un)n(usual)h(feature)g(w)n(orth)f(men)n
(tioning)h(in)g(the)h(co)r(de)f(ab)r(o)n(v)n(e)e(is)i(the)h(\014tness)f
(function)h(for)150 5613 y Fi(Prey)p Fp(:)44 b(are)30
b(more)h(\014t)h(the)g(few)n(er)g(times)g(they)f(are)g(eaten,)i(so)e
(it)h(w)n(ould)f(mak)n(e)g(sense)g(to)h(subtract)f(one)g(from)p
-358 5723 V -192 5823 a Fn(Generated)26 b(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 311 319
311 318 bop 150 70 a Fq(12.13)30 b(T)-8 b(utorial)32
b(3:)42 b(In)m(tro)s(ducing)32 b(the)g(Genetic)f(Algorithm)1685
b(311)p 150 103 4034 4 v 150 333 a Fp(the)29 b Fi(Prey's)e
Fp(\014tness)i(eac)n(h)f(time)i(it)f(is)g(eaten,)g(ho)n(w)n(ev)n(er)e
(the)j(standard)e(GA)h(using)g(roulette)f(wheel)i(selection)150
432 y(is)d(unable)h(to)f(w)n(ork)g(with)h(negativ)n(e)e(scores.)36
b(Tw)n(o)26 b(solutions)h(are)g(a)n(v)-5 b(ailable:)275
643 y Fk(\210)42 b Fp(Set)29 b(up)g(the)g(GA)g(to)g(adjust)g(the)g
(scores)e(using)h Fi(SetFitnessFix)p Fp(,)c(whic)n(h)29
b(can)f(b)r(e)h(set)g(to)f(one)h(of)f(three)358 743 y(options:)451
908 y Fq({)41 b Fi(GA)p 633 908 27 4 v 31 w(IGNORE)25
b Fp(whic)n(h)i(is)h(the)g(default)g(setting,)g(no)f(c)n(hange)f(is)i
(made)f(to)h(\014tness)f(scores.)451 1039 y Fq({)41 b
Fi(GA)p 633 1039 V 31 w(CLAMP)25 b Fp(whic)n(h)j(sets)f(an)n(y)g
(scores)f(b)r(elo)n(w)h(zero)g(to)g(zero.)451 1171 y
Fq({)41 b Fi(GA)p 633 1171 V 31 w(FIX)26 b Fp(whic)n(h)i(linearly)e
(scales)h(the)h(scores)e(up)i(so)f(that)h(the)g(lo)n(w)n(est)e(score)g
(b)r(ecomes)i(zero.)275 1336 y Fk(\210)42 b Fp(Ensure)26
b(that)h(GetFitness)h(returns)f(a)g(p)r(ositiv)n(e)g(v)-5
b(alue,)27 b(in)g(this)h(case)e(b)n(y)h(returning)g(the)h(in)n(v)n
(erse)d(of)j(the)358 1436 y(n)n(um)n(b)r(er)d(of)g(times)h(the)g
(individual)f(has)g(b)r(een)h(eaten,)g(so)f(higher)f(n)n(um)n(b)r(ers)h
(b)r(ecome)h(lo)n(w)n(er)e(but)i(remain)358 1535 y(p)r(ositiv)n(e.)150
1746 y(Setting)35 b(up)g(a)f(GA)h(to)f(do)h(co)r(ev)n(olution)e(is)i(v)
n(ery)e(easy)-7 b(,)35 b(all)g(y)n(ou)e(need)i(is)g(t)n(w)n(o)e(GAs.)58
b(They)35 b(don't)g(need)f(to)150 1846 y(kno)n(w)i(an)n(ything)g(ab)r
(out)h(eac)n(h)f(other,)i(and)f(the)g(\014tness)f(functions)h(of)g(the)
g(t)n(w)n(o)f(t)n(yp)r(es)h(of)f(individuals)h(are)150
1946 y(en)n(tirely)30 b(unrelated.)45 b Fi(ChaseSimulation)24
b Fp(is)30 b(therefore)g(set)g(up)h(just)g(lik)n(e)f(previous)f(sim)n
(ulations,)i(but)g(with)150 2045 y(t)n(w)n(o)c(p)r(opulations)g(\(and)h
(no)f(groups\).)150 2192 y(I'v)n(e)41 b(c)n(hosen)f(p)r(opulation)h
(sizes)g(of)g(30)g(for)f(sp)r(eed)i(but)g(feel)f(free)g(to)g(exp)r
(erimen)n(t)g(with)h(larger)e(n)n(um)n(b)r(ers)150 2292
y(dep)r(ending)25 b(on)g(the)g(sp)r(eed)g(of)g(y)n(our)e(computer)h
(and)h(ho)n(w)f(m)n(uc)n(h)h(time)g(y)n(ou)f(ha)n(v)n(e.)35
b(One)24 b(thing)h(w)n(e)g(don't)g(w)n(an)n(t)150 2391
y(is)34 b(a)h(sim)n(ulation)f(with)h(60)e(individuals)i(vying)f(for)g
(space)f(in)i(our)f(en)n(vironmen)n(t)f(-)i(this)g(w)n(ould)f(reduce)g
(the)150 2491 y(e\013ectiv)n(eness)26 b(of)h(the)g(sim)n(ulation)g(b)r
(ecause)f(the)i(c)n(hances)d(of)i(randomly)f(bumping)h(in)n(to)g
(another)f(individual,)150 2591 y(regardless)i(of)i(whether)g(that)g
(individual)g(is)g(e\013ectiv)n(e)g(at)g(c)n(hasing)f(or)g(ev)-5
b(ading)30 b(\(dep)r(ending)h(on)f(whether)g(it)150 2690
y(is)h(predator)g(or)f(prey\),)i(are)f(increased)f(the)i(more)f(cro)n
(wded)f(the)i(sim)n(ulation)f(b)r(ecomes.)49 b(One)31
b(answ)n(er)f(is)h(to)150 2790 y(simply)g(increase)f(the)h(arena)e
(size)i(using)f(W)-7 b(orld::SetWidth)32 b(and)f(W)-7
b(orld::SetHeigh)n(t,)32 b(but)f(then)g(they'd)h(b)r(e)150
2889 y(to)r(o)27 b(small)h(to)f(see.)150 3036 y(Instead,)38
b(I'v)n(e)e(opted)h(for)f(a)g(more)f(complex)h(kind)h(of)f(sim)n
(ulation)g(where)g(rather)f(than)i(sim)n(ulating)e(ev)n(ery)150
3136 y(individual)28 b(at)g(once,)g(a)f(selection)h(of)g(eac)n(h)f(P)n
(opulation)g(go)g(in)n(to)h(the)g(arena)f(and)h(are)f(assessed,)g
(their)h(scores)150 3236 y(are)d(then)i(stored)e(and)h(a)f(new)h
(selection)g(go)f(in.)36 b(The)27 b(selections)e(are)g(made)h(dep)r
(ending)g(on)g(the)g Fi(Population)150 3335 y Fp(ob)5
b(ject's)31 b(team)g(size,)g(whic)n(h)g(is)g(set)h(using)e(SetT)-7
b(eamSize.)48 b(The)31 b(default)g(is)g(for)g(the)g(team)g(to)g(b)r(e)h
(the)f(whole)150 3435 y(p)r(opulation,)c(but)i(team)e(sizes)g(as)g(lo)n
(w)g(as)g(one)g(can)g(b)r(e)h(used,)g(making)f(individual)h(assessmen)n
(ts)e(p)r(ossible.)150 3641 y Fd(class)37 b(ChaseSimulation)i(:)d
(public)h(Simulation)150 3720 y({)291 3799 y(GeneticAlgorithm<Predat)q
(or>)42 b(gaPred;)291 3878 y(GeneticAlgorithm<Prey>)g(gaPrey;)291
3957 y(Population<Predator>)f(popPred;)291 4035 y(Population<Prey>)f
(popPrey;)150 4193 y(public:)291 4272 y(ChaseSimulation\(\):)291
4351 y(gaPred\(0.7f,)f(0.1f\),)e(gaPrey\(0.7f,)i(0.1f\),)291
4430 y(popPred\(30,gaPred\),)i(popPrey\(30,gaPrey\))291
4509 y({)432 4588 y(This.gaPred.SetSelecti)q(on\(G)q(A_R)q(ANK\))q(;)
432 4666 y(This.gaPred.SetParamet)q(er\(G)q(A_R)q(ANK_)q(SPR)q(ESSU)q
(RE,)h(2.0\);)432 4824 y(This.gaPrey.SetSelecti)q(on\(G)q(A_R)q(ANK\))q
(;)432 4903 y(This.gaPrey.SetParamet)q(er\(G)q(A_R)q(ANK_)q(SPR)q(ESSU)
q(RE,)g(2.0\);)432 5061 y(This.popPred.SetTeamSi)q(ze\(5)q(\);)432
5140 y(This.popPrey.SetTeamSi)q(ze\(1)q(0\);)432 5218
y(This.SetAssessments\(30)q(\);)432 5376 y(This.Add\("Predators",)g
(popPred\);)432 5455 y(This.Add\("Prey",)e(popPrey\);)291
5534 y(})150 5613 y(};)p 150 5723 4034 4 v 150 5823 a
Fn(Generated)26 b(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d
(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 312 320
312 319 bop -358 70 a Fq(312)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fp(In)25 b(this)g(sim)n(ulation,)g(30)e(assessmen)n(ts)g(are)h(b)
r(eing)h(made)f(for)g(eac)n(h)g(generation,)g(so)g(eac)n(h)g
Fi(Predator)d Fp(will)k(ha)n(v)n(e)150 432 y(had)e(5)g(assessmen)n(ts)f
(and)i(eac)n(h)e Fi(Prey)g Fp(will)i(ha)n(v)n(e)e(had)h(10)g(assessmen)
n(ts,)g(and)g(also)g(ev)n(ery)f Fi(Prey)g Fp(will)h(ha)n(v)n(e)g(b)r
(een)150 532 y(prey)n(ed)k(on)g(b)n(y)g(ev)n(ery)g Fi(Predator)p
Fp(.)150 679 y(If)k(y)n(ou)f(set)g(this)h(sim)n(ulation)f(going)g(in)g
(the)h(usual)g(w)n(a)n(y)e(and)h(lea)n(v)n(e)g(it)h(for)f(a)g(few)h(h)n
(undred)f(generations)f(y)n(ou)150 778 y(will)f(start)f(to)g(see)h
(some)f(quite)g(con)n(vincing)g(predator/prey)e(b)r(eha)n(viour.)150
1058 y Fj(12.13.3)113 b(More)37 b(things)g(to)g(try)-9
b(...)275 1259 y Fk(\210)42 b Fp(Replace)37 b(the)h(Ev)n(oFFNAnimat)f
(used)g(in)h(the)g(predator/prey)d(sim)n(ulation)i(with)h(Ev)n
(oDNNAnimat)358 1358 y(and)27 b(see)g(if)h(the)g(dynamical)f(net)n(w)n
(ork-based)f(solution)h(is)g(an)n(y)g('clev)n(erer'.)275
1524 y Fk(\210)42 b Fp(Giv)n(e)33 b(the)i(predators)e(an)g(additional)h
(Densit)n(ySensor,)h(a)f(b)r(eam)g(sensor)f(whic)n(h)h(coun)n(ts)g(the)
g(n)n(um)n(b)r(er)358 1624 y(of)e(individuals)h(in)f(its)h(range.)51
b(More)31 b(successful)i(predators)e(should)h(b)r(e)h(able)f(to)h(use)f
(this)h(sensor)e(to)358 1723 y(concen)n(trate)d(on)i(areas)e(where)h
(there)h(are)f(more)g(than)h(one)g(prey)f(nearb)n(y)-7
b(.)43 b(Giving)29 b(the)i(same)e(kind)h(of)358 1823
y(sensor)c(to)h(prey)g(will)h(giv)n(e)f(the)h(prey)f(c)n(hance)g(to)g
(a)n(v)n(oid)f(running)h(in)n(to)h(large)e(groups)g(of)i(predators.)275
1989 y Fk(\210)42 b Fp(Add)31 b(sensors)f(allo)n(wing)g(predators)f(to)
j(sense)e(other)h(predators)e(and)j(prey)e(to)h(sense)g(other)g(prey)-7
b(.)47 b(Do)358 2089 y(the)24 b(prey)f(consequen)n(tly)g(a)n(v)n(oid)f
(eac)n(h)h(other,)h(or)f(h)n(uddle)h(together?)35 b(Do)23
b(the)i(predators)d(w)n(ork)g(together)358 2188 y(or)k(lo)r(ok)h(for)g
(their)h(o)n(wn)f(territory?)36 b(\(Hin)n(t:)h(if)29
b(y)n(ou)d(\014nd)j(that)e(adding)h(all)f(these)h(sensors)e(slo)n(ws)g
(things)358 2288 y(do)n(wn)j(to)r(o)g(m)n(uc)n(h,)h(c)n(hange)e(some)h
(of)g(them)i(in)n(to)e(nearest)f(angle)h(sensors)f(whic)n(h)i(are)e
(just)i(as)f(e\013ectiv)n(e)358 2388 y(and)e(m)n(uc)n(h)g(faster)g(for)
g(the)h(sim)n(ulation)f(en)n(vironmen)n(t)g(to)h(pro)r(cess.\))275
2554 y Fk(\210)42 b Fp(In)n(tro)r(duce)25 b(a)g(third)g(co)r(ev)n
(olving)f(class)g(whic)n(h)i(can)f(eat)g(predators)f(but)i(is)f(eaten)g
(b)n(y)g(prey)g(\(y)n(es,)g(I)h(kno)n(w)358 2653 y(it's)h(silly)h(but)g
(it)g(migh)n(t)g(b)r(e)g(funn)n(y)g(to)f(w)n(atc)n(h\).)p
-358 5723 V -192 5823 a Fn(Generated)f(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 313 321
313 320 bop 150 70 a Fq(12.14)30 b(T)-8 b(utorial)32
b(4:)42 b(More)31 b(Adv)-5 b(anced)33 b(Sim)m(ulations)1976
b(313)p 150 103 4034 4 v 150 333 a Fl(12.14)136 b(T)-11
b(utorial)45 b(4:)61 b(More)45 b(Adv)-7 b(anced)43 b(Sim)l(ulations)150
562 y Fp(In)d(this)g(tutorial)f(w)n(e)g(will)h(lo)r(ok)f(at)g(some)h
(of)f(the)h(more)f(adv)-5 b(anced)39 b(options)g(a)n(v)-5
b(ailable)39 b(in)g(creating)g(new)150 661 y(sim)n(ulations.)d(In)28
b(particular:)275 875 y Fk(\210)42 b Fp(The)27 b(GA)-9
b(V)i(arian)n(t)27 b(gene)g(t)n(yp)r(e)h(and)f(custom)h(genes.)275
1041 y Fk(\210)42 b Fp(Creating)26 b(more)h(complex)g(ev)n(olving)f
(animats.)275 1207 y Fk(\210)42 b Fp(Creating)26 b(more)h(complex)g(w)n
(orlds.)275 1373 y Fk(\210)42 b Fp(Creating)26 b(more)h(complex)g
(sensors.)150 1652 y Fj(12.14.1)113 b(The)37 b(GA)-12
b(V)j(arian)m(t)36 b(T)m(yp)s(e)150 1853 y Fp(Supp)r(osing)29
b(y)n(ou)g(w)n(an)n(t)g(to)g(run)g(an)g(ev)n(olutionary)f(sim)n
(ulation)h(using)g(some)g(genot)n(yp)r(e)f(other)h(than)h(a)f(simple)
150 1953 y(list)f(of)f(v)-5 b(alues)28 b(-)f(p)r(erhaps)g(y)n(our)f
(genes)h(are)g(a)g(mixture)h(of)f(real)g(v)-5 b(alues,)27
b(in)n(tegers)g(and)g(b)r(o)r(oleans,)g(or)g(p)r(erhaps)150
2052 y(they)h(are)f(some)h(completely)g(di\013eren)n(t)g(t)n(yp)r(e)g
(of)g(y)n(our)f(o)n(wn)g(devising.)38 b(There)28 b(are)f(t)n(w)n(o)g
(options)g(a)n(v)-5 b(ailable)27 b(to)150 2152 y(y)n(ou)g(in)h(this)g
(situation:)275 2365 y Fk(\210)42 b Fp(Create)32 b(a)h(m)n(utation)g
(op)r(erator)f(for)h(y)n(our)f(custom)h(gene)g(t)n(yp)r(e)h(and)f
(con\014gure)f(y)n(our)g(Ev)n(olv)n(ers,)g(P)n(op-)358
2465 y(ulation)f(and)g(GeneticAlgorithm)g(to)g(use)g(custom)g(genes)f
(\(sp)r(eci\014ed)i(in)f(the)h(Ev)n(olv)n(er)d(template)i(dec-)358
2564 y(laration\))d(and)i(y)n(our)f(custom)h(m)n(utation)g(op)r
(erator.)42 b(More)29 b(information)g(on)h(this)g(is)g(a)n(v)-5
b(ailable)28 b(in)j(the)358 2664 y(GeneticAlgorithm)c(do)r(cumen)n
(tation.)275 2830 y Fk(\210)42 b Fp(F)-7 b(or)25 b(man)n(y)h(sim)n
(ulations)g(y)n(ou)f(will)i(just)g(need)g(to)f(b)r(e)h(able)f(to)g(w)n
(ork)f(with)i(more)f(than)g(one)g(of)h(the)g(basic)358
2930 y(t)n(yp)r(es)g(a)n(v)-5 b(ailable)26 b(in)i(C++.)36
b(This)28 b(is)f(where)g(the)h(GA)-9 b(V)i(arian)n(t)27
b(t)n(yp)r(e)h(comes)f(in.)150 3143 y(If)21 b(y)n(ou)f(ha)n(v)n(e)g
(programmed)f(in)i(BASIC,)g(LISP)f(or)g(other)g(high-lev)n(el)g
(languages,)g(y)n(ou)g(will)h(already)f(b)r(e)h(familiar)150
3243 y(with)33 b(the)h(concept)f(of)g(a)f(v)-5 b(arian)n(t)32
b(t)n(yp)r(e.)53 b(A)34 b(v)-5 b(arian)n(t)32 b(is)g(a)h(data)f(t)n(yp)
r(e)i(whic)n(h)f(is)f(able)h(to)g(act)g(as)f(a)h(range)e(of)150
3342 y(di\013eren)n(t)40 b(t)n(yp)r(es,)i(p)r(erforming)d(con)n(v)n
(ersions)e(b)r(et)n(w)n(een)i(them)h(as)f(required.)72
b(A)40 b(general)e(purp)r(ose)h(v)-5 b(arian)n(t)150
3442 y(migh)n(t)27 b(allo)n(w)g(y)n(ou)f(to)i(add)f(t)n(w)n(o)g
(strings)f(con)n(taining)h(n)n(um)n(b)r(ers)g(together)f(and)i(output)g
(the)f(result)h(as)e(a)i(\015oat.)150 3541 y(GA)-9 b(V)i(arian)n(t)32
b(is)h(simpler)f(than)h(this)h(since)e(it)i(only)e(deals)g(with)i
(\014v)n(e)e(basic)g(t)n(yp)r(es:)48 b(in)n(t,)34 b(double,)h(\015oat,)
e(c)n(har)150 3641 y(and)27 b(b)r(o)r(ol.)150 3904 y
Fq(12.14.1.1)p 150 5723 V 150 5823 a Fn(Generated)f(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 314 322
314 321 bop -358 70 a Fq(314)430 b(BEAST)33 b(-)e(Bioinspired)f(Ev)m
(olutionary)i(Agen)m(t)g(Sim)m(ulation)e(T)-8 b(o)s(olkit)31
b(P)m(age)h(Do)s(cumen)m(tation)p -358 103 4034 4 v 150
333 a Fl(12.15)136 b(T)-11 b(o)t(do)44 b(List)150 562
y Fq(Class)31 b(BEAST::DNNAnimat)71 b Fp(Review)28 b(brain)f(o)n
(wnership/destructor)150 875 y Fq(Mem)m(b)s(er)j
(BEAST::DynamicalNet::Serialise\(std::ostream)25 b(&\))33
b(const)73 b Fp(Serialise)361 b(in-)358 974 y(put/output)28
b(c)n(hannel/no)r(de)e(con\014g)150 1287 y Fq(Mem)m(b)s(er)k
(BEAST::DynamicalNet::Unserialise\(std::istream)25 b(&\))74
b Fp(Unserialise)43 b(input/output)358 1387 y(c)n(hannel/no)r(de)26
b(con\014g)150 1700 y Fq(Class)31 b(BEAST::MutationOp)s(erator)p
Fo(<)f Fq(GA)-11 b(V)j(arian)m(t)34 b Fo(>)73 b Fp
(serialise/unserialise)150 2013 y Fq(Mem)m(b)s(er)30
b(BEAST::SelfSensor::GetOutput\(\))f(const)74 b Fp(Sensing)53
b(of)g(\014tness,)60 b(p)r(erhaps)53 b(adjusting)358
2112 y(SelfSensor)27 b(in)n(to)g(a)g(template)h(whic)n(h)g(can)f(b)r(e)
h(made)f(to)h(sense)f(an)n(y)g(detail)g(ab)r(out)h(the)g(o)n(wner.)150
2425 y Fq(Mem)m(b)s(er)i(BEAST::Sensor::)p Fh(\030)p
Fq(Sensor\(\))71 b Fp(Shared)27 b(functors?)150 2738
y Fq(Mem)m(b)s(er)j(BEAST::Group::Serialise\(std::ostream)c(&\))33
b(const)73 b Fp(Finish!)150 3051 y Fq(Mem)m(b)s(er)30
b(BEAST::Group::Unserialise\(std::istream)c(&\))74 b
Fp(Add)28 b(general)e(ob)5 b(ject)28 b(unserialiser)150
3364 y Fq(Mem)m(b)s(er)i(BEAST::Group::Unserialise\(std::istream)c(&\))
74 b Fp(Rather)21 b(than)h(remo)n(ving)e(only)i(ob)5
b(jects)358 3464 y(from)27 b(this)h(group,)e(all)i(ob)5
b(jects)27 b(with)h(the)g(same)f(t)n(yp)r(e)h(as)e(this)i(group)f(are)f
(remo)n(v)n(ed.)150 3776 y Fq(Mem)m(b)s(er)k
(BEAST::GeneticAlgorithm::Generate\(\))70 b Fp(Accoun)n(t)26
b(for)g(o)r(dd)g(n)n(um)n(b)r(ered)g(output)h(p)r(op-)358
3876 y(ulation)g(sizes)150 4189 y Fq(Mem)m(b)s(er)j
(BEAST::GeneticAlgorithm::T)-8 b(oString\(\))28 b(const)73
b Fp(store)27 b(time)h(data)p -358 5723 V -192 5823 a
Fn(Generated)e(on)f(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)h(-)f(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e
(T)-6 b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 315 323
315 322 bop 150 70 a Fq(12.16)30 b(Deprecated)j(List)2974
b(315)p 150 103 4034 4 v 150 333 a Fl(12.16)136 b(Deprecated)46
b(List)150 562 y Fq(Mem)m(b)s(er)30 b(BEAST::P)m(olarV)-8
b(ector\(double)32 b(l,)e(double)h(a\))74 b Fp(Probably)37
b(of)h(no)g(use)g(to)g(an)n(y)n(one)e(unless)358 661
y(they)27 b(ha)n(v)n(e)g(a)g(strange)f(fascination)h(with)h(p)r(olar)f
(co)r(ordinates.)p 150 5723 V 150 5823 a Fn(Generated)f(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 316 324
316 323 bop 150 808 a Fr(Index)p 155 1223 25 4 v 180
1223 a Fp(In)n(teract)316 1323 y(BEAST::BeamSensor,)26
b(86)150 1424 y Fh(\030)p Fp(Group)316 1524 y(BEAST::Group,)h(152)150
1624 y Fh(\030)p Fp(Sensor)316 1724 y(BEAST::Sensor,)f(183)150
1916 y(Activ)-5 b(ationF)e(unction)316 2016 y(BEAST::F)g(eedF)g(orw)n
(ardNet,)26 b(127)150 2116 y(Add)316 2216 y(BEAST::Animat,)i(71)316
2316 y(BEAST::W)-7 b(orld,)27 b(210)150 2417 y(ADD)p
343 2417 V 31 w(SIMULA)-7 b(TION)316 2517 y(b)r(east.h,)28
b(223)150 2617 y(add)p 289 2617 V 30 w(slashes)316 2717
y(BEAST,)f(65)150 2817 y(AddDensit)n(y)316 2917 y(BEAST::Distribution,)
h(95)150 3017 y(Animat)316 3118 y(BEAST::Animat,)g(71)150
3218 y(animat.cc,)f(217)150 3318 y(animat.h,)h(218)150
3418 y(animatmonitor.h,)f(220)150 3518 y(AnimatsBegin)316
3618 y(BEAST::W)-7 b(orld,)27 b(210)150 3719 y(AnimatsEnd)316
3819 y(BEAST::W)-7 b(orld,)27 b(211)150 4010 y(Bacteria)f(sim)n
(ulation)h(classes,)g(27)150 4111 y(bacteria.h,)g(221)150
4211 y(bacterium.h,)h(222)150 4311 y(BEAST,)f(53)316
4411 y(add)p 455 4411 V 30 w(slashes,)f(65)316 4511 y(op)r(erator)p
Fo(<<)p Fp(,)f(65)316 4611 y(op)r(erator)p Fo(>>)p Fp(,)g(65)316
4712 y(strip)p 488 4712 V 30 w(slashes,)h(65)150 4812
y(b)r(east.h,)i(223)316 4912 y(ADD)p 509 4912 V 31 w(SIMULA)-7
b(TION,)28 b(223)316 5012 y(BEGIN)p 594 5012 V 30 w(SIMULA)-7
b(TION)p 1162 5012 V 30 w(T)g(ABLE,)27 b(224)316 5112
y(END)p 503 5112 V 30 w(SIMULA)-7 b(TION)p 1071 5112
V 30 w(T)g(ABLE,)28 b(224)150 5212 y(BEAST::Animat,)g(67)316
5312 y(Add,)g(71)316 5413 y(Animat,)g(71)316 5513 y(Con)n(trol,)e(71)
316 5613 y(Displa)n(y,)h(71)2224 1223 y(In)n(teract,)g(72)2224
1323 y(IsT)-7 b(ouc)n(hing,)26 b(72)2224 1423 y(SensorIn)n(teract,)g
(72)2224 1523 y(Serialise,)g(72)2224 1622 y(Share,)h(73)2224
1722 y(Unserialise,)f(73)2224 1822 y(Up)r(date,)i(73)2058
1922 y(BEAST::AreaSensor,)d(74)2058 2021 y(BEAST::Bacterium,)i(75)2224
2121 y(FinishUp)r(date,)h(82)2224 2221 y(GetA)n(ttractan)n(tGradien)n
(t,)f(82)2224 2321 y(GetNutrien)n(tGradien)n(t,)h(82)2224
2420 y(GetO\013spring,)f(82)2224 2520 y(GetRep)r(ellen)n(tGradien)n(t,)
h(83)2224 2620 y(ReleaseA)n(ttractan)n(t,)e(83)2224 2720
y(ReleaseRep)r(ellen)n(t,)h(83)2224 2819 y(Repro)r(duce,)g(83)2224
2919 y(SetNextChec)n(k,)h(83)2224 3019 y(T)-7 b(oString,)27
b(84)2224 3119 y(Up)r(date,)h(84)2224 3219 y(Up)r(dateDistributions,)g
(84)2058 3318 y(BEAST::BeamSensor,)e(85)2058 3418 y(BEAST::BeamSensor)p
2229 3518 V 2254 3518 a(In)n(teract,)h(86)2224 3618 y(Dra)n(w,)g(86)
2058 3717 y(BEAST::b)r(ound)p 2621 3717 V 30 w(mem)p
2826 3717 V 30 w(fun)p 2973 3717 V 30 w(t,)h(88)2058
3817 y(BEAST::call)p 2518 3817 V 29 w(on)p 2635 3817
V 30 w(mem)p 2840 3817 V 30 w(t,)g(89)2058 3917 y(BEAST::creator,)d(90)
2058 4017 y(BEAST::deleter,)i(91)2058 4116 y(BEAST::Distribution,)h(92)
2224 4216 y(AddDensit)n(y,)g(95)2224 4316 y(Distribution,)g(95)2224
4416 y(Filter,)g(95)2224 4515 y(Plot,)f(95)2224 4615
y(Render,)g(95)2224 4715 y(SetDeca)n(yRate,)g(96)2224
4815 y(SetDensit)n(y,)h(96)2224 4915 y(SetDi\013usionSp)r(eed,)h(96)
2224 5014 y(SetMaxConc,)e(96)2224 5114 y(Up)r(date,)h(96)2058
5214 y(BEAST::Distribution::Kernel,)f(97)2224 5314 y(Filter,)h(98)2224
5413 y(Plot,)f(98)2224 5513 y(SetDistribution,)h(98)2058
5613 y(BEAST::DNNAnimat,)h(99)p eop
%%Page: 317 325
317 324 bop 150 70 a Fq(INDEX)3571 b(317)p 150 103 4034
4 v 316 333 a Fp(Con)n(trol,)26 b(100)316 432 y(InitDNN,)j(100)316
532 y(Serialise,)e(101)316 632 y(Unserialise,)g(101)150
731 y(BEAST::DynamicalNet,)h(102)150 831 y(BEAST::DynamicalNet)316
930 y(DynamicalNet,)g(104)316 1030 y(Fire,)f(104)316
1130 y(GetCon\014guration,)f(104)316 1229 y(Init,)i(105)316
1329 y(Randomise,)f(105)316 1429 y(Reset,)h(105)316 1528
y(Serialise,)f(105)316 1628 y(SetCon\014guration,)f(106)316
1727 y(SetInputChannel,)j(106)316 1827 y(SetOutputChannel,)f(106)316
1927 y(T)-7 b(oString,)27 b(106)316 2026 y(Unserialise,)g(106)150
2126 y(BEAST::DynamicalNet::Neuron,)g(108)150 2226 y
(BEAST::DynamicalNet::Neuron)316 2325 y(Fire,)g(110)316
2425 y(GetCon\014guration,)f(110)316 2524 y(Neuron,)h(110)316
2624 y(Randomise,)g(110)316 2724 y(SetCon\014guration,)f(111)316
2823 y(T)-7 b(oString,)27 b(111)150 2923 y(BEAST::Ev)-5
b(alNearest,)26 b(112)150 3023 y(BEAST::Ev)-5 b(alNearestAbsX,)26
b(114)150 3122 y(BEAST::Ev)-5 b(alNearestAbsY,)26 b(115)150
3222 y(BEAST::Ev)-5 b(alNearestAngle,)26 b(116)150 3321
y(BEAST::Ev)-5 b(alNearestSignal,)25 b(117)150 3421 y(BEAST::Ev)-5
b(alNearestXDist,)27 b(118)150 3521 y(BEAST::Ev)-5 b(alNearestYDist,)27
b(119)150 3620 y(BEAST::Ev)n(oDNNAnimat,)g(120)150 3720
y(BEAST::Ev)n(oFFNAnimat,)g(121)150 3820 y(BEAST::Ev)n(olv)n(er,)e(122)
316 3919 y(StoreFitness,)i(123)150 4019 y(BEAST::extractor,)f(124)150
4118 y(BEAST::F)-7 b(eedF)g(orw)n(ardNet,)26 b(125)150
4218 y(BEAST::F)-7 b(eedF)g(orw)n(ardNet)316 4318 y(Activ)i(ationF)e
(unction,)28 b(127)316 4417 y(F)-7 b(eedF)g(orw)n(ardNet,)27
b(127)316 4517 y(Fire,)g(127)316 4617 y(GetCon\014guration,)f(127)316
4716 y(GetCon\014gurationLength,)g(128)316 4816 y(GetOutput,)j(128)316
4915 y(Init,)f(128)316 5015 y(Serialise,)f(129)316 5115
y(SetCon\014guration,)f(129)316 5214 y(SetInput,)j(129)316
5314 y(T)-7 b(oString,)27 b(129)316 5414 y(Unserialise,)g(129)150
5513 y(BEAST::F)-7 b(eedF)g(orw)n(ardNet::Neuron,)26
b(131)150 5613 y(BEAST::F)-7 b(eedF)g(orw)n(ardNet::Neuron)2224
333 y(W)g(eigh)n(tedSum,)28 b(132)2058 432 y(BEAST::FFNAnimat,)g(133)
2224 532 y(Con)n(trol,)e(134)2224 632 y(InitFFN,)j(134)2224
731 y(Serialise,)d(135)2224 831 y(Unserialise,)g(135)2058
930 y(BEAST::Gaussian2D,)g(136)2058 1030 y(BEAST::GaussianNoise,)g(137)
2058 1130 y(BEAST::GaussianNoise)2224 1229 y(GaussianNoise,)g(137)2058
1329 y(BEAST::GaussianRing2D,)g(138)2058 1429 y(BEAST::GaussianRing2D)
2224 1528 y(GaussianRing2D,)g(138)2058 1628 y(BEAST::GA)-9
b(V)i(arian)n(t,)27 b(140)2058 1727 y(BEAST::GA)-9 b(V)i(arian)n(t::V)g
(arian)n(tData,)25 b(142)2058 1827 y(BEAST::GeneticAlgorithm,)i(143)
2058 1927 y(BEAST::GeneticAlgorithm)2224 2026 y(GetGenerations,)g(146)
2224 2126 y(SetCrosso)n(v)n(er,)d(146)2224 2226 y(SetCrosso)n(v)n(erP)n
(oin)n(ts,)f(146)2224 2325 y(SetElitism,)28 b(147)2224
2425 y(SetFitnessFix,)g(147)2224 2524 y(SetFitnessMetho)r(d,)g(147)2224
2624 y(SetMutation,)g(147)2224 2724 y(SetP)n(arameter,)d(147,)i(148)
2224 2823 y(SetPrin)n(tSt)n(yle,)g(148)2224 2923 y(SetSelection,)h(148)
2224 3023 y(SetSub)r(elitism,)h(148)2058 3122 y
(BEAST::GeneticAlgorithm::ev)n(o)p 3209 3122 25 4 v 28
w(sort,)e(150)2058 3222 y(BEAST::Group,)g(151)2224 3321
y Fh(\030)p Fp(Group,)g(152)2224 3421 y(F)-7 b(orEac)n(h,)26
b(152,)g(153)2058 3521 y(BEAST::Matc)n(hAdapter,)h(154)2058
3620 y(BEAST::Matc)n(hComp)r(oseAnd,)g(155)2058 3720
y(BEAST::Matc)n(hComp)r(oseOr,)e(156)2058 3820 y(BEAST::Matc)n(hExact,)
h(157)2058 3919 y(BEAST::Matc)n(hKindOf,)h(158)2058 4019
y(BEAST::Matc)n(hSp)r(eci\014c,)g(159)2058 4118 y(BEAST::MutationOp)r
(erator,)f(160)2058 4218 y(BEAST::MutationOp)r(erator)p
Fo(<)f Fp(b)r(o)r(ol)j Fo(>)p Fp(,)f(162)2058 4318 y(BEAST::MutationOp)
r(erator)p Fo(<)36 b Fp(GA)-9 b(V)i(arian)n(t)38 b Fo(>)p
Fp(,)2390 4417 y(163)2058 4517 y(BEAST::Ob)5 b(jLoader,)25
b(165)2058 4617 y(BEAST::Ob)5 b(jLoaderBase,)24 b(166)2058
4716 y(BEAST::P)n(opulation,)i(167)2224 4816 y(SetClones,)h(169)2058
4915 y(BEAST::prop)r(ert)n(y,)f(170)2058 5015 y(BEAST::Ring2D,)h(172)
2224 5115 y(Ring2D,)g(172)2058 5214 y(BEAST::ScaleAbs,)g(173)2058
5314 y(BEAST::ScaleAdapter,)g(174)2058 5414 y(BEAST::ScaleComp)r(ose,)f
(176)2058 5513 y(BEAST::ScaleLinear,)g(177)2058 5613
y(BEAST::ScaleNoise,)g(178)p 150 5723 4034 4 v 150 5823
a Fn(Generated)g(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h
(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)d
(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p eop
%%Page: 318 326
318 325 bop -358 70 a Fq(318)3570 b(INDEX)p -358 103
4034 4 v 150 333 a Fp(BEAST::ScaleThreshold,)26 b(179)150
432 y(BEAST::SelfSensor,)h(180)150 532 y(BEAST::SelfSensor)316
632 y(GetOutput,)i(181)150 731 y(BEAST::Sensor,)d(182)316
831 y Fh(\030)p Fp(Sensor,)g(183)316 930 y(GetOutput,)j(184)150
1030 y(BEAST::SensorEv)-5 b(alF)e(unction,)26 b(185)150
1130 y(BEAST::SensorMatc)n(hF)-7 b(unction,)26 b(186)150
1229 y(BEAST::SensorScaleF)-7 b(unction,)26 b(187)150
1329 y(BEAST::SerialException,)g(188)150 1429 y(BEAST::Signaller,)g
(189)150 1528 y(BEAST::SimOb)5 b(ject,)28 b(191)150 1628
y(BEAST::SimOb)5 b(ject)316 1727 y(Load,)27 b(192)316
1827 y(Sa)n(v)n(e,)g(192)150 1927 y(BEAST::Sim)n(ulation,)g(194)316
2026 y(BeginAssessmen)n(t,)g(196)316 2126 y(BeginGeneration,)f(196)316
2226 y(BeginRun,)i(197)316 2325 y(EndAssessmen)n(t,)f(197)316
2425 y(EndGeneration,)g(197)316 2524 y(EndRun,)h(197)316
2624 y(SetRuns,)g(197)316 2724 y(T)-7 b(oString,)27 b(197)316
2823 y(Up)r(date,)h(197)150 2923 y(BEAST::switc)n(her,)f(199)150
3023 y(BEAST::T)-7 b(ouc)n(hSensor,)26 b(200)150 3122
y(BEAST::UniformNoise,)h(201)150 3222 y(BEAST::UniformNoise)316
3321 y(UniformNoise,)g(201)150 3421 y(BEAST::Unserialiser,)f(202)150
3521 y(BEAST::V)-7 b(ector2D,)27 b(203)150 3620 y(BEAST::W)-7
b(all,)28 b(206)316 3720 y(W)-7 b(all,)28 b(206)150 3820
y(BEAST::W)-7 b(orld,)27 b(208)316 3919 y(Add,)h(210)316
4019 y(AnimatsBegin,)f(210)316 4118 y(AnimatsEnd,)h(211)316
4218 y(Displa)n(y,)f(211)316 4318 y(Get,)h(211)316 4417
y(Init,)g(211)316 4517 y(Remo)n(v)n(e,)f(211,)f(212)316
4617 y(Up)r(date,)i(212)316 4716 y(W)-7 b(orldOb)5 b(jectsBegin,)26
b(212)316 4816 y(W)-7 b(orldOb)5 b(jectsEnd,)27 b(212)150
4915 y(BEAST::W)-7 b(orldOb)5 b(ject,)27 b(213)150 5015
y(BEAST::W)-7 b(orldOb)5 b(ject)316 5115 y(GetNearestP)n(oin)n(t,)26
b(215)316 5214 y(In)n(teract,)h(215)316 5314 y(In)n(tersects,)g(215)316
5414 y(IsInside,)g(216)316 5513 y(Serialise,)g(216)316
5613 y(Unserialise,)g(216)2058 333 y(BEGIN)p 2336 333
25 4 v 29 w(SIMULA)-7 b(TION)p 2903 333 V 31 w(T)g(ABLE)2224
433 y(b)r(east.h,)28 b(224)2058 532 y(BeginAssessmen)n(t)2224
632 y(BEAST::Sim)n(ulation,)f(196)2058 732 y(BeginGeneration)2224
832 y(BEAST::Sim)n(ulation,)g(196)2058 932 y(BeginRun)2224
1032 y(BEAST::Sim)n(ulation,)g(197)2058 1132 y(Biosystems)2224
1231 y(CleanUp,)h(39)2224 1331 y(Crosso)n(v)n(erGenot)n(yp)r(es,)c(39)
2224 1431 y(GA)p 2356 1431 V 30 w(BEST)p 2608 1431 V
29 w(FITNESS,)k(38)2224 1531 y(GA)p 2356 1531 V 30 w(CLAMP,)g(37)2224
1631 y(GA)p 2356 1631 V 30 w(CURRENT,)g(38)2224 1731
y(GA)p 2356 1731 V 30 w(EXPONENT,)f(38)2224 1831 y(GA)p
2356 1831 V 30 w(FIX,)h(37)2224 1931 y(GA)p 2356 1931
V 30 w(GENERA)-7 b(TION,)28 b(38)2224 2030 y(GA)p 2356
2030 V 30 w(HISTOR)-7 b(Y,)28 b(38)2224 2130 y(GA)p 2356
2130 V 30 w(IGNORE,)f(37)2224 2230 y(GA)p 2356 2230 V
30 w(MEAN)p 2643 2230 V 30 w(FITNESS,)h(38)2224 2330
y(GA)p 2356 2330 V 30 w(P)-7 b(ARAMETERS,)27 b(38)2224
2430 y(GA)p 2356 2430 V 30 w(RANK,)h(38)2224 2530 y(GA)p
2356 2530 V 30 w(RANK)p 2636 2530 V 30 w(SPRESSURE,)f(38)2224
2630 y(GA)p 2356 2630 V 30 w(R)n(OULETTE,)f(38)2224 2729
y(GA)p 2356 2729 V 30 w(TOT)-7 b(AL)p 2678 2729 V 30
w(FITNESS,)28 b(38)2224 2829 y(GA)p 2356 2829 V 30 w(TOURNAMENT,)g(38)
2224 2929 y(GA)p 2356 2929 V 30 w(TOURNAMENT)p 3013 2929
V 30 w(P)-7 b(ARAM,)28 b(38)2224 3029 y(GA)p 2356 3029
V 30 w(TOURNAMENT)p 3013 3029 V 30 w(SIZE,)f(38)2224
3129 y(GA)p 2356 3129 V 30 w(W)n(ORST)p 2701 3129 V 30
w(FITNESS,)h(38)2224 3229 y(GAFitnessFixT)n(yp)r(e,)g(37)2224
3329 y(GAFitnessMetho)r(dT)n(yp)r(e,)g(37)2224 3429 y(GAFltP)n(aramT)n
(yp)r(e,)e(38)2224 3528 y(GAIn)n(tP)n(aramT)n(yp)r(e,)g(38)2224
3628 y(GAPrin)n(tSt)n(yleT)n(yp)r(e,)h(38)2224 3728 y(GASelectionT)n
(yp)r(e,)h(38)2224 3828 y(GA)-9 b(V)i(arian)n(tT)n(yp)r(e,)27
b(38)2224 3928 y(Generate,)g(39)2224 4028 y(GetCSV,)h(39)2224
4128 y(GetFitness,)g(39)2224 4228 y(op)r(erator)p Fo(<<)p
Fp(,)d(40)2224 4327 y(op)r(erator)p Fo(>>)p Fp(,)g(40,)i(41)2224
4427 y(Randomise,)g(41)2224 4527 y(SelectProbabilit)n(y,)f(41)2224
4627 y(SelectT)-7 b(ournamen)n(t,)27 b(41)2224 4727 y(Setup,)h(42)2224
4827 y(T)-7 b(oString,)27 b(42)2058 4927 y(Biosystems-Related)f
(Classes,)g(34)2058 5026 y(b)r(ound)2224 5126 y(Utilities,)i(31)2058
5313 y(CleanUp)2224 5413 y(Biosystems,)e(39)2058 5513
y(collisions.h,)g(225)2058 5613 y(COLOUR)p 2428 5613
V 29 w(BLA)n(CK)p -358 5723 4034 4 v -192 5823 a Fn(Generated)g(on)f
(Sun)f(F)-6 b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f
(Bioinspired)g(Ev)n(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6
b(o)r(olkit)24 b(b)n(y)h(Do)n(xygen)p eop
%%Page: 319 327
319 326 bop 150 70 a Fq(INDEX)3571 b(319)p 150 103 4034
4 v 316 333 a Fp(Utilities,)29 b(30)150 433 y(COLOUR)p
520 433 25 4 v 29 w(BLUE)316 532 y(Utilities,)g(30)150
632 y(COLOUR)p 520 632 V 29 w(GREEN)316 732 y(Utilities,)g(30)150
832 y(COLOUR)p 520 832 V 29 w(WHITE)316 932 y(Utilities,)g(30)150
1032 y(ColourP)n(alette)316 1132 y(Utilities,)g(33)150
1231 y(colours.h,)d(226)150 1331 y(ColourT)n(yp)r(e)316
1431 y(Utilities,)j(30)150 1531 y(Con)n(trol)316 1631
y(BEAST::Animat,)f(71)316 1731 y(BEAST::DNNAnimat,)h(100)316
1831 y(BEAST::FFNAnimat,)g(134)150 1931 y(cop)n(y)p 322
1931 V 29 w(from)316 2030 y(serialisation,)d(51)150 2130
y(cop)n(y)p 322 2130 V 29 w(from)p 520 2130 V 29 w(istream)316
2230 y(serialisation,)g(51)150 2330 y(Crosso)n(v)n(erGenot)n(yp)r(es)
316 2430 y(Biosystems,)h(39)150 2617 y(Displa)n(y)316
2717 y(BEAST::Animat,)h(71)316 2817 y(BEAST::W)-7 b(orld,)27
b(211)150 2916 y(DISPLA)-7 b(Y)p 520 2916 V 30 w(ALL)316
3016 y(F)g(ramew)n(ork,)26 b(25)150 3116 y(DISPLA)-7
b(Y)p 520 3116 V 30 w(ANIMA)g(TS)316 3216 y(F)g(ramew)n(ork,)26
b(25)150 3316 y(DISPLA)-7 b(Y)p 520 3316 V 30 w(COLLISIONS)316
3416 y(F)g(ramew)n(ork,)26 b(25)150 3516 y(DISPLA)-7
b(Y)p 520 3516 V 30 w(MONITOR)316 3615 y(F)g(ramew)n(ork,)26
b(25)150 3715 y(DISPLA)-7 b(Y)p 520 3715 V 30 w(NONE)316
3815 y(F)g(ramew)n(ork,)26 b(25)150 3915 y(DISPLA)-7
b(Y)p 520 3915 V 30 w(SENSORS)316 4015 y(F)g(ramew)n(ork,)26
b(25)150 4115 y(DISPLA)-7 b(Y)p 520 4115 V 30 w(TRAILS)316
4215 y(F)g(ramew)n(ork,)26 b(25)150 4315 y(DISPLA)-7
b(Y)p 520 4315 V 30 w(W)n(ORLDOBJECTS)316 4414 y(F)g(ramew)n(ork,)26
b(25)150 4514 y(Distribution)316 4614 y(BEAST::Distribution,)i(95)150
4714 y(distribution.cc,)g(227)150 4814 y(distribution.h,)g(228)150
4914 y(Dra)n(w)316 5014 y(BEAST::BeamSensor,)e(86)150
5114 y(dra)n(w)n(able.cc,)g(229)150 5213 y(dra)n(w)n(able.h,)g(230)150
5313 y(DynamicalNet)316 5413 y(BEAST::DynamicalNet,)i(104)150
5513 y(dynamicalnet.cc,)f(232)150 5613 y(dynamicalnet.h,)h(233)2058
333 y(END)p 2245 333 V 30 w(SIMULA)-7 b(TION)p 2813 333
V 30 w(T)g(ABLE)2224 433 y(b)r(east.h,)28 b(224)2058
533 y(EndAssessmen)n(t)2224 633 y(BEAST::Sim)n(ulation,)f(197)2058
733 y(EndGeneration)2224 833 y(BEAST::Sim)n(ulation,)g(197)2224
933 y(F)-7 b(ramew)n(ork,)25 b(25)2058 1033 y(EndRun)2224
1133 y(BEAST::Sim)n(ulation,)i(197)2058 1233 y(extract)2224
1333 y(serialisation,)f(51)2058 1522 y(F)-7 b(eedF)g(orw)n(ardNet)2224
1622 y(BEAST::F)g(eedF)g(orw)n(ardNet,)26 b(127)2058
1722 y(feedforw)n(ardnet.h,)h(235)2058 1823 y(Filter)2224
1923 y(BEAST::Distribution,)h(95)2224 2023 y
(BEAST::Distribution::Kernel,)f(98)2058 2123 y(FinishUp)r(date)2224
2223 y(BEAST::Bacterium,)g(82)2058 2323 y(Fire)2224 2423
y(BEAST::DynamicalNet,)g(104)2224 2523 y(BEAST::DynamicalNet::Neuron,)g
(110)2224 2623 y(BEAST::F)-7 b(eedF)g(orw)n(ardNet,)26
b(127)2058 2723 y(F)-7 b(orEac)n(h)2224 2823 y(BEAST::Group,)27
b(152,)f(153)2058 2923 y(F)-7 b(ramew)n(ork)2224 3023
y(DISPLA)g(Y)p 2594 3023 V 30 w(ALL,)28 b(25)2224 3123
y(DISPLA)-7 b(Y)p 2594 3123 V 30 w(ANIMA)g(TS,)29 b(25)2224
3223 y(DISPLA)-7 b(Y)p 2594 3223 V 30 w(COLLISIONS,)27
b(25)2224 3323 y(DISPLA)-7 b(Y)p 2594 3323 V 30 w(MONITOR,)28
b(25)2224 3423 y(DISPLA)-7 b(Y)p 2594 3423 V 30 w(NONE,)28
b(25)2224 3523 y(DISPLA)-7 b(Y)p 2594 3523 V 30 w(SENSORS,)28
b(25)2224 3623 y(DISPLA)-7 b(Y)p 2594 3623 V 30 w(TRAILS,)28
b(25)2224 3723 y(DISPLA)-7 b(Y)p 2594 3723 V 30 w(W)n(ORLDOBJECTS,)27
b(25)2224 3823 y(EndGeneration,)f(25)2224 3923 y(Group,)h(25)2224
4023 y(P)n(olarV)-7 b(ector,)25 b(25)2224 4123 y(Serialise,)h(25,)h(26)
2224 4223 y(SetP)n(olarCo)r(ordinates,)d(26)2224 4323
y(SIM)p 2381 4323 V 30 w(PRINT)p 2681 4323 V 30 w(ASSESSMENT,)j(24)2224
4423 y(SIM)p 2381 4423 V 30 w(PRINT)p 2681 4423 V 30
w(COMPLETE,)e(24)2224 4523 y(SIM)p 2381 4523 V 30 w(PRINT)p
2681 4523 V 30 w(GENERA)-7 b(TION,)27 b(24)2224 4623
y(SIM)p 2381 4623 V 30 w(PRINT)p 2681 4623 V 30 w(R)n(UN,)h(24)2224
4723 y(SIM)p 2381 4723 V 30 w(PRINT)p 2681 4723 V 30
w(ST)-7 b(A)g(TUS,)28 b(24)2224 4823 y(SimPrin)n(tSt)n(yleT)n(yp)r(e,)f
(24)2224 4923 y(Unserialise,)f(26)2224 5023 y(W)-7 b(orldDispla)n(yT)n
(yp)r(e,)26 b(24)2058 5213 y(GA)p 2190 5213 V 30 w(BEST)p
2442 5213 V 29 w(FITNESS)2224 5313 y(Biosystems,)g(38)2058
5413 y(GA)p 2190 5413 V 30 w(CLAMP)2224 5513 y(Biosystems,)g(37)2058
5613 y(GA)p 2190 5613 V 30 w(CURRENT)p 150 5723 4034
4 v 150 5823 a Fn(Generated)g(on)e(Sun)h(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 320 328
320 327 bop -358 70 a Fq(320)3570 b(INDEX)p -358 103
4034 4 v 316 333 a Fp(Biosystems,)27 b(38)150 432 y(GA)p
282 432 25 4 v 30 w(EXPONENT)316 532 y(Biosystems,)g(38)150
632 y(GA)p 282 632 V 30 w(FIX)316 731 y(Biosystems,)g(37)150
831 y(GA)p 282 831 V 30 w(GENERA)-7 b(TION)316 930 y(Biosystems,)27
b(38)150 1030 y(GA)p 282 1030 V 30 w(HISTOR)-7 b(Y)316
1130 y(Biosystems,)27 b(38)150 1229 y(GA)p 282 1229 V
30 w(IGNORE)316 1329 y(Biosystems,)g(37)150 1429 y(GA)p
282 1429 V 30 w(MEAN)p 569 1429 V 30 w(FITNESS)316 1528
y(Biosystems,)g(38)150 1628 y(GA)p 282 1628 V 30 w(P)-7
b(ARAMETERS)316 1727 y(Biosystems,)27 b(38)150 1827 y(GA)p
282 1827 V 30 w(RANK)316 1927 y(Biosystems,)g(38)150
2026 y(GA)p 282 2026 V 30 w(RANK)p 562 2026 V 30 w(SPRESSURE)316
2126 y(Biosystems,)g(38)150 2226 y(GA)p 282 2226 V 30
w(R)n(OULETTE)316 2325 y(Biosystems,)g(38)150 2425 y(GA)p
282 2425 V 30 w(TOT)-7 b(AL)p 604 2425 V 30 w(FITNESS)316
2524 y(Biosystems,)27 b(38)150 2624 y(GA)p 282 2624 V
30 w(TOURNAMENT)316 2724 y(Biosystems,)g(38)150 2823
y(GA)p 282 2823 V 30 w(TOURNAMENT)p 939 2823 V 30 w(P)-7
b(ARAM)316 2923 y(Biosystems,)27 b(38)150 3023 y(GA)p
282 3023 V 30 w(TOURNAMENT)p 939 3023 V 30 w(SIZE)316
3122 y(Biosystems,)g(38)150 3222 y(GA)p 282 3222 V 30
w(W)n(ORST)p 627 3222 V 30 w(FITNESS)316 3321 y(Biosystems,)g(38)150
3421 y(GAFitnessFixT)n(yp)r(e)316 3521 y(Biosystems,)g(37)150
3620 y(GAFitnessMetho)r(dT)n(yp)r(e)316 3720 y(Biosystems,)g(37)150
3820 y(GAFltP)n(aramT)n(yp)r(e)316 3919 y(Biosystems,)g(38)150
4019 y(GAIn)n(tP)n(aramT)n(yp)r(e)316 4118 y(Biosystems,)g(38)150
4218 y(GAPrin)n(tSt)n(yleT)n(yp)r(e)316 4318 y(Biosystems,)g(38)150
4417 y(GASelectionT)n(yp)r(e)316 4517 y(Biosystems,)g(38)150
4617 y(GaussianNoise)316 4716 y(BEAST::GaussianNoise,)f(137)150
4816 y(GaussianRing2D)316 4915 y(BEAST::GaussianRing2D,)g(138)150
5015 y(gaussrand)316 5115 y(Utilities,)j(31)150 5214
y(GA)-9 b(V)i(arian)n(tT)n(yp)r(e)316 5314 y(Biosystems,)27
b(38)150 5414 y(Generate)316 5513 y(Biosystems,)g(39)150
5613 y(geneticalgorithm.h,)f(237)2058 333 y(Get)2224
433 y(BEAST::W)-7 b(orld,)27 b(211)2058 532 y(GetA)n(ttractan)n
(tGradien)n(t)2224 632 y(BEAST::Bacterium,)g(82)2058
732 y(GetCon\014guration)2224 832 y(BEAST::DynamicalNet,)g(104)2224
932 y(BEAST::DynamicalNet::Neuron,)g(110)2224 1032 y(BEAST::F)-7
b(eedF)g(orw)n(ardNet,)26 b(127)2058 1132 y(GetCon\014gurationLength)
2224 1231 y(BEAST::F)-7 b(eedF)g(orw)n(ardNet,)26 b(128)2058
1331 y(GetCSV)2224 1431 y(Biosystems,)g(39)2058 1531
y(GetFitness)2224 1631 y(Biosystems,)g(39)2058 1731 y(GetGenerations)
2224 1831 y(BEAST::GeneticAlgorithm,)h(146)2058 1931
y(GetNearestP)n(oin)n(t)2224 2030 y(BEAST::W)-7 b(orldOb)5
b(ject,)27 b(215)2058 2130 y(GetNutrien)n(tGradien)n(t)2224
2230 y(BEAST::Bacterium,)g(82)2058 2330 y(GetO\013spring)2224
2430 y(BEAST::Bacterium,)g(82)2058 2530 y(GetOutput)2224
2630 y(BEAST::F)-7 b(eedF)g(orw)n(ardNet,)26 b(128)2224
2730 y(BEAST::SelfSensor,)h(181)2224 2829 y(BEAST::Sensor,)f(184)2058
2929 y(GetRep)r(ellen)n(tGradien)n(t)2224 3029 y(BEAST::Bacterium,)h
(83)2058 3129 y(glutsimen)n(v.h,)g(239)2224 3229 y(ST)-7
b(AR)g(T)p 2504 3229 V 30 w(SIMULA)g(TION,)29 b(239)2058
3329 y(Group)2224 3429 y(F)-7 b(ramew)n(ork,)25 b(25)2058
3616 y(IMPLEMENT)p 2590 3616 V 28 w(IOSTREAM)p 3075 3616
V 30 w(BINAR)-7 b(Y)p 3434 3616 V 31 w(-)2390 3715 y(CONVERSION)2224
3815 y(serialisation,)26 b(49)2058 3915 y(IMPLEMENT)p
2590 3915 V 28 w(IOSTREAM)p 3075 3915 V 30 w(CAST)2224
4015 y(serialisation,)g(49)2058 4115 y(IMPLEMENT)p 2590
4115 V 28 w(SERIALISA)-7 b(TION)2224 4215 y(serialisation,)26
b(50)2058 4315 y(Init)2224 4414 y(BEAST::DynamicalNet,)h(105)2224
4514 y(BEAST::F)-7 b(eedF)g(orw)n(ardNet,)26 b(128)2224
4614 y(BEAST::W)-7 b(orld,)27 b(211)2058 4714 y(InitDNN)2224
4814 y(BEAST::DNNAnimat,)i(100)2058 4914 y(InitFFN)2224
5014 y(BEAST::FFNAnimat,)f(134)2058 5113 y(In)n(teract)2224
5213 y(BEAST::Animat,)g(72)2224 5313 y(BEAST::W)-7 b(orldOb)5
b(ject,)27 b(215)2058 5413 y(In)n(tersects)2224 5513
y(BEAST::W)-7 b(orldOb)5 b(ject,)27 b(215)2058 5613 y(IsA)p
-358 5723 4034 4 v -192 5823 a Fn(Generated)f(on)f(Sun)f(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 321 329
321 328 bop 150 70 a Fq(INDEX)3571 b(321)p 150 103 4034
4 v 316 333 a Fp(Utilities,)29 b(31)150 432 y(IsInside)316
532 y(BEAST::W)-7 b(orldOb)5 b(ject,)27 b(216)150 632
y(IsKindOf)316 731 y(Utilities,)i(31)150 831 y(IsT)-7
b(ouc)n(hing)316 930 y(BEAST::Animat,)28 b(72)150 1110
y(limit)316 1209 y(Utilities,)h(32)150 1309 y(Load)316
1409 y(BEAST::SimOb)5 b(ject,)28 b(192)150 1588 y(NearestSignalSensor)
316 1688 y(sensors,)e(46)150 1787 y(neuralanimat.h,)h(240)150
1887 y(Neuron)316 1986 y(BEAST::DynamicalNet::Neuron,)g(110)150
2166 y(op)r(erator)p Fo(<<)316 2265 y Fp(BEAST,)g(65)316
2365 y(Biosystems,)g(40)316 2465 y(serialisation,)f(51)150
2564 y(op)r(erator)p Fo(>>)316 2664 y Fp(BEAST,)h(65)316
2764 y(Biosystems,)g(40,)f(41)316 2863 y(serialisation,)g(52)150
3042 y(Plot)316 3142 y(BEAST::Distribution,)i(95)316
3242 y(BEAST::Distribution::Kernel,)f(98)150 3341 y(P)n(olarV)-7
b(ector)316 3441 y(F)g(ramew)n(ork,)26 b(25)150 3541
y(Pro)n(ximit)n(ySensor)316 3640 y(sensors,)g(46)150
3740 y(psoalgorithm.h,)g(241)150 3919 y(Random,)h(171)150
4019 y(random.h,)g(242)150 4118 y(Randomise)316 4218
y(BEAST::DynamicalNet,)h(105)316 4318 y(BEAST::DynamicalNet::Neuron,)f
(110)316 4417 y(Biosystems,)g(41)150 4517 y(rb)r(ound)316
4617 y(Utilities,)i(32)150 4716 y(ReleaseA)n(ttractan)n(t)316
4816 y(BEAST::Bacterium,)e(83)150 4915 y(ReleaseRep)r(ellen)n(t)316
5015 y(BEAST::Bacterium,)g(83)150 5115 y(Remo)n(v)n(e)316
5214 y(BEAST::W)-7 b(orld,)27 b(211,)f(212)150 5314 y(Render)316
5414 y(BEAST::Distribution,)i(95)150 5513 y(Repro)r(duce)316
5613 y(BEAST::Bacterium,)f(83)2058 333 y(Reset)2224 434
y(BEAST::DynamicalNet,)g(105)2058 535 y(Ring2D)2224 637
y(BEAST::Ring2D,)g(172)2058 738 y(rlimit)2224 839 y(Utilities,)h(32)
2058 1052 y(Sa)n(v)n(e)2224 1154 y(BEAST::SimOb)5 b(ject,)27
b(192)2058 1255 y(SelectProbabilit)n(y)2224 1356 y(Biosystems,)f(41)
2058 1458 y(SelectT)-7 b(ournamen)n(t)2224 1559 y(Biosystems,)26
b(41)2058 1660 y(SELF)p 2272 1660 25 4 v 29 w(SENSOR)p
2638 1660 V 30 w(ANGLE)2224 1762 y(sensors,)g(46)2058
1863 y(SELF)p 2272 1863 V 29 w(SENSOR)p 2638 1863 V 30
w(CONTR)n(OL)2224 1964 y(sensors,)g(46)2058 2066 y(SELF)p
2272 2066 V 29 w(SENSOR)p 2638 2066 V 30 w(X)2224 2167
y(sensors,)g(46)2058 2268 y(SELF)p 2272 2268 V 29 w(SENSOR)p
2638 2268 V 30 w(Y)2224 2370 y(sensors,)g(46)2058 2471
y(SelfSensorT)n(yp)r(e)2224 2573 y(sensors,)g(46)2058
2674 y(sensor.h,)g(244)2058 2775 y(sensorbase.h,)g(245)2058
2877 y(SensorIn)n(teract)2224 2978 y(BEAST::Animat,)i(72)2058
3079 y(sensors)2224 3181 y(NearestSignalSensor,)d(46)2224
3282 y(Pro)n(ximit)n(ySensor,)g(46)2224 3383 y(SELF)p
2438 3383 V 29 w(SENSOR)p 2804 3383 V 30 w(ANGLE,)j(46)2224
3485 y(SELF)p 2438 3485 V 29 w(SENSOR)p 2804 3485 V 30
w(CONTR)n(OL,)f(46)2224 3586 y(SELF)p 2438 3586 V 29
w(SENSOR)p 2804 3586 V 30 w(X,)h(46)2224 3687 y(SELF)p
2438 3687 V 29 w(SENSOR)p 2804 3687 V 30 w(Y,)g(46)2224
3789 y(SelfSensorT)n(yp)r(e,)f(46)2058 3890 y(Sensors)f(and)i(Sensor)e
(F)-7 b(unctions,)28 b(43)2058 3991 y(SERIAL)p 2371 3991
V 30 w(ERR)n(OR)p 2704 3991 V 29 w(BAD)p 2917 3991 V
30 w(FILE)2224 4093 y(serialisation,)e(50)2058 4194 y(SERIAL)p
2371 4194 V 30 w(ERR)n(OR)p 2704 4194 V 29 w(D)n(A)-7
b(T)g(A)p 2964 4194 V 30 w(MISMA)g(TCH)2224 4295 y(serialisation,)26
b(50)2058 4397 y(SERIAL)p 2371 4397 V 30 w(ERR)n(OR)p
2704 4397 V 29 w(UNKNO)n(WN)2224 4498 y(serialisation,)g(50)2058
4599 y(SERIAL)p 2371 4599 V 30 w(ERR)n(OR)p 2704 4599
V 29 w(UNKNO)n(WN)p 3194 4599 V 30 w(TYPE)2224 4701 y(serialisation,)g
(50)2058 4802 y(SERIAL)p 2371 4802 V 30 w(ERR)n(OR)p
2704 4802 V 29 w(WR)n(ONG)p 3069 4802 V 30 w(TYPE)2224
4903 y(serialisation,)g(50)2058 5005 y(SerialErrorT)n(yp)r(e)2224
5106 y(serialisation,)g(50)2058 5207 y(serialfuncs.h,)h(247)2058
5309 y(serialisation)2224 5410 y(cop)n(y)p 2396 5410
V 29 w(from,)g(51)2224 5512 y(cop)n(y)p 2396 5512 V 29
w(from)p 2594 5512 V 29 w(istream,)g(51)2224 5613 y(extract,)g(51)p
150 5723 4034 4 v 150 5823 a Fn(Generated)f(on)e(Sun)h(F)-6
b(eb)25 b(1)g(21:27:30)e(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)d(T)-6 b(o)r(olkit)25
b(b)n(y)f(Do)n(xygen)p eop
%%Page: 322 330
322 329 bop -358 70 a Fq(322)3570 b(INDEX)p -358 103
4034 4 v 316 333 a Fp(IMPLEMENT)p 848 333 25 4 v 29 w(IOSTREAM)p
1334 333 V 29 w(BINAR)-7 b(Y)p 1692 333 V 31 w(-)482
432 y(CONVERSION,)27 b(49)316 532 y(IMPLEMENT)p 848 532
V 29 w(IOSTREAM)p 1334 532 V 29 w(CAST,)h(49)316 632
y(IMPLEMENT)p 848 632 V 29 w(SERIALISA)-7 b(TION,)28
b(50)316 731 y(op)r(erator)p Fo(<<)p Fp(,)d(51)316 831
y(op)r(erator)p Fo(>>)p Fp(,)g(52)316 930 y(SERIAL)p
629 930 V 30 w(ERR)n(OR)p 962 930 V 29 w(BAD)p 1175 930
V 30 w(FILE,)i(50)316 1030 y(SERIAL)p 629 1030 V 30 w(ERR)n(OR)p
962 1030 V 29 w(D)n(A)-7 b(T)g(A)p 1222 1030 V 30 w(MISMA)g(TCH,)482
1130 y(50)316 1229 y(SERIAL)p 629 1229 V 30 w(ERR)n(OR)p
962 1229 V 29 w(UNKNO)n(WN,)28 b(50)316 1329 y(SERIAL)p
629 1329 V 30 w(ERR)n(OR)p 962 1329 V 29 w(UNKNO)n(WN)p
1452 1329 V 30 w(TYPE,)482 1429 y(50)316 1528 y(SERIAL)p
629 1528 V 30 w(ERR)n(OR)p 962 1528 V 29 w(WR)n(ONG)p
1327 1528 V 30 w(TYPE,)f(50)316 1628 y(SerialErrorT)n(yp)r(e,)d(50)316
1727 y(stream)p 567 1727 V 29 w(con)n(v)n(ert,)i(52)150
1827 y(Serialisation)g(Utilities,)j(47)150 1927 y(Serialise)316
2026 y(BEAST::Animat,)f(72)316 2126 y(BEAST::DNNAnimat,)h(101)316
2226 y(BEAST::DynamicalNet,)f(105)316 2325 y(BEAST::F)-7
b(eedF)g(orw)n(ardNet,)26 b(129)316 2425 y(BEAST::FFNAnimat,)j(135)316
2524 y(BEAST::W)-7 b(orldOb)5 b(ject,)27 b(216)316 2624
y(F)-7 b(ramew)n(ork,)26 b(25,)g(26)150 2724 y(SetClones)316
2823 y(BEAST::P)n(opulation,)g(169)150 2923 y(SetCon\014guration)316
3023 y(BEAST::DynamicalNet,)i(106)316 3122 y
(BEAST::DynamicalNet::Neuron,)f(111)316 3222 y(BEAST::F)-7
b(eedF)g(orw)n(ardNet,)26 b(129)150 3321 y(SetCrosso)n(v)n(er)316
3421 y(BEAST::GeneticAlgorithm,)h(146)150 3521 y(SetCrosso)n(v)n(erP)n
(oin)n(ts)316 3620 y(BEAST::GeneticAlgorithm,)g(146)150
3720 y(SetDeca)n(yRate)316 3820 y(BEAST::Distribution,)h(96)150
3919 y(SetDensit)n(y)316 4019 y(BEAST::Distribution,)g(96)150
4118 y(SetDi\013usionSp)r(eed)316 4218 y(BEAST::Distribution,)g(96)150
4318 y(SetDistribution)316 4417 y(BEAST::Distribution::Kernel,)f(98)150
4517 y(SetElitism)316 4617 y(BEAST::GeneticAlgorithm,)g(147)150
4716 y(SetFitnessFix)316 4816 y(BEAST::GeneticAlgorithm,)g(147)150
4915 y(SetFitnessMetho)r(d)316 5015 y(BEAST::GeneticAlgorithm,)g(147)
150 5115 y(SetInput)316 5214 y(BEAST::F)-7 b(eedF)g(orw)n(ardNet,)26
b(129)150 5314 y(SetInputChannel)316 5414 y(BEAST::DynamicalNet,)i(106)
150 5513 y(SetMaxConc)316 5613 y(BEAST::Distribution,)g(96)2058
333 y(SetMutation)2224 433 y(BEAST::GeneticAlgorithm,)f(147)2058
532 y(SetNextChec)n(k)2224 632 y(BEAST::Bacterium,)g(83)2058
732 y(SetOutputChannel)2224 832 y(BEAST::DynamicalNet,)g(106)2058
932 y(SetP)n(arameter)2224 1032 y(BEAST::GeneticAlgorithm,)g(147,)f
(148)2058 1132 y(SetP)n(olarCo)r(ordinates)2224 1231
y(F)-7 b(ramew)n(ork,)25 b(26)2058 1331 y(SetPrin)n(tSt)n(yle)2224
1431 y(BEAST::GeneticAlgorithm,)i(148)2058 1531 y(SetRuns)2224
1631 y(BEAST::Sim)n(ulation,)g(197)2058 1731 y(SetSelection)2224
1831 y(BEAST::GeneticAlgorithm,)g(148)2058 1931 y(SetSub)r(elitism)2224
2030 y(BEAST::GeneticAlgorithm,)g(148)2058 2130 y(Setup)2224
2230 y(Biosystems,)f(42)2058 2330 y(Share)2224 2430 y(BEAST::Animat,)i
(73)2058 2530 y(signaller.h,)e(249)2058 2630 y(SIM)p
2215 2630 V 30 w(PRINT)p 2515 2630 V 30 w(ASSESSMENT)2224
2729 y(F)-7 b(ramew)n(ork,)25 b(24)2058 2829 y(SIM)p
2215 2829 V 30 w(PRINT)p 2515 2829 V 30 w(COMPLETE)2224
2929 y(F)-7 b(ramew)n(ork,)25 b(24)2058 3029 y(SIM)p
2215 3029 V 30 w(PRINT)p 2515 3029 V 30 w(GENERA)-7 b(TION)2224
3129 y(F)g(ramew)n(ork,)25 b(24)2058 3229 y(SIM)p 2215
3229 V 30 w(PRINT)p 2515 3229 V 30 w(R)n(UN)2224 3329
y(F)-7 b(ramew)n(ork,)25 b(24)2058 3429 y(SIM)p 2215
3429 V 30 w(PRINT)p 2515 3429 V 30 w(ST)-7 b(A)g(TUS)2224
3528 y(F)g(ramew)n(ork,)25 b(24)2058 3628 y(SimPrin)n(tSt)n(yleT)n(yp)r
(e)2224 3728 y(F)-7 b(ramew)n(ork,)25 b(24)2058 3828
y(Sim)n(ulation)i(F)-7 b(ramew)n(ork,)26 b(19)2058 3928
y(sim)n(ulation.cc,)h(250)2058 4028 y(sim)n(ulation.h,)g(251)2058
4128 y(ST)-7 b(AR)g(T)p 2338 4128 V 30 w(SIMULA)g(TION)2224
4228 y(glutsimen)n(v.h,)27 b(239)2058 4327 y(StoreFitness)2224
4427 y(BEAST::Ev)n(olv)n(er,)e(123)2058 4527 y(stream)p
2309 4527 V 29 w(con)n(v)n(ert)2224 4627 y(serialisation,)h(52)2058
4727 y(strip)p 2230 4727 V 29 w(slashes)2224 4827 y(BEAST,)h(65)2058
5014 y(T)-7 b(oString)2224 5114 y(BEAST::Bacterium,)27
b(84)2224 5213 y(BEAST::DynamicalNet,)g(106)2224 5313
y(BEAST::DynamicalNet::Neuron,)g(111)2224 5413 y(BEAST::F)-7
b(eedF)g(orw)n(ardNet,)26 b(129)2224 5513 y(BEAST::Sim)n(ulation,)h
(197)2224 5613 y(Biosystems,)f(42)p -358 5723 4034 4
v -192 5823 a Fn(Generated)g(on)f(Sun)f(F)-6 b(eb)25
b(1)g(21:27:30)e(2004)h(for)h(BEAST)h(-)f(Bioinspired)g(Ev)n
(olutionary)e(Agen)n(t)j(Sim)n(ulation)e(T)-6 b(o)r(olkit)24
b(b)n(y)h(Do)n(xygen)p eop
%%Page: 323 331
323 330 bop 150 70 a Fq(INDEX)3571 b(323)p 150 103 4034
4 v 150 333 a Fp(UniformNoise)316 432 y(BEAST::UniformNoise,)27
b(201)150 532 y(Unserialise)316 632 y(BEAST::Animat,)h(73)316
731 y(BEAST::DNNAnimat,)h(101)316 831 y(BEAST::DynamicalNet,)f(106)316
930 y(BEAST::F)-7 b(eedF)g(orw)n(ardNet,)26 b(129)316
1030 y(BEAST::FFNAnimat,)j(135)316 1130 y(BEAST::W)-7
b(orldOb)5 b(ject,)27 b(216)316 1229 y(F)-7 b(ramew)n(ork,)26
b(26)150 1329 y(unserialiser.cc,)g(254)150 1429 y(unserialiser.h,)g
(255)150 1528 y(Up)r(date)316 1628 y(BEAST::Animat,)i(73)316
1727 y(BEAST::Bacterium,)f(84)316 1827 y(BEAST::Distribution,)h(96)316
1927 y(BEAST::Sim)n(ulation,)f(197)316 2026 y(BEAST::W)-7
b(orld,)27 b(212)150 2126 y(Up)r(dateDistributions)316
2226 y(BEAST::Bacterium,)g(84)150 2325 y(Utilities)316
2425 y(b)r(ound,)h(31)316 2524 y(COLOUR)p 686 2524 25
4 v 29 w(BLA)n(CK,)f(30)316 2624 y(COLOUR)p 686 2624
V 29 w(BLUE,)h(30)316 2724 y(COLOUR)p 686 2724 V 29 w(GREEN,)g(30)316
2823 y(COLOUR)p 686 2823 V 29 w(WHITE,)g(30)316 2923
y(ColourP)n(alette,)e(33)316 3023 y(ColourT)n(yp)r(e,)g(30)316
3122 y(gaussrand,)g(31)316 3222 y(IsA,)i(31)316 3321
y(IsKindOf,)f(31)316 3421 y(limit,)h(32)316 3521 y(rb)r(ound,)g(32)316
3620 y(rlimit,)g(32)150 3720 y(Utilities)g(and)g(Help)r(er)g(F)-7
b(unctions,)27 b(28)150 3820 y(utilities.h,)i(256)150
4002 y(W)-7 b(all)316 4102 y(BEAST::W)g(all,)28 b(206)150
4201 y(W)-7 b(eigh)n(tedSum)316 4301 y(BEAST::F)g(eedF)g(orw)n
(ardNet::Neuron,)26 b(132)150 4401 y(w)n(orld.h,)h(257)150
4500 y(W)-7 b(orldDispla)n(yT)n(yp)r(e)316 4600 y(F)g(ramew)n(ork,)26
b(24)150 4700 y(w)n(orldob)5 b(ject.cc,)26 b(259)150
4799 y(W)-7 b(orldOb)5 b(jectsBegin)316 4899 y(BEAST::W)-7
b(orld,)27 b(212)150 4998 y(W)-7 b(orldOb)5 b(jectsEnd)316
5098 y(BEAST::W)-7 b(orld,)27 b(212)p 150 5723 4034 4
v 150 5823 a Fn(Generated)f(on)e(Sun)h(F)-6 b(eb)25 b(1)g(21:27:30)e
(2004)h(for)h(BEAST)g(-)h(Bioinspired)f(Ev)n(olutionary)e(Agen)n(t)j
(Sim)n(ulation)d(T)-6 b(o)r(olkit)25 b(b)n(y)f(Do)n(xygen)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
